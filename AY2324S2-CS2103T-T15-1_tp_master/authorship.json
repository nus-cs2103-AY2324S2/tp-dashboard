[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T15-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T15-1/tp/actions)","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T15-1/tp/graph/badge.svg?token\u003dTJTWL1WNJF)](https://codecov.io/gh/AY2324S2-CS2103T-T15-1/tp)","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"# MediCLI: Hospital Patient Management System","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"MediCLI is a patient management system designed for hospitals. MediCLI enables the management of patient, doctor, and appointment data.","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"## Example usages:","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"1. Used by hospital clerks to manage hospital records for relevant stake holders.","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"2. Core functions offered include add, delete, query for patients, doctors and appointments.","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"## Context of the project","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"* The project simulates an ongoing software project for a desktop application (called _MediCLI_) used for managing contact details.","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"  * It is **written in OOP fashion**. It is meant as a project for a SE module to teach basic SE principles.","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"* For the detailed documentation of this project, see the **[MediCLI Product Website](https://ay2324s2-cs2103t-t15-1.github.io/tp/UserGuide.html)**.","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"-":5,"ararchch":17}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"### Zhiyang Lu","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"\u003cimg src\u003d\"images/alfaloo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"[[homepage](www.linkedin.com/in/zhiyanglu)]","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"[[github](https://github.com/alfaloo)]","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"[[portfolio](https://github.com/alfaloo/CV/blob/main/Zhiyang_Lu_Resume.pdf)]","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"* Role: Deliverables and Deadline / Integration","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"* Responsibilities: Ensure project deliverables are done on time and in the right format. In charge of versioning of the code, maintaining the code repository, integrating various parts of the software to create a whole.","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"### Cheng-Yu Dong","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"\u003cimg src\u003d\"images/officialchengyud.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"[[github](https://github.com/officialchengyud)]","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"[[portfolio](www.linkedin.com/in/dongchengyu)]","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"* Role: Code Quality / Integration","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"* Responsibilities: Looks after code quality, ensures adherence to coding standards, etc. In charge of versioning of the code, maintaining the code repository, integrating various parts of the software to create a whole.","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"### Lim Jia Wei","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"\u003cimg src\u003d\"images/kappaccinoh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"[[github](http://github.com/Kappaccinoh)] [[portfolio](https://www.linkedin.com/in/jia-wei-lim-747037181/)]","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"* Role: Scheduling / Testing","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"* Responsibilities: Ensures the testing of the project is done properly and on time. In charge of defining, assigning, and tracking project tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"### Archit Goswami","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"\u003cimg src\u003d\"images/ararchch.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"[[github](http://github.com/ararchch)]","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"[[portfolio](https://www.linkedin.com/in/architgos)]","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"* Role: Team Lead, Documentation","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"* Responsibilities: Coordinating with team members, ensuring code is well documented.","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Alteqa"},"content":"### Eugene Luke Sim Ek Jin","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Alteqa"},"content":"\u003cimg src\u003d\"images/alteqa.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"Alteqa"},"content":"[[github](http://github.com/alteqa)]","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"Alteqa"},"content":"[[portfolio](https://www.linkedin.com/in/eugene-sim-866677188/)]","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"Alteqa"},"content":"* Role: Documentation, Testing, Intellij / Github Expert","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"Alteqa"},"content":"* Responsibilities: Ensures the testing of the project is done properly and on time. Responsible for the quality of various project documents. ","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"Alteqa"},"content":"* Helps other team member with matters related to Intellij, Github and Sourcetree tool.","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"Alteqa":7,"alfaloo":5,"officialchengyud":8,"Kappaccinoh":5,"-":31,"ararchch":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `AppointmentListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S2-CS2103T-T15-1/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S2-CS2103T-T15-1/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"* depends on some classes in the `Model` component, as it displays `Person` (`Doctor` or `Patient`) and `Appointment` objects residing in the `Model`.","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"officialchengyud"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S2-CS2103T-T15-1/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"officialchengyud"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"450\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"officialchengyud"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `AddDoctorCommandParser`) and uses it to parse the command.","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"officialchengyud"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddDoctorCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"officialchengyud"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a doctor).\u003cbr\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"Kappaccinoh"},"content":"* stores the address book data i.e., all `Person` derivative objects (which are contained in a `UniquePersonList` object) and","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"Kappaccinoh"},"content":"* all `Appointment` objects (which are contained in a `UniqueAppointmentList` object)","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"Kappaccinoh"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query, either a `Patient` or `Doctor` instance) and `Appointment` object (e.g results of an query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` and `ObservableList\u003cAppointment\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"Kappaccinoh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** For a clearer Class Diagram image, please refer to the handdrawn version below, it is exactly the same as the Class Diagram generated above, only drawn with straight lines for clarity and neatness.\u003cbr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"Kappaccinoh"},"content":"\u003cimg src\u003d\"images/ModelClassDiagramHandDrawn.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"alfaloo"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedMediCLI`. It extends `MediCLI` with an undo/redo history, stored internally as an `mediCLIStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"alfaloo"},"content":"* `VersionedMediCLI#commit()` — Saves the current MediCLI state in its history.","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"alfaloo"},"content":"* `VersionedMediCLI#undo()` — Restores the previous MediCLI state from its history.","lastModifiedDate":"2024-03-21"},{"lineNumber":166,"author":{"gitId":"alfaloo"},"content":"* `VersionedMediCLI#redo()` — Restores a previously undone MediCLI state from its history.","lastModifiedDate":"2024-03-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"alfaloo"},"content":"These operations are exposed in the `Model` interface as `Model#commitMediCLI()`, `Model#undoMediCLI()` and `Model#redoMediCLI()` respectively.","lastModifiedDate":"2024-03-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"alfaloo"},"content":"Step 1. The user launches the  application for the first time. The `VersionedMediCLI` will be initialized with the initial MediCLI state, and the `currentStatePointer` pointing to that single MediCLI state.","lastModifiedDate":"2024-03-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"alfaloo"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the MediCLI. The `delete` command calls `Model#commitMediCLI()`, causing the modified state of the MediCLI after the `delete 5` command executes to be saved in the `mediCLIStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2024-03-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"alfaloo"},"content":"Step 3. The user executes `addpatient i/S1234567A n/John Doe d/2003-01-30 p/98765432` to add a new person. The `add` command also calls `Model#commitMediCLI()`, causing another modified MediCLI state to be saved into the `mediCLIStateList`.","lastModifiedDate":"2024-03-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"alfaloo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitMediCLI()`, so the MediCLI state will not be saved into the `mediCLIStateList`.","lastModifiedDate":"2024-03-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"alfaloo"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoMediCLI()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous MediCLI state, and restores the MediCLI to that state.","lastModifiedDate":"2024-03-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"alfaloo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial MediCLI state, then there are no previous MediCLI states to restore. The `undo` command uses `Model#canUndoMediCLI()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2024-03-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":209,"author":{"gitId":"alfaloo"},"content":"The `redo` command does the opposite — it calls `Model#redoMediCLI()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the MediCLI to that state.","lastModifiedDate":"2024-03-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"alfaloo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `mediCLIStateList.size() - 1`, pointing to the latest MediCLI state, then there are no undone MediCLI states to restore. The `redo` command uses `Model#canRedoMediCLI()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2024-03-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"alfaloo"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the MediCLI, such as `list`, will usually not call `Model#commitMediCLI()`, `Model#undoMediCLI()` or `Model#redoMediCLI()`. Thus, the `mediCLIStateList` remains unchanged.","lastModifiedDate":"2024-03-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"alfaloo"},"content":"Step 6. The user executes `clear`, which calls `Model#commitMediCLI()`. Since the `currentStatePointer` is not pointing at the end of the `mediCLIStateList`, all MediCLI states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `addpatient i/S1234567A n/John Doe d/2003-01-30 p/98765432` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2024-03-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"alfaloo"},"content":"* **Alternative 1 (current choice):** Saves the entire MediCLI.","lastModifiedDate":"2024-03-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"Kappaccinoh"},"content":"* hospital clerks who deal with hospital related registration/administrative/management tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":266,"author":{"gitId":"Kappaccinoh"},"content":"* has a need to manage a significant number of client details (patients/doctors/appointments)","lastModifiedDate":"2024-03-06"},{"lineNumber":267,"author":{"gitId":"Kappaccinoh"},"content":"* deals with many real time live updates, some being time-critical","lastModifiedDate":"2024-03-06"},{"lineNumber":268,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"Kappaccinoh"},"content":"* can type fast and accurately","lastModifiedDate":"2024-03-06"},{"lineNumber":270,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":271,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"Kappaccinoh"},"content":"**Value proposition**: manages the hospital database (querying/updating/creating/deleting) faster than a typical mouse/GUI driven database management app","lastModifiedDate":"2024-03-06"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"| Priority  | As a …​                                    | I want to …​                               | So that I can…​                                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"alfaloo"},"content":"|-----------|--------------------------------------------|--------------------------------------------|-------------------------------------------------------------------|","lastModifiedDate":"2024-03-05"},{"lineNumber":282,"author":{"gitId":"alfaloo"},"content":"| `* * *`   | hospital clerk                             | add patients                               | handle incoming patients when handling emergency call-ins         |","lastModifiedDate":"2024-03-05"},{"lineNumber":283,"author":{"gitId":"alfaloo"},"content":"| `* * *`   | hospital clerk                             | delete patients                            | remove old patients to prevent clogging of system                 |","lastModifiedDate":"2024-03-05"},{"lineNumber":284,"author":{"gitId":"alfaloo"},"content":"| `* * *`   | hospital clerk                             | add doctors                                | register new doctors as they get hired                            |","lastModifiedDate":"2024-03-05"},{"lineNumber":285,"author":{"gitId":"alfaloo"},"content":"| `* * *`   | hospital clerk                             | delete doctors                             | remove previous doctors that have left the hospital               |","lastModifiedDate":"2024-03-05"},{"lineNumber":286,"author":{"gitId":"alfaloo"},"content":"| `* * *`   | hospital clerk                             | create appointments                        | arrange a meeting time between a doctor and a patient             |","lastModifiedDate":"2024-03-05"},{"lineNumber":287,"author":{"gitId":"alfaloo"},"content":"| `* * *`   | hospital clerk                             | delete appointments                        | remove a meeting time if either party becomes unavailable         |","lastModifiedDate":"2024-03-05"},{"lineNumber":288,"author":{"gitId":"alfaloo"},"content":"| `* * *`   | hospital clerk                             | query patient by name                      | retrieve their relevant information                               |","lastModifiedDate":"2024-03-05"},{"lineNumber":289,"author":{"gitId":"alfaloo"},"content":"| `* * *`   | hospital clerk                             | query doctor by name                       | retrieve their relevant information                               |","lastModifiedDate":"2024-03-05"},{"lineNumber":290,"author":{"gitId":"alfaloo"},"content":"| `* *`     | hospital clerk                             | query appointment by patient               | look up what appointments a patient has to attend                 |","lastModifiedDate":"2024-03-05"},{"lineNumber":291,"author":{"gitId":"alfaloo"},"content":"| `* *`     | hospital clerk                             | query appointment by doctor                | look up what appointments a doctor has to service                 |","lastModifiedDate":"2024-03-05"},{"lineNumber":292,"author":{"gitId":"alfaloo"},"content":"| `*`       | hospital clerk                             | query patient by other fields              | retrieve patient information through other fields if they call-in |","lastModifiedDate":"2024-03-05"},{"lineNumber":293,"author":{"gitId":"alfaloo"},"content":"| `*`       | hospital clerk                             | find available timings to book appointment | schedule a time that suits both the patient and doctor            |","lastModifiedDate":"2024-03-05"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"officialchengyud"},"content":"(For all use cases below, the **System** is the `mediCLI` and the **Actor** is the `hospital clerk`, unless specified otherwise)","lastModifiedDate":"2024-03-05"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"officialchengyud"},"content":"**Use case: Add a patient**","lastModifiedDate":"2024-03-05"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"officialchengyud"},"content":"1.  Hospital clerk enters patient data","lastModifiedDate":"2024-03-05"},{"lineNumber":305,"author":{"gitId":"officialchengyud"},"content":"2.  mediCLI adds the patient into database","lastModifiedDate":"2024-03-05"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"officialchengyud"},"content":"* 1a. The entered patient data is not in the correct format","lastModifiedDate":"2024-03-05"},{"lineNumber":312,"author":{"gitId":"officialchengyud"},"content":"  * *1a1. mediCLI shows an error message","lastModifiedDate":"2024-03-05"},{"lineNumber":313,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"officialchengyud"},"content":"**Use case: Delete a patient**","lastModifiedDate":"2024-03-05"},{"lineNumber":321,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":322,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":323,"author":{"gitId":"officialchengyud"},"content":"**MSS**","lastModifiedDate":"2024-03-05"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":325,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":326,"author":{"gitId":"officialchengyud"},"content":"1.  Hospital clerk requests to list persons","lastModifiedDate":"2024-03-05"},{"lineNumber":327,"author":{"gitId":"officialchengyud"},"content":"2.  mediCLI shows a list of persons","lastModifiedDate":"2024-03-05"},{"lineNumber":328,"author":{"gitId":"officialchengyud"},"content":"3.  Hospital clerk requests to delete a specific patient in the list","lastModifiedDate":"2024-03-05"},{"lineNumber":329,"author":{"gitId":"officialchengyud"},"content":"4.  mediCLI deletes the patient","lastModifiedDate":"2024-03-05"},{"lineNumber":330,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":331,"author":{"gitId":"officialchengyud"},"content":"Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":333,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-03-05"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":335,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-05"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":337,"author":{"gitId":"officialchengyud"},"content":"    Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":338,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":340,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-03-05"},{"lineNumber":341,"author":{"gitId":"officialchengyud"},"content":"  * 3a1. mediCLI shows an error message.","lastModifiedDate":"2024-03-05"},{"lineNumber":342,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":343,"author":{"gitId":"officialchengyud"},"content":"    Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":344,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":345,"author":{"gitId":"officialchengyud"},"content":"**Use case: Create an appointment**","lastModifiedDate":"2024-03-05"},{"lineNumber":346,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":347,"author":{"gitId":"officialchengyud"},"content":"**MSS**","lastModifiedDate":"2024-03-05"},{"lineNumber":348,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":349,"author":{"gitId":"officialchengyud"},"content":"1.  Hospital clerk needs to create appointment between doctor and patient","lastModifiedDate":"2024-03-05"},{"lineNumber":350,"author":{"gitId":"officialchengyud"},"content":"2.  Hospital clerk enters doctor and patient details","lastModifiedDate":"2024-03-05"},{"lineNumber":351,"author":{"gitId":"officialchengyud"},"content":"3.  mediCLI creates the appointment","lastModifiedDate":"2024-03-05"},{"lineNumber":352,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":353,"author":{"gitId":"officialchengyud"},"content":"Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":354,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":355,"author":{"gitId":"officialchengyud"},"content":"**Use case: Delete an appointment**","lastModifiedDate":"2024-03-05"},{"lineNumber":356,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":357,"author":{"gitId":"officialchengyud"},"content":"**MSS**","lastModifiedDate":"2024-03-05"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":359,"author":{"gitId":"officialchengyud"},"content":"1.  Hospital clerk needs to delete appointment between doctor and patient","lastModifiedDate":"2024-03-05"},{"lineNumber":360,"author":{"gitId":"officialchengyud"},"content":"2.  Hospital clerk enters appointment id","lastModifiedDate":"2024-03-05"},{"lineNumber":361,"author":{"gitId":"officialchengyud"},"content":"3.  mediCLI deletes the appointment","lastModifiedDate":"2024-03-05"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":363,"author":{"gitId":"officialchengyud"},"content":"Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":365,"author":{"gitId":"officialchengyud"},"content":"**Use case: Query patient by name**","lastModifiedDate":"2024-03-05"},{"lineNumber":366,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":367,"author":{"gitId":"officialchengyud"},"content":"**MSS**","lastModifiedDate":"2024-03-05"},{"lineNumber":368,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":369,"author":{"gitId":"officialchengyud"},"content":"1.  Hospital clerk needs to search for patient","lastModifiedDate":"2024-03-05"},{"lineNumber":370,"author":{"gitId":"officialchengyud"},"content":"2.  Hospital clerk enters patient name","lastModifiedDate":"2024-03-05"},{"lineNumber":371,"author":{"gitId":"officialchengyud"},"content":"3.  mediCLI lists patients with supplied name","lastModifiedDate":"2024-03-05"},{"lineNumber":372,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":373,"author":{"gitId":"officialchengyud"},"content":"Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":374,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":375,"author":{"gitId":"officialchengyud"},"content":"**Extensions**","lastModifiedDate":"2024-03-05"},{"lineNumber":376,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":377,"author":{"gitId":"officialchengyud"},"content":"* 3a. The list is empty","lastModifiedDate":"2024-03-05"},{"lineNumber":378,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":379,"author":{"gitId":"officialchengyud"},"content":"  Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":380,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":381,"author":{"gitId":"officialchengyud"},"content":"**Use case: Query appointments by patient**","lastModifiedDate":"2024-03-05"},{"lineNumber":382,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":383,"author":{"gitId":"officialchengyud"},"content":"**MSS**","lastModifiedDate":"2024-03-05"},{"lineNumber":384,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":385,"author":{"gitId":"officialchengyud"},"content":"1.  Hospital clerk needs to search for appointment by patient","lastModifiedDate":"2024-03-05"},{"lineNumber":386,"author":{"gitId":"officialchengyud"},"content":"2.  Hospital clerk enters patient name","lastModifiedDate":"2024-03-05"},{"lineNumber":387,"author":{"gitId":"officialchengyud"},"content":"3.  mediCLI lists relevant appointments","lastModifiedDate":"2024-03-05"},{"lineNumber":388,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":389,"author":{"gitId":"officialchengyud"},"content":"Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":390,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":391,"author":{"gitId":"officialchengyud"},"content":"**Extensions**","lastModifiedDate":"2024-03-05"},{"lineNumber":392,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":393,"author":{"gitId":"officialchengyud"},"content":"* 3a. The list is empty","lastModifiedDate":"2024-03-05"},{"lineNumber":394,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":395,"author":{"gitId":"officialchengyud"},"content":"  Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":396,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":397,"author":{"gitId":"officialchengyud"},"content":"**Use case: Query appointments by doctor**","lastModifiedDate":"2024-03-05"},{"lineNumber":398,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":399,"author":{"gitId":"officialchengyud"},"content":"**MSS**","lastModifiedDate":"2024-03-05"},{"lineNumber":400,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":401,"author":{"gitId":"officialchengyud"},"content":"1.  Hospital clerk needs to search for appointment by doctor","lastModifiedDate":"2024-03-05"},{"lineNumber":402,"author":{"gitId":"officialchengyud"},"content":"2.  Hospital clerk enters doctor name","lastModifiedDate":"2024-03-05"},{"lineNumber":403,"author":{"gitId":"officialchengyud"},"content":"3.  mediCLI lists relevant appointments","lastModifiedDate":"2024-03-05"},{"lineNumber":404,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":405,"author":{"gitId":"officialchengyud"},"content":"Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":406,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":407,"author":{"gitId":"officialchengyud"},"content":"**Extensions**","lastModifiedDate":"2024-03-05"},{"lineNumber":408,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":409,"author":{"gitId":"officialchengyud"},"content":"* 3a. The list is empty","lastModifiedDate":"2024-03-05"},{"lineNumber":410,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":411,"author":{"gitId":"officialchengyud"},"content":"Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"officialchengyud"},"content":"2.  Should be able to hold up to 1000 medical staff without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-05"},{"lineNumber":417,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"officialchengyud"},"content":"4.  mediCLI should be easy to integrate with existing medical database systems so that staff can immediately switch to the new app.","lastModifiedDate":"2024-03-05"},{"lineNumber":419,"author":{"gitId":"officialchengyud"},"content":"5.  Comprehensive documentation should be provided, including user guides, command references, and troubleshooting resources.","lastModifiedDate":"2024-03-05"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"officialchengyud"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others.","lastModifiedDate":"2024-03-05"},{"lineNumber":424,"author":{"gitId":"officialchengyud"},"content":"* **CLI**: Command Line Interface, a way of interacting with a computer program where the user enters commands into a terminal or command prompt.","lastModifiedDate":"2024-03-05"},{"lineNumber":425,"author":{"gitId":"officialchengyud"},"content":"* **GUI**: Graphical User Interface, a way of interacting with a computer program using graphical elements such as windows, buttons, and menus.","lastModifiedDate":"2024-03-05"},{"lineNumber":426,"author":{"gitId":"officialchengyud"},"content":"* **JSON**: JSON: JavaScript Object Notation, a lightweight data interchange format used to store and exchange data.","lastModifiedDate":"2024-03-05"},{"lineNumber":427,"author":{"gitId":"officialchengyud"},"content":"* **API**: Application Programming Interface, a set of rules and protocols for building and interacting with software applications.","lastModifiedDate":"2024-03-05"},{"lineNumber":428,"author":{"gitId":"officialchengyud"},"content":"* **UI**: User Interface, the visual part of a computer program that allows users to interact with it.","lastModifiedDate":"2024-03-05"},{"lineNumber":429,"author":{"gitId":"officialchengyud"},"content":"* **XML**: Extensible Markup Language, a markup language that defines rules for encoding documents in a format that is both human-readable and machine-readable.","lastModifiedDate":"2024-03-05"},{"lineNumber":430,"author":{"gitId":"officialchengyud"},"content":"* **MSS**: Main Success Scenario, the primary flow of events in a use case that leads to the desired outcome.","lastModifiedDate":"2024-03-05"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"alfaloo":29,"officialchengyud":104,"Kappaccinoh":10,"-":337,"ararchch":3}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"skinparam arrowColor LOGIC_COLOR_T5","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"skinparam classBackgroundColor LOGIC_COLOR_T6","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic as LogicPackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"Parser Classes\" as ParserClasses{","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Storage {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"LogicManager -right-\u003e\"1\" ParserClasses","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"ParserClasses ..\u003e XYZCommand : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : \u003c\u003ccall\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"note right of XYZCommand: XYZCommand \u003d AddPatientCommand, \\nDeleteAppointmentCommand, etc","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"officialchengyud":3,"-":44}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"Class UniqueAppointmentList","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"Class \"{Abstract}\\nPerson\" as Person","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"Class Patient","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"Class Doctor","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"Class Appointment","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"Class AppointmentDate","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"Class AppointmentID","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"Class Type","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"Class NRIC","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"Class DoB","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"Class \"\u003c\u003cenumeration\u003e\u003e\\nType\\n\\nPatient\\nDoctor\"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"AddressBook *--\u003e \"1\" UniqueAppointmentList","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"UniquePersonList ---\u003e \"~* all\" Person","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"UniqueAppointmentList -down--\u003e \"~* all\" Appointment","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"Person *---\u003e Type","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"Person *---\u003e NRIC","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"Person *---\u003e Name","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"Person *---\u003e DoB","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"Person *---\u003e Phone","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"Doctor .right.|\u003e Person","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"Patient .--|\u003e Person","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"Appointment *--\u003e AppointmentDate","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"Appointment *--\u003e AppointmentID","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"Appointment *--\u003e \"2(Patient \u0026 Doctor)\" NRIC","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"ModelManager --\u003e \"~* filtered\" Appointment","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Kappaccinoh":29,"-":39}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"Class AppointmentListPanel","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"Class AppointmentCard","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"MainWindow *-down-\u003e \"1\" AppointmentListPanel","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"AppointmentListPanel -down-\u003e \"*\" AppointmentCard","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"AppointmentListPanel --|\u003e UiPart","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"AppointmentCard --|\u003e UiPart","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"AppointmentCard ..\u003e Model","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"AppointmentListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":60,"ararchch":9}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    class State1 as \"\u003cu\u003emc0:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    class State2 as \"\u003cu\u003emc1:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    class State3 as \"\u003cu\u003emc2:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"alfaloo":3,"-":18}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    class State1 as \"\u003cu\u003emc0:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    class State2 as \"\u003cu\u003emc1:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    class State3 as \"\u003cu\u003emc2:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"alfaloo":3,"-":20}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"title After command \"addpatient i/S1234567A n/John Doe d/2003-01-30 p/98765432\"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    class State1 as \"\u003cu\u003emc0:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    class State2 as \"\u003cu\u003emc1:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    class State3 as \"\u003cu\u003emc2:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"alfaloo":4,"-":17}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    class State1 as \"\u003cu\u003emc0:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    class State2 as \"\u003cu\u003emc1:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    class State3 as \"\u003cu\u003emc2:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"alfaloo":3,"-":18}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    class State1 as \"\u003cu\u003emc0:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    class State2 as \"\u003cu\u003emc1:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    class State3 as \"\u003cu\u003emc2:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"alfaloo":3,"-":18}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    class State1 as \"\u003cu\u003emc0:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    class State2 as \"\u003cu\u003emc1:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    class State3 as \"\u003cu\u003emc3:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"note right on link: State mc2 deleted.","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"alfaloo":4,"-":18}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"!define LOGIC_COLOR_T5 #3260a8","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"!define LOGIC_COLOR_T6 #267afc","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"skinparam Package {","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    BackgroundColor #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2023-07-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    FontSize 16","lastModifiedDate":"2023-07-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-07-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    FontSize 15","lastModifiedDate":"2023-07-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle bold","lastModifiedDate":"2023-07-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"officialchengyud":2,"-":79}},{"path":"src/main/java/seedu/address/commons/util/IdUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import java.util.EnumMap;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import java.util.Random;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import jdk.jshell.spi.ExecutionControl;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":" * Generates unique  String IDs for patients, doctors, and appointments","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"public class IdUtil {","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"     * Enum containing all possible entity types in our system","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"    public enum Entities {","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"        PATIENT(\"p\"),","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"        DOCTOR(\"d\"),","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"        APPOINTMENT(\"a\");","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"        private final String letter;","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"        Entities(String letter) {","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"            this.letter \u003d letter;","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"        /**","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"         * Returns letter associated with entity","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"         * @return String letter","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"         */","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"        public String getLetter() {","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"            return letter;","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"        /**","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"         * Gets entity object associated with character","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"         *","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"         * @param c character in question","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"         * @return Entities entity object associated with input character","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"         */","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"        protected static Entities getEntityFromChar(char c) {","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"            if (c \u003d\u003d \u0027a\u0027) {","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"                return Entities.APPOINTMENT;","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"            } else if (c \u003d\u003d \u0027p\u0027) {","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"                return Entities.PATIENT;","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"            } else if (c \u003d\u003d \u0027d\u0027) {","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"                return Entities.DOCTOR;","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"            throw new IllegalArgumentException(\"Invalid character input - no corresponding entity\");","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"    // EnumMap storing entities and their corresponding used up ids.","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"    private static final EnumMap\u003cEntities, HashSet\u003cString\u003e\u003e allIds \u003d new EnumMap\u003c\u003e(Entities.class);","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"     * Generates a new id based on input entity.","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"     * @param entity type of id to generate","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"     * @return String id","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"    public static String generateNewId(Entities entity) {","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"        HashSet\u003cString\u003e idSet \u003d allIds.get(entity);","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"        if (idSet \u003d\u003d null) {","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"            idSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"            allIds.put(entity, idSet);","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"        String initId \u003d String.valueOf(random.nextInt(90000000) + 10000000);","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"        while (idSet.contains(initId)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"            initId \u003d String.valueOf(random.nextInt(90000000) + 10000000);;","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"        idSet.add(initId);","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"        return entity.getLetter() + initId;","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"     * Deletes Id that is inputted","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"     * @param id String id to delete","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"    public static void deleteId(String id) {","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"        requireNonNull(id);","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"        Entities entity \u003d Entities.getEntityFromChar(id.substring(0, 1).charAt(0));","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"        HashSet\u003cString\u003e idSet \u003d allIds.get(entity);","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"        idSet.remove(id.substring(1, id.length()));","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"     * Returns allIds as an unmodifiable map","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"     * @return unmodifiable map containing ids","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"    public static boolean hasId(String id) {","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"        requireNonNull(id);","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"        Entities entity \u003d Entities.getEntityFromChar(id.substring(0, 1).charAt(0));","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"ararchch"},"content":"        HashSet\u003cString\u003e idSet \u003d allIds.get(entity);","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"        return idSet.contains(id.substring(1, id.length()));","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"     * Updates map with initial values from storage","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"ararchch"},"content":"     * @throws ExecutionControl.NotImplementedException","lastModifiedDate":"2024-03-13"},{"lineNumber":105,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"ararchch"},"content":"    public static void initalMapUpdate() throws ExecutionControl.NotImplementedException {","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"ararchch"},"content":"        throw new ExecutionControl.NotImplementedException(\"to be implemented\");","lastModifiedDate":"2024-03-13"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"ararchch":110}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"    /** Returns an unmodifiable view of the filtered list of appointments */","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Kappaccinoh":3,"-":50,"ararchch":1}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"Kappaccinoh"},"content":"        return model.getFilteredAppointmentList();","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Kappaccinoh":2,"-":87,"ararchch":4}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"    public static final String MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX \u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"                \"The appointment index provided is invalid\";","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"    public static final String MESSAGE_APPOINTMENTS_LISTED_OVERVIEW \u003d \"%1$d appointments listed!\";","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"        builder.append(\"; NRIC: \")","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"                .append(person.getNric())","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"                .append(\"; Name: \")","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"                .append(person.getName())","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"                .append(\"; DoB: \")","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"                .append(person.getDoB())","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"                .append(\";\");","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"     * Formats appointment for display in result box","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"     * @param appointment the appointment in question","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"     * @return String formatted string as per requirements","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"    public static String format(Appointment appointment) {","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"        builder.append(\"Date: \")","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"                .append(appointment.getAppointmentDate())","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"                .append(\"; Doctor: \")","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"Kappaccinoh"},"content":"                .append(appointment.getDoctorNric())","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"                .append(\"; Patient: \")","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"                .append(appointment.getPatientNric())","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"                .append(\"; ID: \")","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"                .append(appointment.getAppointmentId());","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"        return builder.toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alfaloo":5,"officialchengyud":2,"Kappaccinoh":5,"-":44,"ararchch":17}},{"path":"src/main/java/seedu/address/logic/commands/AddAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTORNRIC;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENTNRIC;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.exceptions.InvalidAppointmentException;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":" * Command to add an appointment to MediCLI","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"public class AddAppointmentCommand extends Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    public static final String COMMAND_WORD \u003d \"addappt\";","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an appointment to the MediCLI system. \"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"            + PREFIX_DOCTORNRIC + \"DOCTOR NRIC \"","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"            + PREFIX_PATIENTNRIC + \"PATIENT NRIC \"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"            + PREFIX_DATE + \"2024-04-09 \"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"            + PREFIX_DOCTORNRIC + \"S7777888T \"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"            + PREFIX_PATIENTNRIC + \"T0000111U\";","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Appointment added: %1$s\";","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"This appointment already exists in the MediCLI\";","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"    private final Appointment toAdd;","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"    public AddAppointmentCommand(Appointment appointment) {","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"        toAdd \u003d appointment;","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"        if (model.hasAppointment(toAdd)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"        if (!model.isValidAppointment(toAdd)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"            throw new InvalidAppointmentException();","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"        model.addAppointment(toAdd);","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"        if (!(other instanceof AddAppointmentCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"        AddAppointmentCommand otherAddCommand \u003d (AddAppointmentCommand) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"        return toAdd.isSameAppointment(otherAddCommand.toAdd);","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"                .toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ararchch":83}},{"path":"src/main/java/seedu/address/logic/commands/AddDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":" * Adds a person to the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"public class AddDoctorCommand extends Command {","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"    public static final String COMMAND_WORD \u003d \"adddoctor\";","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a doctor to the address book. \"","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"            + PREFIX_NRIC + \"NRIC \"","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"            + PREFIX_DOB + \"DOB \"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"officialchengyud"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"            + PREFIX_NRIC + \"S1234567A \"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"officialchengyud"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"            + PREFIX_DOB + \"2003-01-30 \"","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"            + PREFIX_PHONE + \"98765432\";","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New doctor added: %1$s\";","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"officialchengyud"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This doctor already exists in the address book\";","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"officialchengyud"},"content":"    private final Doctor toAdd;","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"    public AddDoctorCommand(Doctor doctor) {","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"        requireNonNull(doctor);","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"officialchengyud"},"content":"        toAdd \u003d doctor;","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"officialchengyud"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"officialchengyud"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"officialchengyud"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"officialchengyud"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"officialchengyud"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"officialchengyud"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"officialchengyud"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"officialchengyud"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"officialchengyud"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"officialchengyud"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"officialchengyud"},"content":"        if (!(other instanceof AddDoctorCommand)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"officialchengyud"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"officialchengyud"},"content":"        AddDoctorCommand otherAddCommand \u003d (AddDoctorCommand) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"officialchengyud"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"officialchengyud"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"officialchengyud"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"officialchengyud"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"officialchengyud"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"officialchengyud"},"content":"                .toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"officialchengyud":80}},{"path":"src/main/java/seedu/address/logic/commands/AddPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":" * Adds a person to the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"public class AddPatientCommand extends Command {","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"    public static final String COMMAND_WORD \u003d \"addpatient\";","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a patient to the address book. \"","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"            + PREFIX_NRIC + \"NRIC \"","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"            + PREFIX_DOB + \"DOB \"","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"            + PREFIX_NRIC + \"S1234567A \"","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"            + PREFIX_DOB + \"2003-01-30 \"","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"            + PREFIX_PHONE + \"98765432\";","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New patient added: %1$s\";","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This patient already exists in the address book\";","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"    private final Patient toAdd;","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"    public AddPatientCommand(Patient patient) {","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        requireNonNull(patient);","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"        toAdd \u003d patient;","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"        if (!(other instanceof AddPatientCommand)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"        AddPatientCommand otherAddCommand \u003d (AddPatientCommand) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"                .toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":80}},{"path":"src/main/java/seedu/address/logic/commands/DeleteAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":" * Deletes an appointment identified using it\u0027s displayed index from mediCLI.","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"public class DeleteAppointmentCommand extends Command {","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"    public static final String COMMAND_WORD \u003d \"deleteappt\";","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"            + \": Deletes the appointment identified by the index number used in the displayed appointment list.\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"    public static final String MESSAGE_DELETE_APPOINTMENT_SUCCESS \u003d \"Deleted Appointment: %1$s\";","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"officialchengyud"},"content":"    public DeleteAppointmentCommand(Index targetIndex) {","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"officialchengyud"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"        // Check for valid index","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"officialchengyud"},"content":"        Appointment appointmentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"        model.deleteAppointment(appointmentToDelete);","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_APPOINTMENT_SUCCESS,","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"                    Messages.format(appointmentToDelete)));","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"officialchengyud"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"officialchengyud"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"officialchengyud"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"officialchengyud"},"content":"            return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"officialchengyud"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"officialchengyud"},"content":"        if (!(other instanceof DeleteAppointmentCommand)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"officialchengyud"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"officialchengyud"},"content":"        DeleteAppointmentCommand otherDeleteCommand \u003d (DeleteAppointmentCommand) other;","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"officialchengyud"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"officialchengyud"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"officialchengyud"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"officialchengyud"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"officialchengyud"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"officialchengyud"},"content":"                .toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"officialchengyud":71,"Kappaccinoh":1}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Type;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"    public static final String MESSAGE_DELETE_PATIENT_SUCCESS \u003d \"Deleted Patient: %1$s\";","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"    public static final String MESSAGE_DELETE_DOCTOR_SUCCESS \u003d \"Deleted Doctor: %1$s\";","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"        String message \u003d (personToDelete.getType() \u003d\u003d Type.PATIENT","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"                ? MESSAGE_DELETE_PATIENT_SUCCESS","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"                : MESSAGE_DELETE_DOCTOR_SUCCESS);","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"        return new CommandResult(String.format(message, Messages.format(personToDelete)));","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alfaloo":7,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"        //        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"        //        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"        //        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"        //        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"        //        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"        //        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"        return null;","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"alfaloo":7,"-":235}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kappaccinoh":2,"-":24}},{"path":"src/main/java/seedu/address/logic/commands/QueryDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.person.DoctorNameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":" * Queries and returns all doctors whose name matches the input string.","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":" * Query more than one name at a time is supported","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"public class QueryDoctorCommand extends Command {","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"    public static final String COMMAND_WORD \u003d \"querydoctor\";","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all doctors whose names contain any of \"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"    private final DoctorNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"    public QueryDoctorCommand(DoctorNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Alteqa"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Alteqa"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Alteqa"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Alteqa"},"content":"        if (!(other instanceof QueryDoctorCommand)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Alteqa"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"Alteqa"},"content":"        QueryDoctorCommand otherQueryDoctorCommand \u003d (QueryDoctorCommand) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Alteqa"},"content":"        return predicate.equals(otherQueryDoctorCommand.predicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Alteqa"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Alteqa"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Alteqa"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"Alteqa"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Alteqa"},"content":"                .toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"Alteqa"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"Alteqa":59}},{"path":"src/main/java/seedu/address/logic/commands/QueryPatientAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.appointment.AppointmentContainsPatientPredicate;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":" * Represents a command for querying appointments for a specific patient.","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":" * The command searches for appointments of patients whose NRICs/names contain any of the specified keywords","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":" * (case-insensitive) and displays them as a list with index numbers.","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"public class QueryPatientAppointmentCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"    public static final String COMMAND_WORD \u003d \"appforpatient\";","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all appointments of patients whose \"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"            + \"nrics/names contain any of the specified keywords (case-insensitive) and displays them as a \"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"            + \"list with index numbers.\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n (Keywords can either be NRICs or Names)\"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob T1234567A S7654321A\";","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"    private final AppointmentContainsPatientPredicate predicate;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"    public QueryPatientAppointmentCommand(AppointmentContainsPatientPredicate predicate) {","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"        model.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"                String.format(Messages.MESSAGE_APPOINTMENTS_LISTED_OVERVIEW,","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"                        model.getFilteredAppointmentList().size()));","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"        if (!(other instanceof QueryPatientAppointmentCommand)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"            return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientAppointmentCommand otherQueryPatientAppointmentCommand \u003d (QueryPatientAppointmentCommand) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"        return predicate.equals(otherQueryPatientAppointmentCommand.predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"                .toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Kappaccinoh":60}},{"path":"src/main/java/seedu/address/logic/commands/QueryPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.person.PatientNameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":" * Queries and returns all patients whose name matches the input string.","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":" * Query more than one name at a time is supported","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"public class QueryPatientCommand extends Command {","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"    public static final String COMMAND_WORD \u003d \"querypatient\";","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all patients whose names contain any of \"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"    private final PatientNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"    public QueryPatientCommand(PatientNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"        if (!(other instanceof QueryPatientCommand)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientCommand otherQueryPatientCommand \u003d (QueryPatientCommand) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"        return predicate.equals(otherQueryPatientCommand.predicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"                .toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Alteqa":1,"Kappaccinoh":59}},{"path":"src/main/java/seedu/address/logic/parser/AddAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTORNRIC;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENTNRIC;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.AppointmentDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":" * Parses addAppointment Command","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"public class AddAppointmentCommandParser {","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"     * Parses the given {@code String} of arguments in the context of the AddAppointmentCommand","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"     * and returns an AddAppointmentCommand object for execution.","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"    public AddAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DATE, PREFIX_DOCTORNRIC, PREFIX_PATIENTNRIC);","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"        if (!argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"                || !arePrefixesPresent(argMultimap, PREFIX_DATE, PREFIX_DOCTORNRIC, PREFIX_PATIENTNRIC)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_DATE, PREFIX_DOCTORNRIC, PREFIX_PATIENTNRIC);","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"        AppointmentDate appointmentDate \u003d ParserUtil.parseAppointmentDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"        Nric doctorNric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_DOCTORNRIC).get());","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"        Nric patientNric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_PATIENTNRIC).get());","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"        Appointment appointment \u003d new Appointment(doctorNric, patientNric, appointmentDate);","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"        return new AddAppointmentCommand(appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ararchch":54}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"        //        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"        return new AddCommand(null);","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"alfaloo":2,"-":58}},{"path":"src/main/java/seedu/address/logic/parser/AddDoctorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.DoB;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"public class AddDoctorCommandParser implements Parser\u003cAddDoctorCommand\u003e {","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"officialchengyud"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"    public AddDoctorCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"officialchengyud"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NRIC, PREFIX_NAME, PREFIX_DOB, PREFIX_PHONE);","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NRIC, PREFIX_NAME, PREFIX_DOB, PREFIX_PHONE)","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDoctorCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"officialchengyud"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NRIC, PREFIX_NAME, PREFIX_DOB, PREFIX_PHONE);","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"        DoB dob \u003d ParserUtil.parseDoB(argMultimap.getValue(PREFIX_DOB).get());","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"        Doctor doctor \u003d new Doctor(nric, name, dob, phone);","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"        return new AddDoctorCommand(doctor);","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"officialchengyud"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"officialchengyud"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"officialchengyud"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"officialchengyud"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"officialchengyud":56}},{"path":"src/main/java/seedu/address/logic/parser/AddPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.DoB;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"public class AddPatientCommandParser implements Parser\u003cAddPatientCommand\u003e {","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"    public AddPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NRIC, PREFIX_NAME, PREFIX_DOB, PREFIX_PHONE);","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NRIC, PREFIX_NAME, PREFIX_DOB, PREFIX_PHONE)","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NRIC, PREFIX_NAME, PREFIX_DOB, PREFIX_PHONE);","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"        DoB dob \u003d ParserUtil.parseDoB(argMultimap.getValue(PREFIX_DOB).get());","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        Patient patient \u003d new Patient(nric, name, dob, phone);","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"        return new AddPatientCommand(patient);","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":56}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryDoctorCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryPatientAppointmentCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryPatientCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"        //        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"        //            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"        case AddPatientCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"            return new AddPatientCommandParser().parse(arguments);","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"officialchengyud"},"content":"        case AddDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"officialchengyud"},"content":"            return new AddDoctorCommandParser().parse(arguments);","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"Alteqa"},"content":"        case QueryDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"Alteqa"},"content":"            return new QueryDoctorCommandParser().parse(arguments);","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"Kappaccinoh"},"content":"        case QueryPatientCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"Kappaccinoh"},"content":"            return new QueryPatientCommandParser().parse(arguments);","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":98,"author":{"gitId":"ararchch"},"content":"        case AddAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"            return new AddAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2024-03-15"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":101,"author":{"gitId":"Kappaccinoh"},"content":"        case QueryPatientAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"Kappaccinoh"},"content":"            return new QueryPatientAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"officialchengyud"},"content":"        case DeleteAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"officialchengyud"},"content":"            return new DeleteAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Alteqa":3,"alfaloo":3,"officialchengyud":5,"Kappaccinoh":13,"-":84,"ararchch":5}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"    public static final Prefix PREFIX_NRIC \u003d new Prefix(\"i/\");","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    public static final Prefix PREFIX_DOB \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"ad/\");","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    public static final Prefix PREFIX_PATIENTNRIC \u003d new Prefix(\"pn/\");","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    public static final Prefix PREFIX_DOCTORNRIC \u003d new Prefix(\"dn/\");","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"alfaloo":4,"-":15,"ararchch":4}},{"path":"src/main/java/seedu/address/logic/parser/DeleteAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":" * Parses input arguments and creates a new DeleteAppointmentCommand object","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"public class DeleteAppointmentCommandParser implements Parser\u003cDeleteAppointmentCommand\u003e {","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteAppointmentCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"     * and returns a DeleteAppointmentCommand object for execution.","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"    public DeleteAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"            return new DeleteAppointmentCommand(index);","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"officialchengyud":30}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.AppointmentDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.DoB;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"     * Parses the given National Registration Identification Card (NRIC) string into a {@code NRIC} object.","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"     * The input string is required to be non-null, and the parsing is performed after trimming any","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"     * leading or trailing spaces. If the trimmed NRIC string does not meet the validity constraints specified","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"     * in the {@code NRIC} class (as determined by {@link Nric#isValidNric(String)}), a {@code ParseException}","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"     * is thrown with the corresponding error message.","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"     * Example of a valid NRIC string: \"S1234567A\".","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"     * @param nric The National Registration Identification Card (NRIC) string to be parsed.","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"     * @return A {@code NRIC} object representing the parsed NRIC.","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"     * @throws ParseException If the input string is null, empty, or does not meet the validity constraints.","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"     * @see Nric#isValidNric(String)","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"     * @see Nric","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"    public static Nric parseNric(String nric) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"        String trimmedNric \u003d nric.trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"        if (!Nric.isValidNric(trimmedNric)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"            throw new ParseException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"        return new Nric(trimmedNric);","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"     * Parses the given date of birth (DoB) string into a {@code DoB} object.","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"     * The input string is required to be non-null, and the parsing is performed after trimming any leading","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"     * or trailing spaces. If the trimmed DoB string does not meet the validity constraints specified in the","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"     * {@code DoB} class (as determined by {@link DoB#isValidDoB(String)}), a {@code ParseException} is thrown","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"     * with the corresponding error message.","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"     * Example of a valid DoB string: \"3 January 2000\".","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"     * @param dob The date of birth string to be parsed.","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"     * @return A {@code DoB} object representing the parsed date of birth.","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"     * @throws ParseException If the input string is null, empty, or does not meet the validity constraints.","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"     * @see DoB#isValidDoB(String)","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"     * @see DoB","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"    public static DoB parseDoB(String dob) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"        requireNonNull(dob);","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"        String trimmedDoB \u003d dob.trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"        if (!DoB.isValidDoB(trimmedDoB)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"            throw new ParseException(DoB.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"        return new DoB(trimmedDoB);","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":181,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":182,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":183,"author":{"gitId":"ararchch"},"content":"     * Parses AppointmentDate from string to return an AppointmentDate object","lastModifiedDate":"2024-03-16"},{"lineNumber":184,"author":{"gitId":"ararchch"},"content":"     * @param apptDate String to parse","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"ararchch"},"content":"     * @return instance of AppointmentDate","lastModifiedDate":"2024-03-16"},{"lineNumber":186,"author":{"gitId":"ararchch"},"content":"     * @throws ParseException if string is invalid date","lastModifiedDate":"2024-03-16"},{"lineNumber":187,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":188,"author":{"gitId":"ararchch"},"content":"    public static AppointmentDate parseAppointmentDate(String apptDate) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":189,"author":{"gitId":"ararchch"},"content":"        requireNonNull(apptDate);","lastModifiedDate":"2024-03-14"},{"lineNumber":190,"author":{"gitId":"ararchch"},"content":"        String trimmedDate \u003d apptDate.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":191,"author":{"gitId":"ararchch"},"content":"        if (!AppointmentDate.isValidDate(trimmedDate)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":192,"author":{"gitId":"ararchch"},"content":"            throw new ParseException(AppointmentDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":193,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":194,"author":{"gitId":"ararchch"},"content":"        return new AppointmentDate(trimmedDate);","lastModifiedDate":"2024-03-14"},{"lineNumber":195,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"alfaloo":54,"-":124,"ararchch":18}},{"path":"src/main/java/seedu/address/logic/parser/QueryDoctorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"import seedu.address.logic.commands.QueryDoctorCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.person.DoctorNameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":" * Parses input arguments and creates a new QueryDoctorCommand object","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"public class QueryDoctorCommandParser implements Parser\u003cQueryDoctorCommand\u003e {","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"    public QueryDoctorCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, QueryDoctorCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"        return new QueryDoctorCommand(new DoctorNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Alteqa":32,"Kappaccinoh":1}},{"path":"src/main/java/seedu/address/logic/parser/QueryPatientAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryPatientAppointmentCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.appointment.AppointmentContainsPatientPredicate;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":" * Parses input arguments and creates a new QueryPatientAppointmentCommand object","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"public class QueryPatientAppointmentCommandParser implements Parser\u003cQueryPatientAppointmentCommand\u003e {","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"     * Parses the given {@code String} of arguments in the context of the QueryPatientAppointmentCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"     * and returns a QueryPatientAppointmentCommand object for execution.","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"    public QueryPatientAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, QueryPatientAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"        return new QueryPatientAppointmentCommand(new AppointmentContainsPatientPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Kappaccinoh":31}},{"path":"src/main/java/seedu/address/logic/parser/QueryPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryPatientCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.person.PatientNameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":" * Parses input arguments and creates a new QueryPatientCommand object","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"public class QueryPatientCommandParser implements Parser\u003cQueryPatientCommand\u003e {","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"     * Parses the given {@code String} of arguments in the context of the QueryPatientCommand","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"     * and returns a QueryPatientCommand object for execution.","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"    public QueryPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, QueryPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"        return new QueryPatientCommand(new PatientNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Kappaccinoh":33}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.UniqueAppointmentList;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    private final UniqueAppointmentList appointments;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"        appointments \u003d new UniqueAppointmentList();","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"officialchengyud"},"content":"     * Replaces the contents of the appointment list with {@code appointments}.","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"officialchengyud"},"content":"     * {@code appointments} must not contain duplicate appointments.","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"officialchengyud"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"officialchengyud"},"content":"        this.appointments.setAppointments(appointments);","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":71,"author":{"gitId":"officialchengyud"},"content":"        setAppointments(newData.getAppointmentList());","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"    public Person getPersonByNric(Nric nricObj) {","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"        requireNonNull(nricObj);","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"        return persons.getPersonByNric(nricObj);","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"     * @param nric input nric string","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"     * @return boolean stating if addressbook contains nric","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"    public boolean hasPersonNric(String nric) {","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"        return persons.containsNric(nric);","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"ararchch"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"ararchch"},"content":"        appointments.add(appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"ararchch"},"content":"    public void deleteAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"ararchch"},"content":"        appointments.remove(appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"ararchch"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"ararchch"},"content":"        return appointments.contains(appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":152,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":153,"author":{"gitId":"ararchch"},"content":"    public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2024-03-16"},{"lineNumber":154,"author":{"gitId":"ararchch"},"content":"        return appointments.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-16"},{"lineNumber":155,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":156,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"officialchengyud":9,"-":128,"ararchch":39}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"    Predicate\u003cAppointment\u003e PREDICATE_SHOW_ALL_APPOINTMENTS \u003d unused -\u003e true;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"    boolean hasAppointment(Appointment appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"     * Deletes the given person.","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"    void deleteAppointment(Appointment appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"     * Adds the given person.","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"    void addAppointment(Appointment appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"    boolean isValidAppointment(Appointment toAdd);","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"officialchengyud"},"content":"    /** Returns an unmodifiable view of the appointment list */","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"Kappaccinoh"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"Kappaccinoh"},"content":"     * Updates the filter of the filtered appointment list to filter by the given {@code predicate}.","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"Kappaccinoh"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"Kappaccinoh"},"content":"    void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"officialchengyud":2,"Kappaccinoh":8,"-":87,"ararchch":22}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Type;","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"    private final FilteredList\u003cAppointment\u003e filteredAppointments;","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"        filteredAppointments \u003d new FilteredList\u003c\u003e(this.addressBook.getAppointmentList());","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"ararchch"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"ararchch"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"ararchch"},"content":"        return addressBook.hasAppointment(appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"ararchch"},"content":"    public void deleteAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"ararchch"},"content":"        addressBook.deleteAppointment(appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"ararchch"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"ararchch"},"content":"        addressBook.addAppointment(appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"Kappaccinoh"},"content":"        updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":147,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":148,"author":{"gitId":"Kappaccinoh"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"Kappaccinoh"},"content":"        return filteredAppointments;","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":151,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":158,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"Kappaccinoh"},"content":"    public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"Kappaccinoh"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"Kappaccinoh"},"content":"        filteredAppointments.setPredicate(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":182,"author":{"gitId":"ararchch"},"content":"     * Checks if an appointment is valid by comparing if doctor and patient involved exist.","lastModifiedDate":"2024-03-16"},{"lineNumber":183,"author":{"gitId":"ararchch"},"content":"     * @param appointment appointment to check validity of","lastModifiedDate":"2024-03-16"},{"lineNumber":184,"author":{"gitId":"ararchch"},"content":"     * @return boolean indicating if appointment is valid","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":186,"author":{"gitId":"ararchch"},"content":"    public boolean isValidAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-15"},{"lineNumber":187,"author":{"gitId":"Kappaccinoh"},"content":"        Nric doctorNric \u003d appointment.getDoctorNric();","lastModifiedDate":"2024-03-20"},{"lineNumber":188,"author":{"gitId":"ararchch"},"content":"        Nric patientNric \u003d appointment.getPatientNric();","lastModifiedDate":"2024-03-15"},{"lineNumber":189,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":190,"author":{"gitId":"ararchch"},"content":"        Person doctor \u003d addressBook.getPersonByNric(doctorNric);","lastModifiedDate":"2024-03-15"},{"lineNumber":191,"author":{"gitId":"ararchch"},"content":"        Person patient \u003d addressBook.getPersonByNric(patientNric);","lastModifiedDate":"2024-03-15"},{"lineNumber":192,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":193,"author":{"gitId":"ararchch"},"content":"        if (doctor.getType() \u003d\u003d Type.DOCTOR \u0026\u0026 patient.getType() \u003d\u003d Type.PATIENT) {","lastModifiedDate":"2024-03-15"},{"lineNumber":194,"author":{"gitId":"ararchch"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":195,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":196,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":197,"author":{"gitId":"ararchch"},"content":"        return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":198,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":199,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Kappaccinoh":12,"-":148,"ararchch":40}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    ObservableList\u003cAppointment\u003e getAppointmentList();","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":17,"ararchch":3}},{"path":"src/main/java/seedu/address/model/appointment/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":" * Appointment class that describes an appointment","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"public class Appointment {","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    private static final String MESSAGE_CONSTRAINTS_INVALID_DATE \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"            \"Appointment should be made with a date today onwards\";","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"    // The doctor in charge of the appointment","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    private final Nric doctorNric;","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    // The patient benefiting from the appointment","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    private final Nric patientNric;","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"    // The date of the appointment","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"    private final AppointmentDate appointmentDate;","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"    // Message to outputs in case constraints are not met","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"    private final AppointmentId appointmentId;","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"     * Constructs a new appointment instance","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"     * @param doctorNric doctor in charge","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"     * @param patientNric patient of the appointment","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"     * @param appointmentDate date of the appointment","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"    public Appointment(Nric doctorNric, Nric patientNric, AppointmentDate appointmentDate) {","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"        requireAllNonNull(doctorNric, patientNric, appointmentDate);","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"        checkArgument(isValidAppointment(appointmentDate), MESSAGE_CONSTRAINTS_INVALID_DATE);","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"        this.doctorNric \u003d doctorNric;","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"        this.patientNric \u003d patientNric;","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"        this.appointmentDate \u003d appointmentDate;","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"        this.appointmentId \u003d new AppointmentId();","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"     * Checks if appointment is valid by comparing appointment date against current date.","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"     * A valid new appointment can only be in the future, not the past.","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"     * @param appointmentDate Date to check validity of","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"     * @return boolean if appointment is valid or not","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"    private boolean isValidAppointment(AppointmentDate appointmentDate) {","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"        AppointmentDate currentDate \u003d new AppointmentDate(LocalDate.now());","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"        return appointmentDate.compareTo(currentDate) \u003e -1;","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"     * Gets doctor in charge","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"     * @return Doctor in charge","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"    public Nric getDoctorNric() {","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"        return doctorNric;","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"     * Gets patient of the appointment","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"     * @return patient of the appointment","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"    public Nric getPatientNric() {","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"        return patientNric;","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"    public AppointmentId getAppointmentId() {","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"        return this.appointmentId;","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"     * Gets date of the appointment","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"     * @return date of the appointment","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"    public AppointmentDate getAppointmentDate() {","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"        return appointmentDate;","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"     * Checks if appointment is same as input one by comparing persons involved and date.","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"     * @param appt input appointment to compare current appointment against","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"     * @return boolean indicating if appointments are the same or not","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"    public boolean isSameAppointment(Appointment appt) {","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"        if (appt \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"        return appt !\u003d null","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"Kappaccinoh"},"content":"                \u0026\u0026 appt.getDoctorNric().equals(this.getDoctorNric())","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"                \u0026\u0026 appt.getPatientNric().equals(this.getPatientNric())","lastModifiedDate":"2024-03-15"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"                \u0026\u0026 appt.getAppointmentDate().equals(this.getAppointmentDate());","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"ararchch"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":105,"author":{"gitId":"ararchch"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"ararchch"},"content":"                .add(\"Date\", getAppointmentDate())","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"Kappaccinoh"},"content":"                .add(\"Doctor\", getDoctorNric())","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"                .add(\"Patient\", getPatientNric())","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"                .add(\"Id\", getAppointmentId())","lastModifiedDate":"2024-03-13"},{"lineNumber":110,"author":{"gitId":"ararchch"},"content":"                .toString();","lastModifiedDate":"2024-03-13"},{"lineNumber":111,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"Kappaccinoh":5,"ararchch":107}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentContainsPatientPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":" * Represents a Predicate used to test if an Appointment contains specified patient keywords.","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"public class AppointmentContainsPatientPredicate implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    public AppointmentContainsPatientPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"        return keywords.stream()","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(appointment.getPatientNric().nric, keyword));","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"        if (!(other instanceof AppointmentContainsPatientPredicate)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"            return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate otherPredicate \u003d (AppointmentContainsPatientPredicate) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"        return keywords.equals(otherPredicate.keywords);","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Kappaccinoh":45}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":" * Class encapsulating an appointment\u0027s date and corresponding methods","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"public class AppointmentDate {","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    // Message to output in case constraints are not met","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"            \"Appointment date should be in the format of yyyy-MM-dd.\";","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    // Variable storing appointment date in a local date instance","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    public final LocalDate appointmentDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"     * Constructs new AppointmentDate object using an input date string in yyyy-MM-dd format","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"     * @param dateStr input string to be stored","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    public AppointmentDate(String dateStr) {","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"        requireNonNull(dateStr);","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"        checkArgument(isValidDate(dateStr), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"        this.appointmentDate \u003d LocalDate.parse(dateStr);","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"     * Overloaded constructor that constructs a new instance using a LocalDate rather than date string","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"     * @param date LocalDate instance to construct AppointmentDate around","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"    public AppointmentDate(LocalDate date) {","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"        requireNonNull(date);","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"        this.appointmentDate \u003d date;","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"     * Checks if a provided input date string is in a valid format","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"     * @param dateStr input date string","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"     * @return boolean indicating if format is valid or not","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"    public static boolean isValidDate(String dateStr) {","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"            LocalDate.parse(dateStr);","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"        return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"     * Returns string version of appointment date for printing","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"     * @return String stringed appointment date","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"        return DateTimeFormatter.ofLocalizedDate(FormatStyle.SHORT).format(this.appointmentDate);","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"     * Checks if input object is practically equal to this AppointmentDate object","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"     * @param obj input object","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"     * @return boolean indicating if compared objects are equal","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"        if (!(obj instanceof AppointmentDate)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"        AppointmentDate ad \u003d (AppointmentDate) obj;","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"        return appointmentDate.equals(ad.appointmentDate);","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"     * Returns hashcode of appointment date","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"     * @return int hashcode","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"        return appointmentDate.hashCode();","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"     * Compares two AppointmentDate instances together","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"     * @param compareValue value to compare with current instance","lastModifiedDate":"2024-03-13"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"     * @return integer reflecting whether compareValue is greater, less, or equal","lastModifiedDate":"2024-03-13"},{"lineNumber":98,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"    public int compareTo(AppointmentDate compareValue) {","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"        return this.appointmentDate.compareTo(compareValue.appointmentDate);","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"ararchch":103}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import seedu.address.commons.util.IdUtil;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":" * Class encapsulating appointment id and corresponding methods","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"public class AppointmentId {","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"    public static final String VALIDATION_REGEX \u003d \"a\\\\d{8}\";","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"    // Message to output in case constraints are not met","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"            \"Appointment id should be in the format of aXXXXXXXX.\";","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    // Variable storing appointment id as a string object","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"    public final String appointmentId;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"     * Constructs new AppointmentId object by generating an appointment id string in aXXXXXXXX format","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"    public AppointmentId() {","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"        String apptId \u003d IdUtil.generateNewId(IdUtil.Entities.APPOINTMENT);","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"        checkArgument(isValidApptId(apptId), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"        this.appointmentId \u003d apptId;","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"     * Checks if a provided input appointment id string is in a valid format","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"     * @param apptId input date string","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"     * @return boolean indicating if format is valid or not","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"    private boolean isValidApptId(String apptId) {","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"        return apptId.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"     * Returns string version of appointment id for printing","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"     * @return String stringed appointment date","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"        return appointmentId.toString();","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"     * Checks if input object is practically equal to this AppointmentId object","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"     * @param obj input object","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"     * @return boolean indicating if compared objects are equal","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"        return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"     * Returns hashcode of appointment id","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"     * @return int hashcode","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"        String postfix \u003d appointmentId.substring(1, appointmentId.length());","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"        Integer prefix \u003d (int) appointmentId.charAt(0);","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"        String prefixString \u003d prefix.toString();","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"        return Integer.valueOf(prefixString + postfix);","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"ararchch":76}},{"path":"src/main/java/seedu/address/model/appointment/UniqueAppointmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import java.util.List;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.exceptions.AppointmentNotFoundException;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":" * A list of appointments that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":" * An appointment is considered unique by comparing using {@code Appointment#isSameAppointment(Appointment)}.","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":" * As such, adding and updating of appointments uses Appointment#isSameAppointment(Appointment) for equality","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":" * so as to ensure that the Appointment being added or updated is","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":" * unique in terms of identity in the UniqueAppointmentList. However, the removal of a person uses","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":" * Appointment#equals(Object) so as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":" *","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":" *","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":" * @see Appointment#isSameAppointment(Appointment)","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"public class UniqueAppointmentList implements Iterable\u003cAppointment\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    private final ObservableList\u003cAppointment\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"    private final ObservableList\u003cAppointment\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"    public boolean contains(Appointment toCheck) {","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"        return internalList.stream().anyMatch(toCheck::isSameAppointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"     * Adds a person to the list.","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"    public void add(Appointment toAdd) {","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"        if (!target.isSameAppointment(editedAppointment) \u0026\u0026 contains(editedAppointment)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"        internalList.set(index, editedAppointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"     * The person must exist in the list.","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"    public void remove(Appointment toRemove) {","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"    public void setPersons(UniqueAppointmentList replacement) {","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"        requireAllNonNull(appointments);","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"        if (!appointmentsAreUnique(appointments)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"        internalList.setAll(appointments);","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"    public ObservableList\u003cAppointment\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"ararchch"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"    public Iterator\u003cAppointment\u003e iterator() {","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"ararchch"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"ararchch"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"ararchch"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"ararchch"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"ararchch"},"content":"        if (!(other instanceof UniqueAppointmentList)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"ararchch"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"ararchch"},"content":"        UniqueAppointmentList otherUniqueAppointmentList \u003d (UniqueAppointmentList) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"ararchch"},"content":"        return internalList.equals(otherUniqueAppointmentList.internalList);","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"ararchch"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"ararchch"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"ararchch"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"ararchch"},"content":"        return internalList.toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"ararchch"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"ararchch"},"content":"    private boolean appointmentsAreUnique(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"ararchch"},"content":"        for (int i \u003d 0; i \u003c appointments.size() - 1; i++) {","lastModifiedDate":"2024-03-14"},{"lineNumber":142,"author":{"gitId":"ararchch"},"content":"            for (int j \u003d i + 1; j \u003c appointments.size(); j++) {","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"ararchch"},"content":"                if (appointments.get(i).isSameAppointment(appointments.get(j))) {","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"ararchch"},"content":"                    return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"ararchch"},"content":"                }","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"ararchch"},"content":"        return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":150,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ararchch":150}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/AppointmentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"public class AppointmentNotFoundException extends RuntimeException {","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"    public AppointmentNotFoundException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"        super(\"Unable to locate appointment\");","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"ararchch":10}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/DuplicateAppointmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":" * identity).","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"public class DuplicateAppointmentException extends RuntimeException {","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"    public DuplicateAppointmentException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"        super(\"Operation would result in duplicate appointments\");","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ararchch":11}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/InvalidAppointmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"public class InvalidAppointmentException extends RuntimeException {","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"    public InvalidAppointmentException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"        super(\"This appointment is invalid due to invalid inputs.\");","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"ararchch":11}},{"path":"src/main/java/seedu/address/model/person/DoB.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":" * Represents a Person\u0027s date of birth in the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDoB(String)}","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"public class DoB {","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"            \"Date of births should only contain numeric characters in the format yyyy-mm-dd\";","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"    /*","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    public final LocalDate dateOfBirth;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"     * Constructs a {@code DoB}.","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"     * @param dob A valid date of birth.","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"    public DoB(String dob) {","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"        requireNonNull(dob);","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"        checkArgument(isValidDoB(dob), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"        dateOfBirth \u003d LocalDate.parse(dob);","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"    public static boolean isValidDoB(String test) {","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"            LocalDate.parse(test);","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"        } catch (java.time.format.DateTimeParseException e) {","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"        return dateOfBirth.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"        if (!(other instanceof DoB)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"        DoB otherDoB \u003d (DoB) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"        return dateOfBirth.equals(otherDoB.dateOfBirth);","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"        return dateOfBirth.hashCode();","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":75}},{"path":"src/main/java/seedu/address/model/person/Doctor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":" * Represents a Doctor in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"public class Doctor extends Person {","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"    public Doctor(Nric nric, Name name, DoB dob, Phone phone) {","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"        super(Type.DOCTOR, nric, name, dob, phone);","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"officialchengyud"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"officialchengyud"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"        if (!(other instanceof Doctor)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"officialchengyud"},"content":"        Doctor otherPerson \u003d (Doctor) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"        return getNric().equals(otherPerson.getNric())","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"officialchengyud"},"content":"                \u0026\u0026 getName().equals(otherPerson.getName())","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"                \u0026\u0026 getDoB().equals(otherPerson.getDoB())","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"                \u0026\u0026 getPhone().equals(otherPerson.getPhone());","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"officialchengyud"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"        return Objects.hash(Type.DOCTOR, getNric(), getName(), getDoB(), getPhone());","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"officialchengyud"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"officialchengyud"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"officialchengyud"},"content":"                .add(\"type\", Type.DOCTOR)","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"officialchengyud"},"content":"                .add(\"nric\", getNric())","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"officialchengyud"},"content":"                .add(\"name\", getName())","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"officialchengyud"},"content":"                .add(\"dob\", getDoB())","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"officialchengyud"},"content":"                .add(\"phone\", getPhone())","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"officialchengyud"},"content":"                .toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Alteqa":1,"officialchengyud":58}},{"path":"src/main/java/seedu/address/model/person/DoctorNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":" * Tests that a {@code Patient}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":"public class DoctorNameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"    public DoctorNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"    public boolean test(Person doctor) {","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"        if (doctor.getType() !\u003d Type.DOCTOR) {","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":"        return keywords.stream()","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(doctor.getName().fullName, keyword));","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Alteqa"},"content":"        if (!(other instanceof DoctorNameContainsKeywordsPredicate)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"Alteqa"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Alteqa"},"content":"        DoctorNameContainsKeywordsPredicate otherPredicate \u003d (DoctorNameContainsKeywordsPredicate) other;","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"Alteqa"},"content":"        return keywords.equals(otherPredicate.keywords);","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Alteqa"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Alteqa"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Alteqa"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Alteqa"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Alteqa":48}},{"path":"src/main/java/seedu/address/model/person/Nric.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":" * Represents a Person\u0027s nric in the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNric(String)}","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"public class Nric {","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"            \"NRIC should only contain alphanumeric characters of length 9 and match the correct format.\";","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"    /*","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[STFGMstfgm][0-9]{7}[A-Za-z]$\";","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    public final String nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"     * Constructs a {@code NRIC}.","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"     * @param nric A valid nric.","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"    public Nric(String nric) {","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"        checkArgument(isValidNric(nric), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"    public static boolean isValidNric(String test) {","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"        return nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"        if (!(other instanceof Nric)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"        Nric otherNric \u003d (Nric) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"        return nric.equals(otherNric.nric);","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"        return nric.hashCode();","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":67}},{"path":"src/main/java/seedu/address/model/person/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":" * Represents a Patient in the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"public class Patient extends Person {","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"    public Patient(Nric nric, Name name, DoB dob, Phone phone) {","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"        super(Type.PATIENT, nric, name, dob, phone);","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"        if (!(other instanceof Patient)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"        Patient otherPerson \u003d (Patient) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"        return getNric().equals(otherPerson.getNric())","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"                \u0026\u0026 getName().equals(otherPerson.getName())","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"                \u0026\u0026 getDoB().equals(otherPerson.getDoB())","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"                \u0026\u0026 getPhone().equals(otherPerson.getPhone());","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"        return Objects.hash(Type.PATIENT, getNric(), getName(), getDoB(), getPhone());","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"                .add(\"type\", Type.PATIENT)","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"                .add(\"nric\", getNric())","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"                .add(\"name\", getName())","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"                .add(\"dob\", getDoB())","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"                .add(\"phone\", getPhone())","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"                .toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":59}},{"path":"src/main/java/seedu/address/model/person/PatientNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":" * Tests that a {@code Patient}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"public class PatientNameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    public PatientNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"    public boolean test(Person patient) {","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"        if (patient.getType() !\u003d Type.PATIENT) {","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"        return keywords.stream()","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(patient.getName().fullName, keyword));","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"        if (!(other instanceof PatientNameContainsKeywordsPredicate)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"        PatientNameContainsKeywordsPredicate otherPredicate \u003d (PatientNameContainsKeywordsPredicate) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"        return keywords.equals(otherPredicate.keywords);","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Kappaccinoh":48}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"public abstract class Person {","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    private final Type type;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"    private final Nric nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"    private final DoB dob;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    public Person(Type type, Nric nric, Name name, DoB dob, Phone phone) {","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"        requireAllNonNull(type, nric, name, dob, phone);","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"        this.dob \u003d dob;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"    public Type getType() {","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"        return type;","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"    public Nric getNric() {","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"        return nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    public DoB getDoB() {","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"        return dob;","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"                \u0026\u0026 otherPerson.getNric().equals(getNric());","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alfaloo":19,"-":39}},{"path":"src/main/java/seedu/address/model/person/Type.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":" * Enumeration representing different types of entities in the system.","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":" * This enum defines two constants: {@code PATIENT} and {@code DOCTOR},","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":" * which represent distinct roles or types of entities within the system.","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":" * The {@code toString()} method is overridden to return the name of the enum constant.","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"public enum Type {","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    PATIENT,","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    DOCTOR;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"        return name();","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":16}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"     * Check if list contains person with the nric in question.","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"     * @param nricToCheck String nric in questions","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"     * @return boolean indicating if person is in list","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"    public boolean containsNric(String nricToCheck) {","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"        requireNonNull(nricToCheck);","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"        return internalList.stream().anyMatch(x -\u003e x.getNric().equals(new Nric(nricToCheck)));","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":163,"author":{"gitId":"ararchch"},"content":"    public Person getPersonByNric(Nric nricObj) {","lastModifiedDate":"2024-03-14"},{"lineNumber":164,"author":{"gitId":"ararchch"},"content":"        ArrayList\u003cPerson\u003e personList \u003d new ArrayList\u003cPerson\u003e(internalList);","lastModifiedDate":"2024-03-14"},{"lineNumber":165,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":166,"author":{"gitId":"ararchch"},"content":"        for (Person p : personList) {","lastModifiedDate":"2024-03-14"},{"lineNumber":167,"author":{"gitId":"ararchch"},"content":"            if (p.getNric().equals(nricObj)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":168,"author":{"gitId":"ararchch"},"content":"                return p;","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":170,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":171,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":172,"author":{"gitId":"ararchch"},"content":"        throw new PersonNotFoundException();","lastModifiedDate":"2024-03-14"},{"lineNumber":173,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":151,"ararchch":23}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.DoB;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"            // new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"            //     new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"            //     getTagSet(\"friends\")),","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"            // new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"            //     new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"            //     getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"            // new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"            //     new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"            //     getTagSet(\"neighbours\")),","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"            // new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"            //     new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"            //     getTagSet(\"family\")),","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"            // new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"            //     new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"            //     getTagSet(\"classmates\")),","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"            // new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"            //     new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"            //     getTagSet(\"colleagues\"))","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"            new Patient(new Nric(\"S1234567A\"), new Name(\"John Doe\"), new DoB(\"2002-01-30\"), new Phone(\"92624417\")),","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"            new Patient(new Nric(\"S0123456A\"), new Name(\"David Li\"), new DoB(\"2003-04-28\"), new Phone(\"87438807\"))","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"alfaloo":23,"-":40}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.DoB;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"    private final String type;","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"    private final String nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"    private final String dob;","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"type\") String type, @JsonProperty(\"nric\") String nric,","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"                             @JsonProperty(\"name\") String name, @JsonProperty(\"dob\") String dob,","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"                             @JsonProperty(\"phone\") String phone) {","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"        this.dob \u003d dob;","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"        type \u003d source.getType().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"        nric \u003d source.getNric().nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"        dob \u003d source.getDoB().dateOfBirth.toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"        if (nric \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"        if (!Nric.isValidNric(nric)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"            throw new IllegalValueException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"        final Nric modelNric \u003d new Nric(nric);","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"        if (dob \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, DoB.class.getSimpleName()));","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"        if (!DoB.isValidDoB(dob)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"            throw new IllegalValueException(DoB.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"        final DoB modelDoB \u003d new DoB(dob);","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"        switch (type) {","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"        case \"PATIENT\":","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"            return new Patient(modelNric, modelName, modelDoB, modelPhone);","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"officialchengyud"},"content":"        case \"DOCTOR\":","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"officialchengyud"},"content":"            return new Doctor(modelNric, modelName, modelDoB, modelPhone);","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"        default:","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"            break;","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"        return null;","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"alfaloo":35,"officialchengyud":3,"-":69}},{"path":"src/main/java/seedu/address/ui/AppointmentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":" * An UI component that displays information of a {@code Appointment}.","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"public class AppointmentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"    private static final String FXML \u003d \"AppointmentListCard.fxml\";","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"    public final Appointment appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    private HBox cardPane;","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"    private Label id;","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"    private Label doctorNric;","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"    private Label patientNric;","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"    private Label appointmentDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"    private Label appointmentId;","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"     * Creates a {@code AppointmentCard} with the given {@code Appointment} and index to display.","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"    public AppointmentCard(Appointment appt, int displayedIndex) {","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"        super(FXML);","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"        this.appointment \u003d appt;","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"        doctorNric.setText(appointment.getDoctorNric().nric);","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"        patientNric.setText(appointment.getPatientNric().nric);","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"        appointmentDate.setText(appointment.getAppointmentDate().toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"        appointmentId.setText(appointment.getAppointmentId().appointmentId);","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Kappaccinoh":1,"ararchch":50}},{"path":"src/main/java/seedu/address/ui/AppointmentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":" * Panel containing the list of Appointments.","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"public class AppointmentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"    private static final String FXML \u003d \"AppointmentListPanel.fxml\";","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AppointmentListPanel.class);","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    private ListView\u003cAppointment\u003e appointmentListView;","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"     * Creates a {@code AppointmentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"    public AppointmentListPanel(ObservableList\u003cAppointment\u003e appointmentList) {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"        super(FXML);","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"        appointmentListView.setItems(appointmentList);","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"        appointmentListView.setCellFactory(listView -\u003e new AppointmentListViewCell());","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Appointment} using a {@code AppointmentCard}.","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"    class AppointmentListViewCell extends ListCell\u003cAppointment\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"        protected void updateItem(Appointment appt, boolean empty) {","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"            super.updateItem(appt, empty);","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"            if (empty || appt \u003d\u003d null) {","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"                setGraphic(null);","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"                setText(null);","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"            } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"                setGraphic(new AppointmentCard(appt, getIndex() + 1).getRoot());","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"ararchch":49}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"    private AppointmentListPanel appointmentListPanel;","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"    private StackPane appointmentListPanelPlaceholder;","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"Kappaccinoh"},"content":"        appointmentListPanel \u003d new AppointmentListPanel(logic.getFilteredAppointmentList());","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"ararchch"},"content":"        appointmentListPanelPlaceholder.getChildren().add(appointmentListPanel.getRoot());","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Kappaccinoh":1,"-":196,"ararchch":7}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"    private Label type;","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"    private Label nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"    private Label name;","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"    @FXML","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"    private Label dob;","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    private Label phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"        type.setText(person.getType().toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"        nric.setText(person.getNric().nric);","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"        dob.setText(person.getDoB().toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"alfaloo":9,"-":45}},{"path":"src/main/resources/view/AppointmentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"        \u003cLabel fx:id\u003d\"appointmentId\" text\u003d\"\\$appointmentId\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"      \u003cLabel fx:id\u003d\"doctorNric\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$doctorNric\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"      \u003cLabel fx:id\u003d\"patientNric\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$patientNric\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"      \u003cLabel fx:id\u003d\"appointmentDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$appointmentDate\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"ararchch":35}},{"path":"src/main/resources/view/AppointmentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"  \u003cListView fx:id\u003d\"appointmentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"ararchch":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"         title\u003d\"MediCLI\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"        \u003cSplitPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"          \u003citems\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"              \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"            \u003cVBox fx:id\u003d\"appointmentList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"              \u003cStackPane fx:id\u003d\"appointmentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"          \u003c/items\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"alfaloo":1,"-":60,"ararchch":10}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"      \u003cLabel fx:id\u003d\"type\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$type\" /\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"      \u003cLabel fx:id\u003d\"nric\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nric\" /\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"      \u003cLabel fx:id\u003d\"dob\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dob\" /\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"alfaloo":3,"-":34}},{"path":"src/test/java/seedu/address/commons/util/IdUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import static seedu.address.commons.util.IdUtil.deleteId;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import static seedu.address.commons.util.IdUtil.generateNewId;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import static seedu.address.commons.util.IdUtil.hasId;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import static seedu.address.commons.util.IdUtil.initalMapUpdate;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"import jdk.jshell.spi.ExecutionControl;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"class IdUtilTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"    private static final String APPT_REGEX \u003d \"a\\\\d{8}\";","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    void generateNewId_validEntity_generatesValidId() {","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"        String id \u003d generateNewId(IdUtil.Entities.APPOINTMENT);","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"        assertTrue(Pattern.compile(APPT_REGEX).matcher(id).find());","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"    void initialMapUpdate_validInput_throwsNotImplementedException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"        assertThrows(ExecutionControl.NotImplementedException.class, () -\u003e initalMapUpdate());","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"    void deleteId_validIdAppointment_deletesId() {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"        String id \u003d generateNewId(IdUtil.Entities.APPOINTMENT);","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"        assertTrue(hasId(id));","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"        deleteId(id);","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"        assertFalse(hasId(id));","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"    void deleteId_validIdPatient_deletesId() {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"        String id \u003d generateNewId(IdUtil.Entities.PATIENT);","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"        assertTrue(hasId(id));","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"        deleteId(id);","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"        assertFalse(hasId(id));","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"    void deleteId_validIdDoctor_deletesId() {","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"        String id \u003d generateNewId(IdUtil.Entities.DOCTOR);","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"        assertTrue(hasId(id));","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"        deleteId(id);","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"        assertFalse(hasId(id));","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"ararchch":55}},{"path":"src/test/java/seedu/address/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.testutil.SerializableTestClass;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TestUtil;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"    public void jsonUtil_readJsonStringToObjectInstance_correctObject() throws IOException {","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"        String jsonString \u003d SerializableTestClass.JSON_STRING_REPRESENTATION;","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil.fromJsonString(jsonString, SerializableTestClass.class);","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"    public void jsonUtil_writeThenReadObjectToJson_correctObject() throws IOException {","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"        SerializableTestClass originalObject \u003d new SerializableTestClass();","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"        originalObject.setTestValues();","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"        // Write the object to a JSON string","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"        String jsonString \u003d JsonUtil.toJsonString(originalObject);","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"        // Read the JSON string back to an object","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"        SerializableTestClass deserializedObject \u003d JsonUtil.fromJsonString(jsonString, SerializableTestClass.class);","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"        // Ensure the deserialized object matches the original object","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(deserializedObject.getName(), originalObject.getName());","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(deserializedObject.getListOfLocalDateTimes(), originalObject.getListOfLocalDateTimes());","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(deserializedObject.getMapOfIntegerToString(), originalObject.getMapOfIntegerToString());","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Kappaccinoh":26,"-":43}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOB_DESC_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"import static seedu.address.testutil.TypicalPersons.BROWN;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.AppointmentDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"    //","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"    //    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"    //    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"    //        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"    //                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"    //    }","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"    //","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"    //    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"    //    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"    //        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"    //                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"    //    }","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"Kappaccinoh"},"content":"    public void getFilteredAppointmentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"Kappaccinoh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredAppointmentList().remove(0));","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"    public void getAppointmentList_getList_listIsNotNull() {","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"        model.addPerson(ALICE);","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"        model.addPerson(BROWN);","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"        model.addAppointment(new Appointment(BROWN.getNric(), ALICE.getNric(), new AppointmentDate(\"2024-11-11\")));","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(model.getFilteredAppointmentList() !\u003d null);","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(model.getFilteredAppointmentList().size() \u003d\u003d 1);","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"    public void getAddressBook_getBook_bookIsNotNull() {","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"ararchch"},"content":"        assertTrue(model.getAddressBook() !\u003d null);","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"ararchch"},"content":"    public void getAddressBookFilePath_getPath_pathIsNotNull() {","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"ararchch"},"content":"        assertTrue(model.getAddressBookFilePath() !\u003d null);","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"ararchch"},"content":"    public void getGuiSettings_getSettings_settingsIsNotNull() {","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"ararchch"},"content":"        assertTrue(model.getGuiSettings() !\u003d null);","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"ararchch"},"content":"    public void setGuiSettings_setSettings_settingsIsSetWithNoError() {","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"ararchch"},"content":"        GuiSettings settings \u003d new GuiSettings(0.1, 0.1, 1, 1);","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"ararchch"},"content":"        model.setGuiSettings(settings);","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"ararchch"},"content":"        assertEquals(model.getGuiSettings(), settings);","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":149,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":158,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":167,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":181,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":214,"author":{"gitId":"ararchch"},"content":"        String addCommand \u003d AddPatientCommand.COMMAND_WORD + NRIC_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":215,"author":{"gitId":"ararchch"},"content":"                + DOB_DESC_AMY + PHONE_DESC_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":216,"author":{"gitId":"alfaloo"},"content":"        Person expectedPerson \u003d new PatientBuilder(ALICE).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"alfaloo":14,"Kappaccinoh":4,"-":160,"ararchch":43}},{"path":"src/test/java/seedu/address/logic/MessagesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.logic;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"class MessagesTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"    public void format_validPatient_stringFormattedPerson() {","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"        Person patient \u003d new PatientBuilder().build();","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(Messages.format(patient), \"; NRIC: \"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"                + patient.getNric()","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"                + \"; Name: \"","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"                + patient.getName()","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"                + \"; DoB: \"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"                + patient.getDoB()","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"                + \"; Phone: \"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"                + patient.getPhone()","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"                + \";\");","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"    public void format_validDoctor_stringFormattedPerson() {","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"        Person doctor \u003d new DoctorBuilder().build();","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(Messages.format(doctor), \"; NRIC: \"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"                + doctor.getNric()","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"                + \"; Name: \"","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"                + doctor.getName()","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"                + \"; DoB: \"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"                + doctor.getDoB()","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"                + \"; Phone: \"","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"                + doctor.getPhone()","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"                + \";\");","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"    public void format_validAppointment_stringFormattedAppointment() {","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"        Appointment a \u003d new AppointmentBuilder().build();","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"        assertEquals(Messages.format(a), \"Date: \"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"                + a.getAppointmentDate()","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"                + \"; Doctor: \"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"                + a.getDoctorNric()","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"                + \"; Patient: \"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"                + a.getPatientNric()","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"                + \"; ID: \"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"                + a.getAppointmentId());","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"Kappaccinoh":32,"ararchch":23}},{"path":"src/test/java/seedu/address/logic/commands/AddAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import static seedu.address.testutil.TypicalPersons.BROWN;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.AppointmentDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.exceptions.InvalidAppointmentException;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"class AddAppointmentCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    void execute_validCommand_executesCommand() throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(BROWN);","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"        Appointment appt \u003d new Appointment(BROWN.getNric(), ALICE.getNric(), new AppointmentDate(\"2024-09-01\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"        AddAppointmentCommand ad \u003d new AddAppointmentCommand(appt);","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"        CommandResult commandResult \u003d ad.execute(modelManager);","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(modelManager.getFilteredAppointmentList().size() \u003d\u003d 1);","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"    void execute_invalidCommand_throwsInvalidAppointmentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(BROWN);","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"        Appointment appt \u003d new Appointment(ALICE.getNric(), BROWN.getNric(), new AppointmentDate(\"2024-09-01\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"        AddAppointmentCommand ad \u003d new AddAppointmentCommand(appt);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"        assertThrows(InvalidAppointmentException.class, () -\u003e ad.execute(modelManager));","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"    void execute_invalidCommandAppointmentExists_throwsCommandException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(BROWN);","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"        Appointment appt \u003d new Appointment(BROWN.getNric(), ALICE.getNric(), new AppointmentDate(\"2024-09-01\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"        modelManager.addAppointment(appt);","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"        AddAppointmentCommand ad \u003d new AddAppointmentCommand(appt);","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"        assertThrows(CommandException.class, () -\u003e ad.execute(modelManager));","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"    void equals_sameCommandButDifferentObject_returnsTrue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(BROWN);","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"        Appointment appt \u003d new Appointment(BROWN.getNric(), ALICE.getNric(), new AppointmentDate(\"2024-09-01\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"        AddAppointmentCommand ad \u003d new AddAppointmentCommand(appt);","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"        AddAppointmentCommand ad2 \u003d new AddAppointmentCommand(appt);","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"        assertTrue(ad.equals(ad2));","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"    void equals_sameCommandSameObject_returnsTrue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(BROWN);","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"        Appointment appt \u003d new Appointment(BROWN.getNric(), ALICE.getNric(), new AppointmentDate(\"2024-09-01\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"        AddAppointmentCommand ad \u003d new AddAppointmentCommand(appt);","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"        assertTrue(ad.equals(ad));","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"    void equals_differentClass_returnsFalse() {","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(BROWN);","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"        Appointment appt \u003d new Appointment(BROWN.getNric(), ALICE.getNric(), new AppointmentDate(\"2024-09-01\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"        AddAppointmentCommand ad \u003d new AddAppointmentCommand(appt);","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"        assertFalse(ad.equals(\"hi\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"    void toString_returnsValidString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(BROWN);","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"        Appointment appt \u003d new Appointment(BROWN.getNric(), ALICE.getNric(), new AppointmentDate(\"2024-09-01\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"        AddAppointmentCommand ad \u003d new AddAppointmentCommand(appt);","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"        assertEquals(ad.toString(), \"seedu.address.logic.commands.AddAppointmentCommand{toAdd\u003d\"","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"                + appt.toString()","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"                + \"}\");","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"Kappaccinoh":1,"ararchch":88}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"//import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"//import java.util.Arrays;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"//import java.util.function.Predicate;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"//import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"//public class AddCommandTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"//    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"//    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"//        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"//        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"//        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"//                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"//    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"//        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"//        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"//        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"//        () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"//    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"//        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"//        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"//        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"//        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"//        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"//        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"//        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"//    public void toStringMethod() {","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"//        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"//        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"//    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"//     * A default model stub that have all of the methods failing.","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"//     */","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"//    private class ModelStub implements Model {","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"//        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"//        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"//        }","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"//        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"//        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"//        }","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"//        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"//        public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"//        }","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"//        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"//        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"//        }","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"alfaloo"},"content":"//        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"alfaloo"},"content":"//        public Path getAddressBookFilePath() {","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"alfaloo"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"alfaloo"},"content":"//        }","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"alfaloo"},"content":"//        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"alfaloo"},"content":"//        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"alfaloo"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"alfaloo"},"content":"//        }","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"alfaloo"},"content":"//        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"alfaloo"},"content":"//        public void addPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"alfaloo"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"alfaloo"},"content":"//        }","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"alfaloo"},"content":"//        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"alfaloo"},"content":"//        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"alfaloo"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"alfaloo"},"content":"//        }","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"alfaloo"},"content":"//        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"alfaloo"},"content":"//        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"alfaloo"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"alfaloo"},"content":"//        }","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"alfaloo"},"content":"//        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"//        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"alfaloo"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"alfaloo"},"content":"//        }","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"alfaloo"},"content":"//        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"alfaloo"},"content":"//        public void deletePerson(Person target) {","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"alfaloo"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"alfaloo"},"content":"//        }","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"alfaloo"},"content":"//        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"alfaloo"},"content":"//        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"alfaloo"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"alfaloo"},"content":"//        }","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"alfaloo"},"content":"//        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"alfaloo"},"content":"//        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"alfaloo"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"alfaloo"},"content":"//        }","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":157,"author":{"gitId":"alfaloo"},"content":"//        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":158,"author":{"gitId":"alfaloo"},"content":"//        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"alfaloo"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"alfaloo"},"content":"//        }","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"alfaloo"},"content":"//    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"alfaloo"},"content":"//     * A Model stub that contains a single person.","lastModifiedDate":"2024-03-11"},{"lineNumber":165,"author":{"gitId":"alfaloo"},"content":"//     */","lastModifiedDate":"2024-03-11"},{"lineNumber":166,"author":{"gitId":"alfaloo"},"content":"//    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2024-03-11"},{"lineNumber":167,"author":{"gitId":"alfaloo"},"content":"//        private final Person person;","lastModifiedDate":"2024-03-11"},{"lineNumber":168,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":169,"author":{"gitId":"alfaloo"},"content":"//        ModelStubWithPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":170,"author":{"gitId":"alfaloo"},"content":"//            requireNonNull(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":171,"author":{"gitId":"alfaloo"},"content":"//            this.person \u003d person;","lastModifiedDate":"2024-03-11"},{"lineNumber":172,"author":{"gitId":"alfaloo"},"content":"//        }","lastModifiedDate":"2024-03-11"},{"lineNumber":173,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":174,"author":{"gitId":"alfaloo"},"content":"//        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":175,"author":{"gitId":"alfaloo"},"content":"//        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":176,"author":{"gitId":"alfaloo"},"content":"//            requireNonNull(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":177,"author":{"gitId":"alfaloo"},"content":"//            return this.person.isSamePerson(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":178,"author":{"gitId":"alfaloo"},"content":"//        }","lastModifiedDate":"2024-03-11"},{"lineNumber":179,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":180,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":181,"author":{"gitId":"alfaloo"},"content":"//    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":182,"author":{"gitId":"alfaloo"},"content":"//     * A Model stub that always accept the person being added.","lastModifiedDate":"2024-03-11"},{"lineNumber":183,"author":{"gitId":"alfaloo"},"content":"//     */","lastModifiedDate":"2024-03-11"},{"lineNumber":184,"author":{"gitId":"alfaloo"},"content":"//    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2024-03-11"},{"lineNumber":185,"author":{"gitId":"alfaloo"},"content":"//        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-11"},{"lineNumber":186,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":187,"author":{"gitId":"alfaloo"},"content":"//        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":188,"author":{"gitId":"alfaloo"},"content":"//        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":189,"author":{"gitId":"alfaloo"},"content":"//            requireNonNull(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":190,"author":{"gitId":"alfaloo"},"content":"//            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":191,"author":{"gitId":"alfaloo"},"content":"//        }","lastModifiedDate":"2024-03-11"},{"lineNumber":192,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":193,"author":{"gitId":"alfaloo"},"content":"//        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":194,"author":{"gitId":"alfaloo"},"content":"//        public void addPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":195,"author":{"gitId":"alfaloo"},"content":"//            requireNonNull(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":196,"author":{"gitId":"alfaloo"},"content":"//            personsAdded.add(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":197,"author":{"gitId":"alfaloo"},"content":"//        }","lastModifiedDate":"2024-03-11"},{"lineNumber":198,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":199,"author":{"gitId":"alfaloo"},"content":"//        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":200,"author":{"gitId":"alfaloo"},"content":"//        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-11"},{"lineNumber":201,"author":{"gitId":"alfaloo"},"content":"//            return new AddressBook();","lastModifiedDate":"2024-03-11"},{"lineNumber":202,"author":{"gitId":"alfaloo"},"content":"//        }","lastModifiedDate":"2024-03-11"},{"lineNumber":203,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":204,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":205,"author":{"gitId":"alfaloo"},"content":"//}","lastModifiedDate":"2024-03-11"},{"lineNumber":206,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-11"},{"lineNumber":231,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":232,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":233,"author":{"gitId":"alfaloo"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2024-03-11"},{"lineNumber":245,"author":{"gitId":"alfaloo"},"content":"        Person validPerson \u003d new PatientBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2024-03-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2024-03-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2024-03-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":256,"author":{"gitId":"alfaloo"},"content":"        Person validPerson \u003d new PatientBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2024-03-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":265,"author":{"gitId":"alfaloo"},"content":"        Person alice \u003d new PatientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2024-03-11"},{"lineNumber":266,"author":{"gitId":"alfaloo"},"content":"        Person bob \u003d new PatientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2024-03-11"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2024-03-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2024-03-11"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2024-03-11"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2024-03-11"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2024-03-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2024-03-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2024-03-11"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-11"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2024-03-11"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":295,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2024-03-11"},{"lineNumber":296,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2024-03-11"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-11"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-11"},{"lineNumber":305,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-03-11"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-03-11"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2024-03-11"},{"lineNumber":320,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-03-11"},{"lineNumber":325,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2024-03-11"},{"lineNumber":335,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-11"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":345,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2024-03-11"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-11"},{"lineNumber":355,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-03-11"},{"lineNumber":360,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-11"},{"lineNumber":365,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":367,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":368,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":369,"author":{"gitId":"Kappaccinoh"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2024-03-20"},{"lineNumber":370,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":371,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":372,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":373,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":374,"author":{"gitId":"ararchch"},"content":"        public boolean isValidAppointment(Appointment appt) {","lastModifiedDate":"2024-03-16"},{"lineNumber":375,"author":{"gitId":"ararchch"},"content":"            //TODO: implement","lastModifiedDate":"2024-03-16"},{"lineNumber":376,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":377,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":378,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":379,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":380,"author":{"gitId":"ararchch"},"content":"        public void addAppointment(Appointment appt) {","lastModifiedDate":"2024-03-16"},{"lineNumber":381,"author":{"gitId":"ararchch"},"content":"            //TODO: implement","lastModifiedDate":"2024-03-16"},{"lineNumber":382,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":383,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":384,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":385,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":386,"author":{"gitId":"ararchch"},"content":"        public void deleteAppointment(Appointment appt) {","lastModifiedDate":"2024-03-16"},{"lineNumber":387,"author":{"gitId":"ararchch"},"content":"            //TODO: implement","lastModifiedDate":"2024-03-16"},{"lineNumber":388,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":389,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":390,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":391,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":392,"author":{"gitId":"ararchch"},"content":"        public boolean hasAppointment(Appointment appt) {","lastModifiedDate":"2024-03-16"},{"lineNumber":393,"author":{"gitId":"ararchch"},"content":"            //TODO: implement","lastModifiedDate":"2024-03-16"},{"lineNumber":394,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":395,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":396,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":397,"author":{"gitId":"Kappaccinoh"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":398,"author":{"gitId":"Kappaccinoh"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e appointment) {","lastModifiedDate":"2024-03-20"},{"lineNumber":399,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":400,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":404,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2024-03-11"},{"lineNumber":405,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2024-03-11"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2024-03-11"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":410,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":411,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2024-03-11"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":414,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":416,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":417,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":418,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":422,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2024-03-11"},{"lineNumber":423,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2024-03-11"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-11"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":427,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":429,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":430,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":431,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":433,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":434,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":435,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":436,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":437,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":439,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":440,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-11"},{"lineNumber":441,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2024-03-11"},{"lineNumber":442,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":443,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":445,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":211,"Kappaccinoh":5,"-":199,"ararchch":30}},{"path":"src/test/java/seedu/address/logic/commands/AddDoctorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.testutil.TypicalPersons.DAMES;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"officialchengyud"},"content":"public class AddDoctorCommandTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"    public void constructor_nullDoctor_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddDoctorCommand(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"    public void execute_doctorAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"        Doctor validPerson \u003d new DoctorBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"        CommandResult commandResult \u003d new AddDoctorCommand(validPerson).execute(modelStub);","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"officialchengyud"},"content":"        assertEquals(String.format(AddDoctorCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"officialchengyud"},"content":"    public void execute_duplicateDoctor_throwsCommandException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"officialchengyud"},"content":"        Doctor validPerson \u003d new DoctorBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"officialchengyud"},"content":"        AddDoctorCommand addDoctorCommand \u003d new AddDoctorCommand(validPerson);","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"officialchengyud"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"officialchengyud"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"officialchengyud"},"content":"                AddDoctorCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addDoctorCommand.execute(modelStub));","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"officialchengyud"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"officialchengyud"},"content":"        Doctor alice \u003d new DoctorBuilder().withName(\"Alice\").build();","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"officialchengyud"},"content":"        Doctor bob \u003d new DoctorBuilder().withName(\"Bob\").build();","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"officialchengyud"},"content":"        AddDoctorCommand addAliceCommand \u003d new AddDoctorCommand(alice);","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"officialchengyud"},"content":"        AddDoctorCommand addBobCommand \u003d new AddDoctorCommand(bob);","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"officialchengyud"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"officialchengyud"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"officialchengyud"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"officialchengyud"},"content":"        AddDoctorCommand addAliceCommandCopy \u003d new AddDoctorCommand(alice);","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"officialchengyud"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"officialchengyud"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"officialchengyud"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"officialchengyud"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"officialchengyud"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"officialchengyud"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"officialchengyud"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"officialchengyud"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"Alteqa"},"content":"        AddDoctorCommand addDoctorCommand \u003d new AddDoctorCommand((Doctor) DAMES);","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"Alteqa"},"content":"        String expected \u003d AddDoctorCommand.class.getCanonicalName() + \"{toAdd\u003d\" + DAMES + \"}\";","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"officialchengyud"},"content":"        assertEquals(expected, addDoctorCommand.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"officialchengyud"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"officialchengyud"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"officialchengyud"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"officialchengyud"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"officialchengyud"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"officialchengyud"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"officialchengyud"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"officialchengyud"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"officialchengyud"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"officialchengyud"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"officialchengyud"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"officialchengyud"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"officialchengyud"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"officialchengyud"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":155,"author":{"gitId":"officialchengyud"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"officialchengyud"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":164,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":165,"author":{"gitId":"Kappaccinoh"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":167,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":168,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":170,"author":{"gitId":"ararchch"},"content":"        public boolean isValidAppointment(Appointment appt) {","lastModifiedDate":"2024-03-16"},{"lineNumber":171,"author":{"gitId":"ararchch"},"content":"            //TODO: implement","lastModifiedDate":"2024-03-16"},{"lineNumber":172,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":173,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":174,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":175,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":176,"author":{"gitId":"ararchch"},"content":"        public void addAppointment(Appointment appt) {","lastModifiedDate":"2024-03-16"},{"lineNumber":177,"author":{"gitId":"ararchch"},"content":"            //TODO: implement","lastModifiedDate":"2024-03-16"},{"lineNumber":178,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":179,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":180,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":181,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":182,"author":{"gitId":"ararchch"},"content":"        public void deleteAppointment(Appointment appt) {","lastModifiedDate":"2024-03-16"},{"lineNumber":183,"author":{"gitId":"ararchch"},"content":"            //TODO: implement","lastModifiedDate":"2024-03-16"},{"lineNumber":184,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":186,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":187,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":188,"author":{"gitId":"ararchch"},"content":"        public boolean hasAppointment(Appointment appt) {","lastModifiedDate":"2024-03-16"},{"lineNumber":189,"author":{"gitId":"ararchch"},"content":"            //TODO: implement","lastModifiedDate":"2024-03-16"},{"lineNumber":190,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":191,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":192,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":193,"author":{"gitId":"Kappaccinoh"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"Kappaccinoh"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e appointment) {","lastModifiedDate":"2024-03-20"},{"lineNumber":195,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":196,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":197,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":198,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":199,"author":{"gitId":"officialchengyud"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2024-03-12"},{"lineNumber":200,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":201,"author":{"gitId":"officialchengyud"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2024-03-12"},{"lineNumber":202,"author":{"gitId":"officialchengyud"},"content":"        private final Person person;","lastModifiedDate":"2024-03-12"},{"lineNumber":203,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":204,"author":{"gitId":"officialchengyud"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2024-03-12"},{"lineNumber":205,"author":{"gitId":"officialchengyud"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-12"},{"lineNumber":206,"author":{"gitId":"officialchengyud"},"content":"            this.person \u003d person;","lastModifiedDate":"2024-03-12"},{"lineNumber":207,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":208,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":209,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":210,"author":{"gitId":"officialchengyud"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-12"},{"lineNumber":211,"author":{"gitId":"officialchengyud"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-12"},{"lineNumber":212,"author":{"gitId":"officialchengyud"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2024-03-12"},{"lineNumber":213,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":214,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":215,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":216,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":217,"author":{"gitId":"officialchengyud"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2024-03-12"},{"lineNumber":218,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":219,"author":{"gitId":"officialchengyud"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2024-03-12"},{"lineNumber":220,"author":{"gitId":"officialchengyud"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-12"},{"lineNumber":221,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":222,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":223,"author":{"gitId":"officialchengyud"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-12"},{"lineNumber":224,"author":{"gitId":"officialchengyud"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-12"},{"lineNumber":225,"author":{"gitId":"officialchengyud"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2024-03-12"},{"lineNumber":226,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":227,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":228,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":229,"author":{"gitId":"officialchengyud"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-12"},{"lineNumber":230,"author":{"gitId":"officialchengyud"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-12"},{"lineNumber":231,"author":{"gitId":"officialchengyud"},"content":"            personsAdded.add(person);","lastModifiedDate":"2024-03-12"},{"lineNumber":232,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":233,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":234,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":235,"author":{"gitId":"officialchengyud"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-12"},{"lineNumber":236,"author":{"gitId":"officialchengyud"},"content":"            return new AddressBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":237,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":238,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":239,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":240,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Alteqa":3,"officialchengyud":203,"Kappaccinoh":5,"ararchch":29}},{"path":"src/test/java/seedu/address/logic/commands/AddPatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"public class AddPatientCommandTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"    public void constructor_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPatientCommand(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"    public void execute_patientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"        Patient validPerson \u003d new PatientBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"        CommandResult commandResult \u003d new AddPatientCommand(validPerson).execute(modelStub);","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"        assertEquals(String.format(AddPatientCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"    public void execute_duplicatePatient_throwsCommandException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"        Patient validPerson \u003d new PatientBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"        AddPatientCommand addPatientCommand \u003d new AddPatientCommand(validPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"                AddPatientCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addPatientCommand.execute(modelStub));","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"        Patient alice \u003d new PatientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"        Patient bob \u003d new PatientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"        AddPatientCommand addAliceCommand \u003d new AddPatientCommand(alice);","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"        AddPatientCommand addBobCommand \u003d new AddPatientCommand(bob);","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"        AddPatientCommand addAliceCommandCopy \u003d new AddPatientCommand(alice);","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"        AddPatientCommand addPatientCommand \u003d new AddPatientCommand((Patient) ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"        String expected \u003d AddPatientCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"        assertEquals(expected, addPatientCommand.toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"alfaloo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"alfaloo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"alfaloo"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"alfaloo"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"alfaloo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"alfaloo"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"alfaloo"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"alfaloo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"alfaloo"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"alfaloo"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"alfaloo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"alfaloo"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"alfaloo"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"alfaloo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"alfaloo"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"alfaloo"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"alfaloo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"alfaloo"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"alfaloo"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"alfaloo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"alfaloo"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"alfaloo"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"alfaloo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"alfaloo"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"alfaloo"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"alfaloo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"alfaloo"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"alfaloo"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"alfaloo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":157,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":158,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"alfaloo"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"alfaloo"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"alfaloo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":164,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":165,"author":{"gitId":"Kappaccinoh"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":167,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":168,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":170,"author":{"gitId":"ararchch"},"content":"        public boolean isValidAppointment(Appointment appt) {","lastModifiedDate":"2024-03-16"},{"lineNumber":171,"author":{"gitId":"ararchch"},"content":"            //TODO: implement","lastModifiedDate":"2024-03-16"},{"lineNumber":172,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":173,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":174,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":175,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":176,"author":{"gitId":"ararchch"},"content":"        public void addAppointment(Appointment appt) {","lastModifiedDate":"2024-03-16"},{"lineNumber":177,"author":{"gitId":"ararchch"},"content":"            //TODO: implement","lastModifiedDate":"2024-03-16"},{"lineNumber":178,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":179,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":180,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":181,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":182,"author":{"gitId":"ararchch"},"content":"        public void deleteAppointment(Appointment appt) {","lastModifiedDate":"2024-03-16"},{"lineNumber":183,"author":{"gitId":"ararchch"},"content":"            //TODO: implement","lastModifiedDate":"2024-03-16"},{"lineNumber":184,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":186,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":187,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":188,"author":{"gitId":"ararchch"},"content":"        public boolean hasAppointment(Appointment appt) {","lastModifiedDate":"2024-03-16"},{"lineNumber":189,"author":{"gitId":"ararchch"},"content":"            //TODO: implement","lastModifiedDate":"2024-03-16"},{"lineNumber":190,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":191,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":192,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":193,"author":{"gitId":"Kappaccinoh"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"Kappaccinoh"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e appointment) {","lastModifiedDate":"2024-03-20"},{"lineNumber":195,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":196,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":197,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":198,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":199,"author":{"gitId":"alfaloo"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2024-03-11"},{"lineNumber":200,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":201,"author":{"gitId":"alfaloo"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2024-03-11"},{"lineNumber":202,"author":{"gitId":"alfaloo"},"content":"        private final Person person;","lastModifiedDate":"2024-03-11"},{"lineNumber":203,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":204,"author":{"gitId":"alfaloo"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":205,"author":{"gitId":"alfaloo"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":206,"author":{"gitId":"alfaloo"},"content":"            this.person \u003d person;","lastModifiedDate":"2024-03-11"},{"lineNumber":207,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":208,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":209,"author":{"gitId":"alfaloo"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":210,"author":{"gitId":"alfaloo"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":211,"author":{"gitId":"alfaloo"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":212,"author":{"gitId":"alfaloo"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":213,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":214,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":215,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":216,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":217,"author":{"gitId":"alfaloo"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2024-03-11"},{"lineNumber":218,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":219,"author":{"gitId":"alfaloo"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2024-03-11"},{"lineNumber":220,"author":{"gitId":"alfaloo"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-11"},{"lineNumber":221,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":222,"author":{"gitId":"alfaloo"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":223,"author":{"gitId":"alfaloo"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":224,"author":{"gitId":"alfaloo"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":225,"author":{"gitId":"alfaloo"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":226,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":227,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":228,"author":{"gitId":"alfaloo"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":229,"author":{"gitId":"alfaloo"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":230,"author":{"gitId":"alfaloo"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":231,"author":{"gitId":"alfaloo"},"content":"            personsAdded.add(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":232,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":233,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":234,"author":{"gitId":"alfaloo"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":235,"author":{"gitId":"alfaloo"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-11"},{"lineNumber":236,"author":{"gitId":"alfaloo"},"content":"            return new AddressBook();","lastModifiedDate":"2024-03-11"},{"lineNumber":237,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":238,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":239,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":240,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":206,"Kappaccinoh":5,"ararchch":29}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"    public static final String VALID_NRIC_AMY \u003d \"S1234567A\";","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    public static final String VALID_NRIC_BOB \u003d \"F1234567B\";","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"officialchengyud"},"content":"    public static final String VALID_NAME_JAMES \u003d \"James Tasman\";","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"    public static final String VALID_NAME_BROWN \u003d \"Brown East\";","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"    public static final String VALID_DOB_AMY \u003d \"2002-03-04\";","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"    public static final String VALID_DOB_BOB \u003d \"1999-06-07\";","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"    public static final String VALID_DOB_JAMES \u003d \"2000-03-02\";","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"    public static final String VALID_DOB_BROWN \u003d \"2000-05-02\";","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"    public static final String VALID_PHONE_JAMES \u003d \"11112222\";","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"officialchengyud"},"content":"    public static final String VALID_PHONE_BROWN \u003d \"12312312\";","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"    public static final String NRIC_DESC_AMY \u003d \" \" + PREFIX_NRIC + VALID_NRIC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"    public static final String NRIC_DESC_BOB \u003d \" \" + PREFIX_NRIC + VALID_NRIC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"    public static final String DOB_DESC_AMY \u003d \" \" + PREFIX_DOB + VALID_DOB_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"    public static final String DOB_DESC_BOB \u003d \" \" + PREFIX_DOB + VALID_DOB_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"    public static final String INVALID_NRIC_DESC \u003d \" \" + PREFIX_NRIC + \"A0983\";","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"    public static final String INVALID_DOB_DESC \u003d \" \" + PREFIX_DOB + \"22-03-2009\";","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"alfaloo":12,"officialchengyud":6,"-":128}},{"path":"src/test/java/seedu/address/logic/commands/DeleteAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":" * {@code DeleteAppointmentCommand}.","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"public class DeleteAppointmentCommandTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"officialchengyud"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"    public void execute_validDeleteAppointmentIndexList_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"        Appointment appointmentToDelete \u003d model.getFilteredAppointmentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"        String deleteAppointmentMessage \u003d DeleteAppointmentCommand.MESSAGE_DELETE_APPOINTMENT_SUCCESS;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"        String expectedMessage \u003d String.format(deleteAppointmentMessage, Messages.format(appointmentToDelete));","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"officialchengyud"},"content":"        expectedModel.deleteAppointment(appointmentToDelete);","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"        assertCommandSuccess(deleteAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"    public void execute_invalidDeleteAppointmentIndexList_throwsCommandException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredAppointmentList().size() + 1);","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(outOfBoundIndex);","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"        assertCommandFailure(deleteAppointmentCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"officialchengyud"},"content":"    public void equals() {","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"officialchengyud"},"content":"        DeleteAppointmentCommand deleteAppointmentFirstCommand \u003d new DeleteAppointmentCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"officialchengyud"},"content":"        DeleteAppointmentCommand deleteAppointmentSecondCommand \u003d new DeleteAppointmentCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"officialchengyud"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"officialchengyud"},"content":"        assertTrue(deleteAppointmentFirstCommand.equals(deleteAppointmentFirstCommand));","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"officialchengyud"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"officialchengyud"},"content":"        DeleteAppointmentCommand deleteAppointmentFirstCommandCopy \u003d new DeleteAppointmentCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"officialchengyud"},"content":"        assertTrue(deleteAppointmentFirstCommand.equals(deleteAppointmentFirstCommandCopy));","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"officialchengyud"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"officialchengyud"},"content":"        assertFalse(deleteAppointmentFirstCommand.equals(1));","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"officialchengyud"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"officialchengyud"},"content":"        assertFalse(deleteAppointmentFirstCommand.equals(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"officialchengyud"},"content":"        // different appointments -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"officialchengyud"},"content":"        assertFalse(deleteAppointmentFirstCommand.equals(deleteAppointmentSecondCommand));","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"officialchengyud"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"officialchengyud"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"officialchengyud"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(targetIndex);","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"officialchengyud"},"content":"        String expected \u003d DeleteAppointmentCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"officialchengyud"},"content":"        assertEquals(expected, deleteAppointmentCommand.toString());","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"officialchengyud":77,"Kappaccinoh":2}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Type;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"        String deleteMessage \u003d (personToDelete.getType() \u003d\u003d Type.PATIENT","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"                ? DeleteCommand.MESSAGE_DELETE_PATIENT_SUCCESS","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"                : DeleteCommand.MESSAGE_DELETE_DOCTOR_SUCCESS);","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d String.format(deleteMessage, Messages.format(personToDelete));","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"        String deleteMessage \u003d (personToDelete.getType() \u003d\u003d Type.PATIENT","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"                ? DeleteCommand.MESSAGE_DELETE_PATIENT_SUCCESS","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"                : DeleteCommand.MESSAGE_DELETE_DOCTOR_SUCCESS);","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d String.format(deleteMessage, Messages.format(personToDelete));","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"alfaloo":9,"-":116}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"///**","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"// * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"// */","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"//public class EditCommandTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"//    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"//    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"//        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"//        Messages.format(editedPerson));","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"//        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"//    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"//        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"//        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"//        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"//        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"//                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"//                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"//        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"//        Messages.format(editedPerson));","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"//        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"//    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"//        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"//        Messages.format(editedPerson));","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"//    public void execute_filteredList_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"//        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"//        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"//                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"//        Messages.format(editedPerson));","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"//        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"//    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"//        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"alfaloo"},"content":"//        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"alfaloo"},"content":"//    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"alfaloo"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"alfaloo"},"content":"//        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"alfaloo"},"content":"//        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"alfaloo"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"alfaloo"},"content":"//                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"alfaloo"},"content":"//        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"alfaloo"},"content":"//    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"alfaloo"},"content":"//        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"alfaloo"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"alfaloo"},"content":"//        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"alfaloo"},"content":"//        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"alfaloo"},"content":"//    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"alfaloo"},"content":"//     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"//     * but smaller than size of address book","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"alfaloo"},"content":"//     */","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"alfaloo"},"content":"//    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"alfaloo"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"alfaloo"},"content":"//        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"alfaloo"},"content":"//        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"alfaloo"},"content":"//        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"alfaloo"},"content":"//        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"alfaloo"},"content":"//                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"alfaloo"},"content":"//        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"alfaloo"},"content":"//    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"alfaloo"},"content":"//        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":157,"author":{"gitId":"alfaloo"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":158,"author":{"gitId":"alfaloo"},"content":"//        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"alfaloo"},"content":"//        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"alfaloo"},"content":"//        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"alfaloo"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"alfaloo"},"content":"//        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":165,"author":{"gitId":"alfaloo"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":166,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":167,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":168,"author":{"gitId":"alfaloo"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":169,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-11"},{"lineNumber":170,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":171,"author":{"gitId":"alfaloo"},"content":"//        // different index -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":172,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2024-03-11"},{"lineNumber":173,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":174,"author":{"gitId":"alfaloo"},"content":"//        // different descriptor -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":175,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2024-03-11"},{"lineNumber":176,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":177,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":178,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":179,"author":{"gitId":"alfaloo"},"content":"//    public void toStringMethod() {","lastModifiedDate":"2024-03-11"},{"lineNumber":180,"author":{"gitId":"alfaloo"},"content":"//        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-11"},{"lineNumber":181,"author":{"gitId":"alfaloo"},"content":"//        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-11"},{"lineNumber":182,"author":{"gitId":"alfaloo"},"content":"//        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-03-11"},{"lineNumber":183,"author":{"gitId":"alfaloo"},"content":"//        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2024-03-11"},{"lineNumber":184,"author":{"gitId":"alfaloo"},"content":"//                + editPersonDescriptor + \"}\";","lastModifiedDate":"2024-03-11"},{"lineNumber":185,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":186,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":187,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":188,"author":{"gitId":"alfaloo"},"content":"//}","lastModifiedDate":"2024-03-11"},{"lineNumber":189,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2024-03-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":223,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":228,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":233,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":238,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":243,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":248,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2024-03-11"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-03-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2024-03-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-11"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-11"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-11"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2024-03-11"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-03-11"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2024-03-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2024-03-11"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2024-03-11"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-11"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-11"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2024-03-11"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2024-03-11"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-11"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-11"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-11"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-03-11"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2024-03-11"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2024-03-11"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":195,"-":117}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalPersons.CARL_GOH;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"Kappaccinoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"Kappaccinoh"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Alice Benson\");","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON), model.getFilteredPersonList());","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"Kappaccinoh"},"content":"    public void execute_singleKeyword_multiplePatientsFound() {","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"Kappaccinoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"Kappaccinoh"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Carl\");","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"Kappaccinoh"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"Kappaccinoh"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"Kappaccinoh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(Arrays.asList(CARL, CARL_GOH), model.getFilteredPersonList());","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"Kappaccinoh"},"content":"    public void execute_noMatch_noPatientFound() {","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"Kappaccinoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"Kappaccinoh"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Zorro\");","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"Kappaccinoh"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"Kappaccinoh"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"Kappaccinoh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"Kappaccinoh":26,"-":86}},{"path":"src/test/java/seedu/address/logic/commands/QueryDoctorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.testutil.TypicalPersons.DAMES;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.testutil.TypicalPersons.DAMES_GOH;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.testutil.TypicalPersons.ERIN;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.testutil.TypicalPersons.GON;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.person.DoctorNameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"public class QueryDoctorCommandTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"    public void equals() {","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"        DoctorNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"                new DoctorNameContainsKeywordsPredicate((Collections.singletonList(\"first\")));","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"        DoctorNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"Alteqa"},"content":"                new DoctorNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"        QueryDoctorCommand findFirstCommand \u003d new QueryDoctorCommand(firstPredicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"        QueryDoctorCommand findSecondCommand \u003d new QueryDoctorCommand(secondPredicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Alteqa"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"Alteqa"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Alteqa"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"Alteqa"},"content":"        QueryDoctorCommand findFirstCommandCopy \u003d new QueryDoctorCommand(firstPredicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"Alteqa"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"Alteqa"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"Alteqa"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"Alteqa"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"Alteqa"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"Alteqa"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"Alteqa"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"Alteqa"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"Alteqa"},"content":"        DoctorNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"Alteqa"},"content":"        QueryDoctorCommand command \u003d new QueryDoctorCommand(predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"Alteqa"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"Alteqa"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"Alteqa"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"Alteqa"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"Alteqa"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"Alteqa"},"content":"        DoctorNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Erin Gon\");","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"Alteqa"},"content":"        QueryDoctorCommand command \u003d new QueryDoctorCommand(predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"Alteqa"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"Alteqa"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"Alteqa"},"content":"        assertEquals(Arrays.asList(ERIN, GON), model.getFilteredPersonList());","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"Alteqa"},"content":"    public void execute_singleKeyword_multipleDoctorsFound() {","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"Alteqa"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"Alteqa"},"content":"        DoctorNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Dames\");","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"Alteqa"},"content":"        QueryDoctorCommand command \u003d new QueryDoctorCommand(predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"Alteqa"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"Alteqa"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"Alteqa"},"content":"        assertEquals(Arrays.asList(DAMES, DAMES_GOH), model.getFilteredPersonList());","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"Alteqa"},"content":"    public void execute_noMatch_noDoctorFound() {","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"Alteqa"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"Alteqa"},"content":"        DoctorNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Zorro\");","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"Alteqa"},"content":"        QueryDoctorCommand command \u003d new QueryDoctorCommand(predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"Alteqa"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"Alteqa"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"Alteqa"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"Alteqa"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"Alteqa"},"content":"        DoctorNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"Alteqa"},"content":"                new DoctorNameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"Alteqa"},"content":"        QueryDoctorCommand findCommand \u003d new QueryDoctorCommand(predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"Alteqa"},"content":"        String expected \u003d QueryDoctorCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"Alteqa"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"Alteqa"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"Alteqa"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"Alteqa"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"Alteqa"},"content":"    private DoctorNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"Alteqa"},"content":"        return new DoctorNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"Alteqa"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Alteqa":113}},{"path":"src/test/java/seedu/address/logic/commands/QueryPatientAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.Messages.MESSAGE_APPOINTMENTS_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT_4;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAddressBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.appointment.AppointmentContainsPatientPredicate;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"public class QueryPatientAppointmentCommandTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"    public void equals() {","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsPatientPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsPatientPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientAppointmentCommand findFirstCommand \u003d new QueryPatientAppointmentCommand(firstPredicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientAppointmentCommand findSecondCommand \u003d new QueryPatientAppointmentCommand(secondPredicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientAppointmentCommand findFirstCommandCopy \u003d new QueryPatientAppointmentCommand(firstPredicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"    public void execute_zeroKeywords_noAppointmentsFound() {","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPOINTMENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientAppointmentCommand command \u003d new QueryPatientAppointmentCommand(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredAppointmentList());","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"    public void execute_singleKeyword_singleAppointmentFound() {","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPOINTMENTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate predicate \u003d preparePredicate(\"S8734985A\");","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientAppointmentCommand command \u003d new QueryPatientAppointmentCommand(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"Kappaccinoh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(Arrays.asList(APPOINTMENT_4), model.getFilteredAppointmentList());","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"Kappaccinoh"},"content":"    public void execute_noMatch_noPatientFound() {","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"Kappaccinoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPOINTMENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate predicate \u003d preparePredicate(\"Zorro\");","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientAppointmentCommand command \u003d new QueryPatientAppointmentCommand(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"Kappaccinoh"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"Kappaccinoh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredAppointmentList());","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"Kappaccinoh"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate predicate \u003d new AppointmentContainsPatientPredicate(","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"Kappaccinoh"},"content":"                Arrays.asList(\"keyword\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientAppointmentCommand findCommand \u003d new QueryPatientAppointmentCommand(predicate);","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"Kappaccinoh"},"content":"        String expected \u003d QueryPatientAppointmentCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"Kappaccinoh"},"content":"     * Parses {@code userInput} into a {@code AppointmentContainsPatientPredicate}.","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"Kappaccinoh"},"content":"    private AppointmentContainsPatientPredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"Kappaccinoh"},"content":"        return new AppointmentContainsPatientPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Kappaccinoh":97}},{"path":"src/test/java/seedu/address/logic/commands/QueryPatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalPersons.CARL_GOH;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.person.PatientNameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"public class QueryPatientCommandTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"        PatientNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientNameContainsKeywordsPredicate((Collections.singletonList(\"first\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"        PatientNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientCommand findFirstCommand \u003d new QueryPatientCommand(firstPredicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientCommand findSecondCommand \u003d new QueryPatientCommand(secondPredicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientCommand findFirstCommandCopy \u003d new QueryPatientCommand(firstPredicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"        PatientNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientCommand command \u003d new QueryPatientCommand(predicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"Kappaccinoh"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"Kappaccinoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"Kappaccinoh"},"content":"        PatientNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Alice Benson\");","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientCommand command \u003d new QueryPatientCommand(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"Kappaccinoh"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"Kappaccinoh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON), model.getFilteredPersonList());","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"Kappaccinoh"},"content":"    public void execute_singleKeyword_multiplePatientsFound() {","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"Kappaccinoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"Kappaccinoh"},"content":"        PatientNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Carl\");","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientCommand command \u003d new QueryPatientCommand(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"Kappaccinoh"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"Kappaccinoh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(Arrays.asList(CARL, CARL_GOH), model.getFilteredPersonList());","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"Kappaccinoh"},"content":"    public void execute_noMatch_noPatientFound() {","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"Kappaccinoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"Kappaccinoh"},"content":"        PatientNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Zorro\");","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientCommand command \u003d new QueryPatientCommand(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"Kappaccinoh"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"Kappaccinoh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"Kappaccinoh"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"Kappaccinoh"},"content":"        PatientNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientNameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientCommand findCommand \u003d new QueryPatientCommand(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"Kappaccinoh"},"content":"        String expected \u003d QueryPatientCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"Kappaccinoh"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"Kappaccinoh"},"content":"    private PatientNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"Kappaccinoh"},"content":"        return new PatientNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Kappaccinoh":113}},{"path":"src/test/java/seedu/address/logic/parser/AddAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"class AddAppointmentCommandParserTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"    public void parse_missingPrefix_throwsParseException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"        AddAppointmentCommandParser parser \u003d new AddAppointmentCommandParser();","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"        String args \u003d \"ad/2024-01-01\";","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"    public void parse_emptyPrefix_throwsParseException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"        AddAppointmentCommandParser parser \u003d new AddAppointmentCommandParser();","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"        String args \u003d \"\";","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"ararchch":24}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"//public class AddCommandParserTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"//    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"//    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"//        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"//        // whitespace only preamble","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"//        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"//        // multiple tags - all accepted","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"//        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"//                .build();","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"//        assertParseSuccess(parser,","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"//                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB +","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"//                TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"//                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"//    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"//        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"//        // multiple names","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"//        // multiple phones","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"//        // multiple emails","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"//        // multiple addresses","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"//        // multiple fields repeated","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser,","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"//                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"//                        + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"//                PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"//        // invalid value followed by valid value","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"//        // invalid name","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"//        // invalid email","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"//        // invalid phone","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"alfaloo"},"content":"//        // invalid address","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"alfaloo"},"content":"//        // valid value followed by invalid value","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"alfaloo"},"content":"//        // invalid name","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"alfaloo"},"content":"//        // invalid email","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"alfaloo"},"content":"//        // invalid phone","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"alfaloo"},"content":"//        // invalid address","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"alfaloo"},"content":"//    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"alfaloo"},"content":"//        // zero tags","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"alfaloo"},"content":"//        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"//        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"alfaloo"},"content":"//                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"alfaloo"},"content":"//    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"alfaloo"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"alfaloo"},"content":"//        // missing name prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"alfaloo"},"content":"//                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"alfaloo"},"content":"//        // missing phone prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"alfaloo"},"content":"//                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"alfaloo"},"content":"//        // missing email prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"alfaloo"},"content":"//                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":157,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":158,"author":{"gitId":"alfaloo"},"content":"//        // missing address prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"alfaloo"},"content":"//                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"alfaloo"},"content":"//        // all prefixes missing","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"alfaloo"},"content":"//                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":165,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":166,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":167,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":168,"author":{"gitId":"alfaloo"},"content":"//    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":169,"author":{"gitId":"alfaloo"},"content":"//        // invalid name","lastModifiedDate":"2024-03-11"},{"lineNumber":170,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":171,"author":{"gitId":"alfaloo"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":172,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":173,"author":{"gitId":"alfaloo"},"content":"//        // invalid phone","lastModifiedDate":"2024-03-11"},{"lineNumber":174,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":175,"author":{"gitId":"alfaloo"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":176,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":177,"author":{"gitId":"alfaloo"},"content":"//        // invalid email","lastModifiedDate":"2024-03-11"},{"lineNumber":178,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":179,"author":{"gitId":"alfaloo"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":180,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":181,"author":{"gitId":"alfaloo"},"content":"//        // invalid address","lastModifiedDate":"2024-03-11"},{"lineNumber":182,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2024-03-11"},{"lineNumber":183,"author":{"gitId":"alfaloo"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":184,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":185,"author":{"gitId":"alfaloo"},"content":"//        // invalid tag","lastModifiedDate":"2024-03-11"},{"lineNumber":186,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":187,"author":{"gitId":"alfaloo"},"content":"//                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":188,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":189,"author":{"gitId":"alfaloo"},"content":"//        // two invalid values, only first invalid value reported","lastModifiedDate":"2024-03-11"},{"lineNumber":190,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":191,"author":{"gitId":"alfaloo"},"content":"//                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":192,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":193,"author":{"gitId":"alfaloo"},"content":"//        // non-empty preamble","lastModifiedDate":"2024-03-11"},{"lineNumber":194,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":195,"author":{"gitId":"alfaloo"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-11"},{"lineNumber":196,"author":{"gitId":"alfaloo"},"content":"//                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-11"},{"lineNumber":197,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":198,"author":{"gitId":"alfaloo"},"content":"//}","lastModifiedDate":"2024-03-11"},{"lineNumber":199,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":202,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2024-03-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":246,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-11"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2024-03-11"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2024-03-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2024-03-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2024-03-11"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2024-03-11"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2024-03-11"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2024-03-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-11"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-11"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":274,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-11"},{"lineNumber":275,"author":{"gitId":"alfaloo"},"content":"                        PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2024-03-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2024-03-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2024-03-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-11"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2024-03-11"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2024-03-11"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2024-03-11"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-11"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2024-03-11"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":293,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2024-03-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2024-03-11"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2024-03-11"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":299,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-11"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2024-03-11"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2024-03-11"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2024-03-11"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":307,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-11"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2024-03-11"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2024-03-11"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":316,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-11"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":325,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":329,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":337,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2024-03-11"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":341,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2024-03-11"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2024-03-11"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":352,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2024-03-11"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":356,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2024-03-11"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2024-03-11"},{"lineNumber":360,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2024-03-11"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":364,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2024-03-11"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":368,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2024-03-11"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":372,"author":{"gitId":"alfaloo"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-11"},{"lineNumber":373,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-11"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":375,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":205,"-":170}},{"path":"src/test/java/seedu/address/logic/parser/AddDoctorCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOB_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOB_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DOB_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"officialchengyud"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.DoB;","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"public class AddDoctorCommandParserTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"    private AddDoctorCommandParser parser \u003d new AddDoctorCommandParser();","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"    //    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"    //    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"officialchengyud"},"content":"    //        Patient expectedPerson \u003d new PatientBuilder(BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"    //","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"    //        // whitespace only preamble","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"    //        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NRIC_DESC_BOB + NAME_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"    //                + PHONE_DESC_BOB, new AddPatientCommand(expectedPerson));","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"officialchengyud"},"content":"    //    }","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"officialchengyud"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"officialchengyud"},"content":"        String validExpectedPersonString \u003d NRIC_DESC_BOB + NAME_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"officialchengyud"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"officialchengyud"},"content":"        // multiple names","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, NRIC_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"officialchengyud"},"content":"        // multiple phones","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"officialchengyud"},"content":"        // multiple emails","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, DOB_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DOB));","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"officialchengyud"},"content":"        // multiple addresses","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"officialchengyud"},"content":"        // multiple fields repeated","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"officialchengyud"},"content":"                validExpectedPersonString + NRIC_DESC_AMY + NAME_DESC_AMY + DOB_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"officialchengyud"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC, PREFIX_NAME,","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"officialchengyud"},"content":"                        PREFIX_DOB, PREFIX_PHONE));","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"officialchengyud"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"officialchengyud"},"content":"        // invalid nric","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"officialchengyud"},"content":"        // invalid name","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"officialchengyud"},"content":"        // invalid dob","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, INVALID_DOB_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DOB));","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"officialchengyud"},"content":"        // invalid phone","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"officialchengyud"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"officialchengyud"},"content":"        // invalid nric","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NRIC_DESC,","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"officialchengyud"},"content":"        // invalid name","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"officialchengyud"},"content":"        // invalid dob","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_DOB_DESC,","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DOB));","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"officialchengyud"},"content":"        // invalid phone","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"officialchengyud"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"officialchengyud"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDoctorCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"officialchengyud"},"content":"        // missing nric prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, VALID_NRIC_BOB + NAME_DESC_BOB + DOB_DESC_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"officialchengyud"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"officialchengyud"},"content":"        // missing name prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + VALID_NAME_BOB + DOB_DESC_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"officialchengyud"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"officialchengyud"},"content":"        // missing dob prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + VALID_NAME_BOB + VALID_DOB_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"officialchengyud"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"officialchengyud"},"content":"        // missing phone prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + VALID_NAME_BOB + VALID_DOB_BOB + VALID_PHONE_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"officialchengyud"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"officialchengyud"},"content":"        // all prefixes missing","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, VALID_NRIC_BOB + VALID_NAME_BOB + VALID_DOB_BOB + VALID_PHONE_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"officialchengyud"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"officialchengyud"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"officialchengyud"},"content":"        // invalid nric","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + NAME_DESC_BOB + DOB_DESC_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"officialchengyud"},"content":"                Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"officialchengyud"},"content":"        // invalid name","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + INVALID_NAME_DESC + DOB_DESC_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"officialchengyud"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"officialchengyud"},"content":"        // invalid dob","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB + INVALID_DOB_DESC + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"officialchengyud"},"content":"                DoB.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":155,"author":{"gitId":"officialchengyud"},"content":"        // invalid phone","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB + DOB_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"officialchengyud"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"officialchengyud"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + NAME_DESC_BOB + DOB_DESC_BOB + INVALID_PHONE_DESC,","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"officialchengyud"},"content":"                Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"officialchengyud"},"content":"        // non-empty preamble","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NRIC_DESC_BOB + NAME_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"officialchengyud"},"content":"                        + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"officialchengyud"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDoctorCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"officialchengyud":168}},{"path":"src/test/java/seedu/address/logic/parser/AddPatientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOB_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOB_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DOB_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.DoB;","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"public class AddPatientCommandParserTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"    private AddPatientCommandParser parser \u003d new AddPatientCommandParser();","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"    //    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"    //    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"    //        Patient expectedPerson \u003d new PatientBuilder(BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"    //","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"    //        // whitespace only preamble","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"    //        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NRIC_DESC_BOB + NAME_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"    //                + PHONE_DESC_BOB, new AddPatientCommand(expectedPerson));","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"    //    }","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"        String validExpectedPersonString \u003d NRIC_DESC_BOB + NAME_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"        // multiple names","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, NRIC_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"        // multiple phones","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"        // multiple emails","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, DOB_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DOB));","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"        // multiple addresses","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"        // multiple fields repeated","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"                validExpectedPersonString + NRIC_DESC_AMY + NAME_DESC_AMY + DOB_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC, PREFIX_NAME,","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"                        PREFIX_DOB, PREFIX_PHONE));","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"        // invalid nric","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"        // invalid name","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"        // invalid dob","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, INVALID_DOB_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DOB));","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"        // invalid phone","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"        // invalid nric","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NRIC_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"        // invalid name","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"        // invalid dob","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_DOB_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DOB));","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"alfaloo"},"content":"        // invalid phone","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"alfaloo"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPatientCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"alfaloo"},"content":"        // missing nric prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, VALID_NRIC_BOB + NAME_DESC_BOB + DOB_DESC_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"alfaloo"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"alfaloo"},"content":"        // missing name prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + VALID_NAME_BOB + DOB_DESC_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"alfaloo"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"alfaloo"},"content":"        // missing dob prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + VALID_NAME_BOB + VALID_DOB_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"alfaloo"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"alfaloo"},"content":"        // missing phone prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + VALID_NAME_BOB + VALID_DOB_BOB + VALID_PHONE_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"alfaloo"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"alfaloo"},"content":"        // all prefixes missing","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, VALID_NRIC_BOB + VALID_NAME_BOB + VALID_DOB_BOB + VALID_PHONE_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"alfaloo"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"alfaloo"},"content":"        // invalid nric","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + NAME_DESC_BOB + DOB_DESC_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"alfaloo"},"content":"                Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"alfaloo"},"content":"        // invalid name","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + INVALID_NAME_DESC + DOB_DESC_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"alfaloo"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"alfaloo"},"content":"        // invalid dob","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB + INVALID_DOB_DESC + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"alfaloo"},"content":"                DoB.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"alfaloo"},"content":"        // invalid phone","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB + DOB_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2024-03-11"},{"lineNumber":157,"author":{"gitId":"alfaloo"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":158,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"alfaloo"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + NAME_DESC_BOB + DOB_DESC_BOB + INVALID_PHONE_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"alfaloo"},"content":"                Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"alfaloo"},"content":"        // non-empty preamble","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NRIC_DESC_BOB + NAME_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":165,"author":{"gitId":"alfaloo"},"content":"                        + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":166,"author":{"gitId":"alfaloo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-11"},{"lineNumber":167,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":168,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":168}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryDoctorCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryPatientAppointmentCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryPatientCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.appointment.AppointmentContainsPatientPredicate;","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.person.DoctorNameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.person.PatientNameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"import seedu.address.testutil.AppointmentUtil;","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"Alteqa"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"Alteqa"},"content":"    public void parseCommand_addDoctor() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"Alteqa"},"content":"        Doctor person \u003d new DoctorBuilder().build();","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"Alteqa"},"content":"        AddDoctorCommand command \u003d (AddDoctorCommand) parser.parseCommand(PersonUtil.getAddDoctorCommand(person));","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"Alteqa"},"content":"        assertEquals(new AddDoctorCommand(person), command);","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"    public void parseCommand_addpatient() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"        Patient person \u003d new PatientBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"        AddPatientCommand command \u003d (AddPatientCommand) parser.parseCommand(PersonUtil.getAddPatientCommand(person));","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(new AddPatientCommand(person), command);","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"    public void parseCommand_addappointment() throws Exception {","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"        Appointment appt \u003d new AppointmentBuilder().build();","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"        AddAppointmentCommand command \u003d (AddAppointmentCommand) parser.parseCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"                AppointmentUtil.getAddAppointmentCommand(appt));","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"        assertEquals(new AddAppointmentCommand(appt), command);","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"Kappaccinoh"},"content":"    public void parseCommand_querypatientappointment() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"T1234567A\");","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientAppointmentCommand command \u003d (QueryPatientAppointmentCommand) parser.parseCommand(","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"Kappaccinoh"},"content":"                QueryPatientAppointmentCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"Kappaccinoh"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(new QueryPatientAppointmentCommand(new AppointmentContainsPatientPredicate(keywords)), command);","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"officialchengyud"},"content":"    public void parseCommand_deleteappointment() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"officialchengyud"},"content":"        DeleteAppointmentCommand command \u003d (DeleteAppointmentCommand) parser.parseCommand(","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"officialchengyud"},"content":"                DeleteAppointmentCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"officialchengyud"},"content":"        assertEquals(new DeleteAppointmentCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"        Person person \u003d new PatientBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"Alteqa"},"content":"    public void parseCommand_querydoctor() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"Alteqa"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"Alteqa"},"content":"        QueryDoctorCommand command \u003d (QueryDoctorCommand) parser.parseCommand(","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"Alteqa"},"content":"                QueryDoctorCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"Alteqa"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"Alteqa"},"content":"        assertEquals(new QueryDoctorCommand(new DoctorNameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"Kappaccinoh"},"content":"    public void parseCommand_querypatient() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientCommand command \u003d (QueryPatientCommand) parser.parseCommand(","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"Kappaccinoh"},"content":"                QueryPatientCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"Kappaccinoh"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(new QueryPatientCommand(new PatientNameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"Kappaccinoh"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"Kappaccinoh"},"content":"                MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Alteqa":18,"alfaloo":2,"officialchengyud":5,"Kappaccinoh":35,"-":96,"ararchch":10}},{"path":"src/test/java/seedu/address/logic/parser/DeleteAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"officialchengyud"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":" * outside of the DeleteAppointmentCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":" * same path through the DeleteAppointmentCommand, and therefore we test only one of them.","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"public class DeleteAppointmentCommandParserTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"    private DeleteAppointmentCommandParser parser \u003d new DeleteAppointmentCommandParser();","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"        assertParseSuccess(parser, \"1\", new DeleteAppointmentCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"officialchengyud"},"content":"        String expectedString \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"                DeleteAppointmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, \"a\", expectedString);","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"officialchengyud":34}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.AppointmentDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":198,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":199,"author":{"gitId":"ararchch"},"content":"    public void parseAppointmentDate_validDate_returnsAppointmentDate() throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":200,"author":{"gitId":"ararchch"},"content":"        String date \u003d \"2024-09-02\";","lastModifiedDate":"2024-03-18"},{"lineNumber":201,"author":{"gitId":"ararchch"},"content":"        AppointmentDate ad \u003d new AppointmentDate(date);","lastModifiedDate":"2024-03-18"},{"lineNumber":202,"author":{"gitId":"ararchch"},"content":"        assertEquals(ad, ParserUtil.parseAppointmentDate(date));","lastModifiedDate":"2024-03-18"},{"lineNumber":203,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":204,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":205,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":206,"author":{"gitId":"ararchch"},"content":"    public void parseAppointmentDate_invalidDate_throwsParseException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":207,"author":{"gitId":"ararchch"},"content":"        String date \u003d \"2024-00-010\";","lastModifiedDate":"2024-03-18"},{"lineNumber":208,"author":{"gitId":"ararchch"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointmentDate(date));","lastModifiedDate":"2024-03-18"},{"lineNumber":209,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":210,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":211,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":212,"author":{"gitId":"ararchch"},"content":"    public void parseAppointmentDate_invalidApptDate_throwsParseException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":213,"author":{"gitId":"ararchch"},"content":"        String date \u003d \" 2024-00-00\";","lastModifiedDate":"2024-03-18"},{"lineNumber":214,"author":{"gitId":"ararchch"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointmentDate(date));","lastModifiedDate":"2024-03-18"},{"lineNumber":215,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":216,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":217,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":218,"author":{"gitId":"ararchch"},"content":"    public void parseAppointmentDate_whitespacedDate_returnsAppointmentDate() throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":219,"author":{"gitId":"ararchch"},"content":"        String date \u003d \" 2024-09-02  \";","lastModifiedDate":"2024-03-18"},{"lineNumber":220,"author":{"gitId":"ararchch"},"content":"        AppointmentDate ad \u003d new AppointmentDate(date.strip());","lastModifiedDate":"2024-03-18"},{"lineNumber":221,"author":{"gitId":"ararchch"},"content":"        assertEquals(ad, ParserUtil.parseAppointmentDate(date));","lastModifiedDate":"2024-03-18"},{"lineNumber":222,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":223,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":224,"author":{"gitId":"ararchch"},"content":"    //TODO: test parseAppointmentDate with null input once caught","lastModifiedDate":"2024-03-18"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"-":196,"ararchch":29}},{"path":"src/test/java/seedu/address/logic/parser/QueryDoctorCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"import seedu.address.logic.commands.QueryDoctorCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.person.DoctorNameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"public class QueryDoctorCommandParserTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"    private QueryDoctorCommandParser parser \u003d new QueryDoctorCommandParser();","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"                QueryDoctorCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"    public void parse_validArgs_returnsQueryCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"        QueryDoctorCommand expectedQueryCommand \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"                new QueryDoctorCommand(new DoctorNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedQueryCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedQueryCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Alteqa":33,"Kappaccinoh":1}},{"path":"src/test/java/seedu/address/logic/parser/QueryPatientAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryPatientAppointmentCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.appointment.AppointmentContainsPatientPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"public class QueryPatientAppointmentCommandParserTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    private QueryPatientAppointmentCommandParser parser \u003d new QueryPatientAppointmentCommandParser();","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"                QueryPatientAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"    public void parse_validArgs_returnsQueryCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientAppointmentCommand expectedQueryCommand \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"                new QueryPatientAppointmentCommand(new AppointmentContainsPatientPredicate(","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"                        Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedQueryCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedQueryCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Kappaccinoh":34}},{"path":"src/test/java/seedu/address/logic/parser/QueryPatientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryPatientCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.person.PatientNameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"public class QueryPatientCommandParserTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"    private QueryPatientCommandParser parser \u003d new QueryPatientCommandParser();","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"                QueryPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"    public void parse_validArgs_returnsQueryCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientCommand expectedQueryCommand \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"                new QueryPatientCommand(new PatientNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedQueryCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedQueryCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Kappaccinoh":35}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"        private final ObservableList\u003cAppointment\u003e appointments \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"        public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"ararchch"},"content":"            return appointments;","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"ararchch"},"content":"    public void getPersonByNric_bookHasPerson_returnsPerson() {","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"ararchch"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"ararchch"},"content":"        assertEquals(ALICE, addressBook.getPersonByNric(ALICE.getNric()));","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"ararchch"},"content":"    public void getPersonByNric_bookDoesNotHavePerson_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"ararchch"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"ararchch"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e addressBook.getPersonByNric(new Nric(\"T1234567G\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"ararchch"},"content":"    public void getPersonByNric_nricInputIsNull_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"ararchch"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.getPersonByNric(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"ararchch"},"content":"    public void getPersonByNric_addressbookIsEmpty_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"ararchch"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e addressBook.getPersonByNric(ALICE.getNric()));","lastModifiedDate":"2024-03-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"alfaloo":4,"-":103,"ararchch":31}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import static seedu.address.testutil.TypicalPersons.BROWN;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.AppointmentDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"Kappaccinoh"},"content":"    public void getFilteredAppointmentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"Kappaccinoh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredAppointmentList().remove(0));","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"ararchch"},"content":"    public void hasAppointment_validAppointment_returnsTrue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"ararchch"},"content":"        Appointment a \u003d new AppointmentBuilder().build();","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"ararchch"},"content":"        modelManager.addAppointment(a);","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"ararchch"},"content":"        assertTrue(modelManager.hasAppointment(a));","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"ararchch"},"content":"    public void deleteAppointment_validAppointment_deletesAppointment() {","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"ararchch"},"content":"        Appointment a \u003d new AppointmentBuilder().build();","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"ararchch"},"content":"        modelManager.addAppointment(a);","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"ararchch"},"content":"        modelManager.deleteAppointment(a);","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"ararchch"},"content":"        assertFalse(modelManager.hasAppointment(a));","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"ararchch"},"content":"    public void setPerson_validPerson_setsPerson() {","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"ararchch"},"content":"        Person p0 \u003d BENSON;","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"ararchch"},"content":"        Person p1 \u003d ALICE;","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(p0);","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"ararchch"},"content":"        modelManager.setPerson(p0, p1);","lastModifiedDate":"2024-03-18"},{"lineNumber":167,"author":{"gitId":"ararchch"},"content":"        assertTrue(modelManager.hasPerson(p1));","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"ararchch"},"content":"        assertFalse(modelManager.hasPerson(p0));","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"ararchch"},"content":"    public void isValidAppointment_validAppointment_returnsTrue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":173,"author":{"gitId":"ararchch"},"content":"        Doctor d \u003d (Doctor) TypicalPersons.BROWN;","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"ararchch"},"content":"        Patient p \u003d (Patient) ALICE;","lastModifiedDate":"2024-03-18"},{"lineNumber":175,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(d);","lastModifiedDate":"2024-03-18"},{"lineNumber":176,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(p);","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"ararchch"},"content":"        Appointment a \u003d new AppointmentBuilder().withDoctor(d).withPatient(p).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"ararchch"},"content":"        assertTrue(modelManager.isValidAppointment(a));","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":180,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"ararchch"},"content":"    public void isValidAppointment_invalidAppointment_returnsFalse() {","lastModifiedDate":"2024-03-18"},{"lineNumber":183,"author":{"gitId":"ararchch"},"content":"        Doctor d \u003d (Doctor) TypicalPersons.BROWN;","lastModifiedDate":"2024-03-18"},{"lineNumber":184,"author":{"gitId":"ararchch"},"content":"        Patient p \u003d (Patient) ALICE;","lastModifiedDate":"2024-03-18"},{"lineNumber":185,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(d);","lastModifiedDate":"2024-03-18"},{"lineNumber":186,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(p);","lastModifiedDate":"2024-03-18"},{"lineNumber":187,"author":{"gitId":"ararchch"},"content":"        Appointment a \u003d new Appointment(ALICE.getNric(), BROWN.getNric(), new AppointmentDate(\"2024-08-30\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":188,"author":{"gitId":"ararchch"},"content":"        assertFalse(modelManager.isValidAppointment(a));","lastModifiedDate":"2024-03-18"},{"lineNumber":189,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Kappaccinoh":5,"-":132,"ararchch":53}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentContainsPatientPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT_1;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT_4;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"public class AppointmentContainsPatientPredicateTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"    public void equals() {","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsPatientPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsPatientPredicate(secondPredicateKeywordList);","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate firstPredicateCopy \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsPatientPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_predicateReturnsAppointment() {","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"S1234567A\");","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsPatientPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"        // Object Appointment -\u003e returns True","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"        Appointment p \u003d APPOINTMENT_1;","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(firstPredicate.test(p));","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_appointmentContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"S1234567A\");","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsPatientPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"        // Object Appointment with Alice -\u003e returns True","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"        Appointment p \u003d APPOINTMENT_1;","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(firstPredicate.test(p));","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"Kappaccinoh"},"content":"        // Object Appointment without Alice -\u003e returns False","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"Kappaccinoh"},"content":"        Appointment p1 \u003d APPOINTMENT_4;","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(firstPredicate.test(p1));","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"Kappaccinoh"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"S1111111A\");","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsPatientPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"Kappaccinoh"},"content":"        // Object Appointment with Alice -\u003e returns True","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"Kappaccinoh"},"content":"        Appointment p \u003d APPOINTMENT_1;","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(firstPredicate.test(p));","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"Kappaccinoh"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate predicate \u003d new AppointmentContainsPatientPredicate(keywords);","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"Kappaccinoh"},"content":"        String expected \u003d AppointmentContainsPatientPredicate.class.getCanonicalName()","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"Kappaccinoh"},"content":"                + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Kappaccinoh":91}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"class AppointmentDateTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"    public void isValidDate_validDate_returnsTrue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"        //TODO: Implement","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"    void testToString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"    void testHashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    void compareTo() {","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"ararchch":23}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"class AppointmentIdTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"    void testToString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"        AppointmentId aid \u003d new AppointmentId();","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"        assertTrue(aid.equals(aid));","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    public void equals_diffObject_returnsFalse() {","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"        AppointmentId aid \u003d new AppointmentId();","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"        assertFalse(aid.equals(new AppointmentId()));","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"    void hashCode_returnsValidHash() {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"        assertTrue(hashCode() \u003e 100000000);","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"ararchch":31}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"class AppointmentTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"    void getDoctoNric() {","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"    void getPatientNric() {","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    void getAppointmentId() {","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    void getAppointmentDate() {","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"    void isSameAppointment() {","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"    void testToString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"ararchch":30}},{"path":"src/test/java/seedu/address/model/appointment/UniqueAppointmentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import static seedu.address.testutil.TypicalPersons.BROWN;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.exceptions.AppointmentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"public class UniqueAppointmentListTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    private static final Appointment VALID_APPT \u003d new AppointmentBuilder().build();","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    private final UniqueAppointmentList uniqueAppointmentList \u003d new UniqueAppointmentList();","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"    public void contains_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAppointmentList.contains(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"    public void contains_appointmentNotInList_returnsFalse() {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"        assertFalse(uniqueAppointmentList.contains(VALID_APPT));","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"    public void contains_appointmentInList_returnsTrue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.add(VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"        assertTrue(uniqueAppointmentList.contains(VALID_APPT));","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"    public void contains_appointmentWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.add(VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"        Appointment editedAppt \u003d new Appointment(","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"                VALID_APPT.getDoctorNric(),","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"                VALID_APPT.getPatientNric(),","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"                VALID_APPT.getAppointmentDate()","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"        assertTrue(uniqueAppointmentList.contains(editedAppt));","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"    public void add_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAppointmentList.add(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"    public void add_duplicateAppointment_throwsDuplicateAppointmentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.add(VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"        assertThrows(DuplicateAppointmentException.class, () -\u003e uniqueAppointmentList.add(VALID_APPT));","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"    public void setAppointment_nullTargetAppointment_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAppointmentList.setAppointment(null, VALID_APPT));","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"    public void setAppointment_nullEditedAppointment_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAppointmentList.setAppointment(","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"                VALID_APPT, null));","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"    public void setAppointment_targetAppointmentNotInList_throwsAppointmentNotFoundException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"        assertThrows(AppointmentNotFoundException.class, () -\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"                uniqueAppointmentList.setAppointment(VALID_APPT, VALID_APPT));","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"    public void setAppointment_editedAppointmentIsSameAppointment_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.add(VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.setAppointment(VALID_APPT, VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"        UniqueAppointmentList expectedUniqueAppointmentList \u003d new UniqueAppointmentList();","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"        expectedUniqueAppointmentList.add(VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"        assertEquals(expectedUniqueAppointmentList, uniqueAppointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"    public void setAppointment_editedAppointmentHasSameIdentity_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.add(VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"        Appointment editedAppt \u003d new Appointment(","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"Kappaccinoh"},"content":"                VALID_APPT.getDoctorNric(),","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"                VALID_APPT.getPatientNric(),","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"                VALID_APPT.getAppointmentDate()","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.setAppointment(VALID_APPT, editedAppt);","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"ararchch"},"content":"        UniqueAppointmentList expectedUniqueAppointmentList \u003d new UniqueAppointmentList();","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"        expectedUniqueAppointmentList.add(editedAppt);","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"        assertEquals(expectedUniqueAppointmentList, uniqueAppointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"ararchch"},"content":"    public void setAppointment_editedAppointmentHasDifferentIdentity_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.add(VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"ararchch"},"content":"        Appointment editedAppt \u003d new Appointment(","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"ararchch"},"content":"                BROWN.getNric(),","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"                VALID_APPT.getPatientNric(),","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"                VALID_APPT.getAppointmentDate()","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"ararchch"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.setAppointment(VALID_APPT, editedAppt);","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"        UniqueAppointmentList expectedUniqueAppointmentList \u003d new UniqueAppointmentList();","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"ararchch"},"content":"        expectedUniqueAppointmentList.add(editedAppt);","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"ararchch"},"content":"        assertEquals(expectedUniqueAppointmentList, uniqueAppointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"ararchch"},"content":"    public void setAppointment_editedAppointmentHasNonUniqueIdentity_throwsDuplicateAppointmentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.add(VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"ararchch"},"content":"        Appointment editedAppt \u003d new Appointment(","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"ararchch"},"content":"                BROWN.getNric(),","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"ararchch"},"content":"                VALID_APPT.getPatientNric(),","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"ararchch"},"content":"                VALID_APPT.getAppointmentDate()","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"ararchch"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.add(editedAppt);","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"ararchch"},"content":"        assertThrows(DuplicateAppointmentException.class, () -\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"ararchch"},"content":"                uniqueAppointmentList.setAppointment(VALID_APPT, editedAppt));","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"ararchch"},"content":"    public void remove_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"ararchch"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAppointmentList.remove(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"ararchch"},"content":"    public void remove_appointmentDoesNotExist_throwsAppointmentNotFoundException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"ararchch"},"content":"        assertThrows(AppointmentNotFoundException.class, () -\u003e uniqueAppointmentList.remove(VALID_APPT));","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"ararchch"},"content":"    public void remove_existingAppointment_removesAppointment() {","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.add(VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.remove(VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"ararchch"},"content":"        UniqueAppointmentList expectedUniqueAppointmentList \u003d new UniqueAppointmentList();","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"ararchch"},"content":"        assertEquals(expectedUniqueAppointmentList, uniqueAppointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":147,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":148,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"ararchch"},"content":"    public void setAppointments_nullUniqueAppointmentList_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"ararchch"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAppointmentList.setAppointments(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":154,"author":{"gitId":"ararchch"},"content":"    public void setAppointments_uniqueAppointmentList_replacesOwnListWithProvidedUniqueAppointmentList() {","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.add(VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"ararchch"},"content":"        UniqueAppointmentList expectedUniqueAppointmentList \u003d new UniqueAppointmentList();","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"ararchch"},"content":"        Appointment editedAppt \u003d new Appointment(","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"ararchch"},"content":"                BROWN.getNric(),","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"ararchch"},"content":"                VALID_APPT.getPatientNric(),","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"ararchch"},"content":"                VALID_APPT.getAppointmentDate()","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"ararchch"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"ararchch"},"content":"        expectedUniqueAppointmentList.add(editedAppt);","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.setAppointments(expectedUniqueAppointmentList.asUnmodifiableObservableList());","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"ararchch"},"content":"        assertEquals(expectedUniqueAppointmentList, uniqueAppointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":167,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":168,"author":{"gitId":"ararchch"},"content":"    public void setAppointments_nullList_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"ararchch"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAppointmentList.setAppointments((List\u003cAppointment\u003e) null));","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":171,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":172,"author":{"gitId":"ararchch"},"content":"    // TODO: check this testcase","lastModifiedDate":"2024-03-18"},{"lineNumber":173,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":174,"author":{"gitId":"ararchch"},"content":"    public void setAppointments_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2024-03-18"},{"lineNumber":175,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.add(VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":176,"author":{"gitId":"ararchch"},"content":"        Appointment editedAppt \u003d new Appointment(","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"Kappaccinoh"},"content":"                VALID_APPT.getDoctorNric(),","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"ararchch"},"content":"                VALID_APPT.getPatientNric(),","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"ararchch"},"content":"                VALID_APPT.getAppointmentDate()","lastModifiedDate":"2024-03-18"},{"lineNumber":180,"author":{"gitId":"ararchch"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"ararchch"},"content":"        List\u003cAppointment\u003e appointmentList \u003d Collections.singletonList(editedAppt);","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.setAppointments(appointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":183,"author":{"gitId":"ararchch"},"content":"        UniqueAppointmentList expectedUniqueAppointmentList \u003d new UniqueAppointmentList();","lastModifiedDate":"2024-03-18"},{"lineNumber":184,"author":{"gitId":"ararchch"},"content":"        expectedUniqueAppointmentList.add(editedAppt);","lastModifiedDate":"2024-03-18"},{"lineNumber":185,"author":{"gitId":"ararchch"},"content":"        assertEquals(expectedUniqueAppointmentList, uniqueAppointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":186,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":187,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":188,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":189,"author":{"gitId":"ararchch"},"content":"    public void setAppointments_listWithDuplicateAppointments_throwsDuplicateAppointmentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":190,"author":{"gitId":"ararchch"},"content":"        List\u003cAppointment\u003e listWithDuplicateAppointments \u003d Arrays.asList(VALID_APPT, VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":191,"author":{"gitId":"ararchch"},"content":"        assertThrows(DuplicateAppointmentException.class, () -\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":192,"author":{"gitId":"ararchch"},"content":"                uniqueAppointmentList.setAppointments(listWithDuplicateAppointments));","lastModifiedDate":"2024-03-18"},{"lineNumber":193,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":194,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":195,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":196,"author":{"gitId":"ararchch"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":197,"author":{"gitId":"ararchch"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2024-03-18"},{"lineNumber":198,"author":{"gitId":"ararchch"},"content":"                -\u003e uniqueAppointmentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2024-03-18"},{"lineNumber":199,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":200,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":201,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":202,"author":{"gitId":"ararchch"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-18"},{"lineNumber":203,"author":{"gitId":"ararchch"},"content":"        assertEquals(uniqueAppointmentList.asUnmodifiableObservableList().toString(), uniqueAppointmentList.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":204,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":205,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":206,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"Kappaccinoh":3,"ararchch":203}},{"path":"src/test/java/seedu/address/model/appointment/exceptions/AppointmentNotFoundExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"public class AppointmentNotFoundExceptionTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"    public void appointmentNotFoundException_createNewException_errorMessageIsAccurate() {","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"        AppointmentNotFoundException e \u003d new AppointmentNotFoundException();","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"        assertEquals(\"Unable to locate appointment\", e.getMessage());","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"ararchch":14}},{"path":"src/test/java/seedu/address/model/appointment/exceptions/DuplicateAppointmentExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"public class DuplicateAppointmentExceptionTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"    public void duplicateAppointmentException_createNewException_errorMessageIsAccurate() {","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"        DuplicateAppointmentException e \u003d new DuplicateAppointmentException();","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"        assertEquals(\"Operation would result in duplicate appointments\", e.getMessage());","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"ararchch":14}},{"path":"src/test/java/seedu/address/model/appointment/exceptions/InvalidAppointmentExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"public class InvalidAppointmentExceptionTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"    public void invalidAppointmentException_createNewException_errorMessageIsAccurate() {","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"        InvalidAppointmentException e \u003d new InvalidAppointmentException();","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"        assertEquals(\"This appointment is invalid due to invalid inputs.\", e.getMessage());","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"ararchch":14}},{"path":"src/test/java/seedu/address/model/person/DoBTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"public class DoBTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DoB(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"    public void constructor_invalidDoB_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"        String invalidDoB \u003d \"\";","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DoB(invalidDoB));","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    public void isValidDoB() {","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"        // null name","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"        assertThrows(NullPointerException.class, () -\u003e DoB.isValidDoB(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"        // invalid name","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"        assertFalse(DoB.isValidDoB(\"\")); // empty string","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"        assertFalse(DoB.isValidDoB(\" ^\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"        assertFalse(DoB.isValidDoB(\"23-09-2003\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"        assertFalse(DoB.isValidDoB(\"2003-04-45\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"        // valid name","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"        assertTrue(DoB.isValidDoB(\"1998-01-01\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"        assertTrue(DoB.isValidDoB(\"2003-02-03\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"        DoB dob \u003d new DoB(\"2003-04-02\");","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        assertTrue(dob.equals(new DoB(\"2003-04-02\")));","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"        assertTrue(dob.equals(dob));","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"        assertFalse(dob.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"        assertFalse(dob.equals(5.0f));","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"        assertFalse(dob.equals(new DoB(\"2003-04-12\")));","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":57}},{"path":"src/test/java/seedu/address/model/person/DoctorNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"public class DoctorNameContainsKeywordsPredicateTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"    public void equals() {","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"        DoctorNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"                new DoctorNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"        DoctorNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":"                new DoctorNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"        DoctorNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"                new DoctorNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"Alteqa"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Alteqa"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"Alteqa"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"Alteqa"},"content":"    public void test_predicateReturnsDoctorsOnly() {","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"Alteqa"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"Alice\");","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"Alteqa"},"content":"        DoctorNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"Alteqa"},"content":"                new DoctorNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"        // Object type Doctor -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"Alteqa"},"content":"        Doctor p \u003d new Doctor(new Nric(\"T1234567A\"), new Name(\"Alice\"), new DoB(\"2001-01-01\"), new Phone(\"98765432\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"Alteqa"},"content":"        assertTrue(firstPredicate.test(p));","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"Alteqa"},"content":"        Patient d \u003d new Patient(new Nric(\"T1234567A\"), new Name(\"Alice\"), new DoB(\"2001-01-01\"), new Phone(\"98765432\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"Alteqa"},"content":"        // Object type Doctor -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"Alteqa"},"content":"        assertFalse(firstPredicate.test(d));","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"Alteqa"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"Alteqa"},"content":"        // One keyword","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"Alteqa"},"content":"        DoctorNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"Alteqa"},"content":"                new DoctorNameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"Alteqa"},"content":"        assertTrue(predicate.test(new DoctorBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"Alteqa"},"content":"        // Multiple keywords","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"Alteqa"},"content":"        predicate \u003d new DoctorNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"Alteqa"},"content":"        assertTrue(predicate.test(new DoctorBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"Alteqa"},"content":"        // Only one matching keyword","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"Alteqa"},"content":"        predicate \u003d new DoctorNameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"Alteqa"},"content":"        assertTrue(predicate.test(new DoctorBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"Alteqa"},"content":"        // Mixed-case keywords","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"Alteqa"},"content":"        predicate \u003d new DoctorNameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"Alteqa"},"content":"        assertTrue(predicate.test(new DoctorBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"Alteqa"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"Alteqa"},"content":"        // Zero keywords","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"Alteqa"},"content":"        DoctorNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"Alteqa"},"content":"                new DoctorNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"Alteqa"},"content":"        assertFalse(predicate.test(new DoctorBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"Alteqa"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"Alteqa"},"content":"        predicate \u003d new DoctorNameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"Alteqa"},"content":"        assertFalse(predicate.test(new DoctorBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"Alteqa"},"content":"        // // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"Alteqa"},"content":"        // predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"Alteqa"},"content":"        // assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"Alteqa"},"content":"        // .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"Alteqa"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"Alteqa"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"Alteqa"},"content":"        DoctorNameContainsKeywordsPredicate predicate \u003d new DoctorNameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"Alteqa"},"content":"        String expected \u003d DoctorNameContainsKeywordsPredicate.class.getCanonicalName()","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"Alteqa"},"content":"                + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"Alteqa"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"Alteqa"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Alteqa":106}},{"path":"src/test/java/seedu/address/model/person/DoctorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_BROWN;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BROWN;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BROWN;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.testutil.TypicalPersons.DAMES;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.testutil.TypicalPersons.FROWN;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"public class DoctorTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"    public void isSamePerson() {","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"        assertTrue(DAMES.isSamePerson(DAMES));","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"        assertFalse(DAMES.isSamePerson(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"        Doctor editedDames \u003d new DoctorBuilder(DAMES).withName(VALID_NAME_BROWN).withDoB(VALID_DOB_BROWN)","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"                .withPhone(VALID_PHONE_BROWN).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"        assertTrue(DAMES.isSamePerson(editedDames));","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"        // different name, all other attributes same -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"        editedDames \u003d new DoctorBuilder(DAMES).withName(VALID_NAME_BROWN).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"Alteqa"},"content":"        assertTrue(DAMES.isSamePerson(editedDames));","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"        Person editedBob \u003d new DoctorBuilder(DAMES).withName(VALID_NAME_BROWN.toLowerCase()).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"Alteqa"},"content":"        assertTrue(DAMES.isSamePerson(editedBob));","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BROWN + \" \";","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Alteqa"},"content":"        editedBob \u003d new DoctorBuilder(DAMES).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"Alteqa"},"content":"        assertTrue(DAMES.isSamePerson(editedBob));","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"officialchengyud"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"officialchengyud"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"        Person aliceCopy \u003d new DoctorBuilder(DAMES).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"Alteqa"},"content":"        assertTrue(DAMES.equals(aliceCopy));","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"officialchengyud"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Alteqa"},"content":"        assertTrue(DAMES.equals(DAMES));","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"officialchengyud"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Alteqa"},"content":"        assertFalse(DAMES.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"officialchengyud"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"Alteqa"},"content":"        assertFalse(DAMES.equals(5));","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"officialchengyud"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"Alteqa"},"content":"        assertFalse(DAMES.equals(FROWN));","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"officialchengyud"},"content":"        // different nric -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"Alteqa"},"content":"        Person editedAlice \u003d new DoctorBuilder(DAMES).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"Alteqa"},"content":"        assertFalse(DAMES.equals(editedAlice));","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"officialchengyud"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"Alteqa"},"content":"        editedAlice \u003d new DoctorBuilder(DAMES).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"Alteqa"},"content":"        assertFalse(DAMES.equals(editedAlice));","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"officialchengyud"},"content":"        // different dob -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"Alteqa"},"content":"        editedAlice \u003d new DoctorBuilder(DAMES).withDoB(VALID_DOB_BOB).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"Alteqa"},"content":"        assertFalse(DAMES.equals(editedAlice));","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"officialchengyud"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"Alteqa"},"content":"        editedAlice \u003d new DoctorBuilder(DAMES).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"Alteqa"},"content":"        assertFalse(DAMES.equals(editedAlice));","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"officialchengyud"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"Alteqa"},"content":"        String expected \u003d Doctor.class.getCanonicalName() + \"{type\u003d\" + DAMES.getType() + \", nric\u003d\" + DAMES.getNric()","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"Alteqa"},"content":"                + \", name\u003d\" + DAMES.getName() + \", dob\u003d\" + DAMES.getDoB() + \", phone\u003d\" + DAMES.getPhone() + \"}\";","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"Alteqa"},"content":"        assertEquals(expected, DAMES.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Alteqa":29,"officialchengyud":60}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"        // // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"        // predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"        // assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"        // .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"alfaloo":11,"-":74}},{"path":"src/test/java/seedu/address/model/person/NricTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"public class NricTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Nric(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"    public void constructor_invalidNric_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"        String invalidNric \u003d \"A0234\";","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Nric(invalidNric));","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    public void isValidNric() {","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"        // null name","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"        assertThrows(NullPointerException.class, () -\u003e Nric.isValidNric(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"        // invalid name","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"        assertFalse(Nric.isValidNric(\"\")); // empty string","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"        assertFalse(Nric.isValidNric(\" \")); // spaces only","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"        assertFalse(Nric.isValidNric(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"        assertFalse(Nric.isValidNric(\"S0923*\")); // contains non-alphanumeric characters","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"        // valid name","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"        assertTrue(Nric.isValidNric(\"G1234567A\")); // alphabets only","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"        assertTrue(Nric.isValidNric(\"S0947384B\")); // numbers only","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"        assertTrue(Nric.isValidNric(\"T8749283C\")); // alphanumeric characters","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"        assertTrue(Nric.isValidNric(\"g8947283d\")); // with capital letters","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"        assertTrue(Nric.isValidNric(\"m8749508e\")); // long names","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        Nric nric \u003d new Nric(\"S1234567A\");","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"        assertTrue(nric.equals(new Nric(\"S1234567A\")));","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"        assertTrue(nric.equals(nric));","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"        assertFalse(nric.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"        assertFalse(nric.equals(5.0f));","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"        assertFalse(nric.equals(new Nric(\"S0123456A\")));","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":60}},{"path":"src/test/java/seedu/address/model/person/PatientNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"public class PatientNameContainsKeywordsPredicateTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"        PatientNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"        PatientNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"        PatientNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_predicateReturnsPatientsOnly() {","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"Alice\");","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"        PatientNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"        // Object type Patient -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"        Patient p \u003d new Patient(new Nric(\"T1234567A\"), new Name(\"Alice\"), new DoB(\"2001-01-01\"), new Phone(\"98765432\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(firstPredicate.test(p));","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"        Doctor d \u003d new Doctor(new Nric(\"T1234567A\"), new Name(\"Alice\"), new DoB(\"2001-01-01\"), new Phone(\"98765432\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"        // Object type Doctor -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(firstPredicate.test(d));","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"        // One keyword","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"        PatientNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientNameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"        // Multiple keywords","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new PatientNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"Kappaccinoh"},"content":"        // Only one matching keyword","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new PatientNameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"        // Mixed-case keywords","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new PatientNameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"Kappaccinoh"},"content":"        // Zero keywords","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"Kappaccinoh"},"content":"        PatientNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"Kappaccinoh"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new PatientNameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"Kappaccinoh"},"content":"        // // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"Kappaccinoh"},"content":"        // predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"Kappaccinoh"},"content":"        // assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"Kappaccinoh"},"content":"        // .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"Kappaccinoh"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"Kappaccinoh"},"content":"        PatientNameContainsKeywordsPredicate predicate \u003d new PatientNameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"Kappaccinoh"},"content":"        String expected \u003d PatientNameContainsKeywordsPredicate.class.getCanonicalName()","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"Kappaccinoh"},"content":"                + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Kappaccinoh":106}},{"path":"src/test/java/seedu/address/model/person/PatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"public class PatientTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"    public void isSamePerson() {","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).withDoB(VALID_DOB_BOB)","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"        // different name, all other attributes same -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"        Person editedBob \u003d new PatientBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"        editedBob \u003d new PatientBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"        Person aliceCopy \u003d new PatientBuilder(ALICE).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"        // different nric -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"        // different dob -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withDoB(VALID_DOB_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"        String expected \u003d Patient.class.getCanonicalName() + \"{type\u003d\" + ALICE.getType() + \", nric\u003d\" + ALICE.getNric()","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"                + \", name\u003d\" + ALICE.getName() + \", dob\u003d\" + ALICE.getDoB() + \", phone\u003d\" + ALICE.getPhone() + \"}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":86}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"//public class PersonTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"//    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"//        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"//    public void isSamePerson() {","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"//        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"//        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"//                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"//        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"//        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"//        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"//        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"//        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"//        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"//        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"//    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"//        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"//        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"//        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(ALICE.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"//        // different type -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(ALICE.equals(5));","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"//        // different name -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"//        // different phone -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"//        // different email -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"//        // different address -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"//        // different tags -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"//    public void toStringMethod() {","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"//        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"//                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \",","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"//                tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"//}","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"alfaloo"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"alfaloo"},"content":"    public void canNotInstantiate() {","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"alfaloo"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).withDoB(VALID_DOB_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"alfaloo"},"content":"        // different name, all other attributes same -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"alfaloo"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"alfaloo"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"alfaloo"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"alfaloo"},"content":"        Person editedBob \u003d new PatientBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"alfaloo"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"alfaloo"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"alfaloo"},"content":"        editedBob \u003d new PatientBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"alfaloo"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"alfaloo"},"content":"        Person aliceCopy \u003d new PatientBuilder(ALICE).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2024-03-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":172,"author":{"gitId":"alfaloo"},"content":"        // different nric -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":173,"author":{"gitId":"alfaloo"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":176,"author":{"gitId":"alfaloo"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":177,"author":{"gitId":"alfaloo"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":180,"author":{"gitId":"alfaloo"},"content":"        // different dob -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":181,"author":{"gitId":"alfaloo"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withDoB(VALID_DOB_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":184,"author":{"gitId":"alfaloo"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":185,"author":{"gitId":"alfaloo"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-11"},{"lineNumber":190,"author":{"gitId":"alfaloo"},"content":"        String expected \u003d Patient.class.getCanonicalName() + \"{type\u003d\" + ALICE.getType() + \", nric\u003d\" + ALICE.getNric()","lastModifiedDate":"2024-03-12"},{"lineNumber":191,"author":{"gitId":"alfaloo"},"content":"                + \", name\u003d\" + ALICE.getName() + \", dob\u003d\" + ALICE.getDoB() + \", phone\u003d\" + ALICE.getPhone() + \"}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":194,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":195,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":131,"-":63,"ararchch":2}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"//import java.util.Arrays;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"//import java.util.Collections;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"//import java.util.List;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"//public class UniquePersonListTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"//    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"//    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"//    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"//    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"//        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"//    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"//                .build();","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"//        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"//    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"//    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"//    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"//    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"//    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"//    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"//        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"//    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"//                .build();","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"//        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"//    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"//        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"alfaloo"},"content":"//    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.add(BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"alfaloo"},"content":"//    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"alfaloo"},"content":"//    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"alfaloo"},"content":"//    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.remove(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"alfaloo"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"alfaloo"},"content":"//    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"alfaloo"},"content":"//    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"alfaloo"},"content":"//        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"alfaloo"},"content":"//    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"alfaloo"},"content":"//    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"alfaloo"},"content":"//        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.setPersons(personList);","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"alfaloo"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"alfaloo"},"content":"//        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":157,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":158,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"alfaloo"},"content":"//    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"alfaloo"},"content":"//        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":165,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":166,"author":{"gitId":"alfaloo"},"content":"//    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":167,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2024-03-11"},{"lineNumber":168,"author":{"gitId":"alfaloo"},"content":"//            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2024-03-11"},{"lineNumber":169,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":170,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":171,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":172,"author":{"gitId":"alfaloo"},"content":"//    public void toStringMethod() {","lastModifiedDate":"2024-03-11"},{"lineNumber":173,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":174,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":175,"author":{"gitId":"alfaloo"},"content":"//}","lastModifiedDate":"2024-03-11"},{"lineNumber":176,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":181,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-11"},{"lineNumber":195,"author":{"gitId":"alfaloo"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2024-03-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2024-03-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2024-03-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":220,"author":{"gitId":"alfaloo"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2024-03-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":262,"author":{"gitId":"alfaloo"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2024-03-11"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2024-03-11"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2024-03-11"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2024-03-11"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2024-03-11"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2024-03-11"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2024-03-11"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2024-03-11"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2024-03-11"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2024-03-11"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2024-03-11"},{"lineNumber":341,"author":{"gitId":"alfaloo"},"content":"                -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2024-03-11"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-11"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":348,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":349,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":350,"author":{"gitId":"ararchch"},"content":"    public void getPersonByNric_uniquePersonListHasPerson_returnsPerson() {","lastModifiedDate":"2024-03-14"},{"lineNumber":351,"author":{"gitId":"ararchch"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":352,"author":{"gitId":"ararchch"},"content":"        assertEquals(ALICE, uniquePersonList.getPersonByNric(ALICE.getNric()));","lastModifiedDate":"2024-03-14"},{"lineNumber":353,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":354,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":355,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":356,"author":{"gitId":"ararchch"},"content":"    public void getPersonByNric_uniquePersonListIsEmpty_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":357,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":358,"author":{"gitId":"ararchch"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.getPersonByNric(ALICE.getNric()));","lastModifiedDate":"2024-03-14"},{"lineNumber":359,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":360,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":361,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":362,"author":{"gitId":"ararchch"},"content":"    public void getPersonByNric_uniquePersonListDoesNotHavePerson_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":363,"author":{"gitId":"ararchch"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":364,"author":{"gitId":"ararchch"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.getPersonByNric(new Nric(\"S1111111S\")));","lastModifiedDate":"2024-03-14"},{"lineNumber":365,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":366,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":367,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":368,"author":{"gitId":"ararchch"},"content":"    public void containsNric_validNric_returnsTrue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":369,"author":{"gitId":"ararchch"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-18"},{"lineNumber":370,"author":{"gitId":"ararchch"},"content":"        assertTrue(uniquePersonList.containsNric(ALICE.getNric().nric));","lastModifiedDate":"2024-03-18"},{"lineNumber":371,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":372,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":373,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":374,"author":{"gitId":"ararchch"},"content":"    public void containsNric_invalidNric_returnsFalse() {","lastModifiedDate":"2024-03-18"},{"lineNumber":375,"author":{"gitId":"ararchch"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-18"},{"lineNumber":376,"author":{"gitId":"ararchch"},"content":"        assertFalse(uniquePersonList.containsNric(BOB.getNric().nric));","lastModifiedDate":"2024-03-18"},{"lineNumber":377,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":378,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":379,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":380,"author":{"gitId":"ararchch"},"content":"    public void iterator_returnsIteratorNotNull() {","lastModifiedDate":"2024-03-18"},{"lineNumber":381,"author":{"gitId":"ararchch"},"content":"        assertNotNull(uniquePersonList.iterator());","lastModifiedDate":"2024-03-18"},{"lineNumber":382,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":383,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":384,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":385,"author":{"gitId":"ararchch"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":386,"author":{"gitId":"ararchch"},"content":"        assertTrue(uniquePersonList.equals(uniquePersonList));","lastModifiedDate":"2024-03-18"},{"lineNumber":387,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":388,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":389,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":390,"author":{"gitId":"ararchch"},"content":"    public void equals_differentClass_returnsFalse() {","lastModifiedDate":"2024-03-18"},{"lineNumber":391,"author":{"gitId":"ararchch"},"content":"        assertFalse(uniquePersonList.equals(\"hi\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":392,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":393,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":394,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":395,"author":{"gitId":"ararchch"},"content":"    public void hashcode_validInput_returnsValidHash() {","lastModifiedDate":"2024-03-18"},{"lineNumber":396,"author":{"gitId":"ararchch"},"content":"        int hash1 \u003d uniquePersonList.hashCode();","lastModifiedDate":"2024-03-18"},{"lineNumber":397,"author":{"gitId":"ararchch"},"content":"        int hash2 \u003d uniquePersonList.hashCode();","lastModifiedDate":"2024-03-18"},{"lineNumber":398,"author":{"gitId":"ararchch"},"content":"        assertNotNull(hash1);","lastModifiedDate":"2024-03-18"},{"lineNumber":399,"author":{"gitId":"ararchch"},"content":"        assertNotNull(hash2);","lastModifiedDate":"2024-03-18"},{"lineNumber":400,"author":{"gitId":"ararchch"},"content":"        assertEquals(hash1, hash2);","lastModifiedDate":"2024-03-18"},{"lineNumber":401,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":402,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":403,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":180,"-":167,"ararchch":56}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.DoB;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"public class JsonAdaptedPatientTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"    private static final String INVALID_NRIC \u003d \"Z123456\";","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"    private static final String INVALID_DOB \u003d \"2023-02-31\";","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    private static final String VALID_NRIC \u003d BENSON.getNric().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    private static final String VALID_DOB \u003d BENSON.getDoB().dateOfBirth.toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"    //    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"    //    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"    //        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"    //        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"    //    }","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"    public void toModelType_invalidNric_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"                new JsonAdaptedPerson(\"PATIENT\", INVALID_NRIC, VALID_NAME, VALID_DOB, VALID_PHONE);","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d Nric.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"    public void toModelType_nullNric_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(\"PATIENT\", null, VALID_NAME, VALID_DOB, VALID_PHONE);","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"                new JsonAdaptedPerson(\"PATIENT\", VALID_NRIC, INVALID_NAME, VALID_DOB, VALID_PHONE);","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(\"PATIENT\", VALID_NRIC, null, VALID_DOB, VALID_PHONE);","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"    public void toModelType_invalidDoB_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"                new JsonAdaptedPerson(\"PATIENT\", VALID_NRIC, VALID_NAME, INVALID_DOB, VALID_PHONE);","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d DoB.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"    public void toModelType_nullDoB_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(\"PATIENT\", VALID_NRIC, VALID_NAME, null, VALID_PHONE);","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, DoB.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"                new JsonAdaptedPerson(\"PATIENT\", VALID_NRIC, VALID_NAME, VALID_DOB, INVALID_PHONE);","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(\"PATIENT\", VALID_NRIC, VALID_NAME, VALID_DOB, null);","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":91}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"//package seedu.address.storage;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"//import java.util.List;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"//public class JsonAdaptedPersonTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"//    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"//    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"//    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"//    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"//    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"//    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"//    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"//    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"//    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"//    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"//            .map(JsonAdaptedTag::new)","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"//            .collect(Collectors.toList());","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"//    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"//    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"//                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"//        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"//    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"//    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"//                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"//        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"//    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"//    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"//        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"//    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"//    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"//        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"//    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"//    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"//        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"//        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"alfaloo"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"//}","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":158,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":168,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":173,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":178,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":121,"-":60}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"//package seedu.address.storage;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"//import java.io.IOException;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"//public class JsonAddressBookStorageTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"//    @TempDir","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"//    public Path testFolder;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"//    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"//    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"//        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"//    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"//        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"//                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"//                : null;","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"//    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"//    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"//    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"//    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"//    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"//        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"//        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"//        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"//        // Save in new file and read back","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"//        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"//        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"//        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"//        original.addPerson(HOON);","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"//        original.removePerson(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"//        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"//        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"//        // Save and read without specifying file path","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"//        original.addPerson(IDA);","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"//        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"//        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"//    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"//    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"//     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"//     */","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"//    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"//        try {","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"//            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"//                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"//        } catch (IOException ioe) {","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"//            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"//        }","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"//    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"//}","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2024-03-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2024-03-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2024-03-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2024-03-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2024-03-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2024-03-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2024-03-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2024-03-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2024-03-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2024-03-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2024-03-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2024-03-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2024-03-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2024-03-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2024-03-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2024-03-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2024-03-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-03-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2024-03-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-03-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2024-03-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2024-03-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2024-03-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-11"},{"lineNumber":218,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":112,"-":106}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    //    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    //    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"    //        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"    //                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"    //        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"    //        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"    //        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"    //    }","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    //    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"    //    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"    //        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"    //                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"    //        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"    //                dataFromFile::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"    //    }","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"alfaloo":18,"-":29}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"    //    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"    //    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"    //        /*","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"    //         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"    //         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"    //         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"    //         */","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"    //        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"    //        storageManager.saveAddressBook(original);","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"    //        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"    //        System.out.println(retrieved.equals(new AddressBook(retrieved)));","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"    //        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"    //    }","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"alfaloo":16,"-":53}},{"path":"src/test/java/seedu/address/testutil/AppointmentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.AppointmentDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"public class AppointmentBuilder {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"    public static final String DEFAULT_APPTDATE \u003d \"2024-08-30\";","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    private Nric doctorNric;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"    private Nric patientNric;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    private AppointmentDate appointmentDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"    public AppointmentBuilder() {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"        Doctor d \u003d new DoctorBuilder().build();","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"        Patient p \u003d new PatientBuilder().build();","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"        this.doctorNric \u003d d.getNric();","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"        this.patientNric \u003d p.getNric();","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"        this.appointmentDate \u003d new AppointmentDate(DEFAULT_APPTDATE);","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"     * Initializes the AppointmentBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"    public AppointmentBuilder(Appointment apptToCopy) {","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"        this.appointmentDate \u003d apptToCopy.getAppointmentDate();","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"        this.doctorNric \u003d apptToCopy.getDoctorNric();","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"        this.patientNric \u003d apptToCopy.getPatientNric();","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"     * Sets the {@code date} of the {@code Appointment} that we are building.","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"    public AppointmentBuilder withDate(String dateString) {","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"        this.appointmentDate \u003d new AppointmentDate(dateString);","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"        return this;","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"     * Sets the {@code doctorNric} of the {@code Appointment} that we are building.","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"    public AppointmentBuilder withDoctor(Doctor doctor) {","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"        this.doctorNric \u003d doctor.getNric();","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"        return this;","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"     * Sets the {@code patientNric} of the {@code Appointment} that we are building.","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"    public AppointmentBuilder withPatient(Patient patient) {","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"        this.patientNric \u003d patient.getNric();","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"        return this;","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"    public Appointment build() {","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"        return new Appointment(doctorNric, patientNric, appointmentDate);","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"Kappaccinoh":1,"ararchch":69}},{"path":"src/test/java/seedu/address/testutil/AppointmentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTORNRIC;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENTNRIC;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":" * A utility class for Appointment.","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"public class AppointmentUtil {","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"     * Returns an add command string for adding the {@code appointment}.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    public static String getAddAppointmentCommand(Appointment appointment) {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"        return AddAppointmentCommand.COMMAND_WORD + \" \" + getAppointmentDetails(appointment);","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    public static String getAppointmentDetails(Appointment appointment) {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"        sb.append(PREFIX_DOCTORNRIC + appointment.getDoctorNric().nric + \" \");","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"        sb.append(PREFIX_PATIENTNRIC + appointment.getPatientNric().nric + \" \");","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"        sb.append(PREFIX_DATE + appointment.getAppointmentDate().appointmentDate.format(formatter) + \" \");","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"Kappaccinoh":1,"ararchch":34}},{"path":"src/test/java/seedu/address/testutil/DoctorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.DoB;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Type;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"public class DoctorBuilder {","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"    public static final String DEFAULT_NRIC \u003d \"S1234567A\";","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"    public static final String DEFAULT_DOB \u003d \"2002-01-30\";","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"    private Nric nric;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"    private Name name;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"    private DoB dob;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"    private Phone phone;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"officialchengyud"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"    public DoctorBuilder() {","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"officialchengyud"},"content":"        nric \u003d new Nric(DEFAULT_NRIC);","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"        dob \u003d new DoB(DEFAULT_DOB);","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"officialchengyud"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"    public DoctorBuilder(Person doctorToCopy) {","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"        if (doctorToCopy.getType() !\u003d Type.DOCTOR) {","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"            throw new RuntimeException();","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"        nric \u003d doctorToCopy.getNric();","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"officialchengyud"},"content":"        name \u003d doctorToCopy.getName();","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"        dob \u003d doctorToCopy.getDoB();","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"        phone \u003d doctorToCopy.getPhone();","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"officialchengyud"},"content":"     * Sets the {@code Nric} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"officialchengyud"},"content":"    public DoctorBuilder withNric(String nric) {","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"officialchengyud"},"content":"        this.nric \u003d new Nric(nric);","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"officialchengyud"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"officialchengyud"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"officialchengyud"},"content":"    public DoctorBuilder withName(String name) {","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"officialchengyud"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"officialchengyud"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"officialchengyud"},"content":"     * Sets the {@code DoB} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"officialchengyud"},"content":"    public DoctorBuilder withDoB(String dob) {","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"officialchengyud"},"content":"        this.dob \u003d new DoB(dob);","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"officialchengyud"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"officialchengyud"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"officialchengyud"},"content":"    public DoctorBuilder withPhone(String phone) {","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"officialchengyud"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"officialchengyud"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"officialchengyud"},"content":"    public Doctor build() {","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"officialchengyud"},"content":"        return new Doctor(nric, name, dob, phone);","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"officialchengyud":85}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"        //        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"        //        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"        //        descriptor.setTags(person.getTags());","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"alfaloo":3,"-":84}},{"path":"src/test/java/seedu/address/testutil/PatientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.DoB;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Type;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"public class PatientBuilder {","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"    public static final String DEFAULT_NRIC \u003d \"S1234567A\";","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"    public static final String DEFAULT_DOB \u003d \"2002-01-30\";","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    private Nric nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"    private Name name;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    private DoB dob;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    private Phone phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"    public PatientBuilder() {","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"        nric \u003d new Nric(DEFAULT_NRIC);","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"        dob \u003d new DoB(DEFAULT_DOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    public PatientBuilder(Person patientToCopy) {","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"        if (patientToCopy.getType() !\u003d Type.PATIENT) {","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"            throw new RuntimeException();","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        nric \u003d patientToCopy.getNric();","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"        name \u003d patientToCopy.getName();","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"        dob \u003d patientToCopy.getDoB();","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"        phone \u003d patientToCopy.getPhone();","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"     * Sets the {@code Nric} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"    public PatientBuilder withNric(String nric) {","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"        this.nric \u003d new Nric(nric);","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"    public PatientBuilder withName(String name) {","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"     * Sets the {@code DoB} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"    public PatientBuilder withDoB(String dob) {","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"        this.dob \u003d new DoB(dob);","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"    public PatientBuilder withPhone(String phone) {","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"    public Patient build() {","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"        return new Patient(nric, name, dob, phone);","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":85}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"//import java.util.HashSet;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"//import java.util.Set;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"///**","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"// * A utility class to help with building Person objects.","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"// */","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"//public class PersonBuilder {","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"//    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"//    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"//    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"//    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"//    private Name name;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"//    private Phone phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"//    private Email email;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"//    private Address address;","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"//    private Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"//    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"//     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"//     */","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"//    public PersonBuilder() {","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"//        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"//        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"//        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"//        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"//        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"//    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"//     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"//     */","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"//    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"//        name \u003d personToCopy.getName();","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"//        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"//        email \u003d personToCopy.getEmail();","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"//        address \u003d personToCopy.getAddress();","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"//        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"//    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"//     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"//     */","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"//    public PersonBuilder withName(String name) {","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"//        this.name \u003d new Name(name);","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"//        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"//    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"//     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"//     */","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"//    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"//        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"//        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"//    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"//     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"//     */","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"//    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"//        this.address \u003d new Address(address);","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"//        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"//    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"//     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"//     */","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"//    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"//        this.phone \u003d new Phone(phone);","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"//        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"//    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"//     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"//     */","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"//    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"//        this.email \u003d new Email(email);","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"//        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"//    public Person build() {","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"//        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"//}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":96}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"    public static String getAddPatientCommand(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"        return AddPatientCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"    public static String getAddDoctorCommand(Person person) {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"        return AddDoctorCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        sb.append(PREFIX_NRIC + person.getNric().nric + \" \");","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"        sb.append(PREFIX_DOB + person.getDoB().dateOfBirth.toString() + \" \");","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Alteqa":6,"alfaloo":7,"-":56}},{"path":"src/test/java/seedu/address/testutil/TypicalAppointments.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalPersons.BROWN;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"officialchengyud"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":" * A utility class containing a list of {@code Appointments } objects to be used in tests.","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"public class TypicalAppointments {","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"    public static final Appointment APPOINTMENT_1 \u003d new AppointmentBuilder().withDate(\"2124-03-19\")","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"            .withDoctor((Doctor) BROWN).withPatient((Patient) ALICE).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"    public static final Appointment APPOINTMENT_2 \u003d new AppointmentBuilder().withDate(\"2124-03-20\")","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"            .withDoctor((Doctor) BROWN).withPatient((Patient) ALICE).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"    public static final Appointment APPOINTMENT_3 \u003d new AppointmentBuilder().withDate(\"2124-03-25\")","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"            .withDoctor((Doctor) BROWN).withPatient((Patient) ALICE).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"    public static final Appointment APPOINTMENT_4 \u003d new AppointmentBuilder().withDate(\"2124-03-30\")","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"            .withDoctor((Doctor) BROWN).withPatient((Patient) BENSON).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"    private TypicalAppointments() {} // prevents instantiation","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"     * Returns an {@code AddressBook} with all the typical appointments.","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"officialchengyud"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"        for (Appointment appointment : getTypicalAppointments()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"officialchengyud"},"content":"            ab.addAppointment(appointment);","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"        return ab;","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"    public static List\u003cAppointment\u003e getTypicalAppointments() {","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"                APPOINTMENT_1, APPOINTMENT_2, APPOINTMENT_3, APPOINTMENT_4","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"        ));","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"officialchengyud":37,"Kappaccinoh":10}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    public static final Person ALICE \u003d new PatientBuilder().withNric(\"S1234567A\").withName(\"Alice Pauline\")","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"            .withDoB(\"2000-01-03\").withPhone(\"94351253\").build();","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"    public static final Person BENSON \u003d new PatientBuilder().withNric(\"S8734985A\").withName(\"Benson Chen\")","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"            .withDoB(\"2002-01-03\").withPhone(\"88927639\").build();","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"    //Patients","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    public static final Person CARL \u003d new PatientBuilder().withNric(\"S2378593A\").withName(\"Carl Sim\")","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"            .withDoB(\"2005-01-03\").withPhone(\"87436749\").build();","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"    public static final Person AMY \u003d new PatientBuilder().withNric(VALID_NRIC_AMY).withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"            .withDoB(VALID_DOB_AMY).withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"Alteqa"},"content":"    public static final Person BOB \u003d new PatientBuilder().withNric(VALID_NRIC_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"            .withDoB(VALID_DOB_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"    public static final Person CARL_GOH \u003d new PatientBuilder().withNric(\"S1234343B\").withName(\"Carl Goh\")","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"            .withDoB(\"2001-02-24\").withPhone(\"98173241\").build();","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"    // Doctors","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"    public static final Person BROWN \u003d new DoctorBuilder().withNric(\"S2378593A\").withName(\"Brown Goh\")","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"officialchengyud"},"content":"            .withDoB(\"2005-01-03\").withPhone(\"87436749\").build();","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Alteqa"},"content":"    public static final Person DAMES \u003d new DoctorBuilder().withNric(\"S1234367A\").withName(\"Dames Tan\")","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"Alteqa"},"content":"            .withDoB(\"2020-01-03\").withPhone(\"94351223\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"Alteqa"},"content":"    public static final Person DAMES_GOH \u003d new DoctorBuilder().withNric(\"S1124133A\").withName(\"Dames Goh\")","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"Alteqa"},"content":"            .withDoB(\"2010-01-04\").withPhone(\"94353243\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"Alteqa"},"content":"    public static final Person ERIN \u003d new DoctorBuilder().withNric(\"T0232948D\").withName(\"Erin Cher\")","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"Alteqa"},"content":"            .withDoB(\"2002-01-04\").withPhone(\"98765433\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"    public static final Person FROWN \u003d new DoctorBuilder().withNric(\"S2378493A\").withName(\"Frown Lee\")","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"Alteqa"},"content":"            .withDoB(\"2004-01-03\").withPhone(\"87433749\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"Alteqa"},"content":"    public static final Person GON \u003d new DoctorBuilder().withNric(\"S2378393A\").withName(\"Gon Tan\")","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"Alteqa"},"content":"            .withDoB(\"2005-01-02\").withPhone(\"87432349\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"Kappaccinoh"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"Kappaccinoh"},"content":"                ALICE,","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"Kappaccinoh"},"content":"                BENSON,","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"                BOB,","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"Alteqa"},"content":"                CARL,","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"Alteqa"},"content":"                CARL_GOH,","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"Alteqa"},"content":"                DAMES,","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"Alteqa"},"content":"                DAMES_GOH,","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"Alteqa"},"content":"                ERIN,","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"Alteqa"},"content":"                GON","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"Kappaccinoh"},"content":"        ));","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Alteqa":20,"alfaloo":13,"officialchengyud":3,"Kappaccinoh":8,"-":40}},{"path":"src/test/java/seedu/address/ui/PersonCardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"public class PersonCardTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    private static final int INDEX \u003d 1;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"    private PersonCard personCard;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"    private Person samplePerson;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"    public void constructor_validPerson_correctFields() {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"    public void display() {","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"    public void equals_nullObject_returnsFalse() {","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"    public void hashCode_validHashCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"alfaloo":45}}]
