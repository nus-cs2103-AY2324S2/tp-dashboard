[{"path":".github/workflows/gradle.yml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"name: Java CI","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"on: [push, pull_request]","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"jobs:","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  build:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    strategy:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      matrix:","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        platform: [ubuntu-latest, macos-latest, windows-latest]","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    runs-on: ${{ matrix.platform }}","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    steps:","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      - name: Set up repository","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        uses: actions/checkout@main","lastModifiedDate":"2020-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      - name: Set up repository","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        uses: actions/checkout@main","lastModifiedDate":"2020-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        with:","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"          ref: master","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      - name: Merge to master","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        run: git checkout --progress --force ${{ github.sha }}","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      - name: Run repository-wide tests","lastModifiedDate":"2020-06-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        if: runner.os \u003d\u003d \u0027Linux\u0027","lastModifiedDate":"2020-06-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        working-directory:  ${{ github.workspace }}/.github","lastModifiedDate":"2020-06-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        run: ./run-checks.sh","lastModifiedDate":"2020-06-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      - name: Validate Gradle Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        uses: gradle/wrapper-validation-action@v1","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      - name: Setup JDK 11","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        uses: actions/setup-java@v1","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        with:","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          java-version: \u002711\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          java-package: jdk+fx","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      - name: Build and check with Gradle","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        run: ./gradlew check coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      - name: Upload coverage reports to Codecov","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if: runner.os \u003d\u003d \u0027Linux\u0027","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        uses: codecov/codecov-action@v3","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        env:","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"#        with:","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"#          fail_ci_if_error: false","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"alfaloo":2,"-":45}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T15-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T15-1/tp/actions)","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T15-1/tp/graph/badge.svg?token\u003dTJTWL1WNJF)](https://codecov.io/gh/AY2324S2-CS2103T-T15-1/tp)","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"# MediCLI: Hospital Patient Management System","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"MediCLI is a patient management system designed for hospitals. MediCLI enables the management of patient, doctor, and appointment data.","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"## Example usages:","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"1. Used by hospital clerks to manage hospital records for relevant stake holders.","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"2. Core functions offered include add, delete, query for patients, doctors and appointments.","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"## Context of the project","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"* The project simulates an ongoing software project for a desktop application (called _MediCLI_) used for managing contact details.","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"  * It is **written in OOP fashion**. It is meant as a project for a SE module to teach basic SE principles.","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"* For the detailed documentation of this project, see the **[MediCLI Product Website](https://ay2324s2-cs2103t-t15-1.github.io/tp/UserGuide.html)**.","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"-":5,"ararchch":17}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"    archiveFileName \u003d \u0027MediCLI.jar\u0027","lastModifiedDate":"2024-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"officialchengyud"},"content":"run {","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"officialchengyud"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"alfaloo":1,"officialchengyud":2,"-":73}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"### Zhiyang Lu","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"\u003cimg src\u003d\"images/alfaloo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"[[homepage](www.linkedin.com/in/zhiyanglu)]","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"[[github](https://github.com/alfaloo)]","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"[[portfolio](https://github.com/alfaloo/CV/blob/main/Zhiyang_Lu_Resume.pdf)]","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"* Role: Deliverables and Deadline / Integration","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"* Responsibilities: Ensure project deliverables are done on time and in the right format. In charge of versioning of the code, maintaining the code repository, integrating various parts of the software to create a whole.","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"### Cheng-Yu Dong","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"\u003cimg src\u003d\"images/officialchengyud.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"[[github](https://github.com/officialchengyud)]","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"[[portfolio](www.linkedin.com/in/dongchengyu)]","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"* Role: Code Quality / Integration","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"* Responsibilities: Looks after code quality, ensures adherence to coding standards, etc. In charge of versioning of the code, maintaining the code repository, integrating various parts of the software to create a whole.","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"### Lim Jia Wei","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"\u003cimg src\u003d\"images/kappaccinoh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"[[github](http://github.com/Kappaccinoh)] [[portfolio](https://www.linkedin.com/in/jia-wei-lim-747037181/)]","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"* Role: Scheduling / Testing","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"* Responsibilities: Ensures the testing of the project is done properly and on time. In charge of defining, assigning, and tracking project tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"### Archit Goswami","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"\u003cimg src\u003d\"images/ararchch.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"[[github](http://github.com/ararchch)]","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"[[portfolio](https://www.linkedin.com/in/architgos)]","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"* Role: Team Lead, Documentation","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"* Responsibilities: Coordinating with team members, ensuring code is well documented.","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Alteqa"},"content":"### Eugene Luke Sim Ek Jin","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Alteqa"},"content":"\u003cimg src\u003d\"images/alteqa.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"Alteqa"},"content":"[[github](http://github.com/alteqa)]","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"Alteqa"},"content":"[[portfolio](https://www.linkedin.com/in/eugene-sim-866677188/)]","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"Alteqa"},"content":"* Role: Documentation, Testing, Intellij / Github Expert","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"Alteqa"},"content":"* Responsibilities: Ensures the testing of the project is done properly and on time. Responsible for the quality of various project documents.","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"Alteqa"},"content":"* Helps other team member with matters related to Intellij, Github and Sourcetree tool.","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"Alteqa":7,"alfaloo":5,"officialchengyud":8,"Kappaccinoh":5,"-":31,"ararchch":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"### Dong Cheng-Yu\u0027s Acknowledgements","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"- Used ChatGPT to assist in writing Javadocs for AddDoctorCommandParser, AddDoctorCommand, and DeleteAppointmentCommandParser.","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"### Lu Zhiyang\u0027s Acknowledgements","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"- Used ChatGPT to assist in writing Javadocs for AddPatientCommandParser, AddPatientCommand, EditAppointmentCommandParser, EditAppointmentCommand.","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"### Lim Jia Wei\u0027s Acknowledgements","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"- Used ChatGPT to assist in writing Javadocs for QueryDoctorAppointmentCommand, QueryPatientAppointmentCommand, QueryDoctorAppointmentCommandParser, QueryPatientAppointmentCommandParser, QueryPatientCommand and QueryPatientCommandParser.","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"- Used ChatGPT to assist in writing parts of User Guide and Developer Guide and test code.","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"### Sim Eugene\u0027s Acknowledgements","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"- Used ChatGPT to assist in writing Javadocs for","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"  EditCommand, EditCommandParser and QueryDoctorCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"### Goswami Archit\u0027s Acknowledgements","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"- Used ChatGPT to assist in writing Javadocs for getPersonByNric(), addAppointment(), hasAppointment(), deleteAppointment() methods, and to write some javafx code","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Alteqa"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document are in the `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Alteqa"},"content":"The ***Architecture Diagram*** given above explains the high-level design of MediCLI and the various components.","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S2-CS2103T-T15-1/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2324S2-CS2103T-T15-1/tp/blob/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"Alteqa"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `addpatient`.","lastModifiedDate":"2024-04-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S2-CS2103T-T15-1/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2024-04-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `AppointmentListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S2-CS2103T-T15-1/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S2-CS2103T-T15-1/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"* depends on some classes in the `Model` component, as it displays `Person` (`Doctor` or `Patient`) and `Appointment` objects residing in the `Model`.","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"officialchengyud"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S2-CS2103T-T15-1/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"officialchengyud"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"450\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"officialchengyud"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `AddDoctorCommandParser`) and uses it to parse the command.","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"officialchengyud"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddDoctorCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"officialchengyud"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a doctor).\u003cbr\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"Alteqa"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddPatientCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddPatientCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2024-04-15"},{"lineNumber":130,"author":{"gitId":"Alteqa"},"content":"* All `XYZCommandParser` classes (e.g., `AddPatientCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2024-04-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"Kappaccinoh"},"content":"* stores the address book data i.e., all `Person` derivative objects (which are contained in a `UniquePersonList` object) and","lastModifiedDate":"2024-03-21"},{"lineNumber":140,"author":{"gitId":"Alteqa"},"content":"* all `Appointment` objects (which are contained in a `UniqueAppointmentList` object) stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query, either a `Patient` or `Doctor` instance) and `Appointment` object (e.g results of an query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` and `ObservableList\u003cAppointment\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2024-04-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"Alteqa"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model` such as `Appointment` and `Patient`)","lastModifiedDate":"2024-04-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented. ","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"ararchch"},"content":"The section is structured as follows:","lastModifiedDate":"2024-04-15"},{"lineNumber":166,"author":{"gitId":"ararchch"},"content":"- We first dive into the implementation of the `Appointment` - a special entity type that MediCLI tracks.","lastModifiedDate":"2024-04-15"},{"lineNumber":167,"author":{"gitId":"alfaloo"},"content":"- We then explore what happens when the `execute` method of different types of `Commands` is called.","lastModifiedDate":"2024-04-15"},{"lineNumber":168,"author":{"gitId":"ararchch"},"content":"- Finally, we look at how MediCLI deals with incorrect user inputs for operations on both `Persons` and `Appointments`","lastModifiedDate":"2024-04-15"},{"lineNumber":169,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":170,"author":{"gitId":"ararchch"},"content":"Through this, we hope to give you a thorough overview of how MediCLI\u0027s main features are implemented.","lastModifiedDate":"2024-04-15"},{"lineNumber":171,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":172,"author":{"gitId":"ararchch"},"content":"### Understanding `Appointments`: A new entity type","lastModifiedDate":"2024-04-15"},{"lineNumber":173,"author":{"gitId":"ararchch"},"content":"MediCLI offers support for appointments, represented by the `Appointment` class on top of existing support for Doctors and Patients.","lastModifiedDate":"2024-04-15"},{"lineNumber":174,"author":{"gitId":"ararchch"},"content":"At the crux of it, the `Appointment` class aims to reflect the essence of a medical appointment in real life, which involves a doctor and a patient and takes place at a specific time.","lastModifiedDate":"2024-04-15"},{"lineNumber":175,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":176,"author":{"gitId":"ararchch"},"content":"The class diagram below displays the structure of the `Appointment` class.","lastModifiedDate":"2024-04-15"},{"lineNumber":177,"author":{"gitId":"ararchch"},"content":"\u003cimg src\u003d\"images/AppointmentClassDiagram.png\" width\u003d\"800\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":178,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":179,"author":{"gitId":"ararchch"},"content":"As visible, the `Appointment` class contains references to the following classes:","lastModifiedDate":"2024-04-15"},{"lineNumber":180,"author":{"gitId":"ararchch"},"content":"- **`Nric`**: a doctor\u0027s \u0026 a patient\u0027s NRIC number","lastModifiedDate":"2024-04-15"},{"lineNumber":181,"author":{"gitId":"ararchch"},"content":"- **`AppointmentDateTime`**: Date and time of the appointment","lastModifiedDate":"2024-04-15"},{"lineNumber":182,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":183,"author":{"gitId":"alfaloo"},"content":"The appointment class must have reference to exactly 2 `Nric` objects and 1 `AppointmentDateTime` object.","lastModifiedDate":"2024-04-15"},{"lineNumber":184,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":185,"author":{"gitId":"ararchch"},"content":"Below is an object diagram demonstrating a possible appointment object.","lastModifiedDate":"2024-04-15"},{"lineNumber":186,"author":{"gitId":"ararchch"},"content":"\u003cimg src\u003d\"images/AppointmentObjectDiagram.png\" width\u003d\"800\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":187,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":188,"author":{"gitId":"ararchch"},"content":"In the object diagram you see that two instances of the Nric class have been instantiated, one as `doctorNric`, and one as `patientNric`. This of course is along with the `appointmentDateTime`.","lastModifiedDate":"2024-04-15"},{"lineNumber":189,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":190,"author":{"gitId":"ararchch"},"content":"An instance of the `Appointment` class can only be created if the date \u0026 time of the appointment is \u003e\u003d the current date and time. This is enforced through the `isValidAppointmentDateTime` method in the `Appointment` class.","lastModifiedDate":"2024-04-15"},{"lineNumber":191,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":192,"author":{"gitId":"ararchch"},"content":"#### Context and thought process behind implementation:","lastModifiedDate":"2024-04-15"},{"lineNumber":193,"author":{"gitId":"ararchch"},"content":"Implementing `Appointments` naturally involved many design decisions, and here we have attempted to outline the thought process behind our current implementation:","lastModifiedDate":"2024-04-15"},{"lineNumber":194,"author":{"gitId":"ararchch"},"content":"* One key focus of the `Appointment` implementation was to keep it as similar to the implementation of `Patients` and `Doctors`.","lastModifiedDate":"2024-04-15"},{"lineNumber":195,"author":{"gitId":"ararchch"},"content":"* The idea is that at the end of the day, the `Appointment` is simply another type of entry being tracked.","lastModifiedDate":"2024-04-15"},{"lineNumber":196,"author":{"gitId":"ararchch"},"content":"* Nevertheless, it is natural that both in the UI and backend, we would want to differentiate the `Appointment` entries from the `Patient`/`Doctor` entries to ensure that the system is more flexible and easy to expand on in the future.","lastModifiedDate":"2024-04-15"},{"lineNumber":197,"author":{"gitId":"ararchch"},"content":"* Hence, while similar in terms of the functionality, a lot of the infrastructure to handle `Appointments` was built parallel to the one for `Patient`/`Doctor` entries.","lastModifiedDate":"2024-04-15"},{"lineNumber":198,"author":{"gitId":"ararchch"},"content":"  * For instance, there is a separate `UniqueAppointmentList` class for storing and manipulating `Appointments` that functions very similar to the equivalent list for `Patient`/`Doctor` entries (`UniquePersonList`).","lastModifiedDate":"2024-04-15"},{"lineNumber":199,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":200,"author":{"gitId":"ararchch"},"content":"#### Implementation and justification:","lastModifiedDate":"2024-04-15"},{"lineNumber":201,"author":{"gitId":"ararchch"},"content":"* Based on the thought process, the approach taken was to ensure MediCLI had the same way of handling `Appointments` and `Patients`/`Doctors`.","lastModifiedDate":"2024-04-15"},{"lineNumber":202,"author":{"gitId":"ararchch"},"content":"* The overall structure including how `Appointments` are stored, managed etc. is largely similar to support debugging and improve readability and comprehension.","lastModifiedDate":"2024-04-15"},{"lineNumber":203,"author":{"gitId":"ararchch"},"content":"* In other words, if you understand how MediCLI manages `Patients`/`Doctors`, you will also understand how it manages `Appointments`.","lastModifiedDate":"2024-04-15"},{"lineNumber":204,"author":{"gitId":"ararchch"},"content":"* Some differences are however inevitable and have been listed below:","lastModifiedDate":"2024-04-15"},{"lineNumber":205,"author":{"gitId":"ararchch"},"content":"  * `Appointment` objects include `doctorNric`, `patientNric` as attributes. A `Doctor` and `Patient` with the corresponding NRIC number must already exist before the `Appointment` was created.","lastModifiedDate":"2024-04-15"},{"lineNumber":206,"author":{"gitId":"ararchch"},"content":"  * `Appointments` are stored in a separate list in the backend, called the `UniqueAppointmentList`, to allow for different operations and flexibility down the line.","lastModifiedDate":"2024-04-15"},{"lineNumber":207,"author":{"gitId":"ararchch"},"content":"  * In terms of the UI, `Appointments` appear in a separate column to ensure that the user is able to clearly distinguish between them.","lastModifiedDate":"2024-04-15"},{"lineNumber":208,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":209,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":210,"author":{"gitId":"ararchch"},"content":"#### Alternatives considered","lastModifiedDate":"2024-04-15"},{"lineNumber":211,"author":{"gitId":"ararchch"},"content":"* One key alternative we looked at was storing `Appointment` objects with `Patient` and `Doctor` objects as part of the same list i.e. `UniquePersonList`.","lastModifiedDate":"2024-04-15"},{"lineNumber":212,"author":{"gitId":"ararchch"},"content":"* This would mean changing the `Person` class to a different one such as `Entry` and have all three of `Patient` , `Doctor` and `Appointment` extend from the `Entry` class.","lastModifiedDate":"2024-04-15"},{"lineNumber":213,"author":{"gitId":"ararchch"},"content":"* We decided against this because we thought that it was not the most OOP friendly solution and would not allow for flexibility down the line.","lastModifiedDate":"2024-04-15"},{"lineNumber":214,"author":{"gitId":"ararchch"},"content":"  * Eg: what if we wanted to add a feature that showed all `Appointments` for a set of `Patients` between a set of dates? Having them in the same list would be unintuitive and make the filtration and display quite cumbersome.","lastModifiedDate":"2024-04-15"},{"lineNumber":215,"author":{"gitId":"ararchch"},"content":"* Furthermore, it might get confusing for the user if everything was dumped into the same list for them to sieve through. Perhaps the user was only concerned with looking up `Patients` in which case the `Appointments` would simply be added clutter.","lastModifiedDate":"2024-04-15"},{"lineNumber":216,"author":{"gitId":"ararchch"},"content":"* The increased level of integration would also be problems for implementation and testing as existing functionality would have to be adapated, exposing the system to more risks and potential for bugs.","lastModifiedDate":"2024-04-15"},{"lineNumber":217,"author":{"gitId":"ararchch"},"content":"  * Eg: the class in question would have to change from `Person` to `Entry` in a number of different places.","lastModifiedDate":"2024-04-15"},{"lineNumber":218,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":219,"author":{"gitId":"ararchch"},"content":"### Understanding how MediCLI executes different types of commands","lastModifiedDate":"2024-04-15"},{"lineNumber":220,"author":{"gitId":"alfaloo"},"content":"MediCLI currently supports four main types of functionality, namely: add, edit, query, and delete. Each of these functionalities are supported for both people (patient \u0026 doctor) and appointments through different command words.","lastModifiedDate":"2024-04-15"},{"lineNumber":221,"author":{"gitId":"alfaloo"},"content":"However, different commands of the same functionality are analougous to each other to enhance readablity and expandability.","lastModifiedDate":"2024-04-15"},{"lineNumber":222,"author":{"gitId":"alfaloo"},"content":"Furthermore, all of the commands extend the main `Command` class, thus the primary difference between each of them is within their `execute` methods. For their general implementation, please refer the \"Logic component\" section above.","lastModifiedDate":"2024-04-15"},{"lineNumber":223,"author":{"gitId":"alfaloo"},"content":"This section will explore the implemention of the `execute` methods for each of the four functionalities.","lastModifiedDate":"2024-04-15"},{"lineNumber":224,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":225,"author":{"gitId":"alfaloo"},"content":"#### Add Functionality","lastModifiedDate":"2024-04-15"},{"lineNumber":226,"author":{"gitId":"officialchengyud"},"content":"\u003ci\u003e\u003cb\u003eNote\u003c/b\u003e: Add `patient` and `doctor` has been grouped together as they are very similar in implementation.","lastModifiedDate":"2024-04-12"},{"lineNumber":227,"author":{"gitId":"officialchengyud"},"content":"This reduces repetition of information and increases clarity.\u003c/i\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":228,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":229,"author":{"gitId":"officialchengyud"},"content":"Adds a new `Patient` or `Doctor` entry by indicating their `NRIC`, `Name`, `DoB`, and `Phone`.","lastModifiedDate":"2024-04-12"},{"lineNumber":230,"author":{"gitId":"officialchengyud"},"content":"This command is implemented through the `AddPatientCommand` for patient and `AddDoctorCommand` for doctor class which both extend the `Command` class.","lastModifiedDate":"2024-04-12"},{"lineNumber":231,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":232,"author":{"gitId":"Alteqa"},"content":"Add command execution sequence:","lastModifiedDate":"2024-04-15"},{"lineNumber":233,"author":{"gitId":"Alteqa"},"content":"* Step 1. The `execute` method of the `AddPatientCommand` is called.","lastModifiedDate":"2024-04-15"},{"lineNumber":234,"author":{"gitId":"Alteqa"},"content":"* Step 2. The method calls the `hasPerson` method of `Model` to check if there are any duplicate patients.","lastModifiedDate":"2024-04-15"},{"lineNumber":235,"author":{"gitId":"Alteqa"},"content":"  * If there is a duplicate person, the method throws `CommandException` and calls the `log` method of `logger` to log the incident.","lastModifiedDate":"2024-04-15"},{"lineNumber":236,"author":{"gitId":"Alteqa"},"content":"* Step 3. The `addPerson` method of `Model` is then called and the control is passed back to the `execute` method.","lastModifiedDate":"2024-04-15"},{"lineNumber":237,"author":{"gitId":"Alteqa"},"content":"* Step 4. The `log` method of `logger` is then called to log the successful command execution.","lastModifiedDate":"2024-04-15"},{"lineNumber":238,"author":{"gitId":"Alteqa"},"content":"* Step 5. A new `CommandResult` object with the success message is then created and returned by `execute`.","lastModifiedDate":"2024-04-15"},{"lineNumber":239,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":240,"author":{"gitId":"alfaloo"},"content":"This is the sequence of command execution for `execute` in `AddPatientCommand`, however `AddDoctorCommand` and `AddAppointmentCommand` follow similar design patterns within the execute command.","lastModifiedDate":"2024-04-15"},{"lineNumber":241,"author":{"gitId":"alfaloo"},"content":"\u003cimg src\u003d\"images/AddPatientCommandExecuteSequenceDiagram.png\" width\u003d\"800\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":242,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":243,"author":{"gitId":"alfaloo"},"content":"#### Edit Functionality","lastModifiedDate":"2024-04-15"},{"lineNumber":244,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":245,"author":{"gitId":"Alteqa"},"content":"Edits a `doctor` or `patient` entry by indicating their `Index`.","lastModifiedDate":"2024-04-12"},{"lineNumber":246,"author":{"gitId":"Alteqa"},"content":"This command is implemented through the `EditCommand` class which extends the `Command` class.","lastModifiedDate":"2024-04-12"},{"lineNumber":247,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":248,"author":{"gitId":"Alteqa"},"content":"This is the sequence of command execution for `execute` in `EditCommand`, however `EditAppointmentCommand` follow a similar design pattern within the `execute` command.","lastModifiedDate":"2024-04-15"},{"lineNumber":249,"author":{"gitId":"Alteqa"},"content":"* Step 1. The `execute` method of the `EditCommand` is called.","lastModifiedDate":"2024-04-15"},{"lineNumber":250,"author":{"gitId":"Alteqa"},"content":"* Step 2. The method calls the `getFilteredPersonList` method of `Model` and returns the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":251,"author":{"gitId":"Alteqa"},"content":"* Step 3. The command checks whether the index of the command is valid by comparing the value returned by the `getZeroBased` method of `index` to the size of the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":252,"author":{"gitId":"Alteqa"},"content":"  * If the index is invalid, the command throws `CommandException`.","lastModifiedDate":"2024-04-15"},{"lineNumber":253,"author":{"gitId":"Alteqa"},"content":"* Step 4. The `createEditedPerson` method is called and returns a new edited person.","lastModifiedDate":"2024-04-15"},{"lineNumber":254,"author":{"gitId":"Alteqa"},"content":"* Step 5. The method calls the `hasPerson` method of `Model` to check if there are any duplicate persons.","lastModifiedDate":"2024-04-15"},{"lineNumber":255,"author":{"gitId":"Alteqa"},"content":"  * If there are duplicates, the command throws `CommandException`.","lastModifiedDate":"2024-04-15"},{"lineNumber":256,"author":{"gitId":"Alteqa"},"content":"* Step 6. The `setPerson` method of `Model` is called and control is then passed back to the `execute` method.","lastModifiedDate":"2024-04-15"},{"lineNumber":257,"author":{"gitId":"Alteqa"},"content":"* Step 7. The `updateFilteredPersonList` method of `Model` is called to update the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":258,"author":{"gitId":"Alteqa"},"content":"* Step 8. A new `CommandResult` with the success message is then created and returned by `execute`.","lastModifiedDate":"2024-04-15"},{"lineNumber":259,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":260,"author":{"gitId":"alfaloo"},"content":"The sequence diagram below demonstrates the command execution steps for `execute` method in `EditCommand`.","lastModifiedDate":"2024-04-15"},{"lineNumber":261,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":262,"author":{"gitId":"alfaloo"},"content":"\u003cimg src\u003d\"images/EditCommandExecuteSequenceDiagram.png\" width\u003d\"800\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":263,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":264,"author":{"gitId":"alfaloo"},"content":"#### Querying Functionality","lastModifiedDate":"2024-04-15"},{"lineNumber":265,"author":{"gitId":"alfaloo"},"content":"This section describes the general sequence for commands that query entities. MediCLI has 5 different commands that serve this function: `find`, `patient`, `doctor`, `apptforpatient` and `apptfordoctor`.","lastModifiedDate":"2024-04-15"},{"lineNumber":266,"author":{"gitId":"alfaloo"},"content":"Although this section describes only the `patient` command, each of the other commands, while lined with different predicates and have different requirements for their parameters, possesses similar implementation. Hence, the flow of method calls between classes are generally similar, and all 5 commands that query entities are described here together in one section.","lastModifiedDate":"2024-04-15"},{"lineNumber":267,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":268,"author":{"gitId":"alfaloo"},"content":"* Step 1. The `execute()` method is called in an instance of `QueryPatientCommand`.","lastModifiedDate":"2024-04-15"},{"lineNumber":269,"author":{"gitId":"alfaloo"},"content":"* Step 2. The instance of `QueryPatientCommand` calls the `updateFilteredPersonList()` method with the `PatientContainsKeywordsPredicate` in an instance of the `Model` class, which filters out entries and returns only patients that match the keywords entered. Note that the other commands listed here will have their respective `predicate` requirements and implementations.","lastModifiedDate":"2024-04-15"},{"lineNumber":270,"author":{"gitId":"alfaloo"},"content":"* Step 3. Control is passed to an instance of the `Logger` class, which calls the method `log()` to log a \"Success\" message.","lastModifiedDate":"2024-04-15"},{"lineNumber":271,"author":{"gitId":"alfaloo"},"content":"* Step 4. The instance of `QueryPatientCommand` calls the constructor method of the `CommandResult` class, which returns the final result.","lastModifiedDate":"2024-04-15"},{"lineNumber":272,"author":{"gitId":"alfaloo"},"content":"* Step 5. Control is returned to the caller with the final result.","lastModifiedDate":"2024-04-15"},{"lineNumber":273,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":274,"author":{"gitId":"alfaloo"},"content":"The sequence diagram below describes the interaction between the various components during the `execute` method of the `patient` command, which uses the `QueryPatientCommand` on the backend.","lastModifiedDate":"2024-04-15"},{"lineNumber":275,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":276,"author":{"gitId":"alfaloo"},"content":"\u003cimg src\u003d\"images/QueryPatientCommandExecuteSequenceDiagram.png\" width\u003d\"800\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":277,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":278,"author":{"gitId":"Alteqa"},"content":"Why is this implemented this way?","lastModifiedDate":"2024-04-12"},{"lineNumber":279,"author":{"gitId":"alfaloo"},"content":"1. All query command closely resembles the structure of the `find` command. Each of the commands here have either stricter (i.e have stricter parameter requirements e.g `apptforpatient` and `apptfordoctor`) or looser (i.e searching for more fields e.g `patient` and `doctor`) predicates, but all generally have the same flow of control between the `Command`, `Logger` and `Model` classes.","lastModifiedDate":"2024-04-15"},{"lineNumber":280,"author":{"gitId":"alfaloo"},"content":"2. Conceptually, each of the 5 commands listed here are searching for different entities, and are hence split into separate commands despite having very similar structures.","lastModifiedDate":"2024-04-15"},{"lineNumber":281,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":282,"author":{"gitId":"alfaloo"},"content":"Alternative implementations considered","lastModifiedDate":"2024-04-15"},{"lineNumber":283,"author":{"gitId":"alfaloo"},"content":"1. The behaviour of `patient` and `doctor`, `apptforpatient` and `apptfordoctor` have similar requirements in terms of parameters, with the main difference being either `patient` or `doctor` typed classes. We might consider combining each pair into one command, and using flags to distinguish the desired class (e.g a -doctor or -patient flag to indicate we wish to search for only `doctor` and `patient` entries respectively) so as to avoid the need to create additional commands. However, we felt that at the time of implementation, separating the commands would be a cleaner strategy, and combining methods might overcomplicate the implementation.","lastModifiedDate":"2024-04-15"},{"lineNumber":284,"author":{"gitId":"alfaloo"},"content":"2. Even if we did proceed with combining, the combined command was to be overloaded with flags, we foresaw that the creation of distinct commands to fit the flags parsed were unavoidable. As such, it was prudent to start with the implementation of the distinct commands first, and leave the possibility of combining as a later increment.","lastModifiedDate":"2024-04-15"},{"lineNumber":285,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":286,"author":{"gitId":"alfaloo"},"content":"#### Delete Functionality","lastModifiedDate":"2024-04-15"},{"lineNumber":287,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":288,"author":{"gitId":"officialchengyud"},"content":"Deletes a `doctor` or `patient` entry by indicating their `Index`.","lastModifiedDate":"2024-03-28"},{"lineNumber":289,"author":{"gitId":"Alteqa"},"content":"This command is implemented through the `DeleteCommand` class which extends the `Command` class.","lastModifiedDate":"2024-04-12"},{"lineNumber":290,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":291,"author":{"gitId":"alfaloo"},"content":"* Step 1. The `execute` method of the `DeleteCommand` is called.","lastModifiedDate":"2024-04-15"},{"lineNumber":292,"author":{"gitId":"alfaloo"},"content":"* Step 2. The `getFilteredPersonList` method of `Model` is called and finds its length.","lastModifiedDate":"2024-04-15"},{"lineNumber":293,"author":{"gitId":"Alteqa"},"content":"* Step 3. The `getZeroBased` method of `Index` is called to convert the provided index to its zero-based equivalent.","lastModifiedDate":"2024-04-15"},{"lineNumber":294,"author":{"gitId":"alfaloo"},"content":"* Step 4. The provided index is checked against the length of the current list of people.","lastModifiedDate":"2024-04-15"},{"lineNumber":295,"author":{"gitId":"alfaloo"},"content":"  * If the provided index is out of bounds, a `CommandException` is thrown.","lastModifiedDate":"2024-04-15"},{"lineNumber":296,"author":{"gitId":"alfaloo"},"content":"* Step 4. The `deletePerson` method of `Model` is called to remove the designated person from the list of people.","lastModifiedDate":"2024-04-15"},{"lineNumber":297,"author":{"gitId":"alfaloo"},"content":"* Step 5. An instance of `CommandResult` is created with a success message for the execution of `DeleteCommand`.","lastModifiedDate":"2024-04-15"},{"lineNumber":298,"author":{"gitId":"alfaloo"},"content":"* Step 6. The instance of `CommandResult` is returned.","lastModifiedDate":"2024-04-15"},{"lineNumber":299,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":300,"author":{"gitId":"alfaloo"},"content":"The sequence diagram below closely describes the interaction between the various components during the `execute` method of `DeleteCommand`.","lastModifiedDate":"2024-04-15"},{"lineNumber":301,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":302,"author":{"gitId":"alfaloo"},"content":"\u003cimg src\u003d\"images/DeleteCommandExecuteSequenceDiagram.png\" width\u003d\"800\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":303,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":304,"author":{"gitId":"alfaloo"},"content":"### Incorrect user input handling process","lastModifiedDate":"2024-04-15"},{"lineNumber":305,"author":{"gitId":"alfaloo"},"content":"In this section, we will use the _add_ commands for `patients`/`doctors` and `appointments` to demonstrate how MediCLI handles incorrect inputs from the user. ","lastModifiedDate":"2024-04-15"},{"lineNumber":306,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":307,"author":{"gitId":"alfaloo"},"content":"#### Incorrect input handling process for commands that involve operations on the `Person` class","lastModifiedDate":"2024-04-15"},{"lineNumber":308,"author":{"gitId":"alfaloo"},"content":"The activity diagram below demonstrates this incorrect input handling process of a command that operates on the `Person` class.","lastModifiedDate":"2024-04-15"},{"lineNumber":309,"author":{"gitId":"alfaloo"},"content":"Specifically, we look at the process of adding a `Person` to MediCLI i.e. `addpatient` or `adddoctor` commands, potential mistakes that the user might make, and how they are handled by MediCLI.","lastModifiedDate":"2024-04-15"},{"lineNumber":310,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":311,"author":{"gitId":"alfaloo"},"content":"\u003cimg src\u003d\"images/AddPersonActivityDiagram.png\" width\u003d\"800\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":312,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":313,"author":{"gitId":"alfaloo"},"content":"As visible, an incorrect input by the user can result in the following types of errors depending on the type of mistake:","lastModifiedDate":"2024-04-15"},{"lineNumber":314,"author":{"gitId":"alfaloo"},"content":"- **Command word is incorrect**: informs the user that command word is unowkown.","lastModifiedDate":"2024-04-15"},{"lineNumber":315,"author":{"gitId":"alfaloo"},"content":"- **Missing required field arguments**: informs the user of invalid command format. ","lastModifiedDate":"2024-04-15"},{"lineNumber":316,"author":{"gitId":"alfaloo"},"content":"- **Invalid field arguments**: highlights to the user that invalid field arguments were provided.","lastModifiedDate":"2024-04-15"},{"lineNumber":317,"author":{"gitId":"alfaloo"},"content":"- **`Patient`/`Doctor` with corresponding attributes already exists in the system**: informs the user that `Patient`/`Doctor` already exists in the system.","lastModifiedDate":"2024-04-15"},{"lineNumber":318,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":319,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":320,"author":{"gitId":"alfaloo"},"content":"#### Incorrect user input handling process for the `Appointment` class","lastModifiedDate":"2024-04-15"},{"lineNumber":321,"author":{"gitId":"alfaloo"},"content":"The activity diagram below demonstrates this incorrect input handling process of a command that operates on the `Appointment` class.","lastModifiedDate":"2024-04-15"},{"lineNumber":322,"author":{"gitId":"alfaloo"},"content":"Specifically, we look at the process of adding an `Appointment` to MediCLI i.e. `addappt` command, potential mistakes that the user might make, and how they are handled by MediCLI.","lastModifiedDate":"2024-04-15"},{"lineNumber":323,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":324,"author":{"gitId":"alfaloo"},"content":"\u003cimg src\u003d\"images/AddAppointmentActivityDiagram.png\" width\u003d\"800\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":325,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":326,"author":{"gitId":"alfaloo"},"content":"As visible, an incorrect input by the user can result in the following types of errors depending on the type of mistake:","lastModifiedDate":"2024-04-15"},{"lineNumber":327,"author":{"gitId":"alfaloo"},"content":"- **Command word is incorrect**: informs the user that command word is unowkown","lastModifiedDate":"2024-04-15"},{"lineNumber":328,"author":{"gitId":"alfaloo"},"content":"- **Missing required field arguments**: informs the user of invalid command format","lastModifiedDate":"2024-04-15"},{"lineNumber":329,"author":{"gitId":"alfaloo"},"content":"- **Invalid field arguments**: highlights to the user that invalid field arguments were provided","lastModifiedDate":"2024-04-15"},{"lineNumber":330,"author":{"gitId":"alfaloo"},"content":"- **`Patient`/`Doctor` involved in the `Appointment` does not exist in MediCLI**: informs the user that `Patient`/`Doctor` involved are not registered","lastModifiedDate":"2024-04-15"},{"lineNumber":331,"author":{"gitId":"alfaloo"},"content":"- **Provided date \u0026 time of the `Appointment` is in the past**: informs the user that appointments cannot be scheduled in the past.","lastModifiedDate":"2024-04-15"},{"lineNumber":332,"author":{"gitId":"alfaloo"},"content":"- **`Appointment` with corresponding attributes already exists in MediCLI**: informs the user that `Appointment` already exists","lastModifiedDate":"2024-04-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":334,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2024-04-13"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2024-04-13"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"alfaloo"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedMediCLI`. It extends `MediCLI` with an undo/redo history, stored internally as an `MediCLIStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2024-04-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"alfaloo"},"content":"* `VersionedMediCLI#commit()` — Saves the current MediCLI state in its history.","lastModifiedDate":"2024-04-13"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"alfaloo"},"content":"* `VersionedMediCLI#undo()` — Restores the previous MediCLI state from its history.","lastModifiedDate":"2024-04-13"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"alfaloo"},"content":"* `VersionedMediCLI#redo()` — Restores a previously undone MediCLI state from its history.","lastModifiedDate":"2024-04-13"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"alfaloo"},"content":"These operations are exposed in the `Model` interface as `Model#commitMediCLI()`, `Model#undoMediCLI()` and `Model#redoMediCLI()` respectively.","lastModifiedDate":"2024-04-13"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2024-04-13"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"alfaloo"},"content":"Step 1. The user launches the  application for the first time. The `VersionedMediCLI` will be initialized with the initial MediCLI state, and the `currentStatePointer` pointing to that single MediCLI state.","lastModifiedDate":"2024-04-13"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"alfaloo"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the MediCLI. The `delete` command calls `Model#commitMediCLI()`, causing the modified state of the MediCLI after the `delete 5` command executes to be saved in the `MediCLIStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2024-04-15"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"alfaloo"},"content":"Step 3. The user executes `addpatient i/S1234567A n/John Doe d/2003-01-30 p/98765432` to add a new person. The `add` command also calls `Model#commitMediCLI()`, causing another modified MediCLI state to be saved into the `MediCLIStateList`.","lastModifiedDate":"2024-04-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":371,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"alfaloo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitMediCLI()`, so the MediCLI state will not be saved into the `MediCLIStateList`.","lastModifiedDate":"2024-04-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":379,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":380,"author":{"gitId":"alfaloo"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoMediCLI()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous MediCLI state, and restores the MediCLI to that state.","lastModifiedDate":"2024-04-13"},{"lineNumber":381,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":383,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":385,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":386,"author":{"gitId":"alfaloo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial MediCLI state, then there are no previous MediCLI states to restore. The `undo` command uses `Model#canUndoMediCLI()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2024-04-13"},{"lineNumber":387,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":388,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2024-04-13"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":390,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":391,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":393,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":394,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-04-13"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":396,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":397,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":399,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":400,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2024-04-13"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":402,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":403,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":405,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":406,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-04-13"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":412,"author":{"gitId":"alfaloo"},"content":"The `redo` command does the opposite — it calls `Model#redoMediCLI()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the MediCLI to that state.","lastModifiedDate":"2024-04-13"},{"lineNumber":413,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"alfaloo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `MediCLIStateList.size() - 1`, pointing to the latest MediCLI state, then there are no undone MediCLI states to restore. The `redo` command uses `Model#canRedoMediCLI()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2024-04-15"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":420,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":421,"author":{"gitId":"alfaloo"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the MediCLI, such as `list`, will usually not call `Model#commitMediCLI()`, `Model#undoMediCLI()` or `Model#redoMediCLI()`. Thus, the `MediCLIStateList` remains unchanged.","lastModifiedDate":"2024-04-15"},{"lineNumber":422,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":424,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":426,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":427,"author":{"gitId":"alfaloo"},"content":"Step 6. The user executes `clear`, which calls `Model#commitMediCLI()`. Since the `currentStatePointer` is not pointing at the end of the `MediCLIStateList`, all MediCLI states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `addpatient i/S1234567A n/John Doe d/2003-01-30 p/98765432` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2024-04-15"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":432,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":433,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2024-04-13"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":435,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":436,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":438,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":439,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2024-04-13"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":441,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":442,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2024-04-13"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":444,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":445,"author":{"gitId":"alfaloo"},"content":"* **Alternative 1 (current choice):** Saves the entire MediCLI.","lastModifiedDate":"2024-04-13"},{"lineNumber":446,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":447,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2024-04-13"},{"lineNumber":448,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":449,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2024-04-13"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":451,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":452,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2024-04-13"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":454,"author":{"gitId":"alfaloo"},"content":"  itself.","lastModifiedDate":"2024-04-13"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":456,"author":{"gitId":"alfaloo"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2024-04-13"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":458,"author":{"gitId":"alfaloo"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2024-04-13"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":461,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":466,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":467,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":468,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":469,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"Kappaccinoh"},"content":"* hospital clerks who deal with hospital related registration/administrative/management tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":480,"author":{"gitId":"Kappaccinoh"},"content":"* has a need to manage a significant number of client details (patients/doctors/appointments)","lastModifiedDate":"2024-03-06"},{"lineNumber":481,"author":{"gitId":"Kappaccinoh"},"content":"* deals with many real time live updates, some being time-critical","lastModifiedDate":"2024-03-06"},{"lineNumber":482,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"Kappaccinoh"},"content":"* can type fast and accurately","lastModifiedDate":"2024-03-06"},{"lineNumber":484,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":485,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"Alteqa"},"content":"**Value proposition**: ","lastModifiedDate":"2024-04-15"},{"lineNumber":488,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":489,"author":{"gitId":"Alteqa"},"content":"MediCLI is a hospital management system that offers clerks the ability to execute querying/updating/creating/deleting commands faster than a typical mouse/GUI driven hospital management system, significantly speeding up the data entry/update/retrieval process.","lastModifiedDate":"2024-04-15"},{"lineNumber":490,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":491,"author":{"gitId":"Alteqa"},"content":"As clerks likely execute many such commands each day, this offers a significant amount of time savings when considered on the whole. While this would be beneficial in any situation, this is especially important in a hospital setting where the stakes are much higher, and staff are required to perform at a very high level of efficiency with limited room for error","lastModifiedDate":"2024-04-15"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"| Priority  | As a …​                                    | I want to …​                               | So that I can…​                                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"alfaloo"},"content":"|-----------|--------------------------------------------|--------------------------------------------|-------------------------------------------------------------------|","lastModifiedDate":"2024-03-05"},{"lineNumber":500,"author":{"gitId":"alfaloo"},"content":"| `* * *`   | hospital clerk                             | add patients                               | handle incoming patients when handling emergency call-ins         |","lastModifiedDate":"2024-03-05"},{"lineNumber":501,"author":{"gitId":"alfaloo"},"content":"| `* * *`   | hospital clerk                             | delete patients                            | remove old patients to prevent clogging of system                 |","lastModifiedDate":"2024-03-05"},{"lineNumber":502,"author":{"gitId":"alfaloo"},"content":"| `* * *`   | hospital clerk                             | add doctors                                | register new doctors as they get hired                            |","lastModifiedDate":"2024-03-05"},{"lineNumber":503,"author":{"gitId":"alfaloo"},"content":"| `* * *`   | hospital clerk                             | delete doctors                             | remove previous doctors that have left the hospital               |","lastModifiedDate":"2024-03-05"},{"lineNumber":504,"author":{"gitId":"alfaloo"},"content":"| `* * *`   | hospital clerk                             | create appointments                        | arrange a meeting time between a doctor and a patient             |","lastModifiedDate":"2024-03-05"},{"lineNumber":505,"author":{"gitId":"alfaloo"},"content":"| `* * *`   | hospital clerk                             | delete appointments                        | remove a meeting time if either party becomes unavailable         |","lastModifiedDate":"2024-03-05"},{"lineNumber":506,"author":{"gitId":"alfaloo"},"content":"| `* * *`   | hospital clerk                             | query patient by name                      | retrieve their relevant information                               |","lastModifiedDate":"2024-03-05"},{"lineNumber":507,"author":{"gitId":"alfaloo"},"content":"| `* * *`   | hospital clerk                             | query doctor by name                       | retrieve their relevant information                               |","lastModifiedDate":"2024-03-05"},{"lineNumber":508,"author":{"gitId":"alfaloo"},"content":"| `* *`     | hospital clerk                             | query appointment by patient               | look up what appointments a patient has to attend                 |","lastModifiedDate":"2024-03-05"},{"lineNumber":509,"author":{"gitId":"alfaloo"},"content":"| `* *`     | hospital clerk                             | query appointment by doctor                | look up what appointments a doctor has to service                 |","lastModifiedDate":"2024-03-05"},{"lineNumber":510,"author":{"gitId":"alfaloo"},"content":"| `*`       | hospital clerk                             | query patient by other fields              | retrieve patient information through other fields if they call-in |","lastModifiedDate":"2024-03-05"},{"lineNumber":511,"author":{"gitId":"alfaloo"},"content":"| `*`       | hospital clerk                             | find available timings to book appointment | schedule a time that suits both the patient and doctor            |","lastModifiedDate":"2024-03-05"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"officialchengyud"},"content":"(For all use cases below, the **System** is the `MediCLI` and the **Actor** is the `hospital clerk`, unless specified otherwise)","lastModifiedDate":"2024-04-15"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":518,"author":{"gitId":"officialchengyud"},"content":"(Note: For all use cases, if you enter the command format wrongly, MediCLI will show an error message and return to step 1.)","lastModifiedDate":"2024-04-15"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"officialchengyud"},"content":"**Use case: Add a patient**","lastModifiedDate":"2024-03-05"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":522,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"officialchengyud"},"content":"1.  Hospital clerk needs to add a patient","lastModifiedDate":"2024-04-15"},{"lineNumber":525,"author":{"gitId":"officialchengyud"},"content":"2.  Hospital clerk enters patient data ","lastModifiedDate":"2024-04-15"},{"lineNumber":526,"author":{"gitId":"Alteqa"},"content":"3.  MediCLI adds the patient into database","lastModifiedDate":"2024-04-15"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"officialchengyud"},"content":"* 2a. The entered patient data is not in the correct format","lastModifiedDate":"2024-04-15"},{"lineNumber":533,"author":{"gitId":"officialchengyud"},"content":"  * 2a1. MediCLI shows an error message.","lastModifiedDate":"2024-04-15"},{"lineNumber":534,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"officialchengyud"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2024-04-15"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"officialchengyud"},"content":"* 2b. The entered patient is already in the database","lastModifiedDate":"2024-04-15"},{"lineNumber":538,"author":{"gitId":"officialchengyud"},"content":"  * 2b1. MediCLI shows an error message.","lastModifiedDate":"2024-04-15"},{"lineNumber":539,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"officialchengyud"},"content":"     Use case resumes at step 1.","lastModifiedDate":"2024-04-15"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"officialchengyud"},"content":"**Use case: Delete a patient**","lastModifiedDate":"2024-03-05"},{"lineNumber":543,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":544,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":545,"author":{"gitId":"officialchengyud"},"content":"**MSS**","lastModifiedDate":"2024-03-05"},{"lineNumber":546,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":547,"author":{"gitId":"officialchengyud"},"content":"1.  Hospital clerk requests to list persons","lastModifiedDate":"2024-03-05"},{"lineNumber":548,"author":{"gitId":"officialchengyud"},"content":"2.  MediCLI shows a list of persons","lastModifiedDate":"2024-04-15"},{"lineNumber":549,"author":{"gitId":"officialchengyud"},"content":"3.  Hospital clerk requests to delete a specific patient in the list","lastModifiedDate":"2024-03-05"},{"lineNumber":550,"author":{"gitId":"officialchengyud"},"content":"4.  MediCLI deletes the patient","lastModifiedDate":"2024-04-15"},{"lineNumber":551,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":552,"author":{"gitId":"officialchengyud"},"content":"Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":554,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-03-05"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":556,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-05"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":558,"author":{"gitId":"officialchengyud"},"content":"  Use case resumes at step 1.","lastModifiedDate":"2024-04-15"},{"lineNumber":559,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":560,"author":{"gitId":"officialchengyud"},"content":"* 3a. The given patient index is invalid.","lastModifiedDate":"2024-04-15"},{"lineNumber":561,"author":{"gitId":"officialchengyud"},"content":"  * 3a1. MediCLI shows an error message.","lastModifiedDate":"2024-04-15"},{"lineNumber":562,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":563,"author":{"gitId":"officialchengyud"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2024-04-15"},{"lineNumber":564,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":565,"author":{"gitId":"officialchengyud"},"content":"**Use case: Create an appointment**","lastModifiedDate":"2024-03-05"},{"lineNumber":566,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":567,"author":{"gitId":"officialchengyud"},"content":"**MSS**","lastModifiedDate":"2024-03-05"},{"lineNumber":568,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":569,"author":{"gitId":"officialchengyud"},"content":"1.  Hospital clerk needs to create appointment between doctor and patient","lastModifiedDate":"2024-03-05"},{"lineNumber":570,"author":{"gitId":"officialchengyud"},"content":"2.  Hospital clerk enters doctor and patient details","lastModifiedDate":"2024-03-05"},{"lineNumber":571,"author":{"gitId":"officialchengyud"},"content":"3.  MediCLI creates the appointment","lastModifiedDate":"2024-04-15"},{"lineNumber":572,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":573,"author":{"gitId":"officialchengyud"},"content":"    Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":574,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":575,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":576,"author":{"gitId":"officialchengyud"},"content":"**Extensions**","lastModifiedDate":"2024-04-15"},{"lineNumber":577,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":578,"author":{"gitId":"officialchengyud"},"content":"* 2a. The entered doctor or patient detail is invalid.","lastModifiedDate":"2024-04-15"},{"lineNumber":579,"author":{"gitId":"officialchengyud"},"content":"  * 2a1. MediCLI will show an error message.","lastModifiedDate":"2024-04-15"},{"lineNumber":580,"author":{"gitId":"officialchengyud"},"content":"    ","lastModifiedDate":"2024-04-15"},{"lineNumber":581,"author":{"gitId":"officialchengyud"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2024-04-15"},{"lineNumber":582,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":583,"author":{"gitId":"officialchengyud"},"content":"* 2b. The entered appointment date is invalid","lastModifiedDate":"2024-04-15"},{"lineNumber":584,"author":{"gitId":"officialchengyud"},"content":"  * 2b1. MediCLI will show an error message.","lastModifiedDate":"2024-04-15"},{"lineNumber":585,"author":{"gitId":"officialchengyud"},"content":"      ","lastModifiedDate":"2024-04-15"},{"lineNumber":586,"author":{"gitId":"officialchengyud"},"content":"     Use case resumes at step 1.","lastModifiedDate":"2024-04-15"},{"lineNumber":587,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":588,"author":{"gitId":"officialchengyud"},"content":"**Use case: Delete an appointment**","lastModifiedDate":"2024-03-05"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":590,"author":{"gitId":"officialchengyud"},"content":"**MSS**","lastModifiedDate":"2024-03-05"},{"lineNumber":591,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":592,"author":{"gitId":"officialchengyud"},"content":"1.  Hospital clerk needs to delete appointment between doctor and patient","lastModifiedDate":"2024-03-05"},{"lineNumber":593,"author":{"gitId":"officialchengyud"},"content":"2.  Hospital clerk enters appointment index","lastModifiedDate":"2024-04-15"},{"lineNumber":594,"author":{"gitId":"officialchengyud"},"content":"3.  MediCLI deletes the appointment","lastModifiedDate":"2024-04-15"},{"lineNumber":595,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":596,"author":{"gitId":"officialchengyud"},"content":"    Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":597,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":598,"author":{"gitId":"officialchengyud"},"content":"**Extensions**","lastModifiedDate":"2024-04-15"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":600,"author":{"gitId":"officialchengyud"},"content":"* 2a. The entered appointment index is invalid.","lastModifiedDate":"2024-04-15"},{"lineNumber":601,"author":{"gitId":"officialchengyud"},"content":"  * 2a1. MediCLI shows an error message.","lastModifiedDate":"2024-04-15"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":603,"author":{"gitId":"officialchengyud"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2024-04-15"},{"lineNumber":604,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":605,"author":{"gitId":"officialchengyud"},"content":"**Use case: Query patient by name**","lastModifiedDate":"2024-03-05"},{"lineNumber":606,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":607,"author":{"gitId":"officialchengyud"},"content":"**MSS**","lastModifiedDate":"2024-03-05"},{"lineNumber":608,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":609,"author":{"gitId":"officialchengyud"},"content":"1.  Hospital clerk needs to search for patient","lastModifiedDate":"2024-03-05"},{"lineNumber":610,"author":{"gitId":"officialchengyud"},"content":"2.  Hospital clerk enters patient name","lastModifiedDate":"2024-03-05"},{"lineNumber":611,"author":{"gitId":"officialchengyud"},"content":"3.  MediCLI lists patients with supplied name","lastModifiedDate":"2024-04-15"},{"lineNumber":612,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":613,"author":{"gitId":"officialchengyud"},"content":"Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":614,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":615,"author":{"gitId":"officialchengyud"},"content":"**Extensions**","lastModifiedDate":"2024-03-05"},{"lineNumber":616,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":617,"author":{"gitId":"officialchengyud"},"content":"* 3a. The list is empty","lastModifiedDate":"2024-03-05"},{"lineNumber":618,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":619,"author":{"gitId":"officialchengyud"},"content":"  Use case resumes at step 1.","lastModifiedDate":"2024-04-15"},{"lineNumber":620,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":621,"author":{"gitId":"officialchengyud"},"content":"**Use case: Query appointments by patient**","lastModifiedDate":"2024-03-05"},{"lineNumber":622,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":623,"author":{"gitId":"officialchengyud"},"content":"**MSS**","lastModifiedDate":"2024-03-05"},{"lineNumber":624,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":625,"author":{"gitId":"officialchengyud"},"content":"1.  Hospital clerk needs to search for appointment by patient","lastModifiedDate":"2024-03-05"},{"lineNumber":626,"author":{"gitId":"officialchengyud"},"content":"2.  Hospital clerk enters patient name","lastModifiedDate":"2024-03-05"},{"lineNumber":627,"author":{"gitId":"officialchengyud"},"content":"3.  MediCLI lists relevant appointments","lastModifiedDate":"2024-04-15"},{"lineNumber":628,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":629,"author":{"gitId":"officialchengyud"},"content":"Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":630,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":631,"author":{"gitId":"officialchengyud"},"content":"**Extensions**","lastModifiedDate":"2024-03-05"},{"lineNumber":632,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":633,"author":{"gitId":"officialchengyud"},"content":"* 3a. The list is empty","lastModifiedDate":"2024-03-05"},{"lineNumber":634,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":635,"author":{"gitId":"officialchengyud"},"content":"  Use case resumes at step 1.","lastModifiedDate":"2024-04-15"},{"lineNumber":636,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":637,"author":{"gitId":"officialchengyud"},"content":"**Use case: Query appointments by doctor**","lastModifiedDate":"2024-03-05"},{"lineNumber":638,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":639,"author":{"gitId":"officialchengyud"},"content":"**MSS**","lastModifiedDate":"2024-03-05"},{"lineNumber":640,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":641,"author":{"gitId":"officialchengyud"},"content":"1.  Hospital clerk needs to search for appointment by doctor","lastModifiedDate":"2024-03-05"},{"lineNumber":642,"author":{"gitId":"officialchengyud"},"content":"2.  Hospital clerk enters doctor name","lastModifiedDate":"2024-03-05"},{"lineNumber":643,"author":{"gitId":"officialchengyud"},"content":"3.  MediCLI lists relevant appointments","lastModifiedDate":"2024-04-15"},{"lineNumber":644,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":645,"author":{"gitId":"officialchengyud"},"content":"Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":646,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":647,"author":{"gitId":"officialchengyud"},"content":"**Extensions**","lastModifiedDate":"2024-03-05"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":649,"author":{"gitId":"officialchengyud"},"content":"* 3a. The list is empty","lastModifiedDate":"2024-03-05"},{"lineNumber":650,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":651,"author":{"gitId":"officialchengyud"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2024-04-15"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"officialchengyud"},"content":"2.  Should be able to hold up to 1000 medical staff without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-05"},{"lineNumber":657,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"officialchengyud"},"content":"4.  MediCLI should be easy to integrate with existing medical database systems so that staff can immediately switch to the new app.","lastModifiedDate":"2024-04-15"},{"lineNumber":659,"author":{"gitId":"officialchengyud"},"content":"5.  Comprehensive documentation should be provided, including user guides, command references, and troubleshooting resources.","lastModifiedDate":"2024-03-05"},{"lineNumber":660,"author":{"gitId":"officialchengyud"},"content":"6. MediCLI should not need an internet connection to run.","lastModifiedDate":"2024-04-15"},{"lineNumber":661,"author":{"gitId":"officialchengyud"},"content":"7. The GUI for MediCLI should be well organised, purpose oriented and easy to understand for users of any knowledge level.","lastModifiedDate":"2024-04-15"},{"lineNumber":662,"author":{"gitId":"officialchengyud"},"content":"8. MediCLI should handle the majority of common user errors and give the users suggestions to mitigate these errors.","lastModifiedDate":"2024-04-15"},{"lineNumber":663,"author":{"gitId":"officialchengyud"},"content":"9. MediCLI does not support concurrent usage between multiple users.","lastModifiedDate":"2024-04-15"},{"lineNumber":664,"author":{"gitId":"officialchengyud"},"content":"10. MediCLI does not support languages other than English.","lastModifiedDate":"2024-04-15"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"officialchengyud"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others.","lastModifiedDate":"2024-03-05"},{"lineNumber":669,"author":{"gitId":"officialchengyud"},"content":"* **CLI**: Command Line Interface, a way of interacting with a computer program where the user enters commands into a terminal or command prompt.","lastModifiedDate":"2024-03-05"},{"lineNumber":670,"author":{"gitId":"officialchengyud"},"content":"* **GUI**: Graphical User Interface, a way of interacting with a computer program using graphical elements such as windows, buttons, and menus.","lastModifiedDate":"2024-03-05"},{"lineNumber":671,"author":{"gitId":"officialchengyud"},"content":"* **JSON**: JSON: JavaScript Object Notation, a lightweight data interchange format used to store and exchange data.","lastModifiedDate":"2024-03-05"},{"lineNumber":672,"author":{"gitId":"officialchengyud"},"content":"* **API**: Application Programming Interface, a set of rules and protocols for building and interacting with software applications.","lastModifiedDate":"2024-03-05"},{"lineNumber":673,"author":{"gitId":"officialchengyud"},"content":"* **UI**: User Interface, the visual part of a computer program that allows users to interact with it.","lastModifiedDate":"2024-03-05"},{"lineNumber":674,"author":{"gitId":"officialchengyud"},"content":"* **XML**: Extensible Markup Language, a markup language that defines rules for encoding documents in a format that is both human-readable and machine-readable.","lastModifiedDate":"2024-03-05"},{"lineNumber":675,"author":{"gitId":"officialchengyud"},"content":"* **MSS**: Main Success Scenario, the primary flow of events in a use case that leads to the desired outcome.","lastModifiedDate":"2024-03-05"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"Kappaccinoh"},"content":"## **Appendix: Instructions for Manual Testing**","lastModifiedDate":"2024-04-14"},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"Kappaccinoh"},"content":"This section provides guidance for testers to navigate through the user-testable features of MediCLI. It includes important test inputs along with the expected test results that can be copied and pasted into the app for testing purposes.","lastModifiedDate":"2024-04-14"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"Kappaccinoh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **INFO**: These instructions only provide a starting point for testers to work on. Testers are expected to do more *exploratory* testing.\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"Kappaccinoh"},"content":"#### Initial launch","lastModifiedDate":"2024-04-14"},{"lineNumber":688,"author":{"gitId":"Kappaccinoh"},"content":"Steps:","lastModifiedDate":"2024-04-14"},{"lineNumber":689,"author":{"gitId":"Kappaccinoh"},"content":"1. Download the jar file and copy into an empty folder.","lastModifiedDate":"2024-04-14"},{"lineNumber":690,"author":{"gitId":"Kappaccinoh"},"content":"2. Double-click the jar file.","lastModifiedDate":"2024-04-14"},{"lineNumber":691,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":692,"author":{"gitId":"Kappaccinoh"},"content":"Expected Outcome:","lastModifiedDate":"2024-04-14"},{"lineNumber":693,"author":{"gitId":"Kappaccinoh"},"content":"* Shows the GUI with a set of sample contacts.","lastModifiedDate":"2024-04-14"},{"lineNumber":694,"author":{"gitId":"Kappaccinoh"},"content":"* The window size may not be optimum.","lastModifiedDate":"2024-04-14"},{"lineNumber":695,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":696,"author":{"gitId":"Kappaccinoh"},"content":"#### Saving window preferences","lastModifiedDate":"2024-04-14"},{"lineNumber":697,"author":{"gitId":"Kappaccinoh"},"content":"Steps:","lastModifiedDate":"2024-04-14"},{"lineNumber":698,"author":{"gitId":"Kappaccinoh"},"content":"1. Resize the window to an optimum size.","lastModifiedDate":"2024-04-14"},{"lineNumber":699,"author":{"gitId":"Kappaccinoh"},"content":"2. Move the window to a different location.","lastModifiedDate":"2024-04-14"},{"lineNumber":700,"author":{"gitId":"Kappaccinoh"},"content":"3. Close the window.","lastModifiedDate":"2024-04-14"},{"lineNumber":701,"author":{"gitId":"Kappaccinoh"},"content":"4. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":702,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":703,"author":{"gitId":"Kappaccinoh"},"content":"Expected Outcome:","lastModifiedDate":"2024-04-14"},{"lineNumber":704,"author":{"gitId":"Kappaccinoh"},"content":"* The most recent window size and location is retained.","lastModifiedDate":"2024-04-14"},{"lineNumber":705,"author":{"gitId":"Kappaccinoh"},"content":"                                                         ","lastModifiedDate":"2024-04-14"},{"lineNumber":706,"author":{"gitId":"Kappaccinoh"},"content":"#### Closing MediCLI","lastModifiedDate":"2024-04-14"},{"lineNumber":707,"author":{"gitId":"Kappaccinoh"},"content":"Steps:","lastModifiedDate":"2024-04-14"},{"lineNumber":708,"author":{"gitId":"Kappaccinoh"},"content":"1. Execute the `exit` command, or simply close the window.","lastModifiedDate":"2024-04-14"},{"lineNumber":709,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":710,"author":{"gitId":"Kappaccinoh"},"content":"Expected Outcome:","lastModifiedDate":"2024-04-14"},{"lineNumber":711,"author":{"gitId":"Kappaccinoh"},"content":"* MediCLI closes without any errors.","lastModifiedDate":"2024-04-14"},{"lineNumber":712,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":713,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":714,"author":{"gitId":"Kappaccinoh"},"content":"### Person Related Commands","lastModifiedDate":"2024-04-14"},{"lineNumber":715,"author":{"gitId":"Kappaccinoh"},"content":"#### Adding a Patient : `addpatient`","lastModifiedDate":"2024-04-14"},{"lineNumber":716,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":717,"author":{"gitId":"Kappaccinoh"},"content":"Steps:","lastModifiedDate":"2024-04-14"},{"lineNumber":718,"author":{"gitId":"Kappaccinoh"},"content":"1. Execute the `addpatient` command with valid NRIC, name, DOB, and phone number.","lastModifiedDate":"2024-04-14"},{"lineNumber":719,"author":{"gitId":"Kappaccinoh"},"content":"2. Verify that the patient is successfully added to the system.","lastModifiedDate":"2024-04-14"},{"lineNumber":720,"author":{"gitId":"Kappaccinoh"},"content":"3. Try adding a patient with an existing NRIC and verify that the command fails.","lastModifiedDate":"2024-04-14"},{"lineNumber":721,"author":{"gitId":"Kappaccinoh"},"content":"4. Attempt to add a patient with invalid or missing fields and confirm appropriate error handling.","lastModifiedDate":"2024-04-14"},{"lineNumber":722,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":723,"author":{"gitId":"Kappaccinoh"},"content":"Valid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":724,"author":{"gitId":"Kappaccinoh"},"content":"* Valid NRIC, name, DOB, and phone number.","lastModifiedDate":"2024-04-14"},{"lineNumber":725,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `addpatient i/S1234567A n/David Li d/2000-01-01 p/98765432`","lastModifiedDate":"2024-04-14"},{"lineNumber":726,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":727,"author":{"gitId":"Kappaccinoh"},"content":"Expected Outcome:","lastModifiedDate":"2024-04-14"},{"lineNumber":728,"author":{"gitId":"Kappaccinoh"},"content":"* Patient is successfully added to the system.","lastModifiedDate":"2024-04-14"},{"lineNumber":729,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":730,"author":{"gitId":"Kappaccinoh"},"content":"Invalid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":731,"author":{"gitId":"Kappaccinoh"},"content":"* Missing or invalid fields (e.g. invalid NRIC format, missing name).","lastModifiedDate":"2024-04-14"},{"lineNumber":732,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `addpatient i/1234567A n/ d/2000-01-01 p/12345678`","lastModifiedDate":"2024-04-14"},{"lineNumber":733,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":734,"author":{"gitId":"Kappaccinoh"},"content":"Expected Error:","lastModifiedDate":"2024-04-14"},{"lineNumber":735,"author":{"gitId":"Kappaccinoh"},"content":"* Command fails with the \u0027Invalid command format\u0027 error message indicating the required command format.","lastModifiedDate":"2024-04-14"},{"lineNumber":736,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":737,"author":{"gitId":"Kappaccinoh"},"content":"#### Adding a Doctor : `adddoctor`","lastModifiedDate":"2024-04-14"},{"lineNumber":738,"author":{"gitId":"Kappaccinoh"},"content":"Steps:","lastModifiedDate":"2024-04-14"},{"lineNumber":739,"author":{"gitId":"Kappaccinoh"},"content":"1. Use the `adddoctor` command with valid NRIC, name, DOB, and phone number.","lastModifiedDate":"2024-04-14"},{"lineNumber":740,"author":{"gitId":"Kappaccinoh"},"content":"2. Verify that the doctor is added to the system.","lastModifiedDate":"2024-04-14"},{"lineNumber":741,"author":{"gitId":"Kappaccinoh"},"content":"3. Test adding a doctor with an existing NRIC and check if the command fails.","lastModifiedDate":"2024-04-14"},{"lineNumber":742,"author":{"gitId":"Kappaccinoh"},"content":"4. Test adding a doctor with invalid or missing fields and observe error handling.","lastModifiedDate":"2024-04-14"},{"lineNumber":743,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":744,"author":{"gitId":"Kappaccinoh"},"content":"Valid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":745,"author":{"gitId":"Kappaccinoh"},"content":"* Valid NRIC, name, DOB, and phone number.","lastModifiedDate":"2024-04-14"},{"lineNumber":746,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `adddoctor i/S1234567A n/Dr. Jane Smith d/1975-05-15 p/98765432`","lastModifiedDate":"2024-04-14"},{"lineNumber":747,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":748,"author":{"gitId":"Kappaccinoh"},"content":"Expected Outcome:","lastModifiedDate":"2024-04-14"},{"lineNumber":749,"author":{"gitId":"Kappaccinoh"},"content":"* Doctor is successfully added to the system.","lastModifiedDate":"2024-04-14"},{"lineNumber":750,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":751,"author":{"gitId":"Kappaccinoh"},"content":"Invalid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":752,"author":{"gitId":"Kappaccinoh"},"content":"* Missing or invalid fields (e.g. invalid phone number).","lastModifiedDate":"2024-04-14"},{"lineNumber":753,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `adddoctor i/S1234567A n/Dr. Jane Smith d/1975-05-15 p/1234567`","lastModifiedDate":"2024-04-14"},{"lineNumber":754,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":755,"author":{"gitId":"Kappaccinoh"},"content":"Expected Error:","lastModifiedDate":"2024-04-14"},{"lineNumber":756,"author":{"gitId":"Kappaccinoh"},"content":"* Command fails with the \u0027Invalid command format\u0027 error message indicating the required command format.","lastModifiedDate":"2024-04-14"},{"lineNumber":757,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":758,"author":{"gitId":"Kappaccinoh"},"content":"#### Editing a Person : `edit`","lastModifiedDate":"2024-04-14"},{"lineNumber":759,"author":{"gitId":"Kappaccinoh"},"content":"Steps:","lastModifiedDate":"2024-04-14"},{"lineNumber":760,"author":{"gitId":"Kappaccinoh"},"content":"1. Execute the `edit` command with the index of an existing person.","lastModifiedDate":"2024-04-14"},{"lineNumber":761,"author":{"gitId":"Kappaccinoh"},"content":"2. Update one or more fields (NRIC, name, DOB, or phone number) and confirm changes.","lastModifiedDate":"2024-04-14"},{"lineNumber":762,"author":{"gitId":"Kappaccinoh"},"content":"3. Test editing without changing any values and ensure it\u0027s handled correctly.","lastModifiedDate":"2024-04-14"},{"lineNumber":763,"author":{"gitId":"Kappaccinoh"},"content":"4. Try editing with an invalid index and verify error handling.","lastModifiedDate":"2024-04-14"},{"lineNumber":764,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":765,"author":{"gitId":"Kappaccinoh"},"content":"Valid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":766,"author":{"gitId":"Kappaccinoh"},"content":"* Index of an existing person and valid fields to update.","lastModifiedDate":"2024-04-14"},{"lineNumber":767,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `edit 1 n/John Smith`","lastModifiedDate":"2024-04-14"},{"lineNumber":768,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":769,"author":{"gitId":"Kappaccinoh"},"content":"Expected Outcome:","lastModifiedDate":"2024-04-14"},{"lineNumber":770,"author":{"gitId":"Kappaccinoh"},"content":"* Person\u0027s name has been successfully updated to John Smith.","lastModifiedDate":"2024-04-14"},{"lineNumber":771,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":772,"author":{"gitId":"Kappaccinoh"},"content":"Invalid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":773,"author":{"gitId":"Kappaccinoh"},"content":"* Invalid index or missing fields.","lastModifiedDate":"2024-04-14"},{"lineNumber":774,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `edit 0 n/John Smith`","lastModifiedDate":"2024-04-14"},{"lineNumber":775,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `edit 1`","lastModifiedDate":"2024-04-14"},{"lineNumber":776,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":777,"author":{"gitId":"Kappaccinoh"},"content":"Expected Error:","lastModifiedDate":"2024-04-14"},{"lineNumber":778,"author":{"gitId":"Kappaccinoh"},"content":"* Command fails with the appropriate error message indicating the invalid index or missing fields.","lastModifiedDate":"2024-04-14"},{"lineNumber":779,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":780,"author":{"gitId":"Kappaccinoh"},"content":"#### Finding Persons by Name : `find`","lastModifiedDate":"2024-04-14"},{"lineNumber":781,"author":{"gitId":"Kappaccinoh"},"content":"Steps:","lastModifiedDate":"2024-04-14"},{"lineNumber":782,"author":{"gitId":"Kappaccinoh"},"content":"1. Use the `find` command with keywords to search for both patients and doctors.","lastModifiedDate":"2024-04-14"},{"lineNumber":783,"author":{"gitId":"Kappaccinoh"},"content":"2. Ensure the command returns expected results based on the provided keywords.","lastModifiedDate":"2024-04-14"},{"lineNumber":784,"author":{"gitId":"Kappaccinoh"},"content":"3. Try different combinations of keywords and verify the search results.","lastModifiedDate":"2024-04-14"},{"lineNumber":785,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":786,"author":{"gitId":"Kappaccinoh"},"content":"Valid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":787,"author":{"gitId":"Kappaccinoh"},"content":"* Keywords matching existing persons\u0027 names.","lastModifiedDate":"2024-04-14"},{"lineNumber":788,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `find John`","lastModifiedDate":"2024-04-14"},{"lineNumber":789,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":790,"author":{"gitId":"Kappaccinoh"},"content":"Expected Outcome:","lastModifiedDate":"2024-04-14"},{"lineNumber":791,"author":{"gitId":"Kappaccinoh"},"content":"* List of persons matching the keywords is displayed.","lastModifiedDate":"2024-04-14"},{"lineNumber":792,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":793,"author":{"gitId":"Kappaccinoh"},"content":"Invalid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":794,"author":{"gitId":"Kappaccinoh"},"content":"* No matching keywords or invalid syntax.","lastModifiedDate":"2024-04-14"},{"lineNumber":795,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `find 123`","lastModifiedDate":"2024-04-14"},{"lineNumber":796,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":797,"author":{"gitId":"Kappaccinoh"},"content":"Expected Error:","lastModifiedDate":"2024-04-14"},{"lineNumber":798,"author":{"gitId":"Kappaccinoh"},"content":"* Results display indicates \u00270 persons listed\u0027, and the Persons panel is empty.","lastModifiedDate":"2024-04-14"},{"lineNumber":799,"author":{"gitId":"Kappaccinoh"},"content":"                ","lastModifiedDate":"2024-04-14"},{"lineNumber":800,"author":{"gitId":"Kappaccinoh"},"content":"#### Finding Persons by all Fields : `patient`, `doctor`","lastModifiedDate":"2024-04-14"},{"lineNumber":801,"author":{"gitId":"Kappaccinoh"},"content":"Steps:","lastModifiedDate":"2024-04-14"},{"lineNumber":802,"author":{"gitId":"Kappaccinoh"},"content":"1. Use the `patient` command with keywords to search for patients only.","lastModifiedDate":"2024-04-14"},{"lineNumber":803,"author":{"gitId":"Kappaccinoh"},"content":"2. Ensure the command returns expected results based on the provided keywords.","lastModifiedDate":"2024-04-14"},{"lineNumber":804,"author":{"gitId":"Kappaccinoh"},"content":"3. Similarly, use the `doctor` command to search for doctors.","lastModifiedDate":"2024-04-14"},{"lineNumber":805,"author":{"gitId":"Kappaccinoh"},"content":"4. Try different combinations of keywords and verify the search results.","lastModifiedDate":"2024-04-14"},{"lineNumber":806,"author":{"gitId":"Kappaccinoh"},"content":"                                                                                   ","lastModifiedDate":"2024-04-14"},{"lineNumber":807,"author":{"gitId":"Kappaccinoh"},"content":"Valid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":808,"author":{"gitId":"Kappaccinoh"},"content":"* Keywords exactly matching or substring matching existing persons\u0027 nric, name, date of birth, or phone number.","lastModifiedDate":"2024-04-14"},{"lineNumber":809,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `patient S1234`","lastModifiedDate":"2024-04-14"},{"lineNumber":810,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `patient Doe`","lastModifiedDate":"2024-04-14"},{"lineNumber":811,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `doctor 30 Jan`","lastModifiedDate":"2024-04-14"},{"lineNumber":812,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `doctor 98765432`","lastModifiedDate":"2024-04-14"},{"lineNumber":813,"author":{"gitId":"Kappaccinoh"},"content":"                                                                                   ","lastModifiedDate":"2024-04-14"},{"lineNumber":814,"author":{"gitId":"Kappaccinoh"},"content":"Expected Outcome:","lastModifiedDate":"2024-04-14"},{"lineNumber":815,"author":{"gitId":"Kappaccinoh"},"content":"* List of patients or doctors exactly matching or substring matching the keywords is displayed.","lastModifiedDate":"2024-04-14"},{"lineNumber":816,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":817,"author":{"gitId":"Kappaccinoh"},"content":"Invalid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":818,"author":{"gitId":"Kappaccinoh"},"content":"* No matching keywords or invalid syntax.","lastModifiedDate":"2024-04-14"},{"lineNumber":819,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `patient`","lastModifiedDate":"2024-04-14"},{"lineNumber":820,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `doctor @`","lastModifiedDate":"2024-04-14"},{"lineNumber":821,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":822,"author":{"gitId":"Kappaccinoh"},"content":"Expected Error:","lastModifiedDate":"2024-04-14"},{"lineNumber":823,"author":{"gitId":"Kappaccinoh"},"content":"* Command fails with the appropriate error message indicating the required command format.","lastModifiedDate":"2024-04-14"},{"lineNumber":824,"author":{"gitId":"Kappaccinoh"},"content":"* Or the results display indicates \u00270 persons listed\u0027, and the Persons panel is empty.","lastModifiedDate":"2024-04-14"},{"lineNumber":825,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":826,"author":{"gitId":"Kappaccinoh"},"content":"#### Deleting a Person (delete)","lastModifiedDate":"2024-04-14"},{"lineNumber":827,"author":{"gitId":"Kappaccinoh"},"content":"Steps:","lastModifiedDate":"2024-04-14"},{"lineNumber":828,"author":{"gitId":"Kappaccinoh"},"content":"1. Use the `list` command to display a list of persons.","lastModifiedDate":"2024-04-14"},{"lineNumber":829,"author":{"gitId":"Kappaccinoh"},"content":"2. Execute the `delete` command with the index of a person to delete them.","lastModifiedDate":"2024-04-14"},{"lineNumber":830,"author":{"gitId":"Kappaccinoh"},"content":"3. Confirm that the person is removed from MediCLI.","lastModifiedDate":"2024-04-14"},{"lineNumber":831,"author":{"gitId":"Kappaccinoh"},"content":"4. Verify that associated appointments are also deleted recursively.","lastModifiedDate":"2024-04-14"},{"lineNumber":832,"author":{"gitId":"Kappaccinoh"},"content":"5. Test deleting a person with an invalid index and observe error handling.","lastModifiedDate":"2024-04-14"},{"lineNumber":833,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":834,"author":{"gitId":"Kappaccinoh"},"content":"Valid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":835,"author":{"gitId":"Kappaccinoh"},"content":" * Index of an existing person.","lastModifiedDate":"2024-04-14"},{"lineNumber":836,"author":{"gitId":"Kappaccinoh"},"content":" * Example: `delete 1`","lastModifiedDate":"2024-04-14"},{"lineNumber":837,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":838,"author":{"gitId":"Kappaccinoh"},"content":"Expected Outcome:","lastModifiedDate":"2024-04-14"},{"lineNumber":839,"author":{"gitId":"Kappaccinoh"},"content":" * Person is successfully deleted from the system.","lastModifiedDate":"2024-04-14"},{"lineNumber":840,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":841,"author":{"gitId":"Kappaccinoh"},"content":"Invalid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":842,"author":{"gitId":"Kappaccinoh"},"content":"* Invalid index.","lastModifiedDate":"2024-04-14"},{"lineNumber":843,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `delete 0`","lastModifiedDate":"2024-04-14"},{"lineNumber":844,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":845,"author":{"gitId":"Kappaccinoh"},"content":"Expected Error:","lastModifiedDate":"2024-04-14"},{"lineNumber":846,"author":{"gitId":"Kappaccinoh"},"content":"* Command fails with appropriate error message indicating the required command format and parameter requirements.","lastModifiedDate":"2024-04-14"},{"lineNumber":847,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":848,"author":{"gitId":"Kappaccinoh"},"content":"### Appointment Related Commands","lastModifiedDate":"2024-04-14"},{"lineNumber":849,"author":{"gitId":"Kappaccinoh"},"content":"#### Adding an Appointment : `addappt`","lastModifiedDate":"2024-04-14"},{"lineNumber":850,"author":{"gitId":"Kappaccinoh"},"content":"Steps:","lastModifiedDate":"2024-04-14"},{"lineNumber":851,"author":{"gitId":"Kappaccinoh"},"content":"1. Execute the `addappt` command with valid datetime, doctor\u0027s NRIC, and patient\u0027s NRIC.","lastModifiedDate":"2024-04-14"},{"lineNumber":852,"author":{"gitId":"Kappaccinoh"},"content":"2. Ensure the appointment is successfully added to the system.","lastModifiedDate":"2024-04-14"},{"lineNumber":853,"author":{"gitId":"Kappaccinoh"},"content":"3. Test adding an appointment with invalid datetime or NRICs and verify error handling.","lastModifiedDate":"2024-04-14"},{"lineNumber":854,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":855,"author":{"gitId":"Kappaccinoh"},"content":"Valid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":856,"author":{"gitId":"Kappaccinoh"},"content":"* Valid datetime, doctor\u0027s NRIC, and patient\u0027s NRIC.","lastModifiedDate":"2024-04-14"},{"lineNumber":857,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `addappt ad/2024-08-11 12:00 dn/S1234567A pn/S7654321B`","lastModifiedDate":"2024-04-14"},{"lineNumber":858,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":859,"author":{"gitId":"Kappaccinoh"},"content":"Expected Outcome:","lastModifiedDate":"2024-04-14"},{"lineNumber":860,"author":{"gitId":"Kappaccinoh"},"content":"* Appointment is successfully added to the system.","lastModifiedDate":"2024-04-14"},{"lineNumber":861,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":862,"author":{"gitId":"Kappaccinoh"},"content":"Invalid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":863,"author":{"gitId":"Kappaccinoh"},"content":"* Missing or invalid datetime, doctor\u0027s NRIC, or patient\u0027s NRIC.","lastModifiedDate":"2024-04-14"},{"lineNumber":864,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `addappt ad/2024-08-11 dn/S1234567A pn/S7654321B`","lastModifiedDate":"2024-04-14"},{"lineNumber":865,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":866,"author":{"gitId":"Kappaccinoh"},"content":"Expected Error:","lastModifiedDate":"2024-04-14"},{"lineNumber":867,"author":{"gitId":"Kappaccinoh"},"content":"* Command fails with appropriate error message indicating the required command format.","lastModifiedDate":"2024-04-14"},{"lineNumber":868,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":869,"author":{"gitId":"Kappaccinoh"},"content":"#### Editing an Appointment : `editappt`","lastModifiedDate":"2024-04-14"},{"lineNumber":870,"author":{"gitId":"Kappaccinoh"},"content":"Steps:","lastModifiedDate":"2024-04-14"},{"lineNumber":871,"author":{"gitId":"Kappaccinoh"},"content":"1. Use the editappt command with the index of an existing appointment.","lastModifiedDate":"2024-04-14"},{"lineNumber":872,"author":{"gitId":"Kappaccinoh"},"content":"2. Update the datetime of the appointment and confirm changes.","lastModifiedDate":"2024-04-14"},{"lineNumber":873,"author":{"gitId":"Kappaccinoh"},"content":"3. Test editing without changing any values and ensure it\u0027s handled correctly.","lastModifiedDate":"2024-04-14"},{"lineNumber":874,"author":{"gitId":"Kappaccinoh"},"content":"4. Try editing with an invalid index and verify error handling.","lastModifiedDate":"2024-04-14"},{"lineNumber":875,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":876,"author":{"gitId":"Kappaccinoh"},"content":"Valid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":877,"author":{"gitId":"Kappaccinoh"},"content":"* Index of an existing appointment and valid datetime to update.","lastModifiedDate":"2024-04-14"},{"lineNumber":878,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `editappt 1 ad/2024-08-12 14:00`","lastModifiedDate":"2024-04-14"},{"lineNumber":879,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":880,"author":{"gitId":"Kappaccinoh"},"content":"Expected Outcome:","lastModifiedDate":"2024-04-14"},{"lineNumber":881,"author":{"gitId":"Kappaccinoh"},"content":"* Appointment datetime is successfully updated.","lastModifiedDate":"2024-04-14"},{"lineNumber":882,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":883,"author":{"gitId":"Kappaccinoh"},"content":"Invalid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":884,"author":{"gitId":"Kappaccinoh"},"content":"* Invalid index or missing datetime.","lastModifiedDate":"2024-04-14"},{"lineNumber":885,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `editappt 0 ad/2024-08-12 14:00`","lastModifiedDate":"2024-04-14"},{"lineNumber":886,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":887,"author":{"gitId":"Kappaccinoh"},"content":"Expected Error:","lastModifiedDate":"2024-04-14"},{"lineNumber":888,"author":{"gitId":"Kappaccinoh"},"content":"* Command fails with appropriate error message indicating the required command format.","lastModifiedDate":"2024-04-14"},{"lineNumber":889,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":890,"author":{"gitId":"Kappaccinoh"},"content":"#### Querying Appointments by Patient\u0027s NRIC : `apptforpatient`","lastModifiedDate":"2024-04-14"},{"lineNumber":891,"author":{"gitId":"Kappaccinoh"},"content":"Steps:","lastModifiedDate":"2024-04-14"},{"lineNumber":892,"author":{"gitId":"Kappaccinoh"},"content":"1. Execute the `apptforpatient` command with a patient\u0027s exact NRIC.","lastModifiedDate":"2024-04-14"},{"lineNumber":893,"author":{"gitId":"Kappaccinoh"},"content":"2. Verify that all appointments involving the specified patient are listed.","lastModifiedDate":"2024-04-14"},{"lineNumber":894,"author":{"gitId":"Kappaccinoh"},"content":"3. Test with different patient NRICs and confirm the results.","lastModifiedDate":"2024-04-14"},{"lineNumber":895,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":896,"author":{"gitId":"Kappaccinoh"},"content":"Valid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":897,"author":{"gitId":"Kappaccinoh"},"content":"* Patient\u0027s NRIC.","lastModifiedDate":"2024-04-14"},{"lineNumber":898,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `apptforpatient S7654321B`","lastModifiedDate":"2024-04-14"},{"lineNumber":899,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":900,"author":{"gitId":"Kappaccinoh"},"content":"Expected Outcome:","lastModifiedDate":"2024-04-14"},{"lineNumber":901,"author":{"gitId":"Kappaccinoh"},"content":"* List of appointments involving the specified patient is displayed.","lastModifiedDate":"2024-04-14"},{"lineNumber":902,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":903,"author":{"gitId":"Kappaccinoh"},"content":"Invalid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":904,"author":{"gitId":"Kappaccinoh"},"content":"* No matching patient NRIC, missing NRIC or invalid NRIC.","lastModifiedDate":"2024-04-14"},{"lineNumber":905,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `apptforpatient S1234567A`","lastModifiedDate":"2024-04-14"},{"lineNumber":906,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `apptforpatient`","lastModifiedDate":"2024-04-14"},{"lineNumber":907,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `apptforpatient S123456`","lastModifiedDate":"2024-04-14"},{"lineNumber":908,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":909,"author":{"gitId":"Kappaccinoh"},"content":"Expected Error:","lastModifiedDate":"2024-04-14"},{"lineNumber":910,"author":{"gitId":"Kappaccinoh"},"content":"* Command fails with appropriate error message indicating the required command format.","lastModifiedDate":"2024-04-14"},{"lineNumber":911,"author":{"gitId":"Kappaccinoh"},"content":"* Or the results display indicates \u00270 appointments listed\u0027, and the appointments panel is empty.","lastModifiedDate":"2024-04-14"},{"lineNumber":912,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":913,"author":{"gitId":"Kappaccinoh"},"content":"#### Querying Appointments by Doctor\u0027s NRIC : `apptfordoctor`","lastModifiedDate":"2024-04-14"},{"lineNumber":914,"author":{"gitId":"Kappaccinoh"},"content":"Steps:","lastModifiedDate":"2024-04-14"},{"lineNumber":915,"author":{"gitId":"Kappaccinoh"},"content":"1. Use the `apptfordoctor` command with a doctor\u0027s NRIC.","lastModifiedDate":"2024-04-14"},{"lineNumber":916,"author":{"gitId":"Kappaccinoh"},"content":"2. Ensure that all appointments involving the specified doctor are listed.","lastModifiedDate":"2024-04-14"},{"lineNumber":917,"author":{"gitId":"Kappaccinoh"},"content":"3. Test with different doctor NRICs and verify the results.","lastModifiedDate":"2024-04-14"},{"lineNumber":918,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":919,"author":{"gitId":"Kappaccinoh"},"content":"Valid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":920,"author":{"gitId":"Kappaccinoh"},"content":"* Doctor\u0027s NRIC.","lastModifiedDate":"2024-04-14"},{"lineNumber":921,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `apptfordoctor S1234567A`","lastModifiedDate":"2024-04-14"},{"lineNumber":922,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":923,"author":{"gitId":"Kappaccinoh"},"content":"Expected Outcome:","lastModifiedDate":"2024-04-14"},{"lineNumber":924,"author":{"gitId":"Kappaccinoh"},"content":"* List of appointments involving the specified doctor is displayed.","lastModifiedDate":"2024-04-14"},{"lineNumber":925,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":926,"author":{"gitId":"Kappaccinoh"},"content":"Invalid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":927,"author":{"gitId":"Kappaccinoh"},"content":"* No matching patient NRIC, missing NRIC or invalid NRIC.","lastModifiedDate":"2024-04-14"},{"lineNumber":928,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `apptfordoctor S1234567A`","lastModifiedDate":"2024-04-14"},{"lineNumber":929,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `apptfordoctor`","lastModifiedDate":"2024-04-14"},{"lineNumber":930,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `apptfordoctor S123456`","lastModifiedDate":"2024-04-14"},{"lineNumber":931,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":932,"author":{"gitId":"Kappaccinoh"},"content":"Expected Error:","lastModifiedDate":"2024-04-14"},{"lineNumber":933,"author":{"gitId":"Kappaccinoh"},"content":"* Command fails with appropriate error message indicating the required command format.","lastModifiedDate":"2024-04-14"},{"lineNumber":934,"author":{"gitId":"Kappaccinoh"},"content":"* Or the results display indicates \u00270 appointments listed\u0027, and the appointments panel is empty.","lastModifiedDate":"2024-04-14"},{"lineNumber":935,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":936,"author":{"gitId":"Kappaccinoh"},"content":"#### Deleting an Appointment : `deleteappt`","lastModifiedDate":"2024-04-14"},{"lineNumber":937,"author":{"gitId":"Kappaccinoh"},"content":"Steps:","lastModifiedDate":"2024-04-14"},{"lineNumber":938,"author":{"gitId":"Kappaccinoh"},"content":"1. Use the `list` command to display a list of appointments.","lastModifiedDate":"2024-04-14"},{"lineNumber":939,"author":{"gitId":"Kappaccinoh"},"content":"2. Execute the `deleteappt` command with the index of an appointment to delete it.","lastModifiedDate":"2024-04-14"},{"lineNumber":940,"author":{"gitId":"Kappaccinoh"},"content":"3. Confirm that the appointment is removed from the system.","lastModifiedDate":"2024-04-14"},{"lineNumber":941,"author":{"gitId":"Kappaccinoh"},"content":"4. Test deleting an appointment with an invalid index and observe error handling.","lastModifiedDate":"2024-04-14"},{"lineNumber":942,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":943,"author":{"gitId":"Kappaccinoh"},"content":"Valid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":944,"author":{"gitId":"Kappaccinoh"},"content":"* Index of an existing appointment.","lastModifiedDate":"2024-04-14"},{"lineNumber":945,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `deleteappt 1`","lastModifiedDate":"2024-04-14"},{"lineNumber":946,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":947,"author":{"gitId":"Kappaccinoh"},"content":"Expected Outcome:","lastModifiedDate":"2024-04-14"},{"lineNumber":948,"author":{"gitId":"Kappaccinoh"},"content":"* Appointment is successfully deleted from the system.","lastModifiedDate":"2024-04-14"},{"lineNumber":949,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":950,"author":{"gitId":"Kappaccinoh"},"content":"Invalid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":951,"author":{"gitId":"Kappaccinoh"},"content":"* Invalid index.","lastModifiedDate":"2024-04-14"},{"lineNumber":952,"author":{"gitId":"Kappaccinoh"},"content":"* Example: `deleteappt 0`","lastModifiedDate":"2024-04-14"},{"lineNumber":953,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":954,"author":{"gitId":"Kappaccinoh"},"content":"Expected Error:","lastModifiedDate":"2024-04-14"},{"lineNumber":955,"author":{"gitId":"Kappaccinoh"},"content":"* Command fails with appropriate error message indicating the required command format.","lastModifiedDate":"2024-04-14"},{"lineNumber":956,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":957,"author":{"gitId":"Kappaccinoh"},"content":"### Miscellaneous Commands","lastModifiedDate":"2024-04-14"},{"lineNumber":958,"author":{"gitId":"Kappaccinoh"},"content":"#### Viewing Help : `help`","lastModifiedDate":"2024-04-14"},{"lineNumber":959,"author":{"gitId":"Kappaccinoh"},"content":"Steps:","lastModifiedDate":"2024-04-14"},{"lineNumber":960,"author":{"gitId":"Kappaccinoh"},"content":"1. Execute the `help` command and ensure the help message is displayed.","lastModifiedDate":"2024-04-14"},{"lineNumber":961,"author":{"gitId":"Kappaccinoh"},"content":"2. Verify that the \u0027Help\u0027 pop up is displayed, and click the \u0027Copy URL\u0027 button.","lastModifiedDate":"2024-04-14"},{"lineNumber":962,"author":{"gitId":"Kappaccinoh"},"content":"3. Verify that pasting the URL in your browser leads you to MediCLI\u0027s updated User-Guide page.","lastModifiedDate":"2024-04-14"},{"lineNumber":963,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":964,"author":{"gitId":"Kappaccinoh"},"content":"Valid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":965,"author":{"gitId":"Kappaccinoh"},"content":"* None","lastModifiedDate":"2024-04-14"},{"lineNumber":966,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":967,"author":{"gitId":"Kappaccinoh"},"content":"Expected Outcome:","lastModifiedDate":"2024-04-14"},{"lineNumber":968,"author":{"gitId":"Kappaccinoh"},"content":"* \u0027Help\u0027 pop up is displayed successfully.","lastModifiedDate":"2024-04-14"},{"lineNumber":969,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":970,"author":{"gitId":"Kappaccinoh"},"content":"Invalid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":971,"author":{"gitId":"Kappaccinoh"},"content":"* None","lastModifiedDate":"2024-04-14"},{"lineNumber":972,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":973,"author":{"gitId":"Kappaccinoh"},"content":"Expected Error:","lastModifiedDate":"2024-04-14"},{"lineNumber":974,"author":{"gitId":"Kappaccinoh"},"content":"* None","lastModifiedDate":"2024-04-14"},{"lineNumber":975,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":976,"author":{"gitId":"Kappaccinoh"},"content":"#### Listing All Persons and Appointments : `list`","lastModifiedDate":"2024-04-14"},{"lineNumber":977,"author":{"gitId":"Kappaccinoh"},"content":"Steps:","lastModifiedDate":"2024-04-14"},{"lineNumber":978,"author":{"gitId":"Kappaccinoh"},"content":"1. Use the `list` command to display all persons and appointments.","lastModifiedDate":"2024-04-14"},{"lineNumber":979,"author":{"gitId":"Kappaccinoh"},"content":"2. Confirm that the Persons Panel and the Appointments Panel includes all existing patients, doctors, and appointments existing in MediCLI.","lastModifiedDate":"2024-04-14"},{"lineNumber":980,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":981,"author":{"gitId":"Kappaccinoh"},"content":"Valid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":982,"author":{"gitId":"Kappaccinoh"},"content":"* None","lastModifiedDate":"2024-04-14"},{"lineNumber":983,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":984,"author":{"gitId":"Kappaccinoh"},"content":"Expected Outcome:","lastModifiedDate":"2024-04-14"},{"lineNumber":985,"author":{"gitId":"Kappaccinoh"},"content":"* All persons and appointments are displayed.","lastModifiedDate":"2024-04-14"},{"lineNumber":986,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":987,"author":{"gitId":"Kappaccinoh"},"content":"Invalid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":988,"author":{"gitId":"Kappaccinoh"},"content":"* None","lastModifiedDate":"2024-04-14"},{"lineNumber":989,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":990,"author":{"gitId":"Kappaccinoh"},"content":"Expected Error:","lastModifiedDate":"2024-04-14"},{"lineNumber":991,"author":{"gitId":"Kappaccinoh"},"content":"* None","lastModifiedDate":"2024-04-14"},{"lineNumber":992,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":993,"author":{"gitId":"Kappaccinoh"},"content":"#### Clearing All Entries : `clear`","lastModifiedDate":"2024-04-14"},{"lineNumber":994,"author":{"gitId":"Kappaccinoh"},"content":"Steps:","lastModifiedDate":"2024-04-14"},{"lineNumber":995,"author":{"gitId":"alfaloo"},"content":"1. Execute the `clear` command and confirm if all data is wiped from MediCLI.","lastModifiedDate":"2024-04-15"},{"lineNumber":996,"author":{"gitId":"Kappaccinoh"},"content":"2. Ensure there is no remaining data after executing this command.","lastModifiedDate":"2024-04-14"},{"lineNumber":997,"author":{"gitId":"Kappaccinoh"},"content":"3. Verify that there is no confirmation prompt and data deletion is immediate.","lastModifiedDate":"2024-04-14"},{"lineNumber":998,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":999,"author":{"gitId":"Kappaccinoh"},"content":"Valid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":1000,"author":{"gitId":"Kappaccinoh"},"content":"* None","lastModifiedDate":"2024-04-14"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1002,"author":{"gitId":"Kappaccinoh"},"content":"Expected Outcome:","lastModifiedDate":"2024-04-14"},{"lineNumber":1003,"author":{"gitId":"Kappaccinoh"},"content":"* All data is wiped from MediCLI.","lastModifiedDate":"2024-04-14"},{"lineNumber":1004,"author":{"gitId":"Kappaccinoh"},"content":"* Results display indicates that \u0027MediCLI\u0027s storage has been cleared!\u0027","lastModifiedDate":"2024-04-14"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1006,"author":{"gitId":"Kappaccinoh"},"content":"Invalid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":1007,"author":{"gitId":"Kappaccinoh"},"content":"* None","lastModifiedDate":"2024-04-14"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1009,"author":{"gitId":"Kappaccinoh"},"content":"Expected Error:","lastModifiedDate":"2024-04-14"},{"lineNumber":1010,"author":{"gitId":"Kappaccinoh"},"content":"* None","lastModifiedDate":"2024-04-14"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1012,"author":{"gitId":"Kappaccinoh"},"content":"#### Exiting the Program : `exit`","lastModifiedDate":"2024-04-14"},{"lineNumber":1013,"author":{"gitId":"Kappaccinoh"},"content":"Steps:","lastModifiedDate":"2024-04-14"},{"lineNumber":1014,"author":{"gitId":"Kappaccinoh"},"content":"1. Execute the `exit` command and ensure the program exits gracefully.","lastModifiedDate":"2024-04-14"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1016,"author":{"gitId":"Kappaccinoh"},"content":"Valid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":1017,"author":{"gitId":"Kappaccinoh"},"content":"* None","lastModifiedDate":"2024-04-14"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1019,"author":{"gitId":"Kappaccinoh"},"content":"Expected Outcome:","lastModifiedDate":"2024-04-14"},{"lineNumber":1020,"author":{"gitId":"Kappaccinoh"},"content":"* Program exits without errors.","lastModifiedDate":"2024-04-14"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1022,"author":{"gitId":"Kappaccinoh"},"content":"Invalid Inputs:","lastModifiedDate":"2024-04-14"},{"lineNumber":1023,"author":{"gitId":"Kappaccinoh"},"content":"* None","lastModifiedDate":"2024-04-14"},{"lineNumber":1024,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1025,"author":{"gitId":"Kappaccinoh"},"content":"Expected Error:","lastModifiedDate":"2024-04-14"},{"lineNumber":1026,"author":{"gitId":"Kappaccinoh"},"content":"* None","lastModifiedDate":"2024-04-14"},{"lineNumber":1027,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1028,"author":{"gitId":"alfaloo"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-15"},{"lineNumber":1029,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1030,"author":{"gitId":"ararchch"},"content":"## **Appendix: Effort**","lastModifiedDate":"2024-04-15"},{"lineNumber":1031,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1032,"author":{"gitId":"ararchch"},"content":"### Difficulty level:","lastModifiedDate":"2024-04-15"},{"lineNumber":1033,"author":{"gitId":"ararchch"},"content":"If AB3 was at a difficulty level of 5/10, `MediCLI` reached was at a level of 8/10. This is most significantly because of the following reasons:","lastModifiedDate":"2024-04-15"},{"lineNumber":1034,"author":{"gitId":"ararchch"},"content":"- Expansion of `Person` entity type to include `Patient` and `Doctor` entities.","lastModifiedDate":"2024-04-15"},{"lineNumber":1035,"author":{"gitId":"ararchch"},"content":"- Inclusion of a completely new `Appointment` entity type.","lastModifiedDate":"2024-04-15"},{"lineNumber":1036,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1037,"author":{"gitId":"ararchch"},"content":"The expansion into `Patient` and `Doctor` required us to expand the suite of commands to account for them, as well as modify the backend methods to account for the changes.","lastModifiedDate":"2024-04-15"},{"lineNumber":1038,"author":{"gitId":"ararchch"},"content":"However, the `Appointment` class required us to build a completely new parallel infrastructure from UI to the commands to the storage and significantly increased the challenge and difficulty of the project.","lastModifiedDate":"2024-04-15"},{"lineNumber":1039,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1040,"author":{"gitId":"ararchch"},"content":"### Challenges faced:","lastModifiedDate":"2024-04-15"},{"lineNumber":1041,"author":{"gitId":"ararchch"},"content":"We faced multiple challenges in the project, most significant of which are highlighted below:","lastModifiedDate":"2024-04-15"},{"lineNumber":1042,"author":{"gitId":"ararchch"},"content":"- Developing the `Appointments` feature: As a completely new entity type, we had to build this from the ground up while also integrating it the best way we could with the existing AB3 codebase, which was a big challenge. Even simple things like the `addAppointment` command required a large amount of implementation effort. Beyond just the functional code, writing tests for this and making sure that a sufficient portion was tested using automated tests was quite difficult as we had no existing code that we could build off-of, or modify.","lastModifiedDate":"2024-04-15"},{"lineNumber":1043,"author":{"gitId":"ararchch"},"content":"- Achieving sufficient test coverage - as we have a fairly large amount of functional LOC written, a natural consequence is that we had to write a lot of test code to ensure that they were sufficiently tested. This was a challenge, especially in the beginning when we were just familiarising ourselves with automated tests.","lastModifiedDate":"2024-04-15"},{"lineNumber":1044,"author":{"gitId":"ararchch"},"content":"- UI enhancements: As `javafx` was a completely new framework for everyone in our team, we found it rather difficult to actually make the UI enhancements that we wanted. Particularly we had to make a completely new `card` for appointments and we made changes to the general look and feel to make it more suitable for a hospital, which was a significant step away from the AB3 UI, hence the difficulty. ","lastModifiedDate":"2024-04-15"},{"lineNumber":1045,"author":{"gitId":"ararchch"},"content":"- Finally, another difficulty we faced was actually considering the edge-cases and various scenarios that may arise from interactions between the different entities we were managing:","lastModifiedDate":"2024-04-15"},{"lineNumber":1046,"author":{"gitId":"ararchch"},"content":"  - Let\u0027s say you have a `Doctor` with multiple `Appointments`, what do you do if the user deletes the `Doctor` from MediCLI? We decided that the most appropriate approach would be to recursively delete all `Appointments` associated with the doctor.","lastModifiedDate":"2024-04-15"},{"lineNumber":1047,"author":{"gitId":"ararchch"},"content":"  - Similarly, what if you want to add an `Appointment` but the `Patient` involved doesn\u0027t exist in the records? We had to implement checks to prevent this.","lastModifiedDate":"2024-04-15"},{"lineNumber":1048,"author":{"gitId":"ararchch"},"content":"  - Many other similar issues resulting from the interactions of different entities were noted and we found it quite challenging to actually identify and resolve all of them so they didn\u0027t become a bug or feature flaw down the line.","lastModifiedDate":"2024-04-15"},{"lineNumber":1049,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1050,"author":{"gitId":"ararchch"},"content":"### Effort required:","lastModifiedDate":"2024-04-15"},{"lineNumber":1051,"author":{"gitId":"ararchch"},"content":"In the previous sections we have already elaborated a little on the challenges and difficulties and talked about the efforts we put into addressing them. As such, for this section we have focused on quantifying the overall project effort.","lastModifiedDate":"2024-04-15"},{"lineNumber":1052,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1053,"author":{"gitId":"ararchch"},"content":"On the whole, the project took us the entire duration that was offered, with most of us writing upwards of 1000 lines of functional code. The `Appointments` feature was naturally the biggest cause of this and it led to a number of issues that were quite effort-intensive to resolve. ","lastModifiedDate":"2024-04-15"},{"lineNumber":1054,"author":{"gitId":"ararchch"},"content":"On a weekly basis, each of us invested about 8 hours on average in writing code, writing automated tests, documenting and manually testing the feature. ","lastModifiedDate":"2024-04-15"},{"lineNumber":1055,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1056,"author":{"gitId":"ararchch"},"content":"For team meetings, we would meet up twice a week, one time at the start to distribute work for the week and discuss deliverables, and one time in the end to wrap up the milestone/work for the week and submit the deliverables. Altogether we spent about 3 hours in meetings per week. ","lastModifiedDate":"2024-04-15"},{"lineNumber":1057,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1058,"author":{"gitId":"ararchch"},"content":"### Achievements:","lastModifiedDate":"2024-04-15"},{"lineNumber":1059,"author":{"gitId":"ararchch"},"content":"Some achievements we are particulary proud of are:","lastModifiedDate":"2024-04-15"},{"lineNumber":1060,"author":{"gitId":"ararchch"},"content":"- Robustness of `Appointments` feature: We tried to consider all the edge cases and problematic aspects of this and preemptively prevent them to make sure the user has a seamless experience.","lastModifiedDate":"2024-04-15"},{"lineNumber":1061,"author":{"gitId":"ararchch"},"content":"- UI improvements: We are quite happy with the way `Appointments` and `Patients`/`Doctors` are integrated into the same window to allow for easy visualisation with minimal use of the mouse. We are also quite proud of the new clean and minimalist interface which we think reflects a hospital setting quite well.","lastModifiedDate":"2024-04-15"},{"lineNumber":1062,"author":{"gitId":"ararchch"},"content":"- Variety of commands: We also are happy with the suite of commands that we offer to users. We focused on the most high-impact commands and ensured that our product offers all CRUD capabilities such that it may actually be used in a functional setting for a small clinic/hospital.","lastModifiedDate":"2024-04-15"},{"lineNumber":1063,"author":{"gitId":"ararchch"},"content":"- Comprehensive testing: While we do not claim to be bug-free, we did a comprehensive amount of testing including testing our product ourselves manually, through automated tests, and even asking other teams to perform their own UAT on our product to identify pain-points/bugs/feature flaws (that we went on to address).","lastModifiedDate":"2024-04-15"},{"lineNumber":1064,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1065,"author":{"gitId":"alfaloo"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-15"},{"lineNumber":1066,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1067,"author":{"gitId":"alfaloo"},"content":"## **Appendix: Planned Enhancements**","lastModifiedDate":"2024-04-15"},{"lineNumber":1068,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1069,"author":{"gitId":"alfaloo"},"content":"The MediCLI development team (consisting of 5 members) acknowledges the presense of known feature flaws in our system.","lastModifiedDate":"2024-04-15"},{"lineNumber":1070,"author":{"gitId":"alfaloo"},"content":"Thus, we have planned the following 10 enhancements to be added in the near future.","lastModifiedDate":"2024-04-15"},{"lineNumber":1071,"author":{"gitId":"alfaloo"},"content":"Please find them organised into their respective categories.","lastModifiedDate":"2024-04-15"},{"lineNumber":1072,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1073,"author":{"gitId":"alfaloo"},"content":"### Appointment Functionality Enhancements","lastModifiedDate":"2024-04-15"},{"lineNumber":1074,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1075,"author":{"gitId":"alfaloo"},"content":"\u003cspan\u003e1\u003c/span\u003e. Adding an end time to appointments","lastModifiedDate":"2024-04-15"},{"lineNumber":1076,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1077,"author":{"gitId":"alfaloo"},"content":"Currently, the MediCLI system only stores the date and start time of an appointment.","lastModifiedDate":"2024-04-15"},{"lineNumber":1078,"author":{"gitId":"alfaloo"},"content":"However, we recognise that in a fast-paced environment like a hospital, it\u0027d be beneficial to also be able to indicate an end time for appointments.","lastModifiedDate":"2024-04-15"},{"lineNumber":1079,"author":{"gitId":"alfaloo"},"content":"This is so that the doctor can be safely booked by another patient without worrying about potential clashes in appointment timings.","lastModifiedDate":"2024-04-15"},{"lineNumber":1080,"author":{"gitId":"alfaloo"},"content":"* \u003cb\u003eUpdated Command Format\u003c/b\u003e - `addappt sdt/STARTDATETIME [edt/ENDDATETIME] dn/DOCTORNRIC pn/PATIENTNRIC`","lastModifiedDate":"2024-04-15"},{"lineNumber":1081,"author":{"gitId":"alfaloo"},"content":"* \u003cb\u003eExample Input\u003c/b\u003e - `addappt sdt/2024-05-20 10:00 edt/2024-05-20 11:00 dn/S1234567A pn/S1234567B`","lastModifiedDate":"2024-04-15"},{"lineNumber":1082,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1083,"author":{"gitId":"alfaloo"},"content":"\u003cspan\u003e2\u003c/span\u003e. More robust appointment timing validation.","lastModifiedDate":"2024-04-15"},{"lineNumber":1084,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1085,"author":{"gitId":"alfaloo"},"content":"Currently, the MediCLI system allows two appointments with the same doctor/patient and date-time to be simultaneously stored in the system.","lastModifiedDate":"2024-04-15"},{"lineNumber":1086,"author":{"gitId":"alfaloo"},"content":"However, it is clearly impossible for a patient or doctor to attend two different appointments at the same time.","lastModifiedDate":"2024-04-15"},{"lineNumber":1087,"author":{"gitId":"alfaloo"},"content":"Thus, we plan to implement a more robust appointment validation system to ensure that appointments with clashing or unrealistic timings can not be entered.","lastModifiedDate":"2024-04-15"},{"lineNumber":1088,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1089,"author":{"gitId":"alfaloo"},"content":"\u003cspan\u003e3\u003c/span\u003e. Marking old appointments as completed.","lastModifiedDate":"2024-04-15"},{"lineNumber":1090,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1091,"author":{"gitId":"alfaloo"},"content":"Even though the MediCLI system does not allow appointments to be made in the future, it nonetheless retains entry of completed appointments.","lastModifiedDate":"2024-04-15"},{"lineNumber":1092,"author":{"gitId":"alfaloo"},"content":"However, there is currently no visual distinction between future, completed, and missed appointments. This can be rather confusing for the hospital clerks.","lastModifiedDate":"2024-04-15"},{"lineNumber":1093,"author":{"gitId":"alfaloo"},"content":"Thus, we plan to add a label (just like the patient/doctor labels) in the top right corner of each appointment card to help better distinguish them.","lastModifiedDate":"2024-04-15"},{"lineNumber":1094,"author":{"gitId":"alfaloo"},"content":"* \u003cb\u003eNew Command Format\u003c/b\u003e - `markappt index s/STATUS` (`STATUS` can be any one of {`completed`, `missed`})","lastModifiedDate":"2024-04-15"},{"lineNumber":1095,"author":{"gitId":"alfaloo"},"content":"* \u003cb\u003eExample Input\u003c/b\u003e - `markappt 1 s/completed`","lastModifiedDate":"2024-04-15"},{"lineNumber":1096,"author":{"gitId":"alfaloo"},"content":"* \u003cb\u003eExample Input\u003c/b\u003e - `markappt 2 s/missed`","lastModifiedDate":"2024-04-15"},{"lineNumber":1097,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1098,"author":{"gitId":"alfaloo"},"content":"### Parameter Checking Enhancements","lastModifiedDate":"2024-04-15"},{"lineNumber":1099,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1100,"author":{"gitId":"alfaloo"},"content":"\u003cspan\u003e4\u003c/span\u003e. Accommodate names with symbols and/or special characters.","lastModifiedDate":"2024-04-15"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1102,"author":{"gitId":"alfaloo"},"content":"The name parameter is currently restricted to just alphabetical characters and white-space.","lastModifiedDate":"2024-04-15"},{"lineNumber":1103,"author":{"gitId":"alfaloo"},"content":"However, we recognise the existence of names that contain symbols and other special characters.","lastModifiedDate":"2024-04-15"},{"lineNumber":1104,"author":{"gitId":"alfaloo"},"content":"In the future, we plan to implement a more accommodating constraint that allows UTF-8 characters instead.","lastModifiedDate":"2024-04-15"},{"lineNumber":1105,"author":{"gitId":"alfaloo"},"content":"This means that names of other languages will be accepted as well.","lastModifiedDate":"2024-04-15"},{"lineNumber":1106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1107,"author":{"gitId":"alfaloo"},"content":"\u003cspan\u003e5\u003c/span\u003e. Allow foreign patients/doctors to be added to the system.","lastModifiedDate":"2024-04-15"},{"lineNumber":1108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1109,"author":{"gitId":"alfaloo"},"content":"The current constraints for the NRIC and phone number parameters reflect the Singaporean format.","lastModifiedDate":"2024-04-15"},{"lineNumber":1110,"author":{"gitId":"alfaloo"},"content":"However, we recognise that for foreign users, this can be rather limiting.","lastModifiedDate":"2024-04-15"},{"lineNumber":1111,"author":{"gitId":"alfaloo"},"content":"Thus, in the future, we plan on introducing more refined parameter checking that allows international NRIC and phone number formats.","lastModifiedDate":"2024-04-15"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1113,"author":{"gitId":"alfaloo"},"content":"\u003cspan\u003e6\u003c/span\u003e. Ensure each person being added to the system is unique.","lastModifiedDate":"2024-04-15"},{"lineNumber":1114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1115,"author":{"gitId":"alfaloo"},"content":"While the current MediCLI system already checks to ensure every person added is unique, it is only done by comparing the NRIC of the person.","lastModifiedDate":"2024-04-15"},{"lineNumber":1116,"author":{"gitId":"alfaloo"},"content":"However, this should not be the only checking condition. Two entries with the same name, date of birth, and/or phone number should also be flagged as non-unique.","lastModifiedDate":"2024-04-15"},{"lineNumber":1117,"author":{"gitId":"alfaloo"},"content":"Thus, we will devise a more holistic assessment criterion to ensure no duplicates are allowed.","lastModifiedDate":"2024-04-15"},{"lineNumber":1118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1119,"author":{"gitId":"alfaloo"},"content":"### User Interface Enhancements","lastModifiedDate":"2024-04-15"},{"lineNumber":1120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1121,"author":{"gitId":"alfaloo"},"content":"\u003cspan\u003e7\u003c/span\u003e. Refine the user interface when the window size is minimised.","lastModifiedDate":"2024-04-15"},{"lineNumber":1122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1123,"author":{"gitId":"alfaloo"},"content":"The current MediCLI system is not particularly flexible when it comes to window sizing.","lastModifiedDate":"2024-04-15"},{"lineNumber":1124,"author":{"gitId":"alfaloo"},"content":"Users on smaller screens may encounter the issue of scrolling being disabled or labels being truncated if a long name is entered.","lastModifiedDate":"2024-04-15"},{"lineNumber":1125,"author":{"gitId":"alfaloo"},"content":"In the future, we plan to make the UI more adaptive and friendly to smaller screens.","lastModifiedDate":"2024-04-15"},{"lineNumber":1126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1127,"author":{"gitId":"alfaloo"},"content":"\u003cspan\u003e8\u003c/span\u003eStandardise displayed information.","lastModifiedDate":"2024-04-15"},{"lineNumber":1128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1129,"author":{"gitId":"alfaloo"},"content":"For certain fields, the MediCLI system simply displays the text exactly as entered by the user.","lastModifiedDate":"2024-04-15"},{"lineNumber":1130,"author":{"gitId":"alfaloo"},"content":"However, this can introduce inconsistencies in capitalisation (especially with the NRIC field) when displayed in the user interface.","lastModifiedDate":"2024-04-15"},{"lineNumber":1131,"author":{"gitId":"alfaloo"},"content":"We plan on standardising these fields by automatically capitalising the users\u0027 input.","lastModifiedDate":"2024-04-15"},{"lineNumber":1132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1133,"author":{"gitId":"alfaloo"},"content":"### Feature Enhancements","lastModifiedDate":"2024-04-15"},{"lineNumber":1134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1135,"author":{"gitId":"alfaloo"},"content":"\u003cspan\u003e9\u003c/span\u003e. More advanced search options","lastModifiedDate":"2024-04-15"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1137,"author":{"gitId":"alfaloo"},"content":"Currently, the `find`, `patient`, and `doctor` commands return all entries whose details contain any of the given keywords.","lastModifiedDate":"2024-04-15"},{"lineNumber":1138,"author":{"gitId":"alfaloo"},"content":"However, this implementation is not particularly effective if the user would like to search for a person that matches all the provided keywords exactly","lastModifiedDate":"2024-04-15"},{"lineNumber":1139,"author":{"gitId":"alfaloo"},"content":"(e.g. when searching for a person by full name). In the future, we plan to add more advanced search options to allow for easy querying of information.","lastModifiedDate":"2024-04-15"},{"lineNumber":1140,"author":{"gitId":"alfaloo"},"content":"* \u003cb\u003eUpdated Command Format\u003c/b\u003e - `find t/TYPE KEYWORD`, `patient t/TYPE KEYWORD`, `doctor t/TYPE KEYWORD` (`TYPE` can be any one of {`full`, `partial`}).","lastModifiedDate":"2024-04-15"},{"lineNumber":1141,"author":{"gitId":"alfaloo"},"content":"* \u003cb\u003eExample Input\u003c/b\u003e - `find t/full John Doe`","lastModifiedDate":"2024-04-15"},{"lineNumber":1142,"author":{"gitId":"alfaloo"},"content":"* \u003cb\u003eExample Input\u003c/b\u003e - `doctor t/partial Smith Li`","lastModifiedDate":"2024-04-15"},{"lineNumber":1143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1144,"author":{"gitId":"alfaloo"},"content":"\u003cspan\u003e10\u003c/span\u003e. More detailed error messages.","lastModifiedDate":"2024-04-15"},{"lineNumber":1145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1146,"author":{"gitId":"alfaloo"},"content":"Some of the current error messages are not the most informative","lastModifiedDate":"2024-04-15"},{"lineNumber":1147,"author":{"gitId":"alfaloo"},"content":"(e.g. If two patient NRICs are provided when creating an appointment, the system only prompts `This appointment is invalid due to invalid inputs.`).","lastModifiedDate":"2024-04-15"},{"lineNumber":1148,"author":{"gitId":"alfaloo"},"content":"To decrease the learning curve for our system, we plan to replace all ambiguous error messages with more informative versions, e.g. `Please make sure the NRIC provided belongs to a person of the correct type as indicated by the prefix.`.","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"Alteqa":42,"alfaloo":213,"officialchengyud":145,"Kappaccinoh":334,"-":325,"ararchch":89}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Alteqa"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [MediCLI’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"Alteqa":1,"-":54}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"title: MediCLI User Guide","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"## Welcome to MediCLI!","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"Welcome to MediCLI - the solution to all your hospital management needs! ","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"MediCLI is a desktop-based application that streamlines the management of patients, doctors, and appointments within a hospital. By combining the efficiency of a Command Line Interface (CLI) with an intuitive and comprehensive visual display, MediCLI presents itself as a robust solution for hospital clerks and administrators such as yourself. This guide will equip you with all the knowledge to become a MediCLI power user and truly transform your hospital management experience.","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"## Who can benefit from MediCLI?","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"MediCLI is tailored built for hospital clerks/administrators or anyone who manages the relevant stakeholders in a hospital setting and seeks to optimize their workflow.  ","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"### Prior knowledge:","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"MediCLI will be particularly beneficial for you are either (or both of):","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"- a fast-typer or,","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"- and familiar with a CLI,","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"enabling you to get up to speed and perform tasks swiftly and efficiently.","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"That being said, even if you do not meet the above criteria, do not fret! Follow this guide, practice a little, and in only a couple of days you too can take full advantage of MediCLI\u0027s features to manage doctors, patients, and appointments seamlessly.","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"## Table of Contents","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"---------------------------------------------------------","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"## Purpose of UG","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"This User Guide (UG) guide provides step-by-step instructions, explanations, and tips to help users make the most out of MediCLI regardless of experience.","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"#### For new users","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"This UG offers a comprehensive overview of the features on offer, and provides you with a step-by-step guide on how to get started.","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"#### For experienced MediCLI users:","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"You may skip to the features section which elaborates on the individual commands that you can run to get the most out of the system.","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"## How to use this UG","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"As you read through this MediCLI User Guide, you will come across a variety of different types of text formats. The table below will explain to you what they mean.","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"| Text Format        | What it means                                                                                            |","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"|--------------------|----------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"| [hyperlink]()      | Text in blue are hyperlinks and will take you to a different page.                                       |","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"| `command`          | Text in lowercase with a grey background box are MediCLI commands.                                       |","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"| `FIELD`            | Text in uppercase with a grey background box are inputs to MediCLI commands                              |","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"| `[OPTIONAL_FIELD]` | Text in uppercase with a grey background box and square brackets are optional inputs to MediCLI commands |","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"Take note of these text-boxes, as they give you important information for using MediCLI.","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e:bulb: **TIP**: Tip call-outs give you helpful pointers in MediCLI!\u003c/div\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"officialchengyud"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **INFO**: Info call-outs give you information about MediCLI that you can take note of!\u003c/div\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"officialchengyud"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e:exclamation: **DANGER**: Danger call-outs like this contain dangerous actions you should remember when using MediCLI to avoid errors!\u003c/div\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"## Key Product Information","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"### Product Description","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"MediCLI is a Java-based desktop application that allows you to manage your hospital with ease. Let\u0027s now explore the product in more detail.","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"### Overview of main features","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"#### Entities that you can manage with MediCLI","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"MediCLI allows you to manage three types of entities that are common in a hospital setting:","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"- **Doctors**: The doctors employed by your hospital","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"- **Patients**:  The patients that are treated at your hospital","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"- **Appointments**: A medical appointment between a doctor and a patient that takes place at a specified time","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"#### Operations that you can perform with MediCLI","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"MediCLI allows you to perform the following operations of each of the entities above:","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"- Add: Add entities to the application","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"- Delete: Delete entities from the application","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"- Query: Lookup an entity in the application based on some criteria","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"- Edit: Edit the attributes of entities","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"#### Other notable features","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"On top of the primary entities and operations highlighted above, MediCLI also provides the following capabilities:","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"- Persistent storage of information across restarts of the application","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"- A clean and minimalist display to view relevant information on entities","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"- Thorough error messages and in-app prompts guide you on how to overcome any issues you may run into.","lastModifiedDate":"2024-04-15"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"## Quick Start Guide","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"Ready to step into the world of MediCLI? This section will provide detailed information on how users can get started,","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"which includes basic system requirements, installation instructions, an overview of the main window,","lastModifiedDate":"2024-04-15"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"and a tutorial on using the command-line interface (CLI).","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"### System Compatibility","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"MediCLI is written with the Java programming language on the backend and JavaFX on the front end.","lastModifiedDate":"2024-04-13"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"Therefore, a device with \u003cb\u003eJava version 11 or above and JavaFX version 17 or above\u003c/b\u003e installed is required to run MediCLI.","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"Compatible Operating Systems:","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"* Any device running Windows, macOS, or Ubuntu with sufficient Java and JavaFX compatibility.","lastModifiedDate":"2024-04-13"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"Recommended Minimum System Requirements:","lastModifiedDate":"2024-04-13"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"* 2-core CPU running at 2.40 GHz","lastModifiedDate":"2024-04-13"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"* 4GB RAM","lastModifiedDate":"2024-04-13"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"* 2GB free disc space","lastModifiedDate":"2024-04-13"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"### Installation Instructions","lastModifiedDate":"2024-04-13"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"1. Please make sure the computer you are using meets the system compatibility specified above.","lastModifiedDate":"2024-04-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"Alteqa"},"content":"1. Download the latest `MediCLI.jar` from [here](https://github.com/AY2324S2-CS2103T-T15-1/tp/releases).","lastModifiedDate":"2024-04-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **INFO**: The MediCLI jar file can be found at the bottom of the release notes\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":106,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"1. We recommend you copy the file into the folder you want to use as the _home folder_ for MediCLI. This is because running the application will create additional storage and logging files.","lastModifiedDate":"2024-04-15"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"1. Congratulations! You now have MediCLI successfully downloaded on your computer.","lastModifiedDate":"2024-04-13"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":111,"author":{"gitId":"alfaloo"},"content":"### Starting up MediCLI","lastModifiedDate":"2024-04-13"},{"lineNumber":112,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":113,"author":{"gitId":"alfaloo"},"content":"Once you have installed MediCLI onto your computer (refer to the sub-section above), navigate to the instructions specific to your operating system below.","lastModifiedDate":"2024-04-15"},{"lineNumber":114,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":115,"author":{"gitId":"alfaloo"},"content":"#### Windows","lastModifiedDate":"2024-04-13"},{"lineNumber":116,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":117,"author":{"gitId":"alfaloo"},"content":"1. Open File Explorer and navigate to the home folder containing the MediCLI jar file.","lastModifiedDate":"2024-04-15"},{"lineNumber":118,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":119,"author":{"gitId":"alfaloo"},"content":"2. Double-click on the MediCLI application and it should start up!\u003cbr\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":120,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":121,"author":{"gitId":"alfaloo"},"content":"    ![Ui](images/WindowsStartup.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":122,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":123,"author":{"gitId":"alfaloo"},"content":"#### macOS","lastModifiedDate":"2024-04-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"alfaloo"},"content":"1. Open Finder and navigate to the home folder containing the MediCLI jar file.","lastModifiedDate":"2024-04-15"},{"lineNumber":126,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":127,"author":{"gitId":"alfaloo"},"content":"2. Double-click on the MediCLI application and it should start up!\u003cbr\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":128,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":129,"author":{"gitId":"alfaloo"},"content":"    ![Ui](images/macOSStartup.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":130,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":131,"author":{"gitId":"alfaloo"},"content":"#### CLI Alternative Solution","lastModifiedDate":"2024-04-13"},{"lineNumber":132,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":133,"author":{"gitId":"alfaloo"},"content":"1. Open a command terminal, `cd` into the home folder containing the MediCLI jar file, and use the `java -jar MediCLI.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":134,"author":{"gitId":"alfaloo"},"content":"   A GUI similar to the one below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":136,"author":{"gitId":"alfaloo"},"content":"   ![Ui](images/InitialState.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"### Overview of MediCLI Main Window","lastModifiedDate":"2024-04-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":140,"author":{"gitId":"alfaloo"},"content":"MediCLI has 4 primary components in its main window. Detailed descriptions of each can be found below.","lastModifiedDate":"2024-04-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":142,"author":{"gitId":"alfaloo"},"content":"![Ui](images/GUI.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":144,"author":{"gitId":"alfaloo"},"content":"\u003cb\u003eCommand Input\u003c/b\u003e - This is where you will type your commands.","lastModifiedDate":"2024-04-13"},{"lineNumber":145,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":146,"author":{"gitId":"alfaloo"},"content":"\u003cb\u003eResults Display\u003c/b\u003e - MediCLI will respond to you here with either a success message or a detailed description of what went wrong.","lastModifiedDate":"2024-04-13"},{"lineNumber":147,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":148,"author":{"gitId":"alfaloo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e:bulb: **TIP**: The results display may be too narrow to show the entire message. You can scroll in the results display to see the whole message.","lastModifiedDate":"2024-04-13"},{"lineNumber":149,"author":{"gitId":"alfaloo"},"content":"All error messages due to invalid formatting will end with an example usage.\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":150,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":151,"author":{"gitId":"alfaloo"},"content":"\u003cb\u003ePersons Panel\u003c/b\u003e - This is where you will see a list of the filtered patients and patients.","lastModifiedDate":"2024-04-13"},{"lineNumber":152,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":153,"author":{"gitId":"alfaloo"},"content":"\u003cb\u003eAppointments Panel\u003c/b\u003e - This is where you will see a list of the filtered patients and patients.","lastModifiedDate":"2024-04-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"ararchch"},"content":"### How to use the command line interface (CLI)","lastModifiedDate":"2024-04-12"},{"lineNumber":156,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":157,"author":{"gitId":"alfaloo"},"content":"MediCLI is operated using typed commands to the command line interface (CLI). Do not worry if you do not understand CLI yet; here we will explain to you the formats of text commands and how to use them.","lastModifiedDate":"2024-04-13"},{"lineNumber":158,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":159,"author":{"gitId":"officialchengyud"},"content":"![Ui](images/cli_format.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":160,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":161,"author":{"gitId":"officialchengyud"},"content":"| CLI Format        | What it means                                                                                                                                                                                                                                                         |","lastModifiedDate":"2024-04-13"},{"lineNumber":162,"author":{"gitId":"alfaloo"},"content":"|-------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-15"},{"lineNumber":163,"author":{"gitId":"officialchengyud"},"content":"| Command           | The command tells MediCLI what action you want to perform.                                                                                                                                                                                                            |","lastModifiedDate":"2024-04-13"},{"lineNumber":164,"author":{"gitId":"alfaloo"},"content":"| Index             | Certain MediCLI commands have an `INDEX` field, which is a number that is assigned to a particular patient, doctor, or appointment. Index must be larger than 1 and can be up to the maximum number of patients/doctors or appointments as listed in the MediCLI GUI. |","lastModifiedDate":"2024-04-15"},{"lineNumber":165,"author":{"gitId":"officialchengyud"},"content":"| Parameter Prefix  | Fields typically have a prefix like `i/` or `n/` followed by the field content. This tells MediCLI what field you are entering.                                                                                                                                       |","lastModifiedDate":"2024-04-13"},{"lineNumber":166,"author":{"gitId":"officialchengyud"},"content":"| Command Parameter | The command parameter is the parameter prefix followed by field content. For example, the command parameter to enter NRIC would be `i/S1234567A`                                                                                                                      |","lastModifiedDate":"2024-04-13"},{"lineNumber":167,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":168,"author":{"gitId":"alfaloo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e:bulb: **TIP**: If you forget the command format, you can simply type the command word and press enter. MediCLI will prompt you with the format and an example.\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":169,"author":{"gitId":"officialchengyud"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **INFO**: Not all MediCLI commands have fields! For example, the command to clear all data is simply `clear`.\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":170,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":171,"author":{"gitId":"alfaloo"},"content":"### Quick Tutorial on a Sample Use Case","lastModifiedDate":"2024-04-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":174,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":175,"author":{"gitId":"alfaloo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e:exclamation: **DANGER**: If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line breaks may be omitted when copied over to the application.\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":176,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":177,"author":{"gitId":"alfaloo"},"content":"Some example commands you can try (Assuming MediCLI is opened for the first time and is in its initial state with the default sample data):","lastModifiedDate":"2024-04-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"alfaloo"},"content":"   * `adddoctor i/S1234567B n/Amy Smith d/2003-01-30 p/98765432` : Adds a doctor named `Amy Smith` to the MediCLI system.","lastModifiedDate":"2024-04-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"alfaloo"},"content":"   * `addappt ad/2024-06-09 10:15 dn/S1234567B pn/S1234567A` : Schedules an appointment between the doctor `Amy Smith` and the patient `John Doe`.","lastModifiedDate":"2024-04-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"alfaloo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **INFO**: MediCLI cannot schedule an appointment in the past, so change the date-time field if necessary.\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":187,"author":{"gitId":"alfaloo"},"content":"   * `delete 2` : Deletes the 2nd person currently listed in the MediCLI system (patient named David Li).","lastModifiedDate":"2024-04-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"Alteqa"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by you.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":200,"author":{"gitId":"Alteqa"},"content":"  e.g. in `addpatient i/NRIC n/NAME d/DOB p/PHONE`, `NAME` is a parameter which can be used as `n/John Doe`.","lastModifiedDate":"2024-04-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"alfaloo"},"content":"  e.g. `edit INDEX [i/NRIC] [n/NAME] [p/PHONE] [d/DOB]` can be used as `edit 1 n/John Doe` or as `edit 1 i/t1234567s`.","lastModifiedDate":"2024-04-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"Alteqa"},"content":"  e.g. if the command specifies `n/NAME p/PHONE`, `p/PHONE n/NAME` is also acceptable.","lastModifiedDate":"2024-04-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":209,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"alfaloo"},"content":"### Person Related Commands","lastModifiedDate":"2024-04-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"alfaloo"},"content":"#### Adding a patient : `addpatient`","lastModifiedDate":"2024-04-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"alfaloo"},"content":"Adds a patient into the MediCLI system.","lastModifiedDate":"2024-04-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"alfaloo"},"content":"Format: `addpatient i/NRIC n/NAME d/DOB p/PHONE`","lastModifiedDate":"2024-04-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":221,"author":{"gitId":"alfaloo"},"content":"Field Constraints:","lastModifiedDate":"2024-04-04"},{"lineNumber":222,"author":{"gitId":"alfaloo"},"content":"* **NRIC** : Follows the correct Singapore NRIC format. Begin with one of S, T, G, F, or M, followed by 7 numerical digits, then end with an alphabetical letter. This field is non-case-sensitive.","lastModifiedDate":"2024-04-15"},{"lineNumber":223,"author":{"gitId":"alfaloo"},"content":"* **NAME** : Only contain alphabetical characters and spaces. This field is non-case-sensitive.","lastModifiedDate":"2024-04-04"},{"lineNumber":224,"author":{"gitId":"alfaloo"},"content":"* **DOB** : Only contain numerical characters in the format yyyy-MM-dd. Acceptable date range is from 1900 January 1st to today\u0027s date.","lastModifiedDate":"2024-04-15"},{"lineNumber":225,"author":{"gitId":"alfaloo"},"content":"* **PHONE** : Only contain numerical characters and of exactly 8 digits long.","lastModifiedDate":"2024-04-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":227,"author":{"gitId":"alfaloo"},"content":"Command Constraints:","lastModifiedDate":"2024-04-04"},{"lineNumber":228,"author":{"gitId":"alfaloo"},"content":"* All of the above fields (NRIC, NAME, DOB, and PHONE) are compulsory and must be non-empty.","lastModifiedDate":"2024-04-04"},{"lineNumber":229,"author":{"gitId":"alfaloo"},"content":"* Command fails if there already exists a person (patient or doctor) in the MediCLI system that has the same NRIC as the one given.","lastModifiedDate":"2024-04-04"},{"lineNumber":230,"author":{"gitId":"alfaloo"},"content":"* The ordering of the fields does not influence the command.","lastModifiedDate":"2024-04-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"ararchch"},"content":"* `addpatient i/T0334567A n/John Doe d/2003-01-30 p/98765432`","lastModifiedDate":"2024-04-10"},{"lineNumber":234,"author":{"gitId":"ararchch"},"content":"* `addpatient n/Amy Smith i/S8054321B p/87654321 d/1980-12-05`","lastModifiedDate":"2024-04-10"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"Kappaccinoh"},"content":"![add_patient_result](images/addPatient.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"alfaloo"},"content":"#### Adding a doctor : `adddoctor`                                                                                                                                                                    ","lastModifiedDate":"2024-04-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                                                                                                                                                                                                    ","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"alfaloo"},"content":"Adds a doctor into the MediCLI system.                                                                                                                                                              ","lastModifiedDate":"2024-04-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                                                                                                                                                                                                    ","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"alfaloo"},"content":"Format: `adddoctor i/NRIC n/NAME d/DOB p/PHONE`                                                                                                                                                     ","lastModifiedDate":"2024-04-04"},{"lineNumber":243,"author":{"gitId":"alfaloo"},"content":"                                                                                                                                                                                                    ","lastModifiedDate":"2024-04-04"},{"lineNumber":244,"author":{"gitId":"alfaloo"},"content":"Field Constraints:                                                                                                                                                                                  ","lastModifiedDate":"2024-04-04"},{"lineNumber":245,"author":{"gitId":"alfaloo"},"content":"* **NRIC** : Follows the correct Singapore NRIC format. Begin with one of S, T, G, F, or M, followed by 7 numerical digits, then end with an alphabetical letter. This field is non-case-sensitive. ","lastModifiedDate":"2024-04-15"},{"lineNumber":246,"author":{"gitId":"alfaloo"},"content":"* **NAME** : Only contain alphabetical characters and spaces. This field is non-case-sensitive.                                                                                                     ","lastModifiedDate":"2024-04-04"},{"lineNumber":247,"author":{"gitId":"alfaloo"},"content":"* **DOB** : Only contain numerical characters in the format yyyy-MM-dd. Acceptable date range is from 1900 January 1st to today\u0027s date.                                                            ","lastModifiedDate":"2024-04-15"},{"lineNumber":248,"author":{"gitId":"alfaloo"},"content":"* **PHONE** : Only contain numerical characters and of exactly 8 digits long.                                                                                                                       ","lastModifiedDate":"2024-04-04"},{"lineNumber":249,"author":{"gitId":"alfaloo"},"content":"                                                                                                                                                                                                    ","lastModifiedDate":"2024-04-04"},{"lineNumber":250,"author":{"gitId":"alfaloo"},"content":"Command Constraints:                                                                                                                                                                                ","lastModifiedDate":"2024-04-04"},{"lineNumber":251,"author":{"gitId":"alfaloo"},"content":"* All of the above fields (NRIC, NAME, DOB, and PHONE) are compulsory and must be non-empty.                                                                                                        ","lastModifiedDate":"2024-04-04"},{"lineNumber":252,"author":{"gitId":"alfaloo"},"content":"* Command fails if there already exists a person (patient or doctor) in the MediCLI system that has the same NRIC as the one given.                                                                 ","lastModifiedDate":"2024-04-04"},{"lineNumber":253,"author":{"gitId":"alfaloo"},"content":"* The ordering of the fields does not influence the command.                                                                                                                                        ","lastModifiedDate":"2024-04-04"},{"lineNumber":254,"author":{"gitId":"alfaloo"},"content":"                                                                                                                                                                                                    ","lastModifiedDate":"2024-04-04"},{"lineNumber":255,"author":{"gitId":"alfaloo"},"content":"Examples:                                                                                                                                                                                           ","lastModifiedDate":"2024-04-04"},{"lineNumber":256,"author":{"gitId":"ararchch"},"content":"* `adddoctor i/T0334567A n/John Doe d/2003-01-30 p/98765432`                                                                                                                                        ","lastModifiedDate":"2024-04-10"},{"lineNumber":257,"author":{"gitId":"ararchch"},"content":"* `adddoctor n/Amy Smith i/S8054321B p/87654321 d/1980-12-05`                                                                                                                                       ","lastModifiedDate":"2024-04-10"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"Kappaccinoh"},"content":"![add_doctor_result](images/addDoctor.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":260,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":261,"author":{"gitId":"alfaloo"},"content":"#### Editing a person : `edit`","lastModifiedDate":"2024-04-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"alfaloo"},"content":"Edits an existing person in the MediCLI system. Edits the patient or doctor at the specified `INDEX`. The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-04-13"},{"lineNumber":264,"author":{"gitId":"alfaloo"},"content":"Existing values will be updated to the input values.","lastModifiedDate":"2024-04-13"},{"lineNumber":265,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":266,"author":{"gitId":"alfaloo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **INFO**: Editing a patient or doctor and not changing any of the values of the parameters is allowed and is considered a valid edit by the system.\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":267,"author":{"gitId":"alfaloo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e:bulb: **TIP**: Editing a patient or doctor will recursively update the relevant details of all appointments related to the patient or doctor.\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":268,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":269,"author":{"gitId":"alfaloo"},"content":"Format: `edit INDEX [i/NRIC] [n/NAME] [p/PHONE] [d/DOB]`","lastModifiedDate":"2024-04-13"},{"lineNumber":270,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":271,"author":{"gitId":"Alteqa"},"content":"Field Constraints:","lastModifiedDate":"2024-04-05"},{"lineNumber":272,"author":{"gitId":"alfaloo"},"content":"* **NRIC** : Follows the correct Singapore NRIC format. Begin with one of S, T, G, F, or M, followed by 7 numerical digits, then end with an alphabetical letter. This field is non-case-sensitive.","lastModifiedDate":"2024-04-15"},{"lineNumber":273,"author":{"gitId":"Alteqa"},"content":"* **NAME** : Only contain alphabetical characters and spaces. This field is non-case-sensitive.","lastModifiedDate":"2024-04-05"},{"lineNumber":274,"author":{"gitId":"alfaloo"},"content":"* **DOB** : Only contain numerical characters in the format yyyy-MM-dd. Acceptable date range is from 1900 January 1st to today\u0027s date.","lastModifiedDate":"2024-04-15"},{"lineNumber":275,"author":{"gitId":"Alteqa"},"content":"* **PHONE** : Only contain numerical characters and of exactly 8 digits long.","lastModifiedDate":"2024-04-05"},{"lineNumber":276,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":277,"author":{"gitId":"Alteqa"},"content":"Command Constraints:","lastModifiedDate":"2024-04-05"},{"lineNumber":278,"author":{"gitId":"alfaloo"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-13"},{"lineNumber":279,"author":{"gitId":"alfaloo"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2024-04-13"},{"lineNumber":280,"author":{"gitId":"Alteqa"},"content":"* Command fails if there already exists a person (patient or doctor) in the MediCLI system that has the same NRIC as the one given.","lastModifiedDate":"2024-04-05"},{"lineNumber":281,"author":{"gitId":"Alteqa"},"content":"* The ordering of the fields does not influence the command.","lastModifiedDate":"2024-04-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":283,"author":{"gitId":"alfaloo"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":284,"author":{"gitId":"ararchch"},"content":"*  `edit 1 i/S1234567A n/Betsy Crower` Edits the NRIC and name of the 1st person to be `s1234567a` and `Betsy Crower` respectively.","lastModifiedDate":"2024-04-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"Kappaccinoh"},"content":"![add_appointment_result](images/editPerson.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"alfaloo"},"content":"#### Finding both doctor and patient by name : `find`","lastModifiedDate":"2024-04-15"},{"lineNumber":290,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":291,"author":{"gitId":"alfaloo"},"content":"Find `Patient`(s) or `Doctor`(s) whose details contain any of the given keywords.","lastModifiedDate":"2024-04-15"},{"lineNumber":292,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":293,"author":{"gitId":"officialchengyud"},"content":"Format for querying patients or doctors: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2024-04-12"},{"lineNumber":294,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":295,"author":{"gitId":"officialchengyud"},"content":"Command Constraints:","lastModifiedDate":"2024-04-12"},{"lineNumber":296,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":297,"author":{"gitId":"alfaloo"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2024-04-15"},{"lineNumber":298,"author":{"gitId":"officialchengyud"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2024-04-12"},{"lineNumber":299,"author":{"gitId":"officialchengyud"},"content":"* Only the name field is searched.","lastModifiedDate":"2024-04-12"},{"lineNumber":300,"author":{"gitId":"officialchengyud"},"content":"* Both full words and substrings will be matched e.g. `Han` will match `Hans`","lastModifiedDate":"2024-04-12"},{"lineNumber":301,"author":{"gitId":"officialchengyud"},"content":"* Patients and Doctors matching at least one keyword will be returned (i.e. logical \u0027OR\u0027 search).","lastModifiedDate":"2024-04-12"},{"lineNumber":302,"author":{"gitId":"officialchengyud"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2024-04-12"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":304,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-04-12"},{"lineNumber":305,"author":{"gitId":"officialchengyud"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2024-04-12"},{"lineNumber":306,"author":{"gitId":"alfaloo"},"content":"* `find John David` returns patient `John Doe`, doctor `David Li`\u003cbr\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":308,"author":{"gitId":"alfaloo"},"content":"![result for \u0027find John David\u0027](images/findPerson.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":310,"author":{"gitId":"alfaloo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e:bulb: **TIP**: You can use the \u003ccode\u003efind\u003c/code\u003e command to filter people for commands that require a person\u0027s `INDEX`.\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":312,"author":{"gitId":"alfaloo"},"content":"#### Querying patients by name : `patient`","lastModifiedDate":"2024-04-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"alfaloo"},"content":"Find `Patient`(s) whose details contain any of the given keywords.","lastModifiedDate":"2024-04-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"Kappaccinoh"},"content":"Format for querying Patients: `patient KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2024-04-04"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":318,"author":{"gitId":"Kappaccinoh"},"content":"Command Constraints:","lastModifiedDate":"2024-04-04"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"alfaloo"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2024-04-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"Kappaccinoh"},"content":"* All person fields are searched and matched (Name, NRIC, Phone Number, DoB).","lastModifiedDate":"2024-04-04"},{"lineNumber":323,"author":{"gitId":"Kappaccinoh"},"content":"* Both full words and substrings will be matched e.g. `Han` will match `Hans`","lastModifiedDate":"2024-04-04"},{"lineNumber":324,"author":{"gitId":"Kappaccinoh"},"content":"* Patients matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2024-04-04"},{"lineNumber":325,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"Kappaccinoh"},"content":"* `patient John David` returns `patient` with name `John Doe` and `patient` with name `David Li`","lastModifiedDate":"2024-04-12"},{"lineNumber":329,"author":{"gitId":"Kappaccinoh"},"content":"* `patient S1234` returns `patient` with `Nric` `S1234567A`, `patient` with `Nric` `S1234765Q`","lastModifiedDate":"2024-04-12"},{"lineNumber":330,"author":{"gitId":"Kappaccinoh"},"content":"* `patient 30 Jan` returns `patient` with `DoB` `30 January 1990`, `patient` with `DoB` `30 January 2001`\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":332,"author":{"gitId":"Kappaccinoh"},"content":"![result for \u0027patient alex david\u0027](images/findPatient.png)","lastModifiedDate":"2024-04-12"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":335,"author":{"gitId":"alfaloo"},"content":"#### Querying doctors by name : `doctor`","lastModifiedDate":"2024-04-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":337,"author":{"gitId":"alfaloo"},"content":"Find `Doctors`(s) whose details contain any of the given keywords.","lastModifiedDate":"2024-04-15"},{"lineNumber":338,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":339,"author":{"gitId":"Kappaccinoh"},"content":"Format for querying Doctors: `doctor KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2024-04-04"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"Kappaccinoh"},"content":"Command Constraints:","lastModifiedDate":"2024-04-04"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"alfaloo"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2024-04-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"Kappaccinoh"},"content":"* All person fields are searched and matched (Name, NRIC, Phone Number, DoB).","lastModifiedDate":"2024-04-04"},{"lineNumber":346,"author":{"gitId":"Kappaccinoh"},"content":"* Both full words and substrings will be matched e.g. `Han` will match `Hans`","lastModifiedDate":"2024-04-04"},{"lineNumber":347,"author":{"gitId":"Alteqa"},"content":"* Doctors matching at least one keyword will be returned (i.e. logical \u0027or\u0027 search).      ","lastModifiedDate":"2024-04-12"},{"lineNumber":348,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"Kappaccinoh"},"content":"* `doctor John David` returns `doctor` with name `John Doe` and `doctor` with name `David Li`","lastModifiedDate":"2024-04-12"},{"lineNumber":352,"author":{"gitId":"Kappaccinoh"},"content":"* `doctor S1234` returns `doctor` with `Nric` `S1234567A`, `doctor` with `Nric` `S1234765Q`","lastModifiedDate":"2024-04-12"},{"lineNumber":353,"author":{"gitId":"Kappaccinoh"},"content":"* `doctor 30 Jan` returns `doctor` with `DoB` `30 January 1990`, `doctor` with `DoB` `30 January 2001`\u003cbr\u003e              ","lastModifiedDate":"2024-04-12"},{"lineNumber":354,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":355,"author":{"gitId":"Kappaccinoh"},"content":"![result for \u0027doctor alex david\u0027](images/findDoctor.png)","lastModifiedDate":"2024-04-12"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":358,"author":{"gitId":"alfaloo"},"content":"#### Deleting a doctor or patient : `delete`","lastModifiedDate":"2024-04-15"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":360,"author":{"gitId":"alfaloo"},"content":"Deletes the specified doctor / patient from the MediCLI system. \u003cb\u003eNote that all associated appointments with this doctor / patient will also be recursively deleted.\u003c/b\u003e Please exercise caution when using the delete command and removing a patient or a doctor from MediCLI, as this action cannot be undone.","lastModifiedDate":"2024-04-13"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":362,"author":{"gitId":"alfaloo"},"content":"* Deletes the doctor / patient at the specified `INDEX`.","lastModifiedDate":"2024-04-13"},{"lineNumber":363,"author":{"gitId":"alfaloo"},"content":"* The index refers to the index number shown in the displayed doctor and patient list.","lastModifiedDate":"2024-04-13"},{"lineNumber":364,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-13"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":366,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-04-13"},{"lineNumber":367,"author":{"gitId":"alfaloo"},"content":"* `list` followed by `delete 2` deletes the 2nd doctor / patient in the MediCLI system.","lastModifiedDate":"2024-04-15"},{"lineNumber":368,"author":{"gitId":"alfaloo"},"content":"* `patient John` followed by `delete 1` deletes the 1st patient in the results of the `patient` search command.","lastModifiedDate":"2024-04-13"},{"lineNumber":369,"author":{"gitId":"alfaloo"},"content":"* `doctor Steve` followed by `delete 2` deletes the 2nd doctor in the results of the `doctor` search command.","lastModifiedDate":"2024-04-13"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":371,"author":{"gitId":"alfaloo"},"content":"![result for \u0027delete 1\u0027](images/deletePerson.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":374,"author":{"gitId":"alfaloo"},"content":"### Appointment Related Commands","lastModifiedDate":"2024-04-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":376,"author":{"gitId":"alfaloo"},"content":"#### Adding an appointment : `addappt`","lastModifiedDate":"2024-04-15"},{"lineNumber":377,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":378,"author":{"gitId":"alfaloo"},"content":"Adds an appointment to MediCLI. Appointments are between a doctor with the specified `DOCTOR_NRIC` and a patient with the `PATIENT_NRIC` on a specific date and time.","lastModifiedDate":"2024-04-13"},{"lineNumber":379,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":380,"author":{"gitId":"alfaloo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **INFO**: Note that while you cannot create a new appointment with the date and time in the past, appointments that were valid when created but are now past their date and time will be allowed to remain in the system. This is an intended feature to allow the hospital admins to track a patient / doctors past appointments.\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":381,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":382,"author":{"gitId":"alfaloo"},"content":"Format: `addappt ad/DATETIME dn/DOCTOR_NRIC pn/PATIENT_NRIC`","lastModifiedDate":"2024-04-13"},{"lineNumber":383,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":384,"author":{"gitId":"alfaloo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e:bulb: **TIP**: You can use the \u003ccode\u003epatient\u003c/code\u003e and \u003ccode\u003edoctor\u003c/code\u003e commands to retrieve their NRIC number if you only remember their name.\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":385,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":386,"author":{"gitId":"alfaloo"},"content":"Field Constraints:","lastModifiedDate":"2024-04-13"},{"lineNumber":387,"author":{"gitId":"alfaloo"},"content":"- **DATETIME**: Input must be in the format `yyyy-MM-dd HH:mm`. Specified date and time must be later than the current date and time. i.e. appointment cannot be scheduled in the past.","lastModifiedDate":"2024-04-15"},{"lineNumber":388,"author":{"gitId":"alfaloo"},"content":"- **DOCTOR_NRIC**: Follows the correct Singapore NRIC format. Begin with one of S, T, G, F, or M, followed by 7 numerical digits, then end with an alphabetical letter. This field is non-case-sensitive.","lastModifiedDate":"2024-04-15"},{"lineNumber":389,"author":{"gitId":"alfaloo"},"content":"- **PATIENT_NRIC**: Follows the correct Singapore NRIC format. Begin with one of S, T, G, F, or M, followed by 7 numerical digits, then end with an alphabetical letter. This field is non-case-sensitive.","lastModifiedDate":"2024-04-15"},{"lineNumber":390,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":391,"author":{"gitId":"alfaloo"},"content":"Command Constraints:","lastModifiedDate":"2024-04-13"},{"lineNumber":392,"author":{"gitId":"alfaloo"},"content":"- All of the above fields (`DATETIME`, `DOCTOR_NRIC`, `PATIENT_NRIC`) are compulsory and must be non-empty.","lastModifiedDate":"2024-04-13"},{"lineNumber":393,"author":{"gitId":"alfaloo"},"content":"- A doctor with the specified `DOCTOR_NRIC` must already exist in the MediCLI System.","lastModifiedDate":"2024-04-13"},{"lineNumber":394,"author":{"gitId":"alfaloo"},"content":"- A patient with the specified `PATIENT_NRIC` must already exist in the MediCLI System.","lastModifiedDate":"2024-04-13"},{"lineNumber":395,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":396,"author":{"gitId":"alfaloo"},"content":"Examples:","lastModifiedDate":"2024-04-13"},{"lineNumber":397,"author":{"gitId":"alfaloo"},"content":"- `addappt ad/2024-08-11 23:50 dn/S1234567A pn/S1234567B`","lastModifiedDate":"2024-04-13"},{"lineNumber":398,"author":{"gitId":"alfaloo"},"content":"- `addappt ad/2025-04-09 11:10 dn/S8054321B pn/T0334567A`","lastModifiedDate":"2024-04-13"},{"lineNumber":399,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":400,"author":{"gitId":"alfaloo"},"content":"![add_appointment_result](images/addAppointment.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":401,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":402,"author":{"gitId":"alfaloo"},"content":"#### Editing an appointment : `editappt`","lastModifiedDate":"2024-04-15"},{"lineNumber":403,"author":{"gitId":"alfaloo"},"content":"Edits an existing appointment in the MediCLI system. Edits the appointment at the specified `INDEX`. The index refers to the index number shown in the displayed appointments list.","lastModifiedDate":"2024-04-13"},{"lineNumber":404,"author":{"gitId":"alfaloo"},"content":"Existing values will be updated to the input values.","lastModifiedDate":"2024-04-13"},{"lineNumber":405,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":406,"author":{"gitId":"alfaloo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **INFO**: Editing an appointment and not changing any of the values of the parameters is allowed and is considered a valid edit by the system.\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":407,"author":{"gitId":"alfaloo"},"content":"                                                                                                                                                                                ","lastModifiedDate":"2024-04-13"},{"lineNumber":408,"author":{"gitId":"alfaloo"},"content":"Format: `editappt INDEX ad/DATETIME`                                                                                                                        ","lastModifiedDate":"2024-04-13"},{"lineNumber":409,"author":{"gitId":"alfaloo"},"content":"                                                                                                                                                                                ","lastModifiedDate":"2024-04-13"},{"lineNumber":410,"author":{"gitId":"alfaloo"},"content":"* Edits the appointment at the specified `INDEX`. The index refers to the index number shown in the displayed appointment list. The index **must be a positive integer** 1, 2, 3, …​      ","lastModifiedDate":"2024-04-13"},{"lineNumber":411,"author":{"gitId":"alfaloo"},"content":"* Existing values will be updated to the input values.                                                                                                                          ","lastModifiedDate":"2024-04-13"},{"lineNumber":412,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":413,"author":{"gitId":"alfaloo"},"content":"Field Constraints:","lastModifiedDate":"2024-04-13"},{"lineNumber":414,"author":{"gitId":"alfaloo"},"content":"* **DATETIME** : Input must be in the format `yyyy-MM-dd HH:mm`. Specified date and time must be later than the current date and time. i.e. appointment cannot be scheduled in the past.","lastModifiedDate":"2024-04-15"},{"lineNumber":415,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":416,"author":{"gitId":"alfaloo"},"content":"Command Constraints:","lastModifiedDate":"2024-04-13"},{"lineNumber":417,"author":{"gitId":"alfaloo"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-13"},{"lineNumber":418,"author":{"gitId":"alfaloo"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2024-04-13"},{"lineNumber":419,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":420,"author":{"gitId":"alfaloo"},"content":"Examples:    ","lastModifiedDate":"2024-04-13"},{"lineNumber":421,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":422,"author":{"gitId":"alfaloo"},"content":"*  `editappt 1 ad/2025-04-09 11:00` Edits the appointment date and time of the first appointment in the appointment list to `2025-04-09 11:00`                                   ","lastModifiedDate":"2024-04-13"},{"lineNumber":423,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":424,"author":{"gitId":"alfaloo"},"content":"![add_appointment_result](images/editAppointment.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":425,"author":{"gitId":"alfaloo"},"content":"                                 ","lastModifiedDate":"2024-04-13"},{"lineNumber":426,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":427,"author":{"gitId":"alfaloo"},"content":"#### Querying appointments by patient\u0027s NRIC : `apptforpatient`                                                             ","lastModifiedDate":"2024-04-15"},{"lineNumber":428,"author":{"gitId":"Kappaccinoh"},"content":"                                                                                                                                 ","lastModifiedDate":"2024-04-04"},{"lineNumber":429,"author":{"gitId":"Kappaccinoh"},"content":"Format: `apptforpatient KEYWORD [MORE_KEYWORDS]`                                    ","lastModifiedDate":"2024-04-04"},{"lineNumber":430,"author":{"gitId":"Kappaccinoh"},"content":"                                                       ","lastModifiedDate":"2024-04-04"},{"lineNumber":431,"author":{"gitId":"Kappaccinoh"},"content":"Command Constraints:                                                                          ","lastModifiedDate":"2024-04-04"},{"lineNumber":432,"author":{"gitId":"alfaloo"},"content":"* The search is case-insensitive. e.g. `s1234562a` will match `S1234562A`                                                        ","lastModifiedDate":"2024-04-15"},{"lineNumber":433,"author":{"gitId":"Kappaccinoh"},"content":"* The order of the keywords does not matter. e.g. `S1234562A S1234561A` will                                                    ","lastModifiedDate":"2024-04-04"},{"lineNumber":434,"author":{"gitId":"Kappaccinoh"},"content":"match appointments that involve `S1234562A` and `S1234561A`.                                                                  ","lastModifiedDate":"2024-04-04"},{"lineNumber":435,"author":{"gitId":"Kappaccinoh"},"content":"* Only the NRIC field of `Patient` is searched and matched.                                                       ","lastModifiedDate":"2024-04-04"},{"lineNumber":436,"author":{"gitId":"Kappaccinoh"},"content":"* Only exact NRICs will be matched e.g. `S123456` will not match `S1234562A`                                                    ","lastModifiedDate":"2024-04-04"},{"lineNumber":437,"author":{"gitId":"Kappaccinoh"},"content":"* Appointments with `Patient`s whose NRICs match at least one keyword will be returned (i.e. `OR` search).         ","lastModifiedDate":"2024-04-04"},{"lineNumber":438,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":439,"author":{"gitId":"Kappaccinoh"},"content":"Example:                                                                                                                ","lastModifiedDate":"2024-04-04"},{"lineNumber":440,"author":{"gitId":"Kappaccinoh"},"content":"* `apptforpatient s0123456a` returns all `Appointment` entries that `Patient` with `Nric` `S0123456A` is involved in.   ","lastModifiedDate":"2024-04-12"},{"lineNumber":441,"author":{"gitId":"Kappaccinoh"},"content":"                                                                                                                        ","lastModifiedDate":"2024-04-04"},{"lineNumber":442,"author":{"gitId":"Kappaccinoh"},"content":"* All `Appointment`s listed                                                                        ","lastModifiedDate":"2024-04-12"},{"lineNumber":443,"author":{"gitId":"Kappaccinoh"},"content":"![result for \u0027list\u0027](images/findAppointmentInitialPatient.png)                                      ","lastModifiedDate":"2024-04-08"},{"lineNumber":444,"author":{"gitId":"Kappaccinoh"},"content":"                                                                                                                        ","lastModifiedDate":"2024-04-04"},{"lineNumber":445,"author":{"gitId":"Kappaccinoh"},"content":"* Only `Appointment`s with `Patient` of `Nric` `S0123456A`                                           ","lastModifiedDate":"2024-04-12"},{"lineNumber":446,"author":{"gitId":"Kappaccinoh"},"content":"![result for \u0027apptforpatient S0123456A\u0027](images/findAppointmentResultPatient.png)                                       ","lastModifiedDate":"2024-04-08"},{"lineNumber":447,"author":{"gitId":"Kappaccinoh"},"content":"            ","lastModifiedDate":"2024-04-04"},{"lineNumber":448,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":449,"author":{"gitId":"alfaloo"},"content":"#### Querying appointments by doctor\u0027s NRIC : `apptfordoctor`                                                                       ","lastModifiedDate":"2024-04-15"},{"lineNumber":450,"author":{"gitId":"Kappaccinoh"},"content":"                                                                                                                        ","lastModifiedDate":"2024-04-04"},{"lineNumber":451,"author":{"gitId":"Kappaccinoh"},"content":"Format: `apptfordoctor KEYWORD [MORE_KEYWORDS]`                                                                         ","lastModifiedDate":"2024-04-04"},{"lineNumber":452,"author":{"gitId":"Kappaccinoh"},"content":"                                                                                                                        ","lastModifiedDate":"2024-04-04"},{"lineNumber":453,"author":{"gitId":"Kappaccinoh"},"content":"Command Constraints:                                                                                                    ","lastModifiedDate":"2024-04-04"},{"lineNumber":454,"author":{"gitId":"Kappaccinoh"},"content":"                                                                                                                        ","lastModifiedDate":"2024-04-04"},{"lineNumber":455,"author":{"gitId":"alfaloo"},"content":"* The search is case-insensitive. e.g. `s1234562a` will match `S1234562A`                                                ","lastModifiedDate":"2024-04-15"},{"lineNumber":456,"author":{"gitId":"Kappaccinoh"},"content":"* The order of the keywords does not matter. e.g. `S1234562A S1234561A` will                                            ","lastModifiedDate":"2024-04-04"},{"lineNumber":457,"author":{"gitId":"Kappaccinoh"},"content":"match appointments that involve `S1234562A` and `S1234561A`.                                                            ","lastModifiedDate":"2024-04-04"},{"lineNumber":458,"author":{"gitId":"Kappaccinoh"},"content":"  * Only the NRIC field of `Doctor` is searched and matched.                                                            ","lastModifiedDate":"2024-04-04"},{"lineNumber":459,"author":{"gitId":"Kappaccinoh"},"content":"* Only exact NRICs will be matched e.g. `S123456` will not match `S1234562A`                                            ","lastModifiedDate":"2024-04-04"},{"lineNumber":460,"author":{"gitId":"alfaloo"},"content":"* Appointments with `Doctor`s whose NRICs match at least one keyword will be returned (e.g. `OR` search).               ","lastModifiedDate":"2024-04-15"},{"lineNumber":461,"author":{"gitId":"Kappaccinoh"},"content":"                                                                                                                        ","lastModifiedDate":"2024-04-04"},{"lineNumber":462,"author":{"gitId":"Kappaccinoh"},"content":"Example:                                                                                                                ","lastModifiedDate":"2024-04-04"},{"lineNumber":463,"author":{"gitId":"Kappaccinoh"},"content":"* `apptfordoctor s1234561a` returns all `Appointment` object(s) that `Doctor` with NRIC `S1234561A` is involved in.     ","lastModifiedDate":"2024-04-04"},{"lineNumber":464,"author":{"gitId":"Kappaccinoh"},"content":"                                                                                                                        ","lastModifiedDate":"2024-04-04"},{"lineNumber":465,"author":{"gitId":"Kappaccinoh"},"content":"* All `Appointment`s listed                                                  ","lastModifiedDate":"2024-04-12"},{"lineNumber":466,"author":{"gitId":"Kappaccinoh"},"content":"![result for \u0027list\u0027](images/findAppointmentInitialDoctor.png)                                       ","lastModifiedDate":"2024-04-12"},{"lineNumber":467,"author":{"gitId":"Kappaccinoh"},"content":"                                                                                                                        ","lastModifiedDate":"2024-04-04"},{"lineNumber":468,"author":{"gitId":"Kappaccinoh"},"content":"* Only `Appointment`s with `Doctor` of `Nric` `S1234561A`                                               ","lastModifiedDate":"2024-04-12"},{"lineNumber":469,"author":{"gitId":"Kappaccinoh"},"content":"![result for \u0027apptfordoctor S1234561A\u0027](images/findAppointmentResultDoctor.png)                                        ","lastModifiedDate":"2024-04-04"},{"lineNumber":470,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"alfaloo"},"content":"#### Deleting appointment : `deleteappt`","lastModifiedDate":"2024-04-15"},{"lineNumber":473,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":474,"author":{"gitId":"Alteqa"},"content":"Deletes the specified appointment from the MediCLI system.","lastModifiedDate":"2024-04-12"},{"lineNumber":475,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":476,"author":{"gitId":"officialchengyud"},"content":"Format: `deleteappt INDEX`","lastModifiedDate":"2024-04-04"},{"lineNumber":477,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":478,"author":{"gitId":"officialchengyud"},"content":"* Deletes the appointment at the specified `INDEX`.","lastModifiedDate":"2024-04-04"},{"lineNumber":479,"author":{"gitId":"officialchengyud"},"content":"* The index refers to the index number shown in the displayed appointments list.","lastModifiedDate":"2024-04-04"},{"lineNumber":480,"author":{"gitId":"officialchengyud"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-04"},{"lineNumber":481,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":482,"author":{"gitId":"officialchengyud"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":483,"author":{"gitId":"alfaloo"},"content":"* `list` followed by `deleteappt 2` deletes the 2nd appointment in the MediCLI system.","lastModifiedDate":"2024-04-15"},{"lineNumber":484,"author":{"gitId":"officialchengyud"},"content":"* `apptforpatient S1234567A` followed by `deleteappt 1` deletes the 1st appointment in the results of the `apptforpatient` search command.","lastModifiedDate":"2024-04-04"},{"lineNumber":485,"author":{"gitId":"officialchengyud"},"content":"* `apptfordoctor S1234567B` followed by `deleteappt 2` deletes the 2nd appointment in the results of the `apptfordoctor` search command.","lastModifiedDate":"2024-04-04"},{"lineNumber":486,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":487,"author":{"gitId":"officialchengyud"},"content":"Visual Guide","lastModifiedDate":"2024-04-05"},{"lineNumber":488,"author":{"gitId":"Kappaccinoh"},"content":"* All appointments listed after running `list`                                                                   ","lastModifiedDate":"2024-04-12"},{"lineNumber":489,"author":{"gitId":"officialchengyud"},"content":"  ![result for \u0027list\u0027](images/deleteApptInitialState.png)","lastModifiedDate":"2024-04-05"},{"lineNumber":490,"author":{"gitId":"Kappaccinoh"},"content":"* After running `deleteappt` with `Index` of `1`                                                            ","lastModifiedDate":"2024-04-12"},{"lineNumber":491,"author":{"gitId":"officialchengyud"},"content":"  ![result for \u0027deleteappt 1\u0027](images/deleteApptFinalState.png)","lastModifiedDate":"2024-04-05"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":494,"author":{"gitId":"alfaloo"},"content":"### Miscellaneous Commands","lastModifiedDate":"2024-04-15"},{"lineNumber":495,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":496,"author":{"gitId":"alfaloo"},"content":"#### Viewing help : `help`","lastModifiedDate":"2024-04-15"},{"lineNumber":497,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":498,"author":{"gitId":"alfaloo"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2024-04-13"},{"lineNumber":499,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":500,"author":{"gitId":"alfaloo"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":501,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":502,"author":{"gitId":"alfaloo"},"content":"Format: `help`","lastModifiedDate":"2024-04-13"},{"lineNumber":503,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":504,"author":{"gitId":"alfaloo"},"content":"#### Listing all persons : `list`","lastModifiedDate":"2024-04-15"},{"lineNumber":505,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":506,"author":{"gitId":"alfaloo"},"content":"Shows a list of all persons (patients \u0026 doctors) and appointments in the MediCLI system.","lastModifiedDate":"2024-04-13"},{"lineNumber":507,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":508,"author":{"gitId":"alfaloo"},"content":"Format: `list`","lastModifiedDate":"2024-04-13"},{"lineNumber":509,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":510,"author":{"gitId":"alfaloo"},"content":"#### Clearing all entries : `clear`                                                                  ","lastModifiedDate":"2024-04-15"},{"lineNumber":511,"author":{"gitId":"-"},"content":"                                                                                                 ","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"Kappaccinoh"},"content":"Clears all entries from MediCLI.","lastModifiedDate":"2024-04-04"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"alfaloo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e:exclamation: **DANGER**: This command will wipe the entire data from the system upon being executed. This action is irreversible and no confirmation prompt is given. Please be very purposeful and cautious when you use this.\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":515,"author":{"gitId":"ararchch"},"content":"                                                                                                 ","lastModifiedDate":"2024-04-10"},{"lineNumber":516,"author":{"gitId":"-"},"content":"Format: `clear`                                                                                     ","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"Kappaccinoh"},"content":"![result for \u0027clear\u0027](images/clear.png)","lastModifiedDate":"2024-04-12"},{"lineNumber":519,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":520,"author":{"gitId":"alfaloo"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2024-04-15"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"officialchengyud"},"content":"MediCLI data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-04-04"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":532,"author":{"gitId":"alfaloo"},"content":"MediCLI data are saved automatically as a JSON file `[JAR file location]/data/MediCLI.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-04-15"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":534,"author":{"gitId":"alfaloo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e:exclamation: **DANGER**:","lastModifiedDate":"2024-04-13"},{"lineNumber":535,"author":{"gitId":"alfaloo"},"content":"If your changes to the data file make its format invalid, MediCLI will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":536,"author":{"gitId":"alfaloo"},"content":"Furthermore, certain edits can cause the MediCLI to behave in unexpected ways (e.g. if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-04-15"},{"lineNumber":537,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":539,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"Kappaccinoh"},"content":"## Frequently Asked Questions (FAQ)","lastModifiedDate":"2024-04-15"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"Kappaccinoh"},"content":"1. **Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":544,"author":{"gitId":"alfaloo"},"content":"**A**: Install the app on the other computer and overwrite the empty data file it creates with the file that contains the data of your previous MediCLI home folder.","lastModifiedDate":"2024-04-15"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"Kappaccinoh"},"content":"2. **Q**: Can I use MediCLI on different operating systems?\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":547,"author":{"gitId":"Kappaccinoh"},"content":"**A**: Yes, MediCLI is compatible with multiple operating systems as long as you have Java 11 or above installed. You can run it on Windows, macOS, or Linux.","lastModifiedDate":"2024-04-12"},{"lineNumber":548,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":549,"author":{"gitId":"Kappaccinoh"},"content":"3. **Q**: Is there a limit to the number of patients, doctors, or appointments I can add to MediCLI?\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":550,"author":{"gitId":"Kappaccinoh"},"content":"**A**: There is no built-in limit to the number of entries you can add to MediCLI. However, the performance may be affected if you add an extremely large number of entries.","lastModifiedDate":"2024-04-12"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":552,"author":{"gitId":"Kappaccinoh"},"content":"4. **Q**: Can I customise the appearance or theme of the interface in MediCLI?\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":553,"author":{"gitId":"Alteqa"},"content":"**A**: Currently, there is no option to customise the appearance or theme of the interface in MediCLI. It has a default interface optimised for efficiency and usability.","lastModifiedDate":"2024-04-12"},{"lineNumber":554,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":555,"author":{"gitId":"Kappaccinoh"},"content":"5. **Q**: Does MediCLI support multi-user access or user authentication?\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":556,"author":{"gitId":"Kappaccinoh"},"content":"**A**: No, MediCLI is designed for single-user access only. It does not have built-in support for multi-user access or user authentication.","lastModifiedDate":"2024-04-12"},{"lineNumber":557,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":558,"author":{"gitId":"Kappaccinoh"},"content":"6. **Q**: Can I export data from MediCLI to other formats like CSV or Excel?\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":559,"author":{"gitId":"Kappaccinoh"},"content":"**A**: Currently, there is no built-in feature to export data from MediCLI to other formats. However, you can manually extract data from the JSON file if needed.","lastModifiedDate":"2024-04-12"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":561,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"Kappaccinoh"},"content":"## Known Issues","lastModifiedDate":"2024-04-15"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":565,"author":{"gitId":"Kappaccinoh"},"content":"1. **Issue**: When using multiple screens, if the MediCLI application is moved to a secondary screen and later switched to using only the primary screen, the graphical user interface (GUI) may open off-screen upon application launch.","lastModifiedDate":"2024-04-12"},{"lineNumber":566,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":567,"author":{"gitId":"Kappaccinoh"},"content":"   **Impact**: Users may find it challenging to interact with the application as the GUI is rendered off-screen, making it inaccessible and difficult to use.","lastModifiedDate":"2024-04-12"},{"lineNumber":568,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":569,"author":{"gitId":"Kappaccinoh"},"content":"   **Workaround**: To resolve this issue, users can delete the preferences.json file generated by the application before launching MediCLI again. This action resets the application preferences, ensuring that the GUI opens within the visible area of the primary screen.","lastModifiedDate":"2024-04-12"},{"lineNumber":570,"author":{"gitId":"Kappaccinoh"},"content":"2. **Issue**: MediCLI may experience performance degradation when handling a large number of entries, such as patients, doctors, or appointments.","lastModifiedDate":"2024-04-12"},{"lineNumber":571,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":572,"author":{"gitId":"Kappaccinoh"},"content":"   **Impact**: Users may notice slower response times or delays when adding, editing, or deleting entries, especially in cases with a large dataset.","lastModifiedDate":"2024-04-12"},{"lineNumber":573,"author":{"gitId":"Kappaccinoh"},"content":"   ","lastModifiedDate":"2024-04-12"},{"lineNumber":574,"author":{"gitId":"Alteqa"},"content":"   **Workaround**: Users can optimise performance by limiting the number of entries stored in MediCLI or by periodically archiving old data to reduce the dataset size.","lastModifiedDate":"2024-04-12"},{"lineNumber":575,"author":{"gitId":"Kappaccinoh"},"content":"3. **Issue**: Editing data directly in the data file may lead to unexpected behavior or data corruption.","lastModifiedDate":"2024-04-12"},{"lineNumber":576,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":577,"author":{"gitId":"Kappaccinoh"},"content":"   **Impact**: Users who manually edit the JSON data file used by MediCLI may inadvertently introduce errors or inconsistencies, resulting in data loss or application crashes.","lastModifiedDate":"2024-04-12"},{"lineNumber":578,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":579,"author":{"gitId":"Kappaccinoh"},"content":"   **Workaround**: It\u0027s recommended to avoid directly editing the data file unless absolutely necessary. Users should exercise caution and make backups before making any changes to the data file.","lastModifiedDate":"2024-04-12"},{"lineNumber":580,"author":{"gitId":"Kappaccinoh"},"content":"4. **Issue**: MediCLI does not provide built-in data export functionality to formats like CSV or Excel.","lastModifiedDate":"2024-04-12"},{"lineNumber":581,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":582,"author":{"gitId":"Kappaccinoh"},"content":"   **Impact**: Users may face challenges when trying to export data from MediCLI for analysis or reporting purposes, especially if they rely on external tools or software that require specific file formats.","lastModifiedDate":"2024-04-12"},{"lineNumber":583,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":584,"author":{"gitId":"Kappaccinoh"},"content":"   **Workaround**: Users can manually extract data from the JSON data file used by MediCLI and convert it to the desired format using third-party tools or scripts. Alternatively, they can explore custom export solutions or request this feature from the developers.","lastModifiedDate":"2024-04-12"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":586,"author":{"gitId":"Alteqa"},"content":"5. **Issue**: When the name entered into the system is too lengthy, MedicCLI truncates the name and adds ellipses.","lastModifiedDate":"2024-04-12"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":588,"author":{"gitId":"Alteqa"},"content":"   **Impact**: Users may face challenges reading or finding long names when reading from MediCLI, especially on smaller displays.","lastModifiedDate":"2024-04-12"},{"lineNumber":589,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":590,"author":{"gitId":"Alteqa"},"content":"   **Workaround**: Users can reduce the amount of characters typed into the name field or search for longer names based on the first few characters shown instead of the entire name.","lastModifiedDate":"2024-04-12"},{"lineNumber":591,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":592,"author":{"gitId":"alfaloo"},"content":"6. **Issue**: When the name entered into the system contains acute accents (e.g. `Aimée`), Chinese characters, or dash `-`, the system will reject it.","lastModifiedDate":"2024-04-15"},{"lineNumber":593,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":594,"author":{"gitId":"alfaloo"},"content":"   **Impact**: Users may face challenges entering information about patient / doctors with foreign names into MediCLI.","lastModifiedDate":"2024-04-15"},{"lineNumber":595,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":596,"author":{"gitId":"alfaloo"},"content":"   **Workaround**: Users can replace the accented characters with normal alphabets (e.g. `é` with `e`), omit the dash and romanize Chinese names.","lastModifiedDate":"2024-04-15"},{"lineNumber":597,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":598,"author":{"gitId":"officialchengyud"},"content":"7. **Issue**: MediCLI will only accept Singaporean NRIC","lastModifiedDate":"2024-04-14"},{"lineNumber":599,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":600,"author":{"gitId":"alfaloo"},"content":"   **Impact**: Users may face challenges entering information about patients who are not from Singapore (e.g. those without NRIC).","lastModifiedDate":"2024-04-15"},{"lineNumber":601,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":602,"author":{"gitId":"officialchengyud"},"content":"   **Workaround**: There is currently no workaround, but the MediCLI development team will add this feature enhancement in the near future.","lastModifiedDate":"2024-04-14"},{"lineNumber":603,"author":{"gitId":"alfaloo"},"content":"8. **Issue**: MediCLI currently allows scheduling of appointments between the same doctor but different patients at identical times (e.g. overlapping appointments).","lastModifiedDate":"2024-04-15"},{"lineNumber":604,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":605,"author":{"gitId":"officialchengyud"},"content":"    **Impact**: Users may schedule two or more patients with the same doctor at the same time when the doctor can only see one patient at any given time.","lastModifiedDate":"2024-04-14"},{"lineNumber":606,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":607,"author":{"gitId":"alfaloo"},"content":"    **Workaround**: Users can first look up the appointments of the doctor and visually confirm the doctor is free at a given time before scheduling a patient with them.","lastModifiedDate":"2024-04-15"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":609,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-15"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":611,"author":{"gitId":"Kappaccinoh"},"content":"## Glossary","lastModifiedDate":"2024-04-15"},{"lineNumber":612,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":613,"author":{"gitId":"Kappaccinoh"},"content":"**Alphanumeric**: A combination of alphabetic characters and numerical digits. (e.g S1234567A)","lastModifiedDate":"2024-04-15"},{"lineNumber":614,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":615,"author":{"gitId":"Kappaccinoh"},"content":"**Backend**: The part of a software system that handles data processing and logic execution, typically hidden from the user.","lastModifiedDate":"2024-04-15"},{"lineNumber":616,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":617,"author":{"gitId":"Kappaccinoh"},"content":"**CLI (Command Line Interface)**: A text-based interface for interacting with a computer program through commands typed into a terminal or console.","lastModifiedDate":"2024-04-15"},{"lineNumber":618,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":619,"author":{"gitId":"Kappaccinoh"},"content":"**Command Terminal**: A text-based interface where users can input commands to perform various tasks on a computer system.","lastModifiedDate":"2024-04-15"},{"lineNumber":620,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":621,"author":{"gitId":"Kappaccinoh"},"content":"**Desktop Application**: Software designed to be run on desktop or laptop computers, providing functionality without requiring a web browser.","lastModifiedDate":"2024-04-15"},{"lineNumber":622,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":623,"author":{"gitId":"Kappaccinoh"},"content":"**Entities**: Objects or elements with distinct and independent existence within a system, often represented in databases or software architectures. MediCLI has 3 entities; Patient, Doctor, Appointment.","lastModifiedDate":"2024-04-15"},{"lineNumber":624,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":625,"author":{"gitId":"Kappaccinoh"},"content":"**GUI (Graphical User Interface)**: An interface that allows users to interact with electronic devices through graphical icons and visual indicators.","lastModifiedDate":"2024-04-15"},{"lineNumber":626,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":627,"author":{"gitId":"Kappaccinoh"},"content":"**Hard Disk**: A component of a computer system responsible for long-term storage of data.","lastModifiedDate":"2024-04-15"},{"lineNumber":628,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":629,"author":{"gitId":"Kappaccinoh"},"content":"**Home Folder**: The default directory or folder on a computer system where a user\u0027s personal files and data are stored.","lastModifiedDate":"2024-04-15"},{"lineNumber":630,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":631,"author":{"gitId":"Kappaccinoh"},"content":"**Java 11**: A version of the Java programming language and platform, released in September 2018, known for its long-term support (LTS).","lastModifiedDate":"2024-04-15"},{"lineNumber":632,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":633,"author":{"gitId":"Kappaccinoh"},"content":"**JavaFX**: A software platform and GUI toolkit for Java applications, providing a rich set of features for building interactive user interfaces.","lastModifiedDate":"2024-04-15"},{"lineNumber":634,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":635,"author":{"gitId":"Kappaccinoh"},"content":"**Jar File**: A Java Archive file format used to package Java class files, associated metadata, and resources into a single file.","lastModifiedDate":"2024-04-15"},{"lineNumber":636,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":637,"author":{"gitId":"Kappaccinoh"},"content":"**Json File**: A file format used for storing and exchanging data in a human-readable and machine-parseable format, based on JavaScript Object Notation (JSON).","lastModifiedDate":"2024-04-15"},{"lineNumber":638,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":639,"author":{"gitId":"Kappaccinoh"},"content":"**Logging Files**: Files generated by software applications to record events, actions, or errors for troubleshooting and analysis purposes.","lastModifiedDate":"2024-04-15"},{"lineNumber":640,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":641,"author":{"gitId":"Kappaccinoh"},"content":"**macOS**: The operating system developed by Apple Inc. for its Macintosh line of computers.","lastModifiedDate":"2024-04-15"},{"lineNumber":642,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":643,"author":{"gitId":"Kappaccinoh"},"content":"**NRIC (National Registration Identity Card)**: A unique identification document issued to citizens and permanent residents of certain countries.","lastModifiedDate":"2024-04-15"},{"lineNumber":644,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":645,"author":{"gitId":"Kappaccinoh"},"content":"**Recursively Deleted**: The process of removing entities from a filesystem in a recursive manner. (e.g If an Appointment ‘A’ was associated or ‘linked’ with Person ‘P’, the deletion of ‘P’ will also trigger the deletion of the Appointment ‘A’)","lastModifiedDate":"2024-04-15"},{"lineNumber":646,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":647,"author":{"gitId":"Kappaccinoh"},"content":"**Ubuntu**: A popular Linux distribution based on Debian, known for its ease of use and community-driven development.","lastModifiedDate":"2024-04-15"},{"lineNumber":648,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":649,"author":{"gitId":"Kappaccinoh"},"content":"**Windows**: A series of operating systems developed by Microsoft, widely used on personal computers and servers.","lastModifiedDate":"2024-04-15"},{"lineNumber":650,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":651,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":654,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":656,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"officialchengyud"},"content":"**[Add Patient](#adding-a-patient--addpatient)** | `addpatient i/NRIC n/NAME d/DOB p/PHONE_NUMBER` \u003cbr\u003e e.g., `addpatient i/S1234567A n/John Doe d/2003-01-30 p/98765432`","lastModifiedDate":"2024-04-14"},{"lineNumber":661,"author":{"gitId":"officialchengyud"},"content":"**[Add Doctor](#adding-a-doctor--adddoctor)** | `adddoctor i/NRIC n/NAME d/DOB p/PHONE_NUMBER` \u003cbr\u003e e.g., `adddoctor i/S1234567A n/John Doe d/2003-01-30 p/98765432`","lastModifiedDate":"2024-04-14"},{"lineNumber":662,"author":{"gitId":"officialchengyud"},"content":"**[Edit Person](#editing-a-person--edit)** | `edit INDEX [n/NAME] [p/PHONE] [i/NRIC] [d/DOB]`\u003cbr\u003e e.g.,`edit 1 p/91234567 n/Betsy Crower`","lastModifiedDate":"2024-04-14"},{"lineNumber":663,"author":{"gitId":"officialchengyud"},"content":"**[Find Person](#finding-both-doctor-and-patient-by-name--find)** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find Doe Li`","lastModifiedDate":"2024-04-14"},{"lineNumber":664,"author":{"gitId":"officialchengyud"},"content":"**[Query Patient](#querying-patients-by-name--patient)** | `patient KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `patient James Jake`","lastModifiedDate":"2024-04-14"},{"lineNumber":665,"author":{"gitId":"officialchengyud"},"content":"**[Query Doctor](#querying-doctors-by-name--doctor)** | `doctor KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `doctor John Doe`","lastModifiedDate":"2024-04-14"},{"lineNumber":666,"author":{"gitId":"officialchengyud"},"content":"**[Delete Person](#deleting-a-doctor-or-patient--delete)** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2024-04-14"},{"lineNumber":667,"author":{"gitId":"officialchengyud"},"content":"**[Add Appointment](#adding-an-appointment--addappt)** | `addappt ad/DATETIME dn/DOCTOR_NRIC pn/PATIENT_NRIC` \u003cbr\u003e e.g., `addappt ad/2024-08-11 23:50 dn/S1234567A pn/S1234567B`","lastModifiedDate":"2024-04-14"},{"lineNumber":668,"author":{"gitId":"officialchengyud"},"content":"**[Edit Appointment](#editing-an-appointment--editappt)** | `editappt INDEX ad/DATETIME`\u003cbr\u003e e.g.,`editappt 1 ad/2024-04-09 10:10`","lastModifiedDate":"2024-04-14"},{"lineNumber":669,"author":{"gitId":"officialchengyud"},"content":"**[Query Appointment by Patient](#querying-appointments-by-patients-nric--apptforpatient)** | `apptforpatient KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `apptforpatient S1234567A`","lastModifiedDate":"2024-04-14"},{"lineNumber":670,"author":{"gitId":"officialchengyud"},"content":"**[Query Appointment by Doctor](#querying-appointments-by-doctors-nric--apptfordoctor)** | `apptfordoctor KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `apptfordoctor S7654321A`","lastModifiedDate":"2024-04-14"},{"lineNumber":671,"author":{"gitId":"officialchengyud"},"content":"**[Delete Appointment](#deleting-appointment--deleteappt)** | `deleteappt INDEX`\u003cbr\u003e e.g., `deleteappt 3`","lastModifiedDate":"2024-04-14"},{"lineNumber":672,"author":{"gitId":"officialchengyud"},"content":"**[Help](#viewing-help--help)** | `help`","lastModifiedDate":"2024-04-14"},{"lineNumber":673,"author":{"gitId":"officialchengyud"},"content":"**[List](#listing-all-persons--list)** | `list`","lastModifiedDate":"2024-04-14"},{"lineNumber":674,"author":{"gitId":"officialchengyud"},"content":"**[Clear](#clearing-all-entries--clear)** | `clear`","lastModifiedDate":"2024-04-14"},{"lineNumber":675,"author":{"gitId":"officialchengyud"},"content":"**[Exit](#exiting-the-program--exit)** | `exit`","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"Alteqa":20,"alfaloo":241,"officialchengyud":74,"Kappaccinoh":141,"-":143,"ararchch":56}},{"path":"docs/_config.yml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"title: \"MediCLI\"","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"theme: minima","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"header_pages:","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  - UserGuide.md","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  - DeveloperGuide.md","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  - AboutUs.md","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"markdown: kramdown","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"repository: \"AY2324S2-CS2103T-T15-1/tp\"","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"github_icon: \"images/github-icon.png\"","lastModifiedDate":"2020-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"plugins:","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  - jemoji","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"officialchengyud":1,"Kappaccinoh":1,"-":13}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"Kappaccinoh"},"content":"    content: \"MediCLI\";","lastModifiedDate":"2024-04-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"Kappaccinoh":1,"-":294}},{"path":"docs/assets/css/style.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"# Only the main Sass file needs front matter (the dashes are enough)","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@import","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \"minima/skins/{{ site.minima.skin | default: \u0027classic\u0027 }}\",","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \"minima/initialize\";","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":".icon {","lastModifiedDate":"2020-08-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    height: 21px;","lastModifiedDate":"2020-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    width: 21px","lastModifiedDate":"2020-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-01"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"h2, h3 {","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"  font-weight: bold;","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"  color: #257ec7;","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":".post-title {","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"  color: #257ec7;","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"  font-weight: bold;","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"#logo {","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"  margin-bottom: 15px;","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"officialchengyud":14,"-":12}},{"path":"docs/diagrams/AddAppoiintmentActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"skin rose","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"start","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":":User inputs text command to add an appointment;","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"if () then ([command word does not exist])","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"    :Show error message\\nfor unknown command word;","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"else ([else])","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"    if () then ([missing required fields])","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"        :Show error message indicating\\n invalid command format;","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"    else ([else])","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"        if () then ([invalid field arguments])","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"                    :Show error message\\nhighlighting invalid field\\narguments provided;","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"        else ([else])","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"            if () then ([doctor/patient does not exist])","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"                :Show error message\\nindicating that the doctor/patient is not registered;","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"            else ([else])","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"                if () then ([appointment date is invalid])","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"                    :Show error message indicating that\\n the appointment cannot be scheduled in the past;","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"                else ([else])","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"                    if () then ([Duplicate appointment detected])","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"                        :Show error message\\nindicating duplicate appointment;","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"                    else ([else])","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"                        :Add the appointment\\ninto the appointment list;","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"                        :Update the \u0027appointment\u0027 panel\\nin the GUI;","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"                        :Show success message\\nwith appointments\u0027 information;","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"                    endif;","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"                endif","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"            endif","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"        endif","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"    endif","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"endif","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"stop","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"ararchch":38}},{"path":"docs/diagrams/AddAppointmentSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"!include style.puml","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"participant \":AddAppointmentCommandParser\" as AddAppointmentCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"participant \"e:AddAppointmentCommand\" as AddAppointmentCommand LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"end box","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"end box","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"[-\u003e LogicManager : execute(\"addappt dn/...\")","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"activate LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addappt dn/...\")","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"create AddAppointmentCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"AddressBookParser -\u003e AddAppointmentCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"activate AddAppointmentCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"create AddAppointmentCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"AddAppointmentCommandParser -\u003e AddAppointmentCommand : : parse(\"addappt dn/...\")","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"activate AddAppointmentCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"AddAppointmentCommand --\u003e AddAppointmentCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"deactivate AddAppointmentCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"AddAppointmentCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"deactivate AddAppointmentCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"AddAppointmetnCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"destroy AddAppointmentCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"LogicManager -\u003e AddAppointmentCommand : execute()","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"activate AddAppointmentCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"AddAppointmentCommand -\u003e Model : addAppointment(toAdd)","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"activate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"Model --\u003e AddAppointmentCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"deactivate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"create CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"AddAppointmentCommand -\u003e CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"activate CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"CommandResult --\u003e AddAppointmentCommand : result","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"AddAppointmentCommand --\u003e LogicManager : result","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"deactivate AddAppointmentCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"ararchch":65}},{"path":"docs/diagrams/AddPatientCommandExecuteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"!include style.puml","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"participant \":AddPatientCommand\" as AddPatientCommand LOGIC_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"end box","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"box Commons LOGGER_COLOR_T1","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"participant \":Logger\" as Logger LOGGER_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"end box","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"end box","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"[-\u003e AddPatientCommand : execute()","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"activate AddPatientCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"alt model.hasPerson(toAdd)","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    AddPatientCommand -\u003e Model: hasPerson(toAdd)","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    activate Model","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"    Model -\u003e AddPatientCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"    deactivate Model","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"    AddPatientCommand -\u003e Logger: log(Level.INFO, \"Duplicate\")","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"    activate Logger","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"    Logger -\u003e Logger: log","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"    Logger -\u003e AddPatientCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    deactivate Logger","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"    [\u003c--AddPatientCommand: throw CommandException()","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"else else","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"    AddPatientCommand -\u003e Model : hasPerson(toAdd)","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"    activate Model","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    Model --\u003e AddPatientCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"    AddPatientCommand -\u003e Model : addPerson(toAdd)","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"    Model --\u003e AddPatientCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"    deactivate Model","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"    AddPatientCommand -\u003e Logger: log(Level.INFO, \"Success\")","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"    activate Logger","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"    Logger -\u003e Logger: log","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"    Logger -\u003e AddPatientCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"    deactivate Logger","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"    create CommandResult","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"    AddPatientCommand -\u003e CommandResult","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"    activate CommandResult","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"    CommandResult --\u003e AddPatientCommand : result","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"    deactivate CommandResult","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"    [\u003c--AddPatientCommand : result","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"    deactivate AddPatientCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"end","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"alfaloo":63}},{"path":"docs/diagrams/AddPersonActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"skin rose","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"start","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":":User inputs text command to add a patient/doctor;","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"if () then ([command word does not exist])","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"    :Show error message\\nfor unknown command;","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"else ([else])","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    if () then ([missing required fields])","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"        :Show error message\\nfor missing required fields;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"    else ([else])","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"        if () then ([invalid field arguments])","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"            :Show error message\\nindicating invalid field\\narguments provided;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"        else ([else])","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"            if () then ([Duplicate patient/doctor detected])","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"                :Show error message\\nindicating duplicate patient/doctor;","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"                else ([else])","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"                    :Add the patient/doctor\\ninto the persons list;","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"                    :Update the \u0027person\u0027 panel\\nin the GUI;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"                    :Show success message\\nwith patient/doctor\u0027s information;","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"            endif;","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"        endif","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"    endif","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"endif","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"stop","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"alfaloo":23,"officialchengyud":4,"ararchch":3}},{"path":"docs/diagrams/AppointmentClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"@startuml","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"!include style.puml","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"Class \"Appointment\" as Appointment","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"Class Nric","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"Class AppointmentDateTime","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"Appointment -down-\u003e \"1\" Nric : Doctor\u0027s NRIC\\t","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"Appointment -down-\u003e \"1\" Nric : Patient\u0027s NRIC\\t\\t","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"Appointment -down-\u003e \"\\t1\" AppointmentDateTime","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"@enduml","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"ararchch":19}},{"path":"docs/diagrams/AppointmentObjectDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"@startuml","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"!include style.puml","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"object \"__:Appointment__\" as appointment","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"object \"__doctorNric:Nric__\" as doctorNric","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"object \"__patientNric:Nric__\" as patientNric","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"object \"__appointmentDateTime:AppointmentDateTime__\" as appointmentDate","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"appointment -down-\u003e doctorNric","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"appointment -down-\u003e patientNric","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"appointment -down-\u003e appointmentDate","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"@enduml","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"ararchch":18}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"user -[USER_COLOR]\u003e ui : \"addpatient  i/T1...\"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"addpatient  i/T1...\")","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"logic -[LOGIC_COLOR]\u003e model : addPatient(p)","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Alteqa":3,"-":36}},{"path":"docs/diagrams/DeleteAppointmentActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"skin rose","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"start","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":":User enters command to delete appointment;","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"if () then ([command is invalid])","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"    :Show error message\\nfor invalid command;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"else ([else])","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"    if () then ([missing required fields])","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"        :Show error message\\nfor missing required fields;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"    else ([else])","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"        if () then ([Invalid appointment index detected])","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"            :Show error message\\nindicating invalid Appointment index;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"            else ([else])","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"                 :Remove appointment\\nfrom the appointment list;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"                 :Update the \u0027appointment\u0027 panel\\nin the GUI;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"                 :Show success message\\nwith removed appointment information;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"        endif;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"    endif","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"endif","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"stop","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"Alteqa":1,"Kappaccinoh":25}},{"path":"docs/diagrams/DeleteAppointmentSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"@startuml","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"!include style.puml","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"officialchengyud"},"content":"participant \":DeleteAppointmentCommandParser\" as DeleteAppointmentCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"participant \"e:DeleteAppointmentCommand\" as DeleteAppointmentCommand LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"end box","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"end box","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"[-\u003e LogicManager : execute(\"deleteappt i/...\")","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"activate LogicManager","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"deleteappt i/...\")","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"activate AddressBookParser","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"create DeleteAppointmentCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"AddressBookParser -\u003e DeleteAppointmentCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"activate DeleteAppointmentCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"officialchengyud"},"content":"create DeleteAppointmentCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"DeleteAppointmentCommandParser -\u003e DeleteAppointmentCommand : : parse(\"deleteappt i/...\")","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"activate DeleteAppointmentCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"DeleteAppointmentCommand --\u003e DeleteAppointmentCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"deactivate DeleteAppointmentCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"DeleteAppointmentCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"officialchengyud"},"content":"deactivate DeleteAppointmentCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"officialchengyud"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"DeleteAppointmentCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"destroy DeleteAppointmentCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"officialchengyud"},"content":"LogicManager -\u003e DeleteAppointmentCommand : execute()","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"activate DeleteAppointmentCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"DeleteAppointmentCommand -\u003e Model : deleteAppointment(toRemove)","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"activate Model","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"officialchengyud"},"content":"Model --\u003e DeleteAppointmentCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"officialchengyud"},"content":"deactivate Model","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"officialchengyud"},"content":"create CommandResult","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"officialchengyud"},"content":"DeleteAppointmentCommand -\u003e CommandResult","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"officialchengyud"},"content":"activate CommandResult","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"officialchengyud"},"content":"CommandResult --\u003e DeleteAppointmentCommand : result","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"officialchengyud"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"officialchengyud"},"content":"DeleteAppointmentCommand --\u003e LogicManager : result","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"officialchengyud"},"content":"deactivate DeleteAppointmentCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"officialchengyud"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"officialchengyud"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"officialchengyud"},"content":"@enduml","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"officialchengyud":65}},{"path":"docs/diagrams/DeleteCommandExecuteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"!include style.puml","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"participant \":DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"end box","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"box Commons LOGGER_COLOR_T1","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"participant \":Index\" as Index LOGGER_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"end box","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"end box","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"[-\u003e DeleteCommand : execute()","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"activate DeleteCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"DeleteCommand -\u003e Model: getFilteredPersonList()","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"activate Model","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"Model -\u003e DeleteCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"deactivate Model","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"alt index.getZeroBased() \u003e\u003d lastShownList.size()","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"    DeleteCommand -\u003e Index: getZeroBased()","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"    activate Index","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"    Index -\u003e DeleteCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"    deactivate Index","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    [\u003c--DeleteCommand: throw CommandException()","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"else else","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"    DeleteCommand -\u003e Index: getZeroBased()","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"    activate Index","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"    Index -\u003e DeleteCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"    deactivate Index","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    DeleteCommand -\u003e Model : deletePerson(personToDelete)","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"    activate Model","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"    Model --\u003e DeleteCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"    deactivate Model","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"    create CommandResult","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"    DeleteCommand -\u003e CommandResult","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"    activate CommandResult","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"    CommandResult --\u003e DeleteCommand : result","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"    deactivate CommandResult","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"    [\u003c--DeleteCommand : result","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"    deactivate DeleteCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"end","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"alfaloo":56}},{"path":"docs/diagrams/DeletePersonActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"skin rose","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"start","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":":User enters command to delete doctor or patient;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"if () then ([command is invalid])","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"    :Show error message\\nfor invalid command;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"else ([else])","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"    if () then ([missing required fields])","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"        :Show error message\\nfor missing required fields;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"    else ([else])","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"        if () then ([Invalid person index detected])","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"            :Show error message\\nindicating invalid Person index;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"            else ([else])","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"                 :Remove patient/doctor\\nfrom the persons list\\nalso removes any appointments\\nassociated with the deleted patient/doctor;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"                 :Update the \u0027person\u0027 panel\\nand appointments panel\\n in the GUI;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"                 :Show success message\\nwith removed doctor/patient information;","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"        endif;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"    endif","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"endif","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"stop","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"officialchengyud":24,"Kappaccinoh":2}},{"path":"docs/diagrams/DeletePersonSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"@startuml","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"!include style.puml","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"officialchengyud"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"participant \"e:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"end box","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"end box","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"[-\u003e LogicManager : execute(\"delete i/...\")","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"activate LogicManager","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete i/...\")","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"activate AddressBookParser","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"create DeleteCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"activate DeleteCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"officialchengyud"},"content":"create DeleteCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"DeleteCommandParser -\u003e DeleteCommand : : parse(\"delete i/...\")","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"activate DeleteCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"DeleteCommand --\u003e DeleteCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"deactivate DeleteCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"officialchengyud"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"officialchengyud"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"officialchengyud"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"activate DeleteCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"DeleteCommand -\u003e Model : removePerson(toRemove)","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"activate Model","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"officialchengyud"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"officialchengyud"},"content":"deactivate Model","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"officialchengyud"},"content":"create CommandResult","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"officialchengyud"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"officialchengyud"},"content":"activate CommandResult","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"officialchengyud"},"content":"CommandResult --\u003e DeleteCommand : result","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"officialchengyud"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"officialchengyud"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"officialchengyud"},"content":"deactivate DeleteCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"officialchengyud"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"officialchengyud"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"officialchengyud"},"content":"@enduml","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"officialchengyud":65}},{"path":"docs/diagrams/EditAppointmentActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"@startuml","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"skin rose","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"start","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":":User enters command to edit appointment;","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"if () then ([command is invalid])","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"    :Show error message\\nfor invalid command;","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"else ([else])","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":"    if () then ([missing required fields])","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"        :Show error message\\nfor missing required fields;","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"    else ([else])","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"        if () then ([Invalid appointment index detected])","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"            :Show error message\\nindicating invalid Appointment index;","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"            else ([else])","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"                 :edit appointment\\nin the appointment list;","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"                 :Update the \u0027appointment\u0027 panel\\nin the GUI;","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"                 :Show success message\\nwith edited appointment information;","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"        endif;","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"    endif","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"endif","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":"stop","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"@enduml","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"Alteqa":26}},{"path":"docs/diagrams/EditAppointmentSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"@startuml","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"!include style.puml","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"participant \":EditAppointmentCommandParser\" as EditAppointmentCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"participant \"e:EditAppointmentCommand\" as EditAppointmentCommand LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"end box","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"end box","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"[-\u003e LogicManager : execute(\"editappt i/...\")","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"activate LogicManager","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"editappt i/...\")","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"activate AddressBookParser","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"create EditAppointmentCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"AddressBookParser -\u003e EditAppointmentCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":"activate EditAppointmentCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"create EditAppointmentCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"EditAppointmentCommandParser -\u003e EditAppointmentCommand : : parse(\"editappt i/...\")","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"activate EditAppointmentCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"EditAppointmentCommand --\u003e EditAppointmentCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"deactivate EditAppointmentCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"EditAppointmentCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"deactivate EditAppointmentCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"Alteqa"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"EditAppointmentCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"destroy EditAppointmentCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"Alteqa"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"Alteqa"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"Alteqa"},"content":"LogicManager -\u003e EditAppointmentCommand : execute()","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"Alteqa"},"content":"activate EditAppointmentCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"Alteqa"},"content":"EditAppointmentCommand -\u003e Model : setAppointment(toEdit)","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"Alteqa"},"content":"activate Model","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"Alteqa"},"content":"Model --\u003e EditAppointmentCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"deactivate Model","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"Alteqa"},"content":"create CommandResult","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"Alteqa"},"content":"EditAppointmentCommand -\u003e CommandResult","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"Alteqa"},"content":"activate CommandResult","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"Alteqa"},"content":"CommandResult --\u003e EditAppointmentCommand : result","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"Alteqa"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"Alteqa"},"content":"EditAppointmentCommand --\u003e LogicManager : result","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"Alteqa"},"content":"deactivate EditAppointmentCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"Alteqa"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"Alteqa"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"Alteqa"},"content":"@enduml","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"Alteqa":65}},{"path":"docs/diagrams/EditCommandExecuteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"!include style.puml","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"participant \":EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"end box","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"box Commons LOGGER_COLOR_T1","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"participant \":Index\" as Index LOGGER_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"end box","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"end box","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"[-\u003e EditCommand : execute()","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"activate EditCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"EditCommand -\u003e Model: getFilteredPersonList()","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"activate Model","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"Model -\u003e EditCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"deactivate Model","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"alt index.getZeroBased() \u003e\u003d lastShownList.size()","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"    EditCommand -\u003e Index: getZeroBased()","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"    activate Index","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"    Index -\u003e EditCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"    deactivate Index","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    [\u003c--EditCommand: throw CommandException()","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"else else","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"    EditCommand -\u003e Index: getZeroBased()","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"    activate Index","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"    Index -\u003e EditCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"    deactivate Index","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    EditCommand -\u003e EditCommand: createEditedPerson(personToEdit, editPersonDescriptor)","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"    alt model.hasPerson(editedPerson)","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"        EditCommand -\u003e Model: hasPerson(editedPerson)","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"        activate Model","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        Model -\u003e EditCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"        deactivate Model","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"        [\u003c--EditCommand: throw CommandException()","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"    else else","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"        EditCommand -\u003e Model : hasPerson(editedPerson)","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"        activate Model","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"        Model --\u003e EditCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"        EditCommand -\u003e Model : setPerson(personToEdit, editedPerson)","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"        Model --\u003e EditCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"        EditCommand -\u003e Model : updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"        Model --\u003e EditCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"        deactivate Model","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"        create CommandResult","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"        EditCommand -\u003e CommandResult","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"        activate CommandResult","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"        CommandResult --\u003e EditCommand : result","lastModifiedDate":"2024-04-15"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"        deactivate CommandResult","lastModifiedDate":"2024-04-15"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"        [\u003c--EditCommand : result","lastModifiedDate":"2024-04-15"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"        deactivate EditCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"    end","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"end","lastModifiedDate":"2024-04-15"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"alfaloo":73}},{"path":"docs/diagrams/EditPersonActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"@startuml","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"skin rose","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"start","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":":User enters command to edit doctor or patient;","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"if () then ([command is invalid])","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"    :Show error message\\nfor invalid command;","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"else ([else])","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":"    if () then ([missing required fields])","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"        :Show error message\\nfor missing required fields;","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"    else ([else])","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"        if () then ([Invalid person index detected])","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"            :Show error message\\nindicating invalid Person index;","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"            else ([else])","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"                 :Edit patient/doctor\\nfrom the persons list\\nalso updates any appointments\\nassociated with the edited patient/doctor;","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"                 :Update the \u0027person\u0027 panel\\nand appointments panel\\n in the GUI;","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"                 :Show success message\\nwith edited doctor/patient information;","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"        endif;","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"    endif","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"endif","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":"stop","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"@enduml","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"Alteqa":26}},{"path":"docs/diagrams/EditPersonSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"@startuml","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"!include style.puml","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"participant \"e:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"end box","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"end box","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"[-\u003e LogicManager : execute(\"edit i/...\")","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"activate LogicManager","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"edit i/...\")","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"activate AddressBookParser","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"create EditCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"AddressBookParser -\u003e EditCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":"activate EditCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"create EditCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"EditCommandParser -\u003e EditCommand : : parse(\"edit i/...\")","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"activate EditCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"EditCommand --\u003e EditCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"deactivate EditCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"EditCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"deactivate EditCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"Alteqa"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"EditCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"destroy EditCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"Alteqa"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"Alteqa"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"Alteqa"},"content":"LogicManager -\u003e EditCommand : execute()","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"Alteqa"},"content":"activate EditCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"Alteqa"},"content":"EditCommand -\u003e Model : setPerson(toEdit)","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"Alteqa"},"content":"activate Model","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"Alteqa"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"deactivate Model","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"Alteqa"},"content":"create CommandResult","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"Alteqa"},"content":"EditCommand -\u003e CommandResult","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"Alteqa"},"content":"activate CommandResult","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"Alteqa"},"content":"CommandResult --\u003e EditCommand : result","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"Alteqa"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"Alteqa"},"content":"EditCommand --\u003e LogicManager : result","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"Alteqa"},"content":"deactivate EditCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"Alteqa"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"Alteqa"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"Alteqa"},"content":"@enduml","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"Alteqa":65}},{"path":"docs/diagrams/FindActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"@startuml","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"skin rose","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"start","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":":User enters command to query a person,\\nthe person can be either a doctor or patient.;","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"if () then ([missing required fields])","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"    :Show error message\\nfor missing required fields;","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"else ([else])","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"    :Search the person from person list;","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"    :Update the \u0027person\u0027 panel\\nin the GUI to display the list;","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    :Show success message\\nwith found person(s) information;","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"endif","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"stop","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"@enduml","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"Kappaccinoh":20}},{"path":"docs/diagrams/FindPersonSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"@startuml","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"!include style.puml","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"participant \"e:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"end box","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"end box","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"[-\u003e LogicManager : execute(\"find ...\")","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"activate LogicManager","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"find ...\")","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"activate AddressBookParser","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"create FindCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"AddressBookParser -\u003e FindCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"activate FindCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"create FindCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"FindCommandParser -\u003e FindCommand : : parse(\"find ...\")","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"activate FindCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"FindCommand --\u003e FindCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"deactivate FindCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"FindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"deactivate FindCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"FindCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"destroy FindCommandParser","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"LogicManager -\u003e FindCommand : execute()","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"activate FindCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"FindCommand -\u003e Model : find(person)","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"activate Model","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"deactivate Model","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"create CommandResult","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"activate CommandResult","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"CommandResult --\u003e FindCommand : result","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"FindCommand --\u003e LogicManager : result","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"deactivate FindCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"Kappaccinoh"},"content":"@enduml","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"Kappaccinoh":65}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"skinparam arrowColor LOGIC_COLOR_T5","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"skinparam classBackgroundColor LOGIC_COLOR_T6","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic as LogicPackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"Parser Classes\" as ParserClasses{","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Storage {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"LogicManager -right-\u003e\"1\" ParserClasses","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"ParserClasses ..\u003e XYZCommand : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : \u003c\u003ccall\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"note right of XYZCommand: XYZCommand \u003d AddPatientCommand, \\nDeleteAppointmentCommand, etc","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"officialchengyud":3,"-":44}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"Class UniqueAppointmentList","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"Class \"{Abstract}\\nPerson\" as Person","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"Class Patient","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"Class Doctor","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"Class Appointment","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"Class AppointmentDate","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"Class AppointmentID","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"Class Type","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"Class NRIC","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"Class DoB","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"Class \"\u003c\u003cenumeration\u003e\u003e\\nType\\n\\nPatient\\nDoctor\"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"AddressBook *--\u003e \"1\" UniqueAppointmentList","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"UniquePersonList ---\u003e \"~* all\" Person","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"UniqueAppointmentList -down--\u003e \"~* all\" Appointment","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"Person *---\u003e Type","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"Person *---\u003e NRIC","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"Person *---\u003e Name","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"Person *---\u003e DoB","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"Person *---\u003e Phone","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"Doctor .right.|\u003e Person","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"Patient .--|\u003e Person","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"Appointment *--\u003e AppointmentDate","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"Appointment *--\u003e AppointmentID","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"Appointment *--\u003e \"2(Patient \u0026 Doctor)\" NRIC","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"ModelManager --\u003e \"~* filtered\" Appointment","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Kappaccinoh":29,"-":39}},{"path":"docs/diagrams/QueryDoctorActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"@startuml","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"skin rose","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"start","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":":User enters command to query doctor(s);","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"if () then ([missing required fields])","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"    :Show error message\\nfor missing required fields;","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"else ([else])","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"    :Search doctor(s) from person list;","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"    :Update the \u0027person\u0027 panel\\nin the GUI to display the list;","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    :Show success message\\nwith queried doctor(s) information;","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"endif","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"stop","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"@enduml","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"Kappaccinoh":20}},{"path":"docs/diagrams/QueryDoctorAppointmentActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"@startuml","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"skin rose","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"start","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":":User enters command to query appointment with the associated doctor;","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"if () then ([missing required fields])","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"    :Show error message\\nfor missing required fields;","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"else ([else])","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"    :Search Appointments(s) from person list;","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"    :Update the \u0027appointment\u0027 panel\\nin the GUI to display the list;","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    :Show success message\\nwith queried appointment information;","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"endif","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"stop","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"@enduml","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"Kappaccinoh":20}},{"path":"docs/diagrams/QueryPatientActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"@startuml","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"skin rose","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"start","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":":User enters command to query patient(s);","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"if () then ([missing required fields])","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"    :Show error message\\nfor missing required fields;","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"else ([else])","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"    :Search patient(s) from person list;","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"    :Update the \u0027person\u0027 panel\\nin the GUI to display the list;","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    :Show success message\\nwith queried patient(s) information;","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"endif","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"stop","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"@enduml","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"Kappaccinoh":20}},{"path":"docs/diagrams/QueryPatientAppointmentActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"@startuml","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"skin rose","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"start","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":":User enters command to query appointments with associated patient;","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"if () then ([missing required fields])","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"    :Show error message\\nfor missing required fields;","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"else ([else])","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"    :Search Appointment(s) from appointment list;","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"    :Update the \u0027appointment\u0027 panel\\nin the GUI to display the list;","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    :Show success message\\nwith queried appointment information;","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"endif","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"stop","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"@enduml","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"Kappaccinoh":20}},{"path":"docs/diagrams/QueryPatientCommandExecuteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"!include style.puml","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"participant \":QueryPatientCommand\" as QueryPatientCommand LOGIC_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"end box","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"box Commons LOGGER_COLOR_T1","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"participant \":Logger\" as Logger LOGGER_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"end box","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"end box","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"[-\u003e QueryPatientCommand : execute()","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"activate QueryPatientCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"QueryPatientCommand -\u003e Model : updateFilteredPersonList(PatientContainsKeywordsPredicate)","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"activate Model","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"Model --\u003e QueryPatientCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"deactivate Model","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"QueryPatientCommand -\u003e Logger: log(Level.INFO, \"Success\")","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"activate Logger","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"Logger -\u003e Logger: log","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"Logger -\u003e QueryPatientCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"deactivate Logger","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"create CommandResult","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"QueryPatientCommand -\u003e CommandResult","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"activate CommandResult","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"CommandResult --\u003e QueryPatientCommand : result","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"[\u003c--QueryPatientCommand : result","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"deactivate QueryPatientCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"alfaloo":43,"Kappaccinoh":1}},{"path":"docs/diagrams/QueryPersonActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"skin rose","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"start","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":":User enters command to query doctor or patient;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"if () then ([missing required fields])","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"    :Show error message\\nfor missing required fields;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":"else ([else])","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"    :Search Doctor/Patient from person list;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"    :Update the \u0027person\u0027 panel\\nin the GUI to display the list;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"    :Show success message\\nwith removed doctor/patient information;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"endif","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"stop","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"Alteqa":20}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"Class AppointmentListPanel","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"Class AppointmentCard","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"MainWindow *-down-\u003e \"1\" AppointmentListPanel","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"AppointmentListPanel -down-\u003e \"*\" AppointmentCard","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"AppointmentListPanel --|\u003e UiPart","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"AppointmentCard --|\u003e UiPart","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"AppointmentCard ..\u003e Model","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"AppointmentListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":60,"ararchch":9}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    class State1 as \"\u003cu\u003emc0:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    class State2 as \"\u003cu\u003emc1:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    class State3 as \"\u003cu\u003emc2:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"alfaloo":3,"-":18}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    class State1 as \"\u003cu\u003emc0:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    class State2 as \"\u003cu\u003emc1:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    class State3 as \"\u003cu\u003emc2:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"alfaloo":3,"-":20}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"title After command \"addpatient i/S1234567A n/John Doe d/2003-01-30 p/98765432\"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    class State1 as \"\u003cu\u003emc0:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    class State2 as \"\u003cu\u003emc1:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    class State3 as \"\u003cu\u003emc2:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"alfaloo":4,"-":17}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    class State1 as \"\u003cu\u003emc0:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    class State2 as \"\u003cu\u003emc1:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    class State3 as \"\u003cu\u003emc2:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"alfaloo":3,"-":18}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    class State1 as \"\u003cu\u003emc0:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    class State2 as \"\u003cu\u003emc1:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    class State3 as \"\u003cu\u003emc2:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"alfaloo":3,"-":18}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    class State1 as \"\u003cu\u003emc0:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    class State2 as \"\u003cu\u003emc1:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    class State3 as \"\u003cu\u003emc3:MediCLI\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"note right on link: State mc2 deleted.","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"alfaloo":4,"-":18}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"!define LOGIC_COLOR_T5 #3260a8","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"!define LOGIC_COLOR_T6 #267afc","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"!define LOGGER_COLOR #cc0099","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"!define LOGGER_COLOR_T1 #ff99ff","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"skinparam Package {","lastModifiedDate":"2023-07-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    BackgroundColor #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2023-07-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    FontSize 16","lastModifiedDate":"2023-07-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    FontSize 15","lastModifiedDate":"2023-07-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle bold","lastModifiedDate":"2023-07-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"alfaloo":3,"officialchengyud":2,"-":79}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"title: MediCLI","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"**MediCLI is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"* If you are interested in using MediCLI, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"* If you are interested about developing MediCLI, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Alteqa":4,"-":15}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Type;","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"            AddressBook ab \u003d (AddressBook) initialData;","lastModifiedDate":"2024-04-10"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"            for (Appointment appt : initialData.getAppointmentList()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"                try {","lastModifiedDate":"2024-04-10"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"                    Person doctor \u003d ab.getPersonByNric(appt.getDoctorNric());","lastModifiedDate":"2024-04-10"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"                    Person patient \u003d ab.getPersonByNric(appt.getPatientNric());","lastModifiedDate":"2024-04-10"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"                    if (!(doctor.getType() \u003d\u003d Type.DOCTOR) || !(patient.getType() \u003d\u003d Type.PATIENT)) {","lastModifiedDate":"2024-04-10"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"                        throw new PersonNotFoundException();","lastModifiedDate":"2024-04-10"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"                    }","lastModifiedDate":"2024-04-10"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"                } catch (PersonNotFoundException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"                    initialData \u003d new AddressBook();","lastModifiedDate":"2024-04-10"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"                    break;","lastModifiedDate":"2024-04-10"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"                }","lastModifiedDate":"2024-04-10"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"alfaloo":18,"Kappaccinoh":1,"-":185}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    private static final String LOG_FILE \u003d \"medicli.log\";","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"alfaloo":1,"-":105}},{"path":"src/main/java/seedu/address/commons/util/IdUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import java.util.EnumMap;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import java.util.Random;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import jdk.jshell.spi.ExecutionControl;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":" * Generates unique  String IDs for patients, doctors, and appointments.","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":" *","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":" * At the moment the ID util is underutilised, but we have kept it in the code for future adaptation.","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":" * When the class was orignially defined, we envisioned it being essential to our use case, however, as development","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":" * progressed, we realised that it would not add much significant value at least until v1.4 of our product.","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":" * However, it can serve a purpose down the line, so we have left it in, despite it not being fleshed out completely.","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":" *","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":" * Currently only appointments are assigned an ID upon being created, but they ID itself does not serve a purpose.","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"public class IdUtil {","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"     * Enum containing all possible entity types in our system.","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"     * Associated characters are the first letter of each type of entity.","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"    public enum Entities {","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"        PATIENT(\"p\"),","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"        DOCTOR(\"d\"),","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"        APPOINTMENT(\"a\");","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"        private final String letter;","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"        Entities(String letter) {","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"            this.letter \u003d letter;","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"        /**","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"         * Returns letter associated with entity.","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"         * @return String letter","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"         */","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"        public String getLetter() {","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"            return letter;","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"        /**","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"         * Gets entity object associated with character.","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"         *","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"         * @param c character in question","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"         * @return Entities entity object associated with input character","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"         */","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"        protected static Entities getEntityFromChar(char c) {","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"            if (c \u003d\u003d \u0027a\u0027) {","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"                return Entities.APPOINTMENT;","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"            } else if (c \u003d\u003d \u0027p\u0027) {","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"                return Entities.PATIENT;","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"            } else if (c \u003d\u003d \u0027d\u0027) {","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"                return Entities.DOCTOR;","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"            throw new IllegalArgumentException(\"Invalid character input - no corresponding entity\");","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"    // EnumMap storing entities and their corresponding used up ids.","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"    private static final EnumMap\u003cEntities, HashSet\u003cString\u003e\u003e allIds \u003d new EnumMap\u003c\u003e(Entities.class);","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"     * Generates a new id based on input entity.","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"     * @param entity type of id to generate.","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"     * @return String id.","lastModifiedDate":"2024-04-15"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"    public static String generateNewId(Entities entity) {","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"        HashSet\u003cString\u003e idSet \u003d allIds.get(entity);","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"        if (idSet \u003d\u003d null) {","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"            idSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"            allIds.put(entity, idSet);","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"        String initId \u003d String.valueOf(random.nextInt(90000000) + 10000000);","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"        while (idSet.contains(initId)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"            initId \u003d String.valueOf(random.nextInt(90000000) + 10000000);;","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"        idSet.add(initId);","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"        assert initId.length() \u003d\u003d 8 : \"All numeric portions of IDs must be 8 digits long\";","lastModifiedDate":"2024-04-15"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"        return entity.getLetter() + initId;","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"     * Deletes Id that is inputted.","lastModifiedDate":"2024-04-15"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"     * @param id String id to delete.","lastModifiedDate":"2024-04-15"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"    public static void deleteId(String id) {","lastModifiedDate":"2024-03-13"},{"lineNumber":98,"author":{"gitId":"ararchch"},"content":"        requireNonNull(id);","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"        char firstChar \u003d id.substring(0, 1).charAt(0);","lastModifiedDate":"2024-04-15"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"        assert firstChar \u003d\u003d \u0027a\u0027 || firstChar \u003d\u003d \u0027p\u0027 || firstChar \u003d\u003d \u0027d\u0027 : \"IDs can only start with these 3 letters\";","lastModifiedDate":"2024-04-15"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"        Entities entity \u003d Entities.getEntityFromChar(firstChar);","lastModifiedDate":"2024-04-15"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"        HashSet\u003cString\u003e idSet \u003d allIds.get(entity);","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"        idSet.remove(id.substring(1, id.length()));","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":105,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"ararchch"},"content":"     * Returns allIds as an unmodifiable map.","lastModifiedDate":"2024-04-15"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"     * @return unmodifiable map containing ids.","lastModifiedDate":"2024-04-15"},{"lineNumber":110,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"ararchch"},"content":"    public static boolean hasId(String id) {","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"        requireNonNull(id);","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"ararchch"},"content":"        Entities entity \u003d Entities.getEntityFromChar(id.substring(0, 1).charAt(0));","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"ararchch"},"content":"        HashSet\u003cString\u003e idSet \u003d allIds.get(entity);","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"ararchch"},"content":"        return idSet.contains(id.substring(1, id.length()));","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"ararchch"},"content":"     * Updates map with initial values from storage.","lastModifiedDate":"2024-04-15"},{"lineNumber":120,"author":{"gitId":"ararchch"},"content":"     * To be implemented in the future as it does not affect or impact current functionality.","lastModifiedDate":"2024-04-15"},{"lineNumber":121,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":122,"author":{"gitId":"ararchch"},"content":"     * @throws ExecutionControl.NotImplementedException as it is not implemented yet and shouldn\u0027t be used.","lastModifiedDate":"2024-04-15"},{"lineNumber":123,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":124,"author":{"gitId":"ararchch"},"content":"    public static void initalMapUpdate() throws ExecutionControl.NotImplementedException {","lastModifiedDate":"2024-03-13"},{"lineNumber":125,"author":{"gitId":"ararchch"},"content":"        throw new ExecutionControl.NotImplementedException(\"to be implemented\");","lastModifiedDate":"2024-03-13"},{"lineNumber":126,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":127,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"ararchch":128}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"     * Checks if the given sentence contains the specified substring, ignoring case.","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"     * @param sentence  The sentence to search within.","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"     * @param substring The substring to search for.","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"     * @return True if the sentence contains the substring, ignoring case; false otherwise.","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"     * @throws NullPointerException     if either the sentence or the substring is null.","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"     * @throws IllegalArgumentException if the substring parameter is empty.","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"    public static boolean containsSubstringIgnoreCase(String sentence, String substring) {","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"        requireNonNull(substring);","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"        String preppedSubstring \u003d substring.trim();","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"        checkArgument(!preppedSubstring.isEmpty(), \"Substring parameter cannot be empty\");","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"        String preppedSentence \u003d sentence.toLowerCase();","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"        String preppedSubstringLower \u003d preppedSubstring.toLowerCase();","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"        return preppedSentence.contains(preppedSubstringLower);","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Kappaccinoh":22,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"    /** Returns an unmodifiable view of the filtered list of appointments */","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Kappaccinoh":3,"-":50,"ararchch":1}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"Kappaccinoh"},"content":"        return model.getFilteredAppointmentList();","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Kappaccinoh":2,"-":87,"ararchch":4}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"    public static final String MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX \u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"                \"The appointment index provided is invalid\";","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"    public static final String MESSAGE_APPOINTMENTS_LISTED_OVERVIEW \u003d \"%1$d appointments listed!\";","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"        builder.append(\"NRIC: \")","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"                .append(person.getNric())","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"                .append(\"; Name: \")","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"                .append(person.getName())","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"                .append(\"; DoB: \")","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"                .append(person.getDoB())","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"                .append(\";\");","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"     * Formats appointment for display in result box.","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"     * @param appointment the appointment in question.","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"     * @return String formatted string as per requirements.","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"    public static String format(Appointment appointment) {","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"        builder.append(\"Date: \")","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"Alteqa"},"content":"                .append(appointment.getAppointmentDateTime())","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"                .append(\"; Doctor: \")","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"                .append(appointment.getDoctorNric())","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"                .append(\"; Patient: \")","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"                .append(appointment.getPatientNric());","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"        return builder.toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Alteqa":1,"alfaloo":7,"officialchengyud":2,"Kappaccinoh":4,"-":44,"ararchch":14}},{"path":"src/main/java/seedu/address/logic/commands/AddAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTORNRIC;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENTNRIC;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.exceptions.InvalidAppointmentException;","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":" * Command to add an appointment to MediCLI","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"public class AddAppointmentCommand extends Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"    public static final String COMMAND_WORD \u003d \"addappt\";","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an appointment to the MediCLI system.\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"            + PREFIX_DATE + \"DATE-TIME \"","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"            + PREFIX_DOCTORNRIC + \"DOCTOR NRIC \"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"            + PREFIX_PATIENTNRIC + \"PATIENT NRIC\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"            + PREFIX_DATE + \"2024-04-09 10:15 \"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"            + PREFIX_DOCTORNRIC + \"S7777888T \"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"            + PREFIX_PATIENTNRIC + \"T0000111U\";","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Appointment added: %1$s\";","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"This appointment already exists in the MediCLI\";","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddAppointmentCommand.class);","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"    private final Appointment toAdd;","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"     * Creates an AddCommand to add the specified {@code Appointment}","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"    public AddAppointmentCommand(Appointment appointment) {","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"        toAdd \u003d appointment;","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"     * Method that executes command when called by performing checks then adding to the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"     * @param model the model in which the command is executed","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"     * @return CommandResult resulting from command execution","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"        logger.log(Level.INFO, \"going to add appointment\");","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"        if (model.hasAppointment(toAdd)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"            logger.log(Level.INFO, \"appointment was not added as it is in system\");","lastModifiedDate":"2024-04-15"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"            logger.log(Level.INFO, \"checking if appointment is valid\");","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"            if (!model.isValidAppointment(toAdd)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"                logger.log(Level.INFO, \"appointment was not added as it is invalid\");","lastModifiedDate":"2024-04-15"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"                throw new InvalidAppointmentException();","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"        } catch (PersonNotFoundException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"            throw new CommandException(\"The provided Doctor / Patient is not registered in the system\");","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"        model.addAppointment(toAdd);","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"        logger.log(Level.INFO, \"appointment was added to system\");","lastModifiedDate":"2024-04-15"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"        if (!(other instanceof AddAppointmentCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"        AddAppointmentCommand otherAddCommand \u003d (AddAppointmentCommand) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"        return toAdd.isSameAppointment(otherAddCommand.toAdd);","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"ararchch"},"content":"                .toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Alteqa":1,"alfaloo":6,"Kappaccinoh":2,"ararchch":97}},{"path":"src/main/java/seedu/address/logic/commands/AddDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"public class AddDoctorCommand extends Command {","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"    public static final String COMMAND_WORD \u003d \"adddoctor\";","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a doctor to the address book.\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"            + PREFIX_NRIC + \"NRIC \"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"officialchengyud"},"content":"            + PREFIX_DOB + \"DOB \"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"            + PREFIX_PHONE + \"PHONE\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"            + PREFIX_NRIC + \"S1234567A \"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"officialchengyud"},"content":"            + PREFIX_DOB + \"2003-01-30 \"","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"            + PREFIX_PHONE + \"98765432\";","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New doctor added: %1$s\";","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(AddDoctorCommand.class);","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"    private final Doctor toAdd;","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"    public AddDoctorCommand(Doctor doctor) {","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"        requireNonNull(doctor);","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"officialchengyud"},"content":"        toAdd \u003d doctor;","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"officialchengyud"},"content":"            logger.log(Level.INFO, \"Duplicate person detected! (when executing command: adddoctor)\");","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"        logger.log(Level.INFO, \"Doctor successfully added (when executing command: adddoctor)\");","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"officialchengyud"},"content":"        if (!(other instanceof AddDoctorCommand)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"officialchengyud"},"content":"        AddDoctorCommand otherAddCommand \u003d (AddDoctorCommand) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"alfaloo":2,"officialchengyud":22,"Kappaccinoh":2,"-":61}},{"path":"src/main/java/seedu/address/logic/commands/AddPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":" * Adds a person to the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"public class AddPatientCommand extends Command {","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    public static final String COMMAND_WORD \u003d \"addpatient\";","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a patient to the address book.\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"            + PREFIX_NRIC + \"NRIC \"","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"            + PREFIX_DOB + \"DOB \"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"            + PREFIX_PHONE + \"PHONE\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"            + PREFIX_NRIC + \"S1234567A \"","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"            + PREFIX_DOB + \"2003-01-30 \"","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"            + PREFIX_PHONE + \"98765432\";","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New patient added: %1$s\";","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(AddPatientCommand.class);","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"    private final Patient toAdd;","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"    public AddPatientCommand(Patient patient) {","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"        requireNonNull(patient);","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"        toAdd \u003d patient;","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"            logger.log(Level.INFO, \"Duplicate person detected! (when executing command: addpatient)\");","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"        logger.log(Level.INFO, \"Patient successfully added (when executing command: addpatient)\");","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"        if (!(other instanceof AddPatientCommand)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"        AddPatientCommand otherAddCommand \u003d (AddPatientCommand) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"                .toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":85,"Kappaccinoh":2}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"MediCLI\u0027s storage has been cleared!\";","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kappaccinoh":1,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/DeleteAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.Main;","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":" * Deletes an appointment identified using it\u0027s displayed index from mediCLI.","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"public class DeleteAppointmentCommand extends Command {","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"    public static final String COMMAND_WORD \u003d \"deleteappt\";","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"            + \": Deletes the appointment identified by the index number used in the displayed appointment list.\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"officialchengyud"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"    public static final String MESSAGE_DELETE_APPOINTMENT_SUCCESS \u003d \"Deleted Appointment: %1$s\";","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"officialchengyud"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"    public DeleteAppointmentCommand(Index targetIndex) {","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"officialchengyud"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"        // Check for valid index","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"officialchengyud"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"            logger.log(Level.INFO, \"Specified index is not valid! (when executing command: deleteappt)\");","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"officialchengyud"},"content":"        Appointment appointmentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"officialchengyud"},"content":"        model.deleteAppointment(appointmentToDelete);","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"officialchengyud"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_APPOINTMENT_SUCCESS,","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"officialchengyud"},"content":"                Messages.format(appointmentToDelete)));","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"officialchengyud"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"officialchengyud"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"officialchengyud"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"officialchengyud"},"content":"            return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"officialchengyud"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"officialchengyud"},"content":"        if (!(other instanceof DeleteAppointmentCommand)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"officialchengyud"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"officialchengyud"},"content":"        DeleteAppointmentCommand otherDeleteCommand \u003d (DeleteAppointmentCommand) other;","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"officialchengyud"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"officialchengyud"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"officialchengyud"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"officialchengyud"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"officialchengyud"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"officialchengyud"},"content":"                .toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"officialchengyud":76,"Kappaccinoh":1,"ararchch":1}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.Main;","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Type;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"            + \"*Note that this also deletes all appointments associated with the person in the appointments list.\\n\"","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    public static final String MESSAGE_DELETE_PATIENT_SUCCESS \u003d \"Deleted Patient: %1$s\";","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"    public static final String MESSAGE_DELETE_DOCTOR_SUCCESS \u003d \"Deleted Doctor: %1$s\";","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"            logger.log(Level.INFO, \"Specified index is not valid! (when executing command: delete)\");","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"        logger.log(Level.INFO, \"Person succesfully deleted. (when executing command: delete)\");","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"        String message \u003d (personToDelete.getType() \u003d\u003d Type.PATIENT","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"                ? MESSAGE_DELETE_PATIENT_SUCCESS","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"                : MESSAGE_DELETE_DOCTOR_SUCCESS);","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"        return new CommandResult(String.format(message, Messages.format(personToDelete)));","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alfaloo":9,"officialchengyud":6,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/EditAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"import seedu.address.Main;","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"public class EditAppointmentCommand extends Command {","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"    public static final String COMMAND_WORD \u003d \"editappt\";","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the appointment identified \"","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"            + \"by the index number used in the displayed appointment list. \"","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"            + PREFIX_DATE + \"DATE\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"            + PREFIX_DATE + \"2024-04-09 10:00\";","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"    public static final String MESSAGE_EDIT_APPOINTMENT_SUCCESS \u003d \"Edited Appointment: %1$s\";","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"This appointment already exists in the address book.\";","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"Alteqa"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"    private final Index index;","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"    private final EditAppointmentDescriptor editAppointmentDescriptor;","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"     * @param editAppointmentDescriptor details to edit the person with","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"    public EditAppointmentCommand(Index index, EditAppointmentDescriptor editAppointmentDescriptor) {","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"        requireNonNull(editAppointmentDescriptor);","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"        this.editAppointmentDescriptor \u003d new EditAppointmentDescriptor(editAppointmentDescriptor);","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"Alteqa"},"content":"            logger.log(Level.INFO, \"Specified index is not valid! (when executing command: editappt)\");","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"        Appointment appointmentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"        Appointment editedAppointment \u003d createEditedAppointment(appointmentToEdit, editAppointmentDescriptor);","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"        if (appointmentToEdit.isSameAppointment(editedAppointment) \u0026\u0026 model.hasAppointment(editedAppointment)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"Alteqa"},"content":"            logger.log(Level.INFO, \"Duplicate appointment detected! (when executing command: editappt)\");","lastModifiedDate":"2024-04-15"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"        model.setAppointment(appointmentToEdit, editedAppointment);","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"Alteqa"},"content":"        logger.log(Level.INFO, \"Edit appointment success! (when executing command: editappt)\");","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_APPOINTMENT_SUCCESS, Messages.format(editedAppointment)));","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"     * Creates and returns a {@code Appointment} with modified details of {@code appointmentToEdit}.","lastModifiedDate":"2024-04-15"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"     * Modified appointment is edited with {@code editAppointmentDescriptor}.","lastModifiedDate":"2024-04-15"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"     * @param appointmentToEdit the appointment to edit.","lastModifiedDate":"2024-04-15"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"     * @param editAppointmentDescriptor the descriptor to edit according to.","lastModifiedDate":"2024-04-15"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"     * @return Appointment with the details of appointmentToEdit.","lastModifiedDate":"2024-04-15"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"     * @throws CommandException if new inputs are invalid.","lastModifiedDate":"2024-04-15"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"    private static Appointment createEditedAppointment(","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"            Appointment appointmentToEdit,","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"            EditAppointmentDescriptor editAppointmentDescriptor) throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"        assert appointmentToEdit !\u003d null;","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"        Nric doctorNric \u003d appointmentToEdit.getDoctorNric();","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"        Nric patientNric \u003d appointmentToEdit.getPatientNric();","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"Alteqa"},"content":"        AppointmentDateTime updatedDateTime \u003d editAppointmentDescriptor","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"Alteqa"},"content":"                .getDate().orElse(appointmentToEdit.getAppointmentDateTime());","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"ararchch"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"            return new Appointment(doctorNric, patientNric, updatedDateTime, false);","lastModifiedDate":"2024-04-15"},{"lineNumber":106,"author":{"gitId":"ararchch"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"ararchch"},"content":"            throw new CommandException(\"Unable to edit appointment due to invalid inputs\");","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"alfaloo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"alfaloo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"alfaloo"},"content":"            return true;","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"alfaloo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"alfaloo"},"content":"        if (!(other instanceof EditAppointmentCommand)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"alfaloo"},"content":"            return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":120,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"alfaloo"},"content":"        EditAppointmentCommand otherEditAppointmentCommand \u003d (EditAppointmentCommand) other;","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"alfaloo"},"content":"        return index.equals(otherEditAppointmentCommand.index)","lastModifiedDate":"2024-03-26"},{"lineNumber":124,"author":{"gitId":"alfaloo"},"content":"                \u0026\u0026 editAppointmentDescriptor.equals(otherEditAppointmentCommand.editAppointmentDescriptor);","lastModifiedDate":"2024-03-26"},{"lineNumber":125,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"alfaloo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"alfaloo"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"alfaloo"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-26"},{"lineNumber":131,"author":{"gitId":"alfaloo"},"content":"                .add(\"editAppointmentDescriptor\", editAppointmentDescriptor)","lastModifiedDate":"2024-03-26"},{"lineNumber":132,"author":{"gitId":"alfaloo"},"content":"                .toString();","lastModifiedDate":"2024-03-26"},{"lineNumber":133,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":134,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":135,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":136,"author":{"gitId":"alfaloo"},"content":"     * Stores the details to edit the appointment with. Each non-empty field value will replace the","lastModifiedDate":"2024-03-26"},{"lineNumber":137,"author":{"gitId":"alfaloo"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2024-03-26"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":139,"author":{"gitId":"alfaloo"},"content":"    public static class EditAppointmentDescriptor {","lastModifiedDate":"2024-03-26"},{"lineNumber":140,"author":{"gitId":"alfaloo"},"content":"        private Nric doctorNric;","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"alfaloo"},"content":"        private Nric patientNric;","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"Alteqa"},"content":"        private AppointmentDateTime apptdatetime;","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":144,"author":{"gitId":"alfaloo"},"content":"        public EditAppointmentDescriptor() {}","lastModifiedDate":"2024-03-26"},{"lineNumber":145,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":146,"author":{"gitId":"alfaloo"},"content":"        /**","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"alfaloo"},"content":"         * Copy constructor.","lastModifiedDate":"2024-03-26"},{"lineNumber":148,"author":{"gitId":"alfaloo"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-26"},{"lineNumber":149,"author":{"gitId":"alfaloo"},"content":"         */","lastModifiedDate":"2024-03-26"},{"lineNumber":150,"author":{"gitId":"alfaloo"},"content":"        public EditAppointmentDescriptor(EditAppointmentDescriptor toCopy) {","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"alfaloo"},"content":"            if (toCopy \u003d\u003d null) { // Defensive Coding","lastModifiedDate":"2024-04-15"},{"lineNumber":152,"author":{"gitId":"alfaloo"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2024-04-15"},{"lineNumber":153,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-04-15"},{"lineNumber":154,"author":{"gitId":"Alteqa"},"content":"            setDateTime(toCopy.apptdatetime);","lastModifiedDate":"2024-04-03"},{"lineNumber":155,"author":{"gitId":"alfaloo"},"content":"            setDoctorNric(toCopy.doctorNric);","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"alfaloo"},"content":"            setPatientNric(toCopy.patientNric);","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":158,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":159,"author":{"gitId":"alfaloo"},"content":"        /**","lastModifiedDate":"2024-03-26"},{"lineNumber":160,"author":{"gitId":"alfaloo"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2024-03-26"},{"lineNumber":161,"author":{"gitId":"alfaloo"},"content":"         */","lastModifiedDate":"2024-03-26"},{"lineNumber":162,"author":{"gitId":"alfaloo"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2024-03-26"},{"lineNumber":163,"author":{"gitId":"Alteqa"},"content":"            return CollectionUtil.isAnyNonNull(apptdatetime);","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":165,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":166,"author":{"gitId":"Alteqa"},"content":"        public void setDateTime(AppointmentDateTime dateTime) {","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"Alteqa"},"content":"            this.apptdatetime \u003d dateTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":169,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":170,"author":{"gitId":"Alteqa"},"content":"        public Optional\u003cAppointmentDateTime\u003e getDate() {","lastModifiedDate":"2024-04-03"},{"lineNumber":171,"author":{"gitId":"Alteqa"},"content":"            return Optional.ofNullable(apptdatetime);","lastModifiedDate":"2024-04-03"},{"lineNumber":172,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":173,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":174,"author":{"gitId":"alfaloo"},"content":"        public void setDoctorNric(Nric nric) {","lastModifiedDate":"2024-03-27"},{"lineNumber":175,"author":{"gitId":"alfaloo"},"content":"            this.doctorNric \u003d nric;","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":177,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"alfaloo"},"content":"        public Optional\u003cNric\u003e getDoctorNric() {","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"alfaloo"},"content":"            return Optional.ofNullable(doctorNric);","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"alfaloo"},"content":"        public void setPatientNric(Nric nric) {","lastModifiedDate":"2024-03-27"},{"lineNumber":183,"author":{"gitId":"alfaloo"},"content":"            this.patientNric \u003d nric;","lastModifiedDate":"2024-03-27"},{"lineNumber":184,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":185,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"alfaloo"},"content":"        public Optional\u003cNric\u003e getPatientNric() {","lastModifiedDate":"2024-03-27"},{"lineNumber":187,"author":{"gitId":"alfaloo"},"content":"            return Optional.ofNullable(patientNric);","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"alfaloo"},"content":"        @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":191,"author":{"gitId":"alfaloo"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2024-03-26"},{"lineNumber":192,"author":{"gitId":"alfaloo"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-26"},{"lineNumber":193,"author":{"gitId":"alfaloo"},"content":"                return true;","lastModifiedDate":"2024-03-26"},{"lineNumber":194,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":195,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":196,"author":{"gitId":"alfaloo"},"content":"            // instanceof handles nulls","lastModifiedDate":"2024-03-26"},{"lineNumber":197,"author":{"gitId":"alfaloo"},"content":"            if (!(other instanceof EditAppointmentDescriptor)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":198,"author":{"gitId":"alfaloo"},"content":"                return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":199,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":200,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":201,"author":{"gitId":"alfaloo"},"content":"            EditAppointmentDescriptor otherEditAppointmentDescriptor \u003d (EditAppointmentDescriptor) other;","lastModifiedDate":"2024-03-26"},{"lineNumber":202,"author":{"gitId":"Alteqa"},"content":"            return Objects.equals(apptdatetime, otherEditAppointmentDescriptor.apptdatetime)","lastModifiedDate":"2024-04-03"},{"lineNumber":203,"author":{"gitId":"alfaloo"},"content":"                    \u0026\u0026 Objects.equals(doctorNric, otherEditAppointmentDescriptor.doctorNric)","lastModifiedDate":"2024-03-27"},{"lineNumber":204,"author":{"gitId":"alfaloo"},"content":"                    \u0026\u0026 Objects.equals(patientNric, otherEditAppointmentDescriptor.patientNric);","lastModifiedDate":"2024-03-27"},{"lineNumber":205,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":206,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":207,"author":{"gitId":"alfaloo"},"content":"        @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":208,"author":{"gitId":"alfaloo"},"content":"        public String toString() {","lastModifiedDate":"2024-03-26"},{"lineNumber":209,"author":{"gitId":"alfaloo"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-03-26"},{"lineNumber":210,"author":{"gitId":"Alteqa"},"content":"                    .add(\"apptdatetime\", apptdatetime)","lastModifiedDate":"2024-04-03"},{"lineNumber":211,"author":{"gitId":"alfaloo"},"content":"                    .toString();","lastModifiedDate":"2024-03-26"},{"lineNumber":212,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":213,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":214,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"Alteqa":21,"alfaloo":175,"Kappaccinoh":1,"ararchch":17}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"import seedu.address.Main;","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.appointment.AppointmentContainsDoctorPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.appointment.AppointmentContainsPatientPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.person.DoB;","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":" * Editcommand class enables user to edit a doctor or patient in the person list","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"Alteqa"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the patient or doctor identified \"","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"            + \"[\" + PREFIX_NRIC + \"NRIC] \"","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"            + \"[\" + PREFIX_DOB + \"DOB]\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"Alteqa"},"content":"            + PREFIX_NRIC + \"T0123452K\";","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"Alteqa"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"Alteqa"},"content":"            logger.log(Level.WARNING, \"Index not within valid parameters! (when executing command: edit)\");","lastModifiedDate":"2024-04-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"Alteqa"},"content":"        assert editedPerson !\u003d null;","lastModifiedDate":"2024-04-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"Alteqa"},"content":"            logger.log(Level.WARNING, \"Duplicate person detected! (when executing command: edit)\");","lastModifiedDate":"2024-04-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"        AppointmentContainsDoctorPredicate predicateDoctor \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"                new AppointmentContainsDoctorPredicate(Arrays.asList(personToEdit.getNric().nric));","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"        model.updateFilteredAppointmentList(predicateDoctor);","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"        for (Appointment appt : model.getFilteredAppointmentList()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"            if (appt.getDoctorNric().equals(personToEdit.getNric())) {","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"                appt.setDoctorNric(editedPerson.getNric());","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"Alteqa"},"content":"                assert appt.getDoctorNric() \u003d\u003d editedPerson.getNric();","lastModifiedDate":"2024-04-15"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"        AppointmentContainsPatientPredicate predicatePatient \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"alfaloo"},"content":"                new AppointmentContainsPatientPredicate(Arrays.asList(personToEdit.getNric().nric));","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"alfaloo"},"content":"        model.updateFilteredAppointmentList(predicatePatient);","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"alfaloo"},"content":"        for (Appointment appt : model.getFilteredAppointmentList()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"alfaloo"},"content":"            if (appt.getPatientNric().equals(personToEdit.getNric())) {","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"alfaloo"},"content":"                appt.setPatientNric(editedPerson.getNric());","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"Alteqa"},"content":"                assert appt.getPatientNric() \u003d\u003d editedPerson.getNric();","lastModifiedDate":"2024-04-15"},{"lineNumber":118,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"alfaloo"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"Alteqa"},"content":"        logger.log(Level.INFO, \"Edit person success! (when executing command: edit)\");","lastModifiedDate":"2024-04-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2024-03-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2024-03-31"},{"lineNumber":134,"author":{"gitId":"Alteqa"},"content":"        Nric updatedNric \u003d editPersonDescriptor.getNric().orElse(personToEdit.getNric());","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"Alteqa"},"content":"        DoB updatedDob \u003d editPersonDescriptor.getDob().orElse(personToEdit.getDoB());","lastModifiedDate":"2024-03-31"},{"lineNumber":136,"author":{"gitId":"Alteqa"},"content":"        if (personToEdit instanceof Patient) {","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"Alteqa"},"content":"            return new Patient(updatedNric, updatedName, updatedDob, updatedPhone);","lastModifiedDate":"2024-03-31"},{"lineNumber":138,"author":{"gitId":"Alteqa"},"content":"        } else if (personToEdit instanceof Doctor) {","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"Alteqa"},"content":"            return new Doctor(updatedNric, updatedName, updatedDob, updatedPhone);","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"Alteqa"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"Alteqa"},"content":"            return null;","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"Alteqa"},"content":"        private Nric nric;","lastModifiedDate":"2024-03-31"},{"lineNumber":177,"author":{"gitId":"Alteqa"},"content":"        private DoB dob;","lastModifiedDate":"2024-03-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"Alteqa"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2024-03-31"},{"lineNumber":180,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"alfaloo"},"content":"            if (toCopy \u003d\u003d null) { // Defensive Coding","lastModifiedDate":"2024-04-15"},{"lineNumber":188,"author":{"gitId":"alfaloo"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2024-04-15"},{"lineNumber":189,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-04-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":192,"author":{"gitId":"Alteqa"},"content":"            setNric(toCopy.nric);","lastModifiedDate":"2024-03-31"},{"lineNumber":193,"author":{"gitId":"Alteqa"},"content":"            setDob(toCopy.dob);","lastModifiedDate":"2024-03-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"Alteqa"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, nric, dob);","lastModifiedDate":"2024-04-01"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"Alteqa"},"content":"        public void setNric(Nric nric) {","lastModifiedDate":"2024-03-31"},{"lineNumber":220,"author":{"gitId":"Alteqa"},"content":"            this.nric \u003d nric;","lastModifiedDate":"2024-03-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"Alteqa"},"content":"        public Optional\u003cNric\u003e getNric() {","lastModifiedDate":"2024-03-31"},{"lineNumber":224,"author":{"gitId":"Alteqa"},"content":"            return Optional.ofNullable(nric);","lastModifiedDate":"2024-03-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"Alteqa"},"content":"        public void setDob(DoB dob) {","lastModifiedDate":"2024-03-31"},{"lineNumber":228,"author":{"gitId":"Alteqa"},"content":"            this.dob \u003d dob;","lastModifiedDate":"2024-03-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"Alteqa"},"content":"        public Optional\u003cDoB\u003e getDob() {","lastModifiedDate":"2024-03-31"},{"lineNumber":232,"author":{"gitId":"Alteqa"},"content":"            return Optional.ofNullable(dob);","lastModifiedDate":"2024-03-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"Alteqa"},"content":"            EditPersonDescriptor otherEditPatientDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2024-03-31"},{"lineNumber":247,"author":{"gitId":"Alteqa"},"content":"            return Objects.equals(name, otherEditPatientDescriptor.name)","lastModifiedDate":"2024-03-31"},{"lineNumber":248,"author":{"gitId":"Alteqa"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPatientDescriptor.phone)","lastModifiedDate":"2024-03-31"},{"lineNumber":249,"author":{"gitId":"Alteqa"},"content":"                    \u0026\u0026 Objects.equals(nric, otherEditPatientDescriptor.nric)","lastModifiedDate":"2024-03-31"},{"lineNumber":250,"author":{"gitId":"Alteqa"},"content":"                    \u0026\u0026 Objects.equals(dob, otherEditPatientDescriptor.dob);","lastModifiedDate":"2024-04-01"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":258,"author":{"gitId":"Alteqa"},"content":"                    .add(\"nric\", nric)","lastModifiedDate":"2024-03-31"},{"lineNumber":259,"author":{"gitId":"Alteqa"},"content":"                    .add(\"dob\", dob)","lastModifiedDate":"2024-03-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"},{"lineNumber":264,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"Alteqa":54,"alfaloo":30,"Kappaccinoh":1,"-":179}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons and all appointments\";","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kappaccinoh":3,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/QueryDoctorAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.appointment.AppointmentContainsDoctorPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":" * Represents a command for querying appointments for a specific doctor.","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":" * The command searches for appointments of doctors whose NRICs contain any of the specified keywords","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":" * (case-insensitive) and displays them as a list with index numbers.","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"public class QueryDoctorAppointmentCommand extends Command {","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"    public static final String COMMAND_WORD \u003d \"apptfordoctor\";","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"    private static final Logger logger \u003d Logger.getLogger(QueryDoctorAppointmentCommand.class.getName());","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all appointments of doctors whose \"","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"            + \"nrics contain any of the specified keywords (case-insensitive) and displays them as a \"","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"            + \"list with index numbers.\\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...(Keywords have to be the \"","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"            + \"exact NRICs of the doctor(s) in question)\\n\"","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"            + \"Example: \" + COMMAND_WORD + \" T1234567A S7654321A\";","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"    private final AppointmentContainsDoctorPredicate predicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"     * Constructs a QueryDoctorAppointmentCommand with the given predicate.","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"     * @param predicate The predicate to be used for querying doctor appointments.","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"     * @throws NullPointerException if the predicate is null.","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"    public QueryDoctorAppointmentCommand(AppointmentContainsDoctorPredicate predicate) {","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"        requireNonNull(predicate, \"Predicate cannot be null in QueryDoctorAppointmentCommand constructor.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"        requireNonNull(model, \"Model cannot be null in execute method of QueryDoctorAppointmentCommand.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"        logger.log(Level.INFO, \"Executing QueryDoctorAppointmentCommand\");","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"        model.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"        int numberOfAppointments \u003d model.getFilteredAppointmentList().size();","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"        logger.log(Level.INFO, \"Number of appointments found: \" + numberOfAppointments);","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"                String.format(Messages.MESSAGE_APPOINTMENTS_LISTED_OVERVIEW, numberOfAppointments));","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"        if (!(other instanceof QueryDoctorAppointmentCommand)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"        QueryDoctorAppointmentCommand otherQueryDoctorAppointmentCommand \u003d (QueryDoctorAppointmentCommand) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"Kappaccinoh"},"content":"        return predicate.equals(otherQueryDoctorAppointmentCommand.predicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"Kappaccinoh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"Kappaccinoh"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"Kappaccinoh"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"                .toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"alfaloo":1,"Kappaccinoh":76}},{"path":"src/main/java/seedu/address/logic/commands/QueryDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.person.DoctorContainsKeywordsPredicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":" * Queries and returns all doctors whose name matches the input string.","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":" * Query more than one name at a time is supported","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"public class QueryDoctorCommand extends Command {","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"    public static final String COMMAND_WORD \u003d \"doctor\";","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all doctors whose name, \"","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"            + \"NRIC, DoB or phone number contains any of \"","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(QueryDoctorCommand.class);","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"    private final DoctorContainsKeywordsPredicate predicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"    public QueryDoctorCommand(DoctorContainsKeywordsPredicate predicate) {","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Alteqa"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"        logger.log(Level.INFO, \"Executing QueryDoctorCommand\");","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"Alteqa"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"        int numberOfDoctors \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        logger.log(Level.INFO, \"Number of Doctor found: \" + numberOfDoctors);","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"Alteqa"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Alteqa"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Alteqa"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"Alteqa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Alteqa"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Alteqa"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Alteqa"},"content":"        if (!(other instanceof QueryDoctorCommand)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"Alteqa"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Alteqa"},"content":"        QueryDoctorCommand otherQueryDoctorCommand \u003d (QueryDoctorCommand) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"Alteqa"},"content":"        return predicate.equals(otherQueryDoctorCommand.predicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"Alteqa"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"Alteqa"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"Alteqa"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"Alteqa"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"Alteqa"},"content":"                .toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"Alteqa"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"Alteqa":54,"alfaloo":9,"officialchengyud":2,"Kappaccinoh":4}},{"path":"src/main/java/seedu/address/logic/commands/QueryPatientAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.appointment.AppointmentContainsPatientPredicate;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":" * Represents a command for querying appointments for a specific patient.","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":" * The command searches for appointments of patients whose NRICs contain any of the specified keywords","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":" * (case-insensitive) and displays them as a list with index numbers.","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"public class QueryPatientAppointmentCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"    public static final String COMMAND_WORD \u003d \"apptforpatient\";","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"    private static final Logger logger \u003d Logger.getLogger(QueryPatientAppointmentCommand.class.getName());","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all appointments of patients whose \"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"            + \"nrics contain any of the specified keywords (case-insensitive) and displays them as a \"","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"            + \"list with index numbers.\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...(Keywords have to be the \"","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"            + \"exact NRICs of the patient(s) in question)\\n\"","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"            + \"Example: \" + COMMAND_WORD + \" T1234567A S7654321A\";","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"    private final AppointmentContainsPatientPredicate predicate;","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"     * Constructs a QueryPatientAppointmentCommand with the given predicate.","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"     * @param predicate The predicate to be used for querying patient appointments.","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"     * @throws NullPointerException if the predicate is null.","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"    public QueryPatientAppointmentCommand(AppointmentContainsPatientPredicate predicate) {","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"        requireNonNull(predicate, \"Predicate cannot be null in QueryPatientAppointmentCommand constructor.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"        requireNonNull(model, \"Model cannot be null in execute method of QueryPatientAppointmentCommand.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"        logger.log(Level.INFO, \"Executing QueryPatientAppointmentCommand\");","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"        model.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"        int numberOfAppointments \u003d model.getFilteredAppointmentList().size();","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"        logger.log(Level.INFO, \"Number of appointments found: \" + numberOfAppointments);","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"                String.format(Messages.MESSAGE_APPOINTMENTS_LISTED_OVERVIEW, numberOfAppointments));","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"        if (!(other instanceof QueryPatientAppointmentCommand)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"            return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientAppointmentCommand otherQueryPatientAppointmentCommand \u003d (QueryPatientAppointmentCommand) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"        return predicate.equals(otherQueryPatientAppointmentCommand.predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"Kappaccinoh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"Kappaccinoh"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"Kappaccinoh"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"Kappaccinoh"},"content":"                .toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"alfaloo":2,"Kappaccinoh":74}},{"path":"src/main/java/seedu/address/logic/commands/QueryPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.person.PatientContainsKeywordsPredicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":" * Queries and returns all patients whose name, NRIC, DoB and phone number matches","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":" * or substring matches the input string.","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":" * Query more than one name, nric, date of birth and phone number at a time is supported","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"public class QueryPatientCommand extends Command {","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"    public static final String COMMAND_WORD \u003d \"patient\";","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"    private static final Logger logger \u003d Logger.getLogger(QueryPatientCommand.class.getName());","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all patients whose name, \"","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"            + \"NRIC, DoB or phone number contains any of \"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob ethan\";","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"    private final PatientContainsKeywordsPredicate predicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"     * Constructs a QueryPatientCommand with the given predicate.","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"     * @param predicate The predicate to be used for querying patients.","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"     * @throws NullPointerException if the predicate is null.","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"    public QueryPatientCommand(PatientContainsKeywordsPredicate predicate) {","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"        requireNonNull(predicate, \"Predicate cannot be null in QueryPatientCommand constructor.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"        requireNonNull(model, \"Model cannot be null in execute method of QueryPatientCommand.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"        logger.log(Level.INFO, \"Executing QueryPatientCommand\");","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"        int numberOfPatients \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"        logger.log(Level.INFO, \"Number of patients found: \" + numberOfPatients);","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, numberOfPatients));","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"        if (!(other instanceof QueryPatientCommand)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientCommand otherQueryPatientCommand \u003d (QueryPatientCommand) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"Kappaccinoh"},"content":"        return predicate.equals(otherQueryPatientCommand.predicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"Kappaccinoh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"Kappaccinoh"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"Kappaccinoh"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"                .toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Kappaccinoh":77}},{"path":"src/main/java/seedu/address/logic/parser/AddAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTORNRIC;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENTNRIC;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":" * Parses addAppointment Command.","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"public class AddAppointmentCommandParser {","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"     * Parses the given {@code String} of arguments in the context of the AddAppointmentCommand.","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"     * Returns an AddAppointmentCommand object for execution.","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    public AddAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DATE, PREFIX_DOCTORNRIC, PREFIX_PATIENTNRIC);","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"        if (!argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"                || !arePrefixesPresent(argMultimap, PREFIX_DATE, PREFIX_DOCTORNRIC, PREFIX_PATIENTNRIC)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_DATE, PREFIX_DOCTORNRIC, PREFIX_PATIENTNRIC);","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"        AppointmentDateTime appointmentDateTime \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"                ParserUtil.parseAppointmentDateTime(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"        Nric doctorNric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_DOCTORNRIC).get());","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"        Nric patientNric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_PATIENTNRIC).get());","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        Appointment appointment \u003d new Appointment(doctorNric, patientNric, appointmentDateTime, false);","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"        return new AddAppointmentCommand(appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given.","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Alteqa":3,"alfaloo":1,"ararchch":51}},{"path":"src/main/java/seedu/address/logic/parser/AddDoctorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.DoB;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"public class AddDoctorCommandParser implements Parser\u003cAddDoctorCommand\u003e {","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"    public AddDoctorCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NRIC, PREFIX_NAME, PREFIX_DOB, PREFIX_PHONE);","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NRIC, PREFIX_NAME, PREFIX_DOB, PREFIX_PHONE)","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDoctorCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"officialchengyud"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NRIC, PREFIX_NAME, PREFIX_DOB, PREFIX_PHONE);","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"        DoB dob \u003d ParserUtil.parseDoB(argMultimap.getValue(PREFIX_DOB).get());","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"        Doctor doctor \u003d new Doctor(nric, name, dob, phone);","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"        return new AddDoctorCommand(doctor);","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"officialchengyud":16,"-":40}},{"path":"src/main/java/seedu/address/logic/parser/AddPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.DoB;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"public class AddPatientCommandParser implements Parser\u003cAddPatientCommand\u003e {","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"    public AddPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NRIC, PREFIX_NAME, PREFIX_DOB, PREFIX_PHONE);","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NRIC, PREFIX_NAME, PREFIX_DOB, PREFIX_PHONE)","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NRIC, PREFIX_NAME, PREFIX_DOB, PREFIX_PHONE);","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"        DoB dob \u003d ParserUtil.parseDoB(argMultimap.getValue(PREFIX_DOB).get());","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        Patient patient \u003d new Patient(nric, name, dob, phone);","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"        return new AddPatientCommand(patient);","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":56}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryDoctorAppointmentCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryDoctorCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryPatientAppointmentCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryPatientCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"        case AddPatientCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"            return new AddPatientCommandParser().parse(arguments);","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"officialchengyud"},"content":"        case AddDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"officialchengyud"},"content":"            return new AddDoctorCommandParser().parse(arguments);","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"        case EditAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"            return new EditAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"Alteqa"},"content":"        case QueryDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"Alteqa"},"content":"            return new QueryDoctorCommandParser().parse(arguments);","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"Kappaccinoh"},"content":"        case QueryPatientCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"Kappaccinoh"},"content":"            return new QueryPatientCommandParser().parse(arguments);","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"        case AddAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-15"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"            return new AddAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2024-03-15"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":103,"author":{"gitId":"Kappaccinoh"},"content":"        case QueryDoctorAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"Kappaccinoh"},"content":"            return new QueryDoctorAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"Kappaccinoh"},"content":"        case QueryPatientAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"Kappaccinoh"},"content":"            return new QueryPatientAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"officialchengyud"},"content":"        case DeleteAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"officialchengyud"},"content":"            return new DeleteAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Alteqa":3,"alfaloo":6,"officialchengyud":6,"Kappaccinoh":17,"-":83,"ararchch":3}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"    public static final Prefix PREFIX_NRIC \u003d new Prefix(\"i/\");","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    public static final Prefix PREFIX_DOB \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"ad/\");","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"    public static final Prefix PREFIX_PATIENTNRIC \u003d new Prefix(\"pn/\");","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    public static final Prefix PREFIX_DOCTORNRIC \u003d new Prefix(\"dn/\");","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"alfaloo":4,"-":15,"ararchch":3}},{"path":"src/main/java/seedu/address/logic/parser/DeleteAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":" * Parses input arguments and creates a new DeleteAppointmentCommand object","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"public class DeleteAppointmentCommandParser implements Parser\u003cDeleteAppointmentCommand\u003e {","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteAppointmentCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"     * and returns a DeleteAppointmentCommand object for execution.","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"    public DeleteAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"            return new DeleteAppointmentCommand(index);","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"officialchengyud":30}},{"path":"src/main/java/seedu/address/logic/parser/EditAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"public class EditAppointmentCommandParser implements Parser\u003cEditAppointmentCommand\u003e {","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"    public EditAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DATE);","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"        Index index;","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"                    EditAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_DATE);","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"        EditAppointmentDescriptor editAppointmentDescriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"Alteqa"},"content":"            editAppointmentDescriptor.setDateTime(","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"Alteqa"},"content":"                    ParserUtil.parseAppointmentDateTime(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"        if (!editAppointmentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"            throw new ParseException(EditAppointmentCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"        return new EditAppointmentCommand(index, editAppointmentDescriptor);","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"Alteqa":2,"alfaloo":50}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_NRIC, PREFIX_DOB);","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_NRIC, PREFIX_DOB);","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"Alteqa"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"Alteqa"},"content":"        if (argMultimap.getValue(PREFIX_NRIC).isPresent()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"Alteqa"},"content":"            editPersonDescriptor.setNric(ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get()));","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"        if (argMultimap.getValue(PREFIX_DOB).isPresent()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"Alteqa"},"content":"            editPersonDescriptor.setDob(ParserUtil.parseDoB(argMultimap.getValue(PREFIX_DOB).get()));","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Alteqa":9,"alfaloo":1,"-":51}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.DoB;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"     * Parses the given National Registration Identification Card (NRIC) string into a {@code NRIC} object.","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"     * The input string is required to be non-null, and the parsing is performed after trimming any","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"     * leading or trailing spaces. If the trimmed NRIC string does not meet the validity constraints specified","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"     * in the {@code NRIC} class (as determined by {@link Nric#isValidNric(String)}), a {@code ParseException}","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"     * is thrown with the corresponding error message.","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"     * Example of a valid NRIC string: \"S1234567A\".","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"     * @param nric The National Registration Identification Card (NRIC) string to be parsed.","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"     * @return A {@code NRIC} object representing the parsed NRIC.","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"     * @throws ParseException If the input string is null, empty, or does not meet the validity constraints.","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"     * @see Nric#isValidNric(String)","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"     * @see Nric","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"    public static Nric parseNric(String nric) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"        String trimmedNric \u003d nric.trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"        if (!Nric.isValidNric(trimmedNric)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"            throw new ParseException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"        return new Nric(trimmedNric);","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"     * Parses the given date of birth (DoB) string into a {@code DoB} object.","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"     * The input string is required to be non-null, and the parsing is performed after trimming any leading","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"     * or trailing spaces. If the trimmed DoB string does not meet the validity constraints specified in the","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"     * {@code DoB} class (as determined by {@link DoB#isValidDoB(String)}), a {@code ParseException} is thrown","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"     * with the corresponding error message.","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"     * Example of a valid DoB string: \"3 January 2000\".","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"     * @param dob The date of birth string to be parsed.","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"     * @return A {@code DoB} object representing the parsed date of birth.","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"     * @throws ParseException If the input string is null, empty, or does not meet the validity constraints.","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"     * @see DoB#isValidDoB(String)","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"     * @see DoB","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"    public static DoB parseDoB(String dob) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"        requireNonNull(dob);","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"        String trimmedDoB \u003d dob.trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"        if (!DoB.isValidDoB(trimmedDoB)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"            throw new ParseException(DoB.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"        return new DoB(trimmedDoB);","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":151,"author":{"gitId":"ararchch"},"content":"     * Parses AppointmentDateTime from string to return an AppointmentDateTime object.","lastModifiedDate":"2024-04-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":153,"author":{"gitId":"ararchch"},"content":"     * @param apptDateTime String to parse.","lastModifiedDate":"2024-04-15"},{"lineNumber":154,"author":{"gitId":"ararchch"},"content":"     * @return instance of AppointmentDateTime.","lastModifiedDate":"2024-04-15"},{"lineNumber":155,"author":{"gitId":"ararchch"},"content":"     * @throws ParseException if string is invalid date.","lastModifiedDate":"2024-04-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":157,"author":{"gitId":"Alteqa"},"content":"    public static AppointmentDateTime parseAppointmentDateTime(String apptDateTime) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":158,"author":{"gitId":"Alteqa"},"content":"        requireNonNull(apptDateTime);","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"Alteqa"},"content":"        String trimmedDate \u003d apptDateTime.trim();","lastModifiedDate":"2024-04-03"},{"lineNumber":160,"author":{"gitId":"alfaloo"},"content":"        if (trimmedDate.length() \u003c 16) {","lastModifiedDate":"2024-04-10"},{"lineNumber":161,"author":{"gitId":"alfaloo"},"content":"            throw new ParseException(AppointmentDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":163,"author":{"gitId":"alfaloo"},"content":"        String datetime \u003d trimmedDate.substring(0, 11) + trimmedDate.substring(11).strip();","lastModifiedDate":"2024-04-05"},{"lineNumber":164,"author":{"gitId":"alfaloo"},"content":"        if (!AppointmentDateTime.isValidDate(datetime)) {","lastModifiedDate":"2024-04-05"},{"lineNumber":165,"author":{"gitId":"Alteqa"},"content":"            throw new ParseException(AppointmentDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":167,"author":{"gitId":"alfaloo"},"content":"        return new AppointmentDateTime(datetime);","lastModifiedDate":"2024-04-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Alteqa":5,"alfaloo":59,"-":99,"ararchch":6}},{"path":"src/main/java/seedu/address/logic/parser/QueryDoctorAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryDoctorAppointmentCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.appointment.AppointmentContainsDoctorPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":" * Parses input arguments and creates a new QueryDoctorAppointmentCommand object","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"public class QueryDoctorAppointmentCommandParser implements Parser\u003cQueryDoctorAppointmentCommand\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"    private static final Logger logger \u003d Logger.getLogger(QueryDoctorAppointmentCommandParser.class.getName());","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"     * Parses the given {@code String} of arguments in the context of the QueryDoctorAppointmentCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"     * and returns a QueryDoctorAppointmentCommand object for execution.","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"    public QueryDoctorAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"        logger.log(Level.INFO, \"Parsing QueryDoctorAppointmentCommand arguments: \" + args);","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, QueryDoctorAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"        logger.log(Level.INFO, \"Name keywords: \" + Arrays.toString(nameKeywords));","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"        assert nameKeywords.length \u003e 0 : \"Name keywords array cannot be empty\";","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"        return new QueryDoctorAppointmentCommand(new AppointmentContainsDoctorPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"Kappaccinoh":39}},{"path":"src/main/java/seedu/address/logic/parser/QueryDoctorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"import seedu.address.logic.commands.QueryDoctorCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.person.DoctorContainsKeywordsPredicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":" * Parses input arguments and creates a new QueryDoctorCommand object","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"public class QueryDoctorCommandParser implements Parser\u003cQueryDoctorCommand\u003e {","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"    public QueryDoctorCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, QueryDoctorCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"        return new QueryDoctorCommand(new DoctorContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Alteqa":30,"Kappaccinoh":3}},{"path":"src/main/java/seedu/address/logic/parser/QueryPatientAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryPatientAppointmentCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.appointment.AppointmentContainsPatientPredicate;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":" * Parses input arguments and creates a new QueryPatientAppointmentCommand object","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"public class QueryPatientAppointmentCommandParser implements Parser\u003cQueryPatientAppointmentCommand\u003e {","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"    private static final Logger logger \u003d Logger.getLogger(QueryPatientAppointmentCommandParser.class.getName());","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"     * Parses the given {@code String} of arguments in the context of the QueryPatientAppointmentCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"     * and returns a QueryPatientAppointmentCommand object for execution.","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"    public QueryPatientAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"        logger.log(Level.INFO, \"Parsing QueryPatientAppointmentCommand arguments: \" + args);","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, QueryPatientAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"        logger.log(Level.INFO, \"Name keywords: \" + Arrays.toString(nameKeywords));","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"        assert nameKeywords.length \u003e 0 : \"Name keywords array cannot be empty\";","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"        return new QueryPatientAppointmentCommand(new AppointmentContainsPatientPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Kappaccinoh":39}},{"path":"src/main/java/seedu/address/logic/parser/QueryPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryPatientCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.person.PatientContainsKeywordsPredicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":" * Parses input arguments and creates a new QueryPatientCommand object","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"public class QueryPatientCommandParser implements Parser\u003cQueryPatientCommand\u003e {","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"    private static final Logger logger \u003d Logger.getLogger(QueryPatientCommandParser.class.getName());","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"     * Parses the given {@code String} of arguments in the context of the QueryPatientCommand","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"     * and returns a QueryPatientCommand object for execution.","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"    public QueryPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"        logger.log(Level.INFO, \"Parsing QueryPatientCommand arguments: \" + args);","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, QueryPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"        logger.log(Level.INFO, \"Name keywords: \" + Arrays.toString(nameKeywords));","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"        assert nameKeywords.length \u003e 0 : \"Name keywords array cannot be empty\";","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"        try {","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"            return new QueryPatientCommand(new PatientContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"            throw new ParseException(e.getMessage(), e);","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Kappaccinoh":43}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.UniqueAppointmentList;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"    private final UniqueAppointmentList appointments;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"        appointments \u003d new UniqueAppointmentList();","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"officialchengyud"},"content":"     * Replaces the contents of the appointment list with {@code appointments}.","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"officialchengyud"},"content":"     * {@code appointments} must not contain duplicate appointments.","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) throws DuplicateAppointmentException {","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"officialchengyud"},"content":"        this.appointments.setAppointments(appointments);","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"     * Replaces the contents of the appointment list with {@code appointments}.","lastModifiedDate":"2024-04-15"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"     * This method does not throw exception because it is only called when resetting data.","lastModifiedDate":"2024-04-15"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"     * @param appointments the appointments to update with no duplicates.","lastModifiedDate":"2024-04-15"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"    public void setAppointmentsExistingBook(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"        this.appointments.setAppointmentsExistingBook(appointments);","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"        setAppointmentsExistingBook(newData.getAppointmentList());","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":98,"author":{"gitId":"ararchch"},"content":"     * Returns person (if any) with the provided NRIC in MediCLI.","lastModifiedDate":"2024-04-15"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"     * @param nricObj the NRIC to lookup.","lastModifiedDate":"2024-04-15"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"     * @return Person with corresponding NRIC.","lastModifiedDate":"2024-04-15"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"     * @throws PersonNotFoundException if no such Person exists.","lastModifiedDate":"2024-04-15"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"    public Person getPersonByNric(Nric nricObj) throws PersonNotFoundException {","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"ararchch"},"content":"        requireNonNull(nricObj);","lastModifiedDate":"2024-03-15"},{"lineNumber":106,"author":{"gitId":"ararchch"},"content":"        return persons.getPersonByNric(nricObj);","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"alfaloo"},"content":"     * Replaces the given appointment {@code target} in the list with {@code editedAppointment}.","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"alfaloo"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2024-03-26"},{"lineNumber":131,"author":{"gitId":"alfaloo"},"content":"     * The appointment identity of {@code editedAppointment} must not be the same","lastModifiedDate":"2024-03-26"},{"lineNumber":132,"author":{"gitId":"alfaloo"},"content":"     * as another existing appointment in the address book.","lastModifiedDate":"2024-03-26"},{"lineNumber":133,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":134,"author":{"gitId":"alfaloo"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2024-03-26"},{"lineNumber":135,"author":{"gitId":"alfaloo"},"content":"        requireNonNull(editedAppointment);","lastModifiedDate":"2024-03-26"},{"lineNumber":136,"author":{"gitId":"alfaloo"},"content":"        appointments.setAppointment(target, editedAppointment);","lastModifiedDate":"2024-03-26"},{"lineNumber":137,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"Kappaccinoh"},"content":"     * Removes {@code key} from this {@code AddressBook} and removes all appointments","lastModifiedDate":"2024-03-26"},{"lineNumber":141,"author":{"gitId":"Kappaccinoh"},"content":"     * which involve Person {@code key}, both patient and doctor.","lastModifiedDate":"2024-03-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":145,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cAppointment\u003e appointmentsToDelete \u003d getAppointmentByPerson(key);","lastModifiedDate":"2024-03-26"},{"lineNumber":146,"author":{"gitId":"Kappaccinoh"},"content":"        appointmentsToDelete.forEach(appointments::remove);","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"Kappaccinoh"},"content":"    public List\u003cAppointment\u003e getAppointmentByPerson(Person person) {","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"Kappaccinoh"},"content":"        return appointments.contains(person);","lastModifiedDate":"2024-03-26"},{"lineNumber":152,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":153,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":154,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":155,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":156,"author":{"gitId":"ararchch"},"content":"     * Adds the specified appointment to the list of appointments.","lastModifiedDate":"2024-04-15"},{"lineNumber":157,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":158,"author":{"gitId":"ararchch"},"content":"     * @param appointment The appointment to add to the list. It must not be null.","lastModifiedDate":"2024-04-15"},{"lineNumber":159,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":160,"author":{"gitId":"ararchch"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-14"},{"lineNumber":161,"author":{"gitId":"ararchch"},"content":"        appointments.add(appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":162,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":163,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":164,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":165,"author":{"gitId":"ararchch"},"content":"     * Removes the specified appointment from the list of appointments.","lastModifiedDate":"2024-04-15"},{"lineNumber":166,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":167,"author":{"gitId":"ararchch"},"content":"     * @param appointment The appointment to be removed from the list. It must not be null.","lastModifiedDate":"2024-04-15"},{"lineNumber":168,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":169,"author":{"gitId":"ararchch"},"content":"    public void deleteAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-14"},{"lineNumber":170,"author":{"gitId":"ararchch"},"content":"        appointments.remove(appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":171,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":172,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":173,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":174,"author":{"gitId":"ararchch"},"content":"     * Checks if the specified appointment is present in the list of appointments.","lastModifiedDate":"2024-04-15"},{"lineNumber":175,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":176,"author":{"gitId":"ararchch"},"content":"     * @param appointment The appointment to check in the list. It must not be null.","lastModifiedDate":"2024-04-15"},{"lineNumber":177,"author":{"gitId":"ararchch"},"content":"     * @return true if the appointment is present in the list, false otherwise.","lastModifiedDate":"2024-04-15"},{"lineNumber":178,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":179,"author":{"gitId":"ararchch"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-14"},{"lineNumber":180,"author":{"gitId":"ararchch"},"content":"        return appointments.contains(appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":181,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":182,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":183,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":198,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":199,"author":{"gitId":"ararchch"},"content":"    public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2024-03-16"},{"lineNumber":200,"author":{"gitId":"ararchch"},"content":"        return appointments.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-16"},{"lineNumber":201,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":202,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"alfaloo":12,"officialchengyud":7,"Kappaccinoh":8,"-":128,"ararchch":67}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"    Predicate\u003cAppointment\u003e PREDICATE_SHOW_ALL_APPOINTMENTS \u003d unused -\u003e true;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"     * Returns true if a person with the same identity as {@code person} exists in MediCLI.","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"     * Returns true if an appointment with the same identity as {@code appointment} exists in MediCLI.","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"    boolean hasAppointment(Appointment appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"     * {@code person} must not already exist in MediCLI.","lastModifiedDate":"2024-04-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"     * Deletes the given appointment.","lastModifiedDate":"2024-04-15"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"     * The appointment must exist in MediCLI.","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"    void deleteAppointment(Appointment appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"     * Adds the given appointment.","lastModifiedDate":"2024-04-15"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"     * {@code appointment} must not already exist in MediCLI.","lastModifiedDate":"2024-04-15"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"    void addAppointment(Appointment appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"     * Replaces the given appointment {@code target} with {@code editedAppointment}.","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"     * The appointment identity of {@code editedAppointment} must","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"     * not be the same as another existing appointment in the address book.","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"    void setAppointment(Appointment target, Appointment editedAppointment);","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":117,"author":{"gitId":"ararchch"},"content":"     * Checks if appointment is valid and returns boolean with the answer.","lastModifiedDate":"2024-04-15"},{"lineNumber":118,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":119,"author":{"gitId":"ararchch"},"content":"     * @param toAdd Appointment to check","lastModifiedDate":"2024-04-15"},{"lineNumber":120,"author":{"gitId":"ararchch"},"content":"     * @return boolean indicating is appointment is valid.","lastModifiedDate":"2024-04-15"},{"lineNumber":121,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":122,"author":{"gitId":"ararchch"},"content":"    boolean isValidAppointment(Appointment toAdd);","lastModifiedDate":"2024-03-15"},{"lineNumber":123,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"officialchengyud"},"content":"    /** Returns an unmodifiable view of the appointment list */","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"Kappaccinoh"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"Kappaccinoh"},"content":"     * Updates the filter of the filtered appointment list to filter by the given {@code predicate}.","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"Kappaccinoh"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"Kappaccinoh"},"content":"    void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"alfaloo":8,"officialchengyud":1,"Kappaccinoh":8,"-":85,"ararchch":30}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Type;","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"    private final FilteredList\u003cAppointment\u003e filteredAppointments;","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"        filteredAppointments \u003d new FilteredList\u003c\u003e(this.addressBook.getAppointmentList());","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":114,"author":{"gitId":"ararchch"},"content":"     * Checks if the specified appointment is present in the list of appointments.","lastModifiedDate":"2024-04-15"},{"lineNumber":115,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":116,"author":{"gitId":"ararchch"},"content":"     * @param appointment The appointment to check in the list. It must not be null.","lastModifiedDate":"2024-04-15"},{"lineNumber":117,"author":{"gitId":"ararchch"},"content":"     * @return true if the appointment is present in the list, false otherwise.","lastModifiedDate":"2024-04-15"},{"lineNumber":118,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":119,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"ararchch"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"ararchch"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"ararchch"},"content":"        return addressBook.hasAppointment(appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":126,"author":{"gitId":"ararchch"},"content":"     * Removes the specified appointment from the list of appointments.","lastModifiedDate":"2024-04-15"},{"lineNumber":127,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":128,"author":{"gitId":"ararchch"},"content":"     * @param appointment The appointment to be removed from the list. It must not be null.","lastModifiedDate":"2024-04-15"},{"lineNumber":129,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":130,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"ararchch"},"content":"    public void deleteAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"ararchch"},"content":"        addressBook.deleteAppointment(appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":136,"author":{"gitId":"ararchch"},"content":"     * Adds the specified appointment to the list of appointments.","lastModifiedDate":"2024-04-15"},{"lineNumber":137,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":138,"author":{"gitId":"ararchch"},"content":"     * @param appointment The appointment to add to the list. It must not be null.","lastModifiedDate":"2024-04-15"},{"lineNumber":139,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":140,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"ararchch"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-14"},{"lineNumber":142,"author":{"gitId":"ararchch"},"content":"        addressBook.addAppointment(appointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"Kappaccinoh"},"content":"        updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":153,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":154,"author":{"gitId":"alfaloo"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2024-03-26"},{"lineNumber":155,"author":{"gitId":"alfaloo"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2024-03-26"},{"lineNumber":156,"author":{"gitId":"alfaloo"},"content":"        addressBook.setAppointment(target, editedAppointment);","lastModifiedDate":"2024-03-26"},{"lineNumber":157,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":158,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":170,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":171,"author":{"gitId":"Kappaccinoh"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"Kappaccinoh"},"content":"        return filteredAppointments;","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":174,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":181,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"Kappaccinoh"},"content":"    public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"Kappaccinoh"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"Kappaccinoh"},"content":"        filteredAppointments.setPredicate(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":205,"author":{"gitId":"ararchch"},"content":"     * Checks if an appointment is valid by comparing if doctor and patient involved exist.","lastModifiedDate":"2024-03-16"},{"lineNumber":206,"author":{"gitId":"ararchch"},"content":"     * @param appointment appointment to check validity of.","lastModifiedDate":"2024-04-15"},{"lineNumber":207,"author":{"gitId":"ararchch"},"content":"     * @return boolean indicating if appointment is valid.","lastModifiedDate":"2024-04-15"},{"lineNumber":208,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":209,"author":{"gitId":"alfaloo"},"content":"    public boolean isValidAppointment(Appointment appointment) throws PersonNotFoundException {","lastModifiedDate":"2024-04-03"},{"lineNumber":210,"author":{"gitId":"Kappaccinoh"},"content":"        Nric doctorNric \u003d appointment.getDoctorNric();","lastModifiedDate":"2024-03-20"},{"lineNumber":211,"author":{"gitId":"ararchch"},"content":"        Nric patientNric \u003d appointment.getPatientNric();","lastModifiedDate":"2024-03-15"},{"lineNumber":212,"author":{"gitId":"ararchch"},"content":"        Person doctor \u003d addressBook.getPersonByNric(doctorNric);","lastModifiedDate":"2024-03-15"},{"lineNumber":213,"author":{"gitId":"ararchch"},"content":"        Person patient \u003d addressBook.getPersonByNric(patientNric);","lastModifiedDate":"2024-03-15"},{"lineNumber":214,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":215,"author":{"gitId":"ararchch"},"content":"        if (doctor.getType() \u003d\u003d Type.DOCTOR \u0026\u0026 patient.getType() \u003d\u003d Type.PATIENT) {","lastModifiedDate":"2024-03-15"},{"lineNumber":216,"author":{"gitId":"ararchch"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":217,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":218,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":219,"author":{"gitId":"ararchch"},"content":"        return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":220,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"alfaloo":8,"Kappaccinoh":12,"-":148,"ararchch":53}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"     * Returns an unmodifiable view of the appointments list.","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"     * This list will not contain any duplicate appointments.","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    ObservableList\u003cAppointment\u003e getAppointmentList();","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":17,"ararchch":7}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"medicli.json\");","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"alfaloo":1,"-":87}},{"path":"src/main/java/seedu/address/model/appointment/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.exceptions.InvalidAppointmentException;","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":" * Appointment class that describes an appointment in MediCLI.","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"public class Appointment {","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(Appointment.class);","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"    private static final String MESSAGE_CONSTRAINTS_INVALID_DATE \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"            \"Appointments should not be scheduled in the past.\";","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"    // The doctor in charge of the appointment","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"    private Nric doctorNric;","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"    // The patient benefiting from the appointment","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    private Nric patientNric;","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"    // The date of the appointment","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"    private final AppointmentDateTime appointmentDateTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"     * Constructs a new appointment instance","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"     * @param doctorNric doctor in charge","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"     * @param patientNric patient of the appointment","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Alteqa"},"content":"     * @param appointmentDateTime date of the appointment","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"     * @param isInitialised a boolean value indication whether this was initialised by the json file","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"     * @throws ParseException","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"    public Appointment(Nric doctorNric, Nric patientNric, AppointmentDateTime appointmentDateTime,","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"                       Boolean isInitialised) throws ParseException {","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"Alteqa"},"content":"        requireAllNonNull(doctorNric, patientNric, appointmentDateTime);","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"        logger.log(Level.INFO, \"Going to create new appointment instance\");","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"        if (!isInitialised) {","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"            try {","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"                checkArgument(isValidAppointmentDateTime(appointmentDateTime), MESSAGE_CONSTRAINTS_INVALID_DATE);","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"                logger.log(Level.INFO, \"Appointment parameter check failed\");","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"                throw new ParseException(e.getMessage());","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"officialchengyud"},"content":"        this.doctorNric \u003d doctorNric;","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"officialchengyud"},"content":"        this.patientNric \u003d patientNric;","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"Alteqa"},"content":"        this.appointmentDateTime \u003d appointmentDateTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"     * Checks if appointment is valid by comparing appointment date against current date.","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"     * A valid new appointment can only be in the future, not the past.","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"     * @param appointmentDate Date to check validity of","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"     * @return boolean if appointment is valid or not","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"    public boolean isValidAppointmentDateTime(AppointmentDateTime appointmentDate) {","lastModifiedDate":"2024-04-15"},{"lineNumber":72,"author":{"gitId":"Alteqa"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"Alteqa"},"content":"        AppointmentDateTime currentDateTime \u003d new AppointmentDateTime(LocalDateTime.now().format(formatter));","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"Alteqa"},"content":"        return appointmentDate.compareTo(currentDateTime) \u003e -1;","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"     * Gets Nric of doctor in charge.","lastModifiedDate":"2024-04-15"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"     * @return Nric of doctor in charge.","lastModifiedDate":"2024-04-15"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"Kappaccinoh"},"content":"    public Nric getDoctorNric() {","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"        return doctorNric;","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"     * Sets the doctor nric to input nric.","lastModifiedDate":"2024-04-15"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"     * @param nric the new doctor nric.","lastModifiedDate":"2024-04-15"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"     * @throws InvalidAppointmentException if nric is null.","lastModifiedDate":"2024-04-15"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"    public void setDoctorNric(Nric nric) throws InvalidAppointmentException {","lastModifiedDate":"2024-04-15"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"        // If multiplicity is violated, throw exception. Appointment cannot have null doctor nric.","lastModifiedDate":"2024-04-15"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"        if (nric \u003d\u003d null) {","lastModifiedDate":"2024-04-15"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"            throw new InvalidAppointmentException();","lastModifiedDate":"2024-04-15"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-04-15"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"        this.doctorNric \u003d nric;","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"     * Gets nric of the patient of the appointment.","lastModifiedDate":"2024-04-15"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"     * @return nric of patient of the appointment.","lastModifiedDate":"2024-04-15"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"    public Nric getPatientNric() {","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"ararchch"},"content":"        return patientNric;","lastModifiedDate":"2024-03-15"},{"lineNumber":105,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"     * Sets the patient nric to input nric.","lastModifiedDate":"2024-04-15"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":110,"author":{"gitId":"ararchch"},"content":"     * @param nric the new patient nric.","lastModifiedDate":"2024-04-15"},{"lineNumber":111,"author":{"gitId":"ararchch"},"content":"     * @throws InvalidAppointmentException if nric is null.","lastModifiedDate":"2024-04-15"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":113,"author":{"gitId":"ararchch"},"content":"    public void setPatientNric(Nric nric) throws InvalidAppointmentException {","lastModifiedDate":"2024-04-15"},{"lineNumber":114,"author":{"gitId":"ararchch"},"content":"        // If multiplicity is violated, throw exception. Appointment cannot have null patient nric.","lastModifiedDate":"2024-04-15"},{"lineNumber":115,"author":{"gitId":"ararchch"},"content":"        if (nric \u003d\u003d null) {","lastModifiedDate":"2024-04-15"},{"lineNumber":116,"author":{"gitId":"ararchch"},"content":"            throw new InvalidAppointmentException();","lastModifiedDate":"2024-04-15"},{"lineNumber":117,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-04-15"},{"lineNumber":118,"author":{"gitId":"alfaloo"},"content":"        this.patientNric \u003d nric;","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":122,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":123,"author":{"gitId":"ararchch"},"content":"     * Gets date \u0026 time of the appointment.","lastModifiedDate":"2024-04-15"},{"lineNumber":124,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":125,"author":{"gitId":"ararchch"},"content":"     * @return date \u0026 time of the appointment.","lastModifiedDate":"2024-04-15"},{"lineNumber":126,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":127,"author":{"gitId":"Alteqa"},"content":"    public AppointmentDateTime getAppointmentDateTime() {","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"Alteqa"},"content":"        return appointmentDateTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":130,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":131,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"ararchch"},"content":"     * Checks if appointment is same as input one by comparing persons involved and date.","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":134,"author":{"gitId":"ararchch"},"content":"     * @param appt input appointment to compare current appointment against.","lastModifiedDate":"2024-04-15"},{"lineNumber":135,"author":{"gitId":"ararchch"},"content":"     * @return boolean indicating if appointments are the same or not.","lastModifiedDate":"2024-04-15"},{"lineNumber":136,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":137,"author":{"gitId":"ararchch"},"content":"    public boolean isSameAppointment(Appointment appt) {","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"ararchch"},"content":"        if (appt \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"ararchch"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":142,"author":{"gitId":"ararchch"},"content":"        return appt !\u003d null","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"Kappaccinoh"},"content":"                \u0026\u0026 appt.getDoctorNric().equals(this.getDoctorNric())","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"ararchch"},"content":"                \u0026\u0026 appt.getPatientNric().equals(this.getPatientNric())","lastModifiedDate":"2024-03-15"},{"lineNumber":145,"author":{"gitId":"Alteqa"},"content":"                \u0026\u0026 appt.getAppointmentDateTime().equals(this.getAppointmentDateTime());","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":149,"author":{"gitId":"Kappaccinoh"},"content":"     * Checks if the given {@code Person} is associated with this appointment either as a doctor or a patient.","lastModifiedDate":"2024-03-26"},{"lineNumber":150,"author":{"gitId":"Kappaccinoh"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"Kappaccinoh"},"content":"     * @param person The {@code Person} to check if associated with this appointment.","lastModifiedDate":"2024-03-26"},{"lineNumber":152,"author":{"gitId":"Kappaccinoh"},"content":"     * @return {@code true} if the person\u0027s NRIC matches either the doctor\u0027s NRIC or the patient\u0027s NRIC,","lastModifiedDate":"2024-03-26"},{"lineNumber":153,"author":{"gitId":"Kappaccinoh"},"content":"     *         {@code false} otherwise.","lastModifiedDate":"2024-03-26"},{"lineNumber":154,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":155,"author":{"gitId":"Kappaccinoh"},"content":"    public boolean appointmentContainsPerson(Person person) {","lastModifiedDate":"2024-03-26"},{"lineNumber":156,"author":{"gitId":"Kappaccinoh"},"content":"        return person.getNric().equals(this.doctorNric)","lastModifiedDate":"2024-03-26"},{"lineNumber":157,"author":{"gitId":"Kappaccinoh"},"content":"                || person.getNric().equals(this.patientNric);","lastModifiedDate":"2024-03-26"},{"lineNumber":158,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":159,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":160,"author":{"gitId":"officialchengyud"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":161,"author":{"gitId":"officialchengyud"},"content":"    public boolean equals(Object appt) {","lastModifiedDate":"2024-03-24"},{"lineNumber":162,"author":{"gitId":"officialchengyud"},"content":"        if (appt \u003d\u003d this) {","lastModifiedDate":"2024-03-24"},{"lineNumber":163,"author":{"gitId":"officialchengyud"},"content":"            return true;","lastModifiedDate":"2024-03-24"},{"lineNumber":164,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":165,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":166,"author":{"gitId":"officialchengyud"},"content":"        if (!(appt instanceof Appointment)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":167,"author":{"gitId":"officialchengyud"},"content":"            return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":168,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":169,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":170,"author":{"gitId":"officialchengyud"},"content":"        Appointment appointment \u003d (Appointment) appt;","lastModifiedDate":"2024-03-24"},{"lineNumber":171,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":172,"author":{"gitId":"officialchengyud"},"content":"        return appt !\u003d null","lastModifiedDate":"2024-03-24"},{"lineNumber":173,"author":{"gitId":"officialchengyud"},"content":"                \u0026\u0026 appointment.getDoctorNric().equals(this.getDoctorNric())","lastModifiedDate":"2024-03-24"},{"lineNumber":174,"author":{"gitId":"officialchengyud"},"content":"                \u0026\u0026 appointment.getPatientNric().equals(this.getPatientNric())","lastModifiedDate":"2024-03-24"},{"lineNumber":175,"author":{"gitId":"Alteqa"},"content":"                \u0026\u0026 appointment.getAppointmentDateTime().equals(this.getAppointmentDateTime());","lastModifiedDate":"2024-04-03"},{"lineNumber":176,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":177,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":178,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":179,"author":{"gitId":"ararchch"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":180,"author":{"gitId":"ararchch"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-13"},{"lineNumber":181,"author":{"gitId":"Alteqa"},"content":"                .add(\"Date\", getAppointmentDateTime())","lastModifiedDate":"2024-04-03"},{"lineNumber":182,"author":{"gitId":"Kappaccinoh"},"content":"                .add(\"Doctor\", getDoctorNric())","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"ararchch"},"content":"                .add(\"Patient\", getPatientNric())","lastModifiedDate":"2024-03-15"},{"lineNumber":184,"author":{"gitId":"ararchch"},"content":"                .toString();","lastModifiedDate":"2024-03-13"},{"lineNumber":185,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":186,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"Alteqa":14,"alfaloo":14,"officialchengyud":21,"Kappaccinoh":18,"ararchch":119}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentContainsDoctorPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":" * Represents a Predicate used to test if an Appointment contains specified doctor keywords.","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"public class AppointmentContainsDoctorPredicate implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    private static final Logger logger \u003d Logger.getLogger(AppointmentContainsDoctorPredicate.class.getName());","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"    public AppointmentContainsDoctorPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"        assert appointment !\u003d null : \"Appointment cannot be null\";","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"        logger.log(Level.INFO, \"Testing appointment: \" + appointment);","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"        boolean result \u003d keywords.stream()","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"                .anyMatch(keyword -\u003e {","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"                    boolean contains \u003d StringUtil.containsWordIgnoreCase(appointment.getDoctorNric().nric, keyword);","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"                    logger.log(Level.INFO, \"Keyword: \" + keyword + \" contains in appointment: \" + contains);","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"                    return contains;","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"                });","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"        logger.log(Level.INFO, \"Test result: \" + result);","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"        return result;","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"        if (!(other instanceof AppointmentContainsDoctorPredicate)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsDoctorPredicate otherPredicate \u003d (AppointmentContainsDoctorPredicate) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"        return keywords.equals(otherPredicate.keywords);","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"Kappaccinoh":57}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentContainsPatientPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":" * Represents a Predicate used to test if an Appointment contains specified patient keywords.","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"public class AppointmentContainsPatientPredicate implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    private static final Logger logger \u003d Logger.getLogger(AppointmentContainsPatientPredicate.class.getName());","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"    public AppointmentContainsPatientPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"        assert appointment !\u003d null : \"Appointment cannot be null\";","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"        logger.log(Level.INFO, \"Testing appointment: \" + appointment);","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"        return keywords.stream()","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"                .anyMatch(keyword -\u003e {","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"                    boolean contains \u003d StringUtil.containsWordIgnoreCase(appointment.getPatientNric().nric, keyword);","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"                    logger.log(Level.INFO, \"Keyword: \" + keyword + \" contains in appointment: \" + contains);","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"                    return contains;","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"                });","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"        if (!(other instanceof AppointmentContainsPatientPredicate)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"            return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate otherPredicate \u003d (AppointmentContainsPatientPredicate) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"        return keywords.equals(otherPredicate.keywords);","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Kappaccinoh":53}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentDateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":" * Class encapsulating an appointment\u0027s date/time and corresponding methods.","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"public class AppointmentDateTime {","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"    // Message to output in case constraints are not met","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"            \"Appointment date-time should be in the format of yyyy-MM-dd HH:mm.\";","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"    // Variable storing appointment date in a local datetime instance","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"    public final LocalDateTime appointmentDateTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"     * Constructs new AppointmentDate object using an input date string in yyyy-MM-dd HH:mm format.","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"     * @param dateStr input string to be stored.","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"    public AppointmentDateTime(String dateStr) {","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"        assert dateStr.length() \u003d\u003d 16 : \"Appointment date-time string is of incorrect length\";","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"        requireNonNull(dateStr);","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"        checkArgument(isValidDate(dateStr), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"        this.appointmentDateTime \u003d LocalDateTime.parse(dateStr, formatter);","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"     * Overloaded constructor that constructs a new instance using a LocalDateTime rather than datetime string.","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"     * @param dateTime LocalDateTime instance to construct AppointmentDate around.","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"    public AppointmentDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"Alteqa"},"content":"        this.appointmentDateTime \u003d dateTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"     * Checks if a provided input date string is in a valid format.","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"     * @param dateStr input date string.","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"     * @return boolean indicating if format is valid or not.","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"    public static boolean isValidDate(String dateStr) {","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"Alteqa"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"Alteqa"},"content":"            LocalDateTime temp \u003d LocalDateTime.parse(dateStr, formatter);","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"        return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"     * Returns string version of appointment date for printing.","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"     * @return String stringed appointment date.","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"Alteqa"},"content":"        return DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\").format(this.appointmentDateTime);","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"     * Checks if input object is practically equal to this AppointmentDate object.","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"     * @param obj input object.","lastModifiedDate":"2024-04-15"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"     * @return boolean indicating if compared objects are equal.","lastModifiedDate":"2024-04-15"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"Alteqa"},"content":"        if (!(obj instanceof AppointmentDateTime)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"Alteqa"},"content":"        AppointmentDateTime ad \u003d (AppointmentDateTime) obj;","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"Alteqa"},"content":"        return appointmentDateTime.equals(ad.appointmentDateTime);","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"     * Returns hashcode of appointment date.","lastModifiedDate":"2024-04-15"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"     * @return int hashcode.","lastModifiedDate":"2024-04-15"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-13"},{"lineNumber":97,"author":{"gitId":"Alteqa"},"content":"        return appointmentDateTime.hashCode();","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"     * Compares two AppointmentDate instances together.","lastModifiedDate":"2024-04-15"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"     * @param compareValue value to compare with current instance.","lastModifiedDate":"2024-04-15"},{"lineNumber":104,"author":{"gitId":"ararchch"},"content":"     * @return integer reflecting whether compareValue is greater, less, or equal.","lastModifiedDate":"2024-04-15"},{"lineNumber":105,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"Alteqa"},"content":"    public int compareTo(AppointmentDateTime compareValue) {","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"Alteqa"},"content":"        return this.appointmentDateTime.compareTo(compareValue.appointmentDateTime);","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":110,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"Alteqa":19,"alfaloo":2,"ararchch":89}},{"path":"src/main/java/seedu/address/model/appointment/UniqueAppointmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import java.util.List;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":" * A list of appointments that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":" * An appointment is considered unique by comparing using {@code Appointment#isSameAppointment(Appointment)}.","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":" * As such, adding and updating of appointments uses Appointment#isSameAppointment(Appointment) for equality","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":" * so as to ensure that the Appointment being added or updated is","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":" * unique in terms of identity in the UniqueAppointmentList.","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":" *","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":" * @see Appointment#isSameAppointment(Appointment)","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"public class UniqueAppointmentList implements Iterable\u003cAppointment\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"    private final ObservableList\u003cAppointment\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    private final ObservableList\u003cAppointment\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"     * Returns true if the list contains an equivalent appointment as the given argument.","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"     * @param toCheck Appointment to check for in the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"     * @return boolean indicating if appointment is contained.","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"    public boolean contains(Appointment toCheck) {","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"        return internalList.stream().anyMatch(toCheck::isSameAppointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"     * Returns a list of appointments if the appointment contains the person. Checked via person\u0027s NRIC","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"     * @param person target person.","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"     * @return list of appointments.","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"    public List\u003cAppointment\u003e contains(Person person) {","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"        return internalList.stream()","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"                .filter(appointment -\u003e appointment.appointmentContainsPerson(person))","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"     * Adds an appointment to the list.","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"     * The appointment must not already exist in the list.","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"     * @param toAdd Appointment toAdd","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"    public void add(Appointment toAdd) {","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"     * Replaces the appointment {@code target} in the list with {@code editedAppointment}.","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"Kappaccinoh"},"content":"     * The appointment details of {@code editedAppointment} must not be the same as another","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"     * existing appointment in the list.","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"     * @param target the Appointment to replace.","lastModifiedDate":"2024-04-15"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"     * @param editedAppointment the Appointment to edit.","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"        internalList.set(index, editedAppointment);","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"Kappaccinoh"},"content":"     * Removes the equivalent appointment from the list.","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"Kappaccinoh"},"content":"     * The appointment must exist in the list.","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"     * @param toRemove the Appointment to remove from the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"    public void remove(Appointment toRemove) {","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"        assert internalList.contains(toRemove)","lastModifiedDate":"2024-04-15"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"                : \"Internal list should contain toRemove as check is done prior to method call\";","lastModifiedDate":"2024-04-15"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"        internalList.remove(toRemove);","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"Kappaccinoh"},"content":"     * Replaces the contents of this list with {@code appointments}.","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"Kappaccinoh"},"content":"     * {@code appointments} must not contain duplicate appointments.","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":98,"author":{"gitId":"ararchch"},"content":"     * @param appointments the list of Appointments to replace the current list with.","lastModifiedDate":"2024-04-15"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) throws DuplicateAppointmentException {","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"        requireAllNonNull(appointments);","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"        if (!appointmentsAreUnique(appointments)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"ararchch"},"content":"        internalList.setAll(appointments);","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":110,"author":{"gitId":"ararchch"},"content":"     * Replaces the contents of this list with {@code appointments}.","lastModifiedDate":"2024-04-15"},{"lineNumber":111,"author":{"gitId":"ararchch"},"content":"     * {@code appointments} must not contain duplicate appointments.","lastModifiedDate":"2024-04-15"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":113,"author":{"gitId":"ararchch"},"content":"     * This method does not throw DuplicateAppointmentException because it is only called when resetting the data.","lastModifiedDate":"2024-04-15"},{"lineNumber":114,"author":{"gitId":"ararchch"},"content":"     * @param appointments","lastModifiedDate":"2024-04-15"},{"lineNumber":115,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":116,"author":{"gitId":"ararchch"},"content":"    public void setAppointmentsExistingBook(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"ararchch"},"content":"        requireAllNonNull(appointments);","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"ararchch"},"content":"        boolean isAllAppointmentsUnique \u003d appointmentsAreUnique(appointments);","lastModifiedDate":"2024-04-15"},{"lineNumber":119,"author":{"gitId":"ararchch"},"content":"        assert isAllAppointmentsUnique \u003d\u003d true : \"when this method is called appointments should be unique\";","lastModifiedDate":"2024-04-15"},{"lineNumber":120,"author":{"gitId":"ararchch"},"content":"        internalList.setAll(appointments);","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"ararchch"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":126,"author":{"gitId":"ararchch"},"content":"     * @return ObservableList the backing list","lastModifiedDate":"2024-04-15"},{"lineNumber":127,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"ararchch"},"content":"    public ObservableList\u003cAppointment\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"ararchch"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"ararchch"},"content":"    public Iterator\u003cAppointment\u003e iterator() {","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"ararchch"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"ararchch"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"ararchch"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"ararchch"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":142,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"ararchch"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"ararchch"},"content":"        if (!(other instanceof UniqueAppointmentList)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"ararchch"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"ararchch"},"content":"        UniqueAppointmentList otherUniqueAppointmentList \u003d (UniqueAppointmentList) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"ararchch"},"content":"        return internalList.equals(otherUniqueAppointmentList.internalList);","lastModifiedDate":"2024-03-14"},{"lineNumber":150,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":151,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":152,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":153,"author":{"gitId":"ararchch"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"ararchch"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":158,"author":{"gitId":"ararchch"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":159,"author":{"gitId":"ararchch"},"content":"        return internalList.toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":160,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":161,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":162,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":163,"author":{"gitId":"Kappaccinoh"},"content":"     * Returns true if {@code appointments} contains only unique appointments.","lastModifiedDate":"2024-03-26"},{"lineNumber":164,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":165,"author":{"gitId":"ararchch"},"content":"     * @param appointments the list of appointments to check for uniqueness.","lastModifiedDate":"2024-04-15"},{"lineNumber":166,"author":{"gitId":"ararchch"},"content":"     * @return boolean value indicating if appointments are unique.","lastModifiedDate":"2024-04-15"},{"lineNumber":167,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":168,"author":{"gitId":"ararchch"},"content":"    private boolean appointmentsAreUnique(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":170,"author":{"gitId":"ararchch"},"content":"        for (int i \u003d 0; i \u003c appointments.size() - 1; i++) {","lastModifiedDate":"2024-03-14"},{"lineNumber":171,"author":{"gitId":"ararchch"},"content":"            for (int j \u003d i + 1; j \u003c appointments.size(); j++) {","lastModifiedDate":"2024-03-14"},{"lineNumber":172,"author":{"gitId":"ararchch"},"content":"                if (appointments.get(i).isSameAppointment(appointments.get(j))) {","lastModifiedDate":"2024-03-14"},{"lineNumber":173,"author":{"gitId":"ararchch"},"content":"                    return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"ararchch"},"content":"                }","lastModifiedDate":"2024-03-14"},{"lineNumber":175,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":176,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":177,"author":{"gitId":"ararchch"},"content":"        return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":178,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":179,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Kappaccinoh":23,"ararchch":156}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/AppointmentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":" * Signals that the operation is unable to find the specified appointment.","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"public class AppointmentNotFoundException extends CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"     * Creates new instance of AppointmentNotFoundException.","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"    public AppointmentNotFoundException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"        super(\"Unable to locate appointment\");","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"ararchch":16}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/DuplicateAppointmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":" * Signals that the operation will result in duplicate Appointments.","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":" * (Appointments are considered duplicates if they have the same identity).","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"public class DuplicateAppointmentException extends CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"     * Creates new instance of DuplicateAppointmentException.","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"    public DuplicateAppointmentException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"        super(\"Operation would result in duplicate appointments\");","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ararchch":17}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/InvalidAppointmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":" * Signals that the operation is unable to find the specified appointment.","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"public class InvalidAppointmentException extends CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"     * Creates new instance of appointment not found exception.","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"    public InvalidAppointmentException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"        super(\"This appointment is invalid due to invalid inputs.\");","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"ararchch":16}},{"path":"src/main/java/seedu/address/model/person/DoB.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":" * Represents a Person\u0027s date of birth in the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDoB(String)}","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"public class DoB {","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"            \"Date of births should only contain numeric characters in the format yyyy-mm-dd. \"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"                    + \"Acceptable date range is from 1900 Janurary 1st to today\u0027s date.\";","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"    /*","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"    public final LocalDate dateOfBirth;","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"     * Constructs a {@code DoB}.","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"     * @param dob A valid date of birth.","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    public DoB(String dob) {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"        requireNonNull(dob);","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"        assert dob.length() \u003d\u003d 10 : \"Person dob string is of incorrect length\";","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"        checkArgument(isValidDoB(dob), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"        dateOfBirth \u003d LocalDate.parse(dob);","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"    public static boolean isValidDoB(String test) {","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        LocalDate first \u003d LocalDate.parse(\"1900-01-01\");","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"        LocalDate last \u003d LocalDate.now();","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"            LocalDate date \u003d LocalDate.parse(test);","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"            return !date.isBefore(first) \u0026\u0026 !date.isAfter(last);","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"        } catch (java.time.format.DateTimeParseException e) {","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"        return dateOfBirth.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"        if (!(other instanceof DoB)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"        DoB otherDoB \u003d (DoB) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"        return dateOfBirth.equals(otherDoB.dateOfBirth);","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"        return dateOfBirth.hashCode();","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":79}},{"path":"src/main/java/seedu/address/model/person/Doctor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":" * Represents a Doctor in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"public class Doctor extends Person {","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"    public Doctor(Nric nric, Name name, DoB dob, Phone phone) {","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"        super(Type.DOCTOR, nric, name, dob, phone);","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"officialchengyud"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"officialchengyud"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"        if (!(other instanceof Doctor)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"officialchengyud"},"content":"        Doctor otherPerson \u003d (Doctor) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"        return getNric().equals(otherPerson.getNric())","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"officialchengyud"},"content":"                \u0026\u0026 getName().equals(otherPerson.getName())","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"                \u0026\u0026 getDoB().equals(otherPerson.getDoB())","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"                \u0026\u0026 getPhone().equals(otherPerson.getPhone());","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"officialchengyud"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"        return Objects.hash(Type.DOCTOR, getNric(), getName(), getDoB(), getPhone());","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"officialchengyud"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"officialchengyud"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"officialchengyud"},"content":"                .add(\"type\", Type.DOCTOR)","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"officialchengyud"},"content":"                .add(\"nric\", getNric())","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"officialchengyud"},"content":"                .add(\"name\", getName())","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"officialchengyud"},"content":"                .add(\"dob\", getDoB())","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"officialchengyud"},"content":"                .add(\"phone\", getPhone())","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"officialchengyud"},"content":"                .toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Alteqa":1,"officialchengyud":58}},{"path":"src/main/java/seedu/address/model/person/DoctorContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":" * Tests that a {@code Patient}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"public class DoctorContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    public DoctorContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"    public boolean test(Person doctor) {","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"        if (doctor.getType() !\u003d Type.DOCTOR) {","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"        return keywords.stream().anyMatch(keyword -\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"                StringUtil.containsSubstringIgnoreCase(doctor.getNric().nric, keyword)","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"                || StringUtil.containsSubstringIgnoreCase(doctor.getName().fullName, keyword)","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"                || StringUtil.containsSubstringIgnoreCase(doctor.getDoB().dateOfBirth.toString(), keyword)","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"                || StringUtil.containsSubstringIgnoreCase(doctor.getPhone().value, keyword)","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"        );","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Alteqa"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"        if (!(other instanceof DoctorContainsKeywordsPredicate)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"Alteqa"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"        DoctorContainsKeywordsPredicate otherPredicate \u003d (DoctorContainsKeywordsPredicate) other;","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"Alteqa"},"content":"        return keywords.equals(otherPredicate.keywords);","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Alteqa"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"Alteqa"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Alteqa"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Alteqa"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Alteqa":42,"Kappaccinoh":10}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"            \"Names should only contain alphabetical characters and spaces, and it should not be blank\";","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z][a-zA-Z ]*\";","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alfaloo":2,"-":65}},{"path":"src/main/java/seedu/address/model/person/Nric.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":" * Represents a Person\u0027s nric in the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNric(String)}","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"public class Nric {","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"            \"NRIC should only contain alphanumeric characters of length 9 and match the correct format.\";","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"    /*","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[STFGMstfgm][0-9]{7}[A-Za-z]$\";","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    public final String nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"     * Constructs a {@code NRIC}.","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"     * @param nric A valid nric.","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"    public Nric(String nric) {","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"        assert nric.length() \u003d\u003d 9 : \"Person nric string is of incorrect length\";","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"        checkArgument(isValidNric(nric), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"    public static boolean isValidNric(String test) {","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"        return nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"        if (!(other instanceof Nric)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"        Nric otherNric \u003d (Nric) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"        return nric.toLowerCase().equals(otherNric.nric.toLowerCase());","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"        return nric.hashCode();","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":68}},{"path":"src/main/java/seedu/address/model/person/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":" * Represents a Patient in the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"public class Patient extends Person {","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"    public Patient(Nric nric, Name name, DoB dob, Phone phone) {","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"        super(Type.PATIENT, nric, name, dob, phone);","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"        if (!(other instanceof Patient)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"        Patient otherPerson \u003d (Patient) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"        return getNric().equals(otherPerson.getNric())","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"                \u0026\u0026 getName().equals(otherPerson.getName())","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"                \u0026\u0026 getDoB().equals(otherPerson.getDoB())","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"                \u0026\u0026 getPhone().equals(otherPerson.getPhone());","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"        return Objects.hash(Type.PATIENT, getNric(), getName(), getDoB(), getPhone());","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"                .add(\"type\", Type.PATIENT)","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"                .add(\"nric\", getNric())","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"                .add(\"name\", getName())","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"                .add(\"dob\", getDoB())","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"                .add(\"phone\", getPhone())","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"                .toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":59}},{"path":"src/main/java/seedu/address/model/person/PatientContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":" * Tests that a {@code Patient}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"public class PatientContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    public PatientContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"    public boolean test(Person patient) {","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"        if (patient.getType() !\u003d Type.PATIENT) {","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"        return keywords.stream().anyMatch(keyword -\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"                StringUtil.containsSubstringIgnoreCase(patient.getNric().nric, keyword)","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"                || StringUtil.containsSubstringIgnoreCase(patient.getName().fullName, keyword)","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"                || StringUtil.containsSubstringIgnoreCase(patient.getDoB().dateOfBirth.toString(), keyword)","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"                || StringUtil.containsSubstringIgnoreCase(patient.getPhone().value, keyword)","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"        );","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"        if (!(other instanceof PatientContainsKeywordsPredicate)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"        PatientContainsKeywordsPredicate otherPredicate \u003d (PatientContainsKeywordsPredicate) other;","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"        return keywords.equals(otherPredicate.keywords);","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Kappaccinoh":52}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"public abstract class Person {","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    private final Type type;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"    private final Nric nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"    private final DoB dob;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    public Person(Type type, Nric nric, Name name, DoB dob, Phone phone) {","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"        requireAllNonNull(type, nric, name, dob, phone);","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"        this.dob \u003d dob;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"    public Type getType() {","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"        return type;","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"    public Nric getNric() {","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"        return nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    public DoB getDoB() {","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"        return dob;","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"                \u0026\u0026 otherPerson.getNric().equals(getNric());","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alfaloo":19,"-":39}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"            \"Phone numbers should only contain numbers, and it should be exactly 8 digits long\";","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{8}\";","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"        assert phone.length() \u003d\u003d 8 : \"Person phone string is of incorrect length\";","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alfaloo":3,"-":59}},{"path":"src/main/java/seedu/address/model/person/Type.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":" * Enumeration representing different types of entities in the system.","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":" * This enum defines two constants: {@code PATIENT} and {@code DOCTOR},","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":" * which represent distinct roles or types of entities within the system.","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":" * The {@code toString()} method is overridden to return the name of the enum constant.","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"public enum Type {","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    PATIENT,","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    DOCTOR;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"        return name();","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":16}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"     * Check if list contains person with the nric in question.","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"     * @param nricToCheck String nric in question.","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"     * @return boolean indicating if person is in list.","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"    public boolean containsNric(String nricToCheck) {","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"        requireNonNull(nricToCheck);","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"        return internalList.stream().anyMatch(x -\u003e x.getNric().equals(new Nric(nricToCheck)));","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":164,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":165,"author":{"gitId":"ararchch"},"content":"     * Retrieves a {@code Person} object from the list of persons based on the specified NRIC.","lastModifiedDate":"2024-04-15"},{"lineNumber":166,"author":{"gitId":"ararchch"},"content":"     * The method iterates through an internal list of persons, comparing the NRIC of each person","lastModifiedDate":"2024-04-15"},{"lineNumber":167,"author":{"gitId":"ararchch"},"content":"     * with the given NRIC object. If a match is found, the corresponding {@code Person} object","lastModifiedDate":"2024-04-15"},{"lineNumber":168,"author":{"gitId":"ararchch"},"content":"     * is returned.","lastModifiedDate":"2024-04-15"},{"lineNumber":169,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":170,"author":{"gitId":"ararchch"},"content":"     * @param nricObj The NRIC object used to identify the person. It must not be null.","lastModifiedDate":"2024-04-15"},{"lineNumber":171,"author":{"gitId":"ararchch"},"content":"     * @return The {@code Person} object that matches the given NRIC.","lastModifiedDate":"2024-04-15"},{"lineNumber":172,"author":{"gitId":"ararchch"},"content":"     * @throws PersonNotFoundException If no person with the given NRIC can be found in the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":173,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":174,"author":{"gitId":"alfaloo"},"content":"    public Person getPersonByNric(Nric nricObj) throws PersonNotFoundException {","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"ararchch"},"content":"        ArrayList\u003cPerson\u003e personList \u003d new ArrayList\u003cPerson\u003e(internalList);","lastModifiedDate":"2024-03-14"},{"lineNumber":176,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":177,"author":{"gitId":"ararchch"},"content":"        for (Person p : personList) {","lastModifiedDate":"2024-03-14"},{"lineNumber":178,"author":{"gitId":"ararchch"},"content":"            if (p.getNric().equals(nricObj)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":179,"author":{"gitId":"ararchch"},"content":"                return p;","lastModifiedDate":"2024-03-14"},{"lineNumber":180,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":181,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":182,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":183,"author":{"gitId":"ararchch"},"content":"        throw new PersonNotFoundException();","lastModifiedDate":"2024-03-14"},{"lineNumber":184,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alfaloo":1,"-":151,"ararchch":33}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.DoB;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"            // new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"            //     new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"            //     getTagSet(\"friends\")),","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"            // new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"            //     new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"            //     getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"            // new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"            //     new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"            //     getTagSet(\"neighbours\")),","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"            // new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"            //     new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"            //     getTagSet(\"family\")),","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"            // new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"            //     new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"            //     getTagSet(\"classmates\")),","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"            // new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"            //     new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"            //     getTagSet(\"colleagues\"))","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"            new Patient(new Nric(\"S1234567A\"), new Name(\"John Doe\"), new DoB(\"2002-01-30\"), new Phone(\"92624417\")),","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"            new Patient(new Nric(\"S0123456A\"), new Name(\"David Li\"), new DoB(\"2003-04-28\"), new Phone(\"87438807\"))","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"alfaloo":23,"-":26}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":" * Jackson-friendly version of {@link Appointment}.","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"class JsonAdaptedAppointment {","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Appointment\u0027s %s field is missing!\";","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"    private final String doctorNric;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"    private final String patientNric;","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"    private final String appointmentDateTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"     * Constructs a {@code JsonAdaptedAppointment} with the given appointment details.","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"    public JsonAdaptedAppointment(@JsonProperty(\"doctorNric\") String doctorNric,","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"officialchengyud"},"content":"                                  @JsonProperty(\"patientNric\") String patientNric,","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"                                  @JsonProperty(\"appointmentDateTime\") String appointmentDateTime) {","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"        this.doctorNric \u003d doctorNric;","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"officialchengyud"},"content":"        this.patientNric \u003d patientNric;","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"        this.appointmentDateTime \u003d appointmentDateTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"officialchengyud"},"content":"     * Converts a given {@code Appointment} into this class for Jackson use.","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"officialchengyud"},"content":"    public JsonAdaptedAppointment(Appointment source) {","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"        doctorNric \u003d source.getDoctorNric().toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"        patientNric \u003d source.getPatientNric().toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"        appointmentDateTime \u003d source.getAppointmentDateTime().toString();","lastModifiedDate":"2024-04-05"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"officialchengyud"},"content":"     * Converts this Jackson-friendly adapted appointment object into the model\u0027s {@code Appointment} object.","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"     * @return The converted {@code Appointment} object.","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted appointment.","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"     * */","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"officialchengyud"},"content":"    public Appointment toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"officialchengyud"},"content":"        if (doctorNric \u003d\u003d null) {","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"officialchengyud"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"officialchengyud"},"content":"        if (!Nric.isValidNric(doctorNric)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"officialchengyud"},"content":"            throw new IllegalValueException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"officialchengyud"},"content":"        final Nric modelDoctorNric \u003d new Nric(doctorNric);","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"officialchengyud"},"content":"        if (patientNric \u003d\u003d null) {","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"officialchengyud"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"officialchengyud"},"content":"        if (!Nric.isValidNric(patientNric)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"officialchengyud"},"content":"            throw new IllegalValueException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"officialchengyud"},"content":"        final Nric modelPatientNric \u003d new Nric(patientNric);","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"Alteqa"},"content":"        if (appointmentDateTime \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"officialchengyud"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"Alteqa"},"content":"                    AppointmentDateTime.class.getSimpleName()));","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"Alteqa"},"content":"        if (!AppointmentDateTime.isValidDate(appointmentDateTime)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"Alteqa"},"content":"            throw new IllegalValueException(AppointmentDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"Alteqa"},"content":"        final AppointmentDateTime modelAppointmentDateTime \u003d new AppointmentDateTime(appointmentDateTime);","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"Alteqa"},"content":"        return new Appointment(modelDoctorNric, modelPatientNric,","lastModifiedDate":"2024-04-05"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"                modelAppointmentDateTime, true);","lastModifiedDate":"2024-04-15"},{"lineNumber":79,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"officialchengyud"},"content":"     * Indicates whether some other object is \"equal to\" JsonAdaptedAppointment.","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"officialchengyud"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"officialchengyud"},"content":"     * @param obj the reference object with which to compare.","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"officialchengyud"},"content":"     * @return {@code true} if this object is the same as the obj argument; {@code false} otherwise.","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"officialchengyud"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"officialchengyud"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"officialchengyud"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"officialchengyud"},"content":"            return true;","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"officialchengyud"},"content":"        if (!(obj instanceof JsonAdaptedAppointment)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"officialchengyud"},"content":"            return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"officialchengyud"},"content":"        JsonAdaptedAppointment jsonAdaptedAppt \u003d (JsonAdaptedAppointment) obj;","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"officialchengyud"},"content":"        return jsonAdaptedAppt !\u003d null","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"officialchengyud"},"content":"                \u0026\u0026 jsonAdaptedAppt.doctorNric.equals(this.doctorNric)","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"officialchengyud"},"content":"                \u0026\u0026 jsonAdaptedAppt.patientNric.equals(this.patientNric)","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"                \u0026\u0026 jsonAdaptedAppt.appointmentDateTime.equals(this.appointmentDateTime);","lastModifiedDate":"2024-04-15"},{"lineNumber":105,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Alteqa":9,"alfaloo":4,"officialchengyud":95}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.DoB;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"    private final String type;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    private final String nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"    private final String dob;","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"type\") String type, @JsonProperty(\"nric\") String nric,","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"                             @JsonProperty(\"name\") String name, @JsonProperty(\"dob\") String dob,","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"                             @JsonProperty(\"phone\") String phone) {","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"        this.dob \u003d dob;","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"        type \u003d source.getType().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"        nric \u003d source.getNric().nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"        dob \u003d source.getDoB().dateOfBirth.toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"        if (nric \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"        if (!Nric.isValidNric(nric)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"            throw new IllegalValueException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"        final Nric modelNric \u003d new Nric(nric);","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"        if (dob \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, DoB.class.getSimpleName()));","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"        if (!DoB.isValidDoB(dob)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"            throw new IllegalValueException(DoB.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"        final DoB modelDoB \u003d new DoB(dob);","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"        switch (type) {","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"        case \"PATIENT\":","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"            return new Patient(modelNric, modelName, modelDoB, modelPhone);","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"officialchengyud"},"content":"        case \"DOCTOR\":","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"officialchengyud"},"content":"            return new Doctor(modelNric, modelName, modelDoB, modelPhone);","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"        default:","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"            break;","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"        return null;","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"alfaloo":35,"officialchengyud":3,"-":65}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENTS \u003d \"Appointment list contains duplicate appointment(s).\";","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"    private final List\u003cJsonAdaptedAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"officialchengyud"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons and appointments.","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"                                       @JsonProperty(\"appointments\") List\u003cJsonAdaptedAppointment\u003e appointments) {","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"        assert persons !\u003d null : \"persons should not be null\";","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"        assert appointments !\u003d null : \"appointments should not be null\";","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"        this.appointments.addAll(appointments);","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"officialchengyud"},"content":"        appointments.addAll(source.getAppointmentList().stream().map(JsonAdaptedAppointment::new)","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"officialchengyud"},"content":"                        .collect(Collectors.toList()));","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"officialchengyud"},"content":"        // Add person models to the address book","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"officialchengyud"},"content":"        // Add appointment models to the address book","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"officialchengyud"},"content":"        for (JsonAdaptedAppointment jsonAdaptedAppointment : appointments) {","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"officialchengyud"},"content":"            Appointment appointment \u003d jsonAdaptedAppointment.toModelType();","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"officialchengyud"},"content":"            if (addressBook.hasAppointment(appointment)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"officialchengyud"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_APPOINTMENTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"officialchengyud"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"officialchengyud"},"content":"            addressBook.addAppointment(appointment);","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"officialchengyud":24,"-":58}},{"path":"src/main/java/seedu/address/ui/AppointmentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":" * An UI component that displays information of a {@code Appointment}.","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"public class AppointmentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"    private static final String FXML \u003d \"AppointmentListCard.fxml\";","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    private final Appointment appointment;","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"    private HBox cardPane;","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"    private Label id;","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"    private Label doctorNric;","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"    private Label patientNric;","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"    private Label appointmentDateTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"    private Label appointmentId;","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"     * Creates a {@code AppointmentCard} with the given {@code Appointment} and index to display.","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"    public AppointmentCard(Appointment appt, int displayedIndex) {","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"        super(FXML);","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"        this.appointment \u003d appt;","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"        doctorNric.setText(appointment.getDoctorNric().nric);","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"        patientNric.setText(appointment.getPatientNric().nric);","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"Alteqa"},"content":"        appointmentDateTime.setText(appointment.getAppointmentDateTime().toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"        //appointmentId.setText(appointment.getAppointmentId().appointmentId);","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Alteqa":2,"Kappaccinoh":1,"ararchch":47}},{"path":"src/main/java/seedu/address/ui/AppointmentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":" * Panel containing the list of Appointments.","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"public class AppointmentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"    private static final String FXML \u003d \"AppointmentListPanel.fxml\";","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AppointmentListPanel.class);","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    private ListView\u003cAppointment\u003e appointmentListView;","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"     * Creates a {@code AppointmentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"    public AppointmentListPanel(ObservableList\u003cAppointment\u003e appointmentList) {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"        super(FXML);","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"        appointmentListView.setItems(appointmentList);","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"        appointmentListView.setCellFactory(listView -\u003e new AppointmentListViewCell());","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Appointment} using a {@code AppointmentCard}.","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"    class AppointmentListViewCell extends ListCell\u003cAppointment\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"        protected void updateItem(Appointment appt, boolean empty) {","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"            super.updateItem(appt, empty);","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"            if (empty || appt \u003d\u003d null) {","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"                setGraphic(null);","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"                setText(null);","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"            } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"                setGraphic(new AppointmentCard(appt, getIndex() + 1).getRoot());","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"ararchch":49}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-t15-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Kappaccinoh":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"    private AppointmentListPanel appointmentListPanel;","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"    private StackPane appointmentListPanelPlaceholder;","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"Kappaccinoh"},"content":"        appointmentListPanel \u003d new AppointmentListPanel(logic.getFilteredAppointmentList());","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"ararchch"},"content":"        appointmentListPanelPlaceholder.getChildren().add(appointmentListPanel.getRoot());","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Kappaccinoh":1,"-":196,"ararchch":7}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"    private Label type;","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"    private Label nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"    private Label name;","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"    @FXML","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"    private Label dob;","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    private Label phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"        type.setText(person.getType().toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"        nric.setText(person.getNric().nric);","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"        dob.setText(person.getDoB().toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Alteqa":1,"alfaloo":9,"-":44}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/medicli_logo.png\";","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":87,"ararchch":1}},{"path":"src/main/resources/view/AppointmentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    \u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"      \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"          \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"            \u003cminWidth\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"              \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"              \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"            \u003c/minWidth\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"35\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"          \u003cHBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"              \u003cHBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"                  \u003cInsets bottom\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"                \u003cImageView fitHeight\u003d\"25\" fitWidth\u003d\"25\"\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"                  \u003cImage url\u003d\"@/images/doctorIcon.png\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"                \u003cHBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"                    \u003cInsets left\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"                  \u003cLabel fx:id\u003d\"doctorNric\" styleClass\u003d\"cell_big_label\" text\u003d\"Doctor: \\$doctorNric\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"              \u003c/HBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"                                                  \u003cHBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"                  \u003cInsets top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"                \u003cImageView fitHeight\u003d\"25\" fitWidth\u003d\"25\"\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"                  \u003cImage url\u003d\"@/images/patientIcon.png\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"                \u003cHBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"                    \u003cInsets left\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"                  \u003cLabel fx:id\u003d\"patientNric\" styleClass\u003d\"cell_big_label\" text\u003d\"Patient \\$patientNric\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"              \u003c/HBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"Alteqa"},"content":"            \u003cHBox alignment\u003d\"BOTTOM_LEFT\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"Alteqa"},"content":"                \u003cInsets left\u003d\"55\" right\u003d\"5\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"officialchengyud"},"content":"                     \u003cRegion HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"              \u003cVBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"                \u003cHBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"Alteqa"},"content":"                    \u003cInsets bottom\u003d\"5\" left\u003d\"60\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"                  \u003cImageView fitHeight\u003d\"25\" fitWidth\u003d\"25\"\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"                    \u003cImage url\u003d\"@/images/calendar.png\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"                  \u003c/ImageView\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"Alteqa"},"content":"                \u003cHBox alignment\u003d\"CENTER_RIGHT\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"                    \u003cInsets left\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"Alteqa"},"content":"                  \u003cLabel fx:id\u003d\"appointmentDateTime\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$appointmentDateTime\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"              \u003c!--          \u003cLabel fx:id\u003d\"appointmentId\" text\u003d\"\\$appointmentId\" styleClass\u003d\"cell_small_label\" /\u003e--\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"Alteqa"},"content":"            \u003crowConstraints\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"Alteqa"},"content":"               \u003cRowConstraints /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"Alteqa"},"content":"            \u003c/rowConstraints\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"      \u003c/GridPane\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"officialchengyud"},"content":"    \u003cRegion maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"10.0\" prefWidth\u003d\"200.0\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"officialchengyud"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"officialchengyud"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"Alteqa":14,"officialchengyud":6,"ararchch":83}},{"path":"src/main/resources/view/AppointmentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"   \u003cText strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Appointments\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"      \u003cfont\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"         \u003cFont name\u003d\"Noto Sans Oriya Bold\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"      \u003c/font\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"   \u003c/Text\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"  \u003cListView fx:id\u003d\"appointmentListView\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"      \u003copaqueInsets\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"         \u003cInsets bottom\u003d\"50.0\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"      \u003c/opaqueInsets\u003e\u003c/ListView\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"officialchengyud":13,"ararchch":6}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"officialchengyud"},"content":"    /*-fx-background-color: transparent, #383838, transparent, #383838;*/","lastModifiedDate":"2024-03-29"},{"lineNumber":337,"author":{"gitId":"officialchengyud"},"content":"    /*-fx-background-radius: 0;*/","lastModifiedDate":"2024-03-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"officialchengyud"},"content":"    /*-fx-background-color: #3e7b91;*/","lastModifiedDate":"2024-03-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"officialchengyud":3,"-":349}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"    -fx-background: white;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"alfaloo":1,"-":19}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"alfaloo":2,"-":43}},{"path":"src/main/resources/view/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":".background {","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: #e2e5ef;","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"    background-color: #e2e5ef; /* Used in the default.html file */","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":".label {","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"    -fx-text-fill: #052a3a;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":".label-bright {","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"    -fx-text-fill: #052a3a;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":".label-header {","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    -fx-text-fill: #052a3a;","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":".text-field {","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":".tab-pane {","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":".table-view {","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"    -fx-base: white;","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"officialchengyud"},"content":"    -fx-control-inner-background: white;","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"    -fx-padding: 5;","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":".table-view .column-header-background {","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"    -fx-size: 35;","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":".table-view .column-header .label {","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"    -fx-text-fill: #052a3a;","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":".split-pane {","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":".list-view {","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"    -fx-padding: 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":".list-cell {","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"    -fx-background-radius: 15px;","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"    -fx-border-radius: 15px;","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"officialchengyud"},"content":"    -fx-background-insets: 0px, 2px;","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":".list-cell:filled:even {","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"officialchengyud"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":".list-cell:filled:odd {","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"officialchengyud"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":".list-cell:filled:selected {","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"alfaloo"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"alfaloo"},"content":"    /*-fx-border-color: #052a3a;*/","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"alfaloo"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"alfaloo"},"content":".list-cell .label {","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"alfaloo"},"content":"    -fx-text-fill: #052a3a;","lastModifiedDate":"2024-03-24"},{"lineNumber":119,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":121,"author":{"gitId":"alfaloo"},"content":".cell_big_label {","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"officialchengyud"},"content":"    -fx-font-family: \"Segoe UI SemiBold\";","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"officialchengyud"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"alfaloo"},"content":"    -fx-text-fill: #052a3a;","lastModifiedDate":"2024-03-24"},{"lineNumber":125,"author":{"gitId":"officialchengyud"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":127,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":128,"author":{"gitId":"alfaloo"},"content":".cell_small_label {","lastModifiedDate":"2024-03-24"},{"lineNumber":129,"author":{"gitId":"officialchengyud"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"officialchengyud"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"officialchengyud"},"content":"    -fx-text-fill: #414141 !important;","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"officialchengyud"},"content":".cell_type_label {","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"alfaloo"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2024-03-24"},{"lineNumber":136,"author":{"gitId":"alfaloo"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2024-03-24"},{"lineNumber":137,"author":{"gitId":"alfaloo"},"content":"    -fx-text-fill: #052a3a;","lastModifiedDate":"2024-03-24"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":139,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":140,"author":{"gitId":"alfaloo"},"content":".stack-pane {","lastModifiedDate":"2024-03-24"},{"lineNumber":141,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":143,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":144,"author":{"gitId":"officialchengyud"},"content":".person-list-pane {","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"officialchengyud"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"alfaloo"},"content":".pane-with-border {","lastModifiedDate":"2024-03-24"},{"lineNumber":149,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-24"},{"lineNumber":150,"author":{"gitId":"alfaloo"},"content":"    /*-fx-border-color: #052a3a;*/","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"alfaloo"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2024-03-24"},{"lineNumber":152,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":153,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":154,"author":{"gitId":"officialchengyud"},"content":"#commandResult {","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"officialchengyud"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"officialchengyud"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"officialchengyud"},"content":"    /*-fx-background-color: #fdfdfd;*/","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":159,"author":{"gitId":"officialchengyud"},"content":"    /*-fx-background-radius: 15px;*/","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"officialchengyud"},"content":"    /*-fx-border-radius: 15px;*/","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"officialchengyud"},"content":"#resultDisplay {","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"officialchengyud"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"officialchengyud"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"officialchengyud"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2024-03-30"},{"lineNumber":167,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"alfaloo"},"content":".status-bar {","lastModifiedDate":"2024-03-24"},{"lineNumber":170,"author":{"gitId":"officialchengyud"},"content":"    /*-fx-background-color: #f1f4f4;*/","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":172,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":173,"author":{"gitId":"alfaloo"},"content":".result-display {","lastModifiedDate":"2024-03-24"},{"lineNumber":174,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-25"},{"lineNumber":175,"author":{"gitId":"alfaloo"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2024-03-24"},{"lineNumber":176,"author":{"gitId":"alfaloo"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2024-03-24"},{"lineNumber":177,"author":{"gitId":"alfaloo"},"content":"    -fx-text-fill: #052a3a;","lastModifiedDate":"2024-03-24"},{"lineNumber":178,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":179,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":180,"author":{"gitId":"alfaloo"},"content":".result-display .label {","lastModifiedDate":"2024-03-24"},{"lineNumber":181,"author":{"gitId":"alfaloo"},"content":"    -fx-text-fill: #052a3a;","lastModifiedDate":"2024-03-24"},{"lineNumber":182,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":183,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":184,"author":{"gitId":"alfaloo"},"content":".status-bar .label {","lastModifiedDate":"2024-03-24"},{"lineNumber":185,"author":{"gitId":"alfaloo"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2024-03-24"},{"lineNumber":186,"author":{"gitId":"alfaloo"},"content":"    -fx-text-fill: #052a3a;","lastModifiedDate":"2024-03-24"},{"lineNumber":187,"author":{"gitId":"alfaloo"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2024-03-24"},{"lineNumber":188,"author":{"gitId":"alfaloo"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2024-03-24"},{"lineNumber":189,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":190,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":191,"author":{"gitId":"alfaloo"},"content":".status-bar-with-border {","lastModifiedDate":"2024-03-24"},{"lineNumber":192,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: #e2e5ef;","lastModifiedDate":"2024-03-24"},{"lineNumber":193,"author":{"gitId":"alfaloo"},"content":"    -fx-border-color: #052a3a;","lastModifiedDate":"2024-03-24"},{"lineNumber":194,"author":{"gitId":"alfaloo"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2024-03-24"},{"lineNumber":195,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":196,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":197,"author":{"gitId":"alfaloo"},"content":".status-bar-with-border .label {","lastModifiedDate":"2024-03-24"},{"lineNumber":198,"author":{"gitId":"alfaloo"},"content":"    -fx-text-fill: #052a3a;","lastModifiedDate":"2024-03-24"},{"lineNumber":199,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":200,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":201,"author":{"gitId":"alfaloo"},"content":".grid-pane {","lastModifiedDate":"2024-03-24"},{"lineNumber":202,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: #e2e5ef;","lastModifiedDate":"2024-03-24"},{"lineNumber":203,"author":{"gitId":"officialchengyud"},"content":"    -fx-border-color: #e2e5ef;","lastModifiedDate":"2024-03-29"},{"lineNumber":204,"author":{"gitId":"alfaloo"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2024-03-24"},{"lineNumber":205,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":206,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":207,"author":{"gitId":"alfaloo"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2024-03-24"},{"lineNumber":208,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-25"},{"lineNumber":209,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":210,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":211,"author":{"gitId":"alfaloo"},"content":".context-menu {","lastModifiedDate":"2024-03-24"},{"lineNumber":212,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: #e2e5ef;","lastModifiedDate":"2024-03-24"},{"lineNumber":213,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":214,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":215,"author":{"gitId":"alfaloo"},"content":".context-menu .label {","lastModifiedDate":"2024-03-24"},{"lineNumber":216,"author":{"gitId":"alfaloo"},"content":"    -fx-text-fill: #052a3a;","lastModifiedDate":"2024-03-24"},{"lineNumber":217,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":218,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":219,"author":{"gitId":"alfaloo"},"content":".menu-bar {","lastModifiedDate":"2024-03-24"},{"lineNumber":220,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: #f1f4f4;","lastModifiedDate":"2024-03-24"},{"lineNumber":221,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":222,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":223,"author":{"gitId":"alfaloo"},"content":".menu-bar .label {","lastModifiedDate":"2024-03-24"},{"lineNumber":224,"author":{"gitId":"alfaloo"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2024-03-24"},{"lineNumber":225,"author":{"gitId":"alfaloo"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2024-03-24"},{"lineNumber":226,"author":{"gitId":"alfaloo"},"content":"    -fx-text-fill: #052a3a;","lastModifiedDate":"2024-03-24"},{"lineNumber":227,"author":{"gitId":"alfaloo"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2024-03-24"},{"lineNumber":228,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":229,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":230,"author":{"gitId":"alfaloo"},"content":".menu .left-container {","lastModifiedDate":"2024-03-24"},{"lineNumber":231,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: #e2e5ef;","lastModifiedDate":"2024-03-24"},{"lineNumber":232,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":233,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":234,"author":{"gitId":"alfaloo"},"content":"/*","lastModifiedDate":"2024-03-24"},{"lineNumber":235,"author":{"gitId":"alfaloo"},"content":" * Metro style Push Button","lastModifiedDate":"2024-03-24"},{"lineNumber":236,"author":{"gitId":"alfaloo"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2024-03-24"},{"lineNumber":237,"author":{"gitId":"alfaloo"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2024-03-24"},{"lineNumber":238,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":239,"author":{"gitId":"alfaloo"},"content":".button {","lastModifiedDate":"2024-03-24"},{"lineNumber":240,"author":{"gitId":"alfaloo"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2024-03-24"},{"lineNumber":241,"author":{"gitId":"alfaloo"},"content":"    -fx-border-color: #e2e5ef;","lastModifiedDate":"2024-03-24"},{"lineNumber":242,"author":{"gitId":"alfaloo"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2024-03-24"},{"lineNumber":243,"author":{"gitId":"alfaloo"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":244,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: #e2e5ef;","lastModifiedDate":"2024-03-24"},{"lineNumber":245,"author":{"gitId":"alfaloo"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2024-03-24"},{"lineNumber":246,"author":{"gitId":"alfaloo"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2024-03-24"},{"lineNumber":247,"author":{"gitId":"alfaloo"},"content":"    -fx-text-fill: #052a3a;","lastModifiedDate":"2024-03-24"},{"lineNumber":248,"author":{"gitId":"alfaloo"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2024-03-24"},{"lineNumber":249,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":250,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":251,"author":{"gitId":"alfaloo"},"content":".button:hover {","lastModifiedDate":"2024-03-24"},{"lineNumber":252,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: #e2e5ef;","lastModifiedDate":"2024-03-24"},{"lineNumber":253,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":254,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":255,"author":{"gitId":"alfaloo"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2024-03-24"},{"lineNumber":256,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-24"},{"lineNumber":257,"author":{"gitId":"alfaloo"},"content":"    -fx-text-fill: #052a3a;","lastModifiedDate":"2024-03-24"},{"lineNumber":258,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":259,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":260,"author":{"gitId":"alfaloo"},"content":".button:focused {","lastModifiedDate":"2024-03-24"},{"lineNumber":261,"author":{"gitId":"alfaloo"},"content":"    -fx-border-color: #052a3a, #052a3a;","lastModifiedDate":"2024-03-24"},{"lineNumber":262,"author":{"gitId":"alfaloo"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2024-03-24"},{"lineNumber":263,"author":{"gitId":"alfaloo"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2024-03-24"},{"lineNumber":264,"author":{"gitId":"alfaloo"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":265,"author":{"gitId":"alfaloo"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":266,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":267,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":268,"author":{"gitId":"alfaloo"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2024-03-24"},{"lineNumber":269,"author":{"gitId":"alfaloo"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2024-03-24"},{"lineNumber":270,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: #e2e5ef;","lastModifiedDate":"2024-03-24"},{"lineNumber":271,"author":{"gitId":"alfaloo"},"content":"    -fx-text-fill: #052a3a;","lastModifiedDate":"2024-03-24"},{"lineNumber":272,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":273,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":274,"author":{"gitId":"alfaloo"},"content":".button:default {","lastModifiedDate":"2024-03-24"},{"lineNumber":275,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2024-03-24"},{"lineNumber":276,"author":{"gitId":"alfaloo"},"content":"    -fx-text-fill: #052a3a;","lastModifiedDate":"2024-03-24"},{"lineNumber":277,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":278,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":279,"author":{"gitId":"alfaloo"},"content":".button:default:hover {","lastModifiedDate":"2024-03-24"},{"lineNumber":280,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2024-03-24"},{"lineNumber":281,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":282,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":283,"author":{"gitId":"alfaloo"},"content":".dialog-pane {","lastModifiedDate":"2024-03-24"},{"lineNumber":284,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: #e2e5ef;","lastModifiedDate":"2024-03-24"},{"lineNumber":285,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":286,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":287,"author":{"gitId":"alfaloo"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2024-03-24"},{"lineNumber":288,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: #e2e5ef;","lastModifiedDate":"2024-03-24"},{"lineNumber":289,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":290,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":291,"author":{"gitId":"alfaloo"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2024-03-24"},{"lineNumber":292,"author":{"gitId":"alfaloo"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2024-03-24"},{"lineNumber":293,"author":{"gitId":"alfaloo"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2024-03-24"},{"lineNumber":294,"author":{"gitId":"alfaloo"},"content":"    -fx-text-fill: #052a3a;","lastModifiedDate":"2024-03-24"},{"lineNumber":295,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":296,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":297,"author":{"gitId":"alfaloo"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2024-03-24"},{"lineNumber":298,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: #e2e5ef;","lastModifiedDate":"2024-03-24"},{"lineNumber":299,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":300,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":301,"author":{"gitId":"alfaloo"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2024-03-24"},{"lineNumber":302,"author":{"gitId":"alfaloo"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2024-03-24"},{"lineNumber":303,"author":{"gitId":"alfaloo"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2024-03-24"},{"lineNumber":304,"author":{"gitId":"alfaloo"},"content":"    -fx-fill: white;","lastModifiedDate":"2024-03-24"},{"lineNumber":305,"author":{"gitId":"alfaloo"},"content":"    -fx-text-fill: #052a3a;","lastModifiedDate":"2024-03-24"},{"lineNumber":306,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":307,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":308,"author":{"gitId":"alfaloo"},"content":".scroll-bar {","lastModifiedDate":"2024-03-24"},{"lineNumber":309,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-25"},{"lineNumber":310,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":311,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":312,"author":{"gitId":"alfaloo"},"content":".scroll-bar .thumb {","lastModifiedDate":"2024-03-24"},{"lineNumber":313,"author":{"gitId":"officialchengyud"},"content":"    -fx-background-color: #f5f5f5;","lastModifiedDate":"2024-03-29"},{"lineNumber":314,"author":{"gitId":"alfaloo"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2024-03-24"},{"lineNumber":315,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":316,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":317,"author":{"gitId":"alfaloo"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2024-03-24"},{"lineNumber":318,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-03-24"},{"lineNumber":319,"author":{"gitId":"alfaloo"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":320,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":321,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":322,"author":{"gitId":"alfaloo"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2024-03-24"},{"lineNumber":323,"author":{"gitId":"alfaloo"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2024-03-24"},{"lineNumber":324,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":325,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":326,"author":{"gitId":"alfaloo"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2024-03-24"},{"lineNumber":327,"author":{"gitId":"alfaloo"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2024-03-24"},{"lineNumber":328,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":329,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":330,"author":{"gitId":"alfaloo"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2024-03-24"},{"lineNumber":331,"author":{"gitId":"alfaloo"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2024-03-24"},{"lineNumber":332,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":333,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":334,"author":{"gitId":"alfaloo"},"content":"#cardPane {","lastModifiedDate":"2024-03-24"},{"lineNumber":335,"author":{"gitId":"officialchengyud"},"content":"    -fx-background-insets: 0px, 0px, 5px, 0px;","lastModifiedDate":"2024-03-29"},{"lineNumber":336,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-03-24"},{"lineNumber":337,"author":{"gitId":"officialchengyud"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2024-03-29"},{"lineNumber":338,"author":{"gitId":"officialchengyud"},"content":"    -fx-border-radius: 5px;","lastModifiedDate":"2024-03-29"},{"lineNumber":339,"author":{"gitId":"officialchengyud"},"content":"    -fx-border-color: #e2e5ef;","lastModifiedDate":"2024-03-29"},{"lineNumber":340,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":341,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":342,"author":{"gitId":"alfaloo"},"content":"#commandTypeLabel {","lastModifiedDate":"2024-03-24"},{"lineNumber":343,"author":{"gitId":"alfaloo"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2024-03-24"},{"lineNumber":344,"author":{"gitId":"alfaloo"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2024-03-24"},{"lineNumber":345,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":346,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":347,"author":{"gitId":"alfaloo"},"content":"#commandTextField {","lastModifiedDate":"2024-03-24"},{"lineNumber":348,"author":{"gitId":"officialchengyud"},"content":"    -fx-fill-height: 20px;","lastModifiedDate":"2024-03-29"},{"lineNumber":349,"author":{"gitId":"officialchengyud"},"content":"    -fx-background-color: #f5f5f5;","lastModifiedDate":"2024-03-29"},{"lineNumber":350,"author":{"gitId":"alfaloo"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":351,"author":{"gitId":"alfaloo"},"content":"    /*-fx-border-color: #052a3a;*/","lastModifiedDate":"2024-03-25"},{"lineNumber":352,"author":{"gitId":"alfaloo"},"content":"    /*-fx-border-insets: 0;*/","lastModifiedDate":"2024-03-25"},{"lineNumber":353,"author":{"gitId":"alfaloo"},"content":"    /*-fx-border-width: 1;*/","lastModifiedDate":"2024-03-25"},{"lineNumber":354,"author":{"gitId":"alfaloo"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2024-03-24"},{"lineNumber":355,"author":{"gitId":"alfaloo"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2024-03-24"},{"lineNumber":356,"author":{"gitId":"alfaloo"},"content":"    -fx-text-fill: #052a3a;","lastModifiedDate":"2024-03-24"},{"lineNumber":357,"author":{"gitId":"officialchengyud"},"content":"    -fx-background-radius: 8px;","lastModifiedDate":"2024-03-29"},{"lineNumber":358,"author":{"gitId":"officialchengyud"},"content":"    -fx-border-radius: 8px;","lastModifiedDate":"2024-03-29"},{"lineNumber":359,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":360,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":361,"author":{"gitId":"alfaloo"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2024-03-24"},{"lineNumber":362,"author":{"gitId":"alfaloo"},"content":"    /*-fx-effect: innershadow(gaussian, #e2e5ef, 10, 0, 0, 0);*/","lastModifiedDate":"2024-03-25"},{"lineNumber":363,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":364,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":365,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":366,"author":{"gitId":"alfaloo"},"content":"#tags {","lastModifiedDate":"2024-03-24"},{"lineNumber":367,"author":{"gitId":"alfaloo"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2024-03-24"},{"lineNumber":368,"author":{"gitId":"alfaloo"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2024-03-24"},{"lineNumber":369,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":370,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":371,"author":{"gitId":"alfaloo"},"content":"#tags .label {","lastModifiedDate":"2024-03-24"},{"lineNumber":372,"author":{"gitId":"alfaloo"},"content":"    -fx-text-fill: #052a3a;","lastModifiedDate":"2024-03-24"},{"lineNumber":373,"author":{"gitId":"officialchengyud"},"content":"    /*-fx-background-color: #3e7b91;*/","lastModifiedDate":"2024-03-29"},{"lineNumber":374,"author":{"gitId":"alfaloo"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2024-03-24"},{"lineNumber":375,"author":{"gitId":"alfaloo"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2024-03-24"},{"lineNumber":376,"author":{"gitId":"alfaloo"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2024-03-24"},{"lineNumber":377,"author":{"gitId":"alfaloo"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-03-24"},{"lineNumber":378,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":379,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":380,"author":{"gitId":"alfaloo"},"content":"#personListPanelPlaceholder, #appointmentListPanelPlaceholder {","lastModifiedDate":"2024-03-25"},{"lineNumber":381,"author":{"gitId":"alfaloo"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-25"},{"lineNumber":382,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-25"},{"lineNumber":383,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":384,"author":{"gitId":"officialchengyud"},"content":"/* Textarea */","lastModifiedDate":"2024-03-29"},{"lineNumber":385,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":386,"author":{"gitId":"officialchengyud"},"content":".text-area {","lastModifiedDate":"2024-03-29"},{"lineNumber":387,"author":{"gitId":"officialchengyud"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2024-03-29"},{"lineNumber":388,"author":{"gitId":"officialchengyud"},"content":"    -fx-background-color: transparent, white, transparent, white;","lastModifiedDate":"2024-03-29"},{"lineNumber":389,"author":{"gitId":"officialchengyud"},"content":"    -fx-border-color: #e2e5ef;","lastModifiedDate":"2024-03-29"},{"lineNumber":390,"author":{"gitId":"officialchengyud"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2024-03-29"},{"lineNumber":391,"author":{"gitId":"officialchengyud"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2024-03-29"},{"lineNumber":392,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":393,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":394,"author":{"gitId":"officialchengyud"},"content":".text-area .content {","lastModifiedDate":"2024-03-29"},{"lineNumber":395,"author":{"gitId":"officialchengyud"},"content":"    -fx-background-color: transparent, white, transparent, white;","lastModifiedDate":"2024-03-29"},{"lineNumber":396,"author":{"gitId":"officialchengyud"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2024-03-29"},{"lineNumber":397,"author":{"gitId":"officialchengyud"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2024-03-29"},{"lineNumber":398,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":399,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":400,"author":{"gitId":"officialchengyud"},"content":".text-area:focused .content {","lastModifiedDate":"2024-03-29"},{"lineNumber":401,"author":{"gitId":"officialchengyud"},"content":"    -fx-background-color: transparent, white, transparent, white;","lastModifiedDate":"2024-03-29"},{"lineNumber":402,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":403,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":404,"author":{"gitId":"officialchengyud"},"content":".text-area:focused {","lastModifiedDate":"2024-03-29"},{"lineNumber":405,"author":{"gitId":"officialchengyud"},"content":"    -fx-highlight-fill: #7ecfff;","lastModifiedDate":"2024-03-29"},{"lineNumber":406,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":407,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":408,"author":{"gitId":"officialchengyud"},"content":".text-area .content {","lastModifiedDate":"2024-03-29"},{"lineNumber":409,"author":{"gitId":"officialchengyud"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2024-03-29"},{"lineNumber":410,"author":{"gitId":"officialchengyud"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2024-03-29"},{"lineNumber":411,"author":{"gitId":"officialchengyud"},"content":"    -fx-padding: 10px;","lastModifiedDate":"2024-03-29"},{"lineNumber":412,"author":{"gitId":"officialchengyud"},"content":"    -fx-text-fill: gray;","lastModifiedDate":"2024-03-29"},{"lineNumber":413,"author":{"gitId":"officialchengyud"},"content":"    -fx-highlight-fill: #7ecfff;","lastModifiedDate":"2024-03-29"},{"lineNumber":414,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":415,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":416,"author":{"gitId":"officialchengyud"},"content":"/* Others */","lastModifiedDate":"2024-03-29"},{"lineNumber":417,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":418,"author":{"gitId":"officialchengyud"},"content":"#typeText {","lastModifiedDate":"2024-03-29"},{"lineNumber":419,"author":{"gitId":"officialchengyud"},"content":"    -fx-background-color: #dcdcdc;","lastModifiedDate":"2024-03-29"},{"lineNumber":420,"author":{"gitId":"officialchengyud"},"content":"    -fx-padding: 3px 10px 3px 10px;","lastModifiedDate":"2024-03-29"},{"lineNumber":421,"author":{"gitId":"officialchengyud"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2024-03-29"},{"lineNumber":422,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"alfaloo":336,"officialchengyud":86}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"         title\u003d\"MediCLI\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"    \u003cImage url\u003d\"@/images/medicli_logo.png\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"        \u003cURL value\u003d\"@LightTheme.css\" /\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"        \u003cSplitPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"          \u003citems\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"              \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"            \u003cVBox fx:id\u003d\"appointmentList\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"                  minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"              \u003cStackPane fx:id\u003d\"appointmentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"          \u003c/items\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"alfaloo":5,"-":57,"ararchch":10}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"      \u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"          \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"          \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"          \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" prefHeight\u003d\"105.0\" prefWidth\u003d\"201.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"              \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"17.0\" prefWidth\u003d\"40.0\" spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                  \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                  \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"              \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\"\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"                  \u003cRegion prefHeight\u003d\"17.0\" prefWidth\u003d\"48.0\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"officialchengyud"},"content":"               \u003cLabel id\u003d\"typeText\" fx:id\u003d\"type\" styleClass\u003d\"cell_type_label\" text\u003d\"\\$type\" textAlignment\u003d\"RIGHT\"\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"officialchengyud"},"content":"                        \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"                  \u003copaqueInsets\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"                     \u003cInsets /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"                  \u003c/opaqueInsets\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"                  \u003cVBox.margin\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"officialchengyud"},"content":"                     \u003cInsets bottom\u003d\"6.0\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"                  \u003c/VBox.margin\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"            \u003cLabel fx:id\u003d\"nric\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nric\" /\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"officialchengyud"},"content":"            \u003cLabel fx:id\u003d\"dob\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dob\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"officialchengyud"},"content":"            \u003crowConstraints\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"officialchengyud"},"content":"               \u003cRowConstraints /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"officialchengyud"},"content":"            \u003c/rowConstraints\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"officialchengyud"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"officialchengyud"},"content":"               \u003cInsets /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"officialchengyud"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"officialchengyud"},"content":"      \u003cRegion maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"10.0\" prefWidth\u003d\"200.0\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"officialchengyud"},"content":"   \u003c/children\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"officialchengyud"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"alfaloo":1,"officialchengyud":32,"-":29}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"officialchengyud"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"   \u003cText strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Patients and Doctors\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"      \u003cfont\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"         \u003cFont name\u003d\"Noto Sans Oriya Bold\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"      \u003c/font\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"   \u003c/Text\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"  \u003cListView fx:id\u003d\"personListView\" styleClass\u003d\"person-list-pane\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"officialchengyud":9,"-":6}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"\u003cTextArea id\u003d\"resultDisplay\" fx:id\u003d\"resultDisplay\" editable\u003d\"false\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" /\u003e","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"officialchengyud":2,"-":4}},{"path":"src/test/java/seedu/address/MainAppTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":" * Contains the test cases for the file MainApp","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"public class MainAppTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"    public void mainapp_runssuccessfully() {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"    public void mainapp_returnscorrectversion() {","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"        MainApp main \u003d new MainApp();","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(main.VERSION.toString(), \"V1.2.1ea\");","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"    public void mainapp_loggerexists() {","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"Kappaccinoh":24}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"        assertNotNull(AppUtil.getImage(\"/images/medicli_logo.png\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":35,"ararchch":1}},{"path":"src/test/java/seedu/address/commons/util/IdUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import static seedu.address.commons.util.IdUtil.deleteId;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import static seedu.address.commons.util.IdUtil.generateNewId;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import static seedu.address.commons.util.IdUtil.hasId;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import static seedu.address.commons.util.IdUtil.initalMapUpdate;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"import jdk.jshell.spi.ExecutionControl;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"class IdUtilTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"    private static final String APPT_REGEX \u003d \"a\\\\d{8}\";","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    void generateNewId_validEntity_generatesValidId() {","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"        String id \u003d generateNewId(IdUtil.Entities.APPOINTMENT);","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"        assertTrue(Pattern.compile(APPT_REGEX).matcher(id).find());","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"    void initialMapUpdate_validInput_throwsNotImplementedException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"        assertThrows(ExecutionControl.NotImplementedException.class, () -\u003e initalMapUpdate());","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"    void deleteId_validIdAppointment_deletesId() {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"        String id \u003d generateNewId(IdUtil.Entities.APPOINTMENT);","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"        assertTrue(hasId(id));","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"        deleteId(id);","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"        assertFalse(hasId(id));","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"    void deleteId_validIdPatient_deletesId() {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"        String id \u003d generateNewId(IdUtil.Entities.PATIENT);","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"        assertTrue(hasId(id));","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"        deleteId(id);","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"        assertFalse(hasId(id));","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"    void deleteId_validIdDoctor_deletesId() {","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"        String id \u003d generateNewId(IdUtil.Entities.DOCTOR);","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"        assertTrue(hasId(id));","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"        deleteId(id);","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"        assertFalse(hasId(id));","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"ararchch":55}},{"path":"src/test/java/seedu/address/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.testutil.SerializableTestClass;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TestUtil;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"    public void jsonUtil_readJsonStringToObjectInstance_correctObject() throws IOException {","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"        String jsonString \u003d SerializableTestClass.JSON_STRING_REPRESENTATION;","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil.fromJsonString(jsonString, SerializableTestClass.class);","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"    public void jsonUtil_writeThenReadObjectToJson_correctObject() throws IOException {","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"        SerializableTestClass originalObject \u003d new SerializableTestClass();","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"        originalObject.setTestValues();","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"        // Write the object to a JSON string","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"        String jsonString \u003d JsonUtil.toJsonString(originalObject);","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"        // Read the JSON string back to an object","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"        SerializableTestClass deserializedObject \u003d JsonUtil.fromJsonString(jsonString, SerializableTestClass.class);","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"        // Ensure the deserialized object matches the original object","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(deserializedObject.getName(), originalObject.getName());","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(deserializedObject.getListOfLocalDateTimes(), originalObject.getListOfLocalDateTimes());","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(deserializedObject.getMapOfIntegerToString(), originalObject.getMapOfIntegerToString());","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Kappaccinoh":26,"-":43}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"Kappaccinoh"},"content":"    //---------------- Tests for containsSubstringIgnoreCase --------------------------------------","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"Kappaccinoh"},"content":"    /*","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"Kappaccinoh"},"content":"     * Valid equivalence partitions for substring:","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"Kappaccinoh"},"content":"     *   - any substring","lastModifiedDate":"2024-03-26"},{"lineNumber":131,"author":{"gitId":"Kappaccinoh"},"content":"     *   - substring containing symbols/numbers","lastModifiedDate":"2024-03-26"},{"lineNumber":132,"author":{"gitId":"Kappaccinoh"},"content":"     *   - substring with leading/trailing spaces","lastModifiedDate":"2024-03-26"},{"lineNumber":133,"author":{"gitId":"Kappaccinoh"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":134,"author":{"gitId":"Kappaccinoh"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2024-03-26"},{"lineNumber":135,"author":{"gitId":"Kappaccinoh"},"content":"     *   - empty string","lastModifiedDate":"2024-03-26"},{"lineNumber":136,"author":{"gitId":"Kappaccinoh"},"content":"     *   - one word","lastModifiedDate":"2024-03-26"},{"lineNumber":137,"author":{"gitId":"Kappaccinoh"},"content":"     *   - multiple words","lastModifiedDate":"2024-03-26"},{"lineNumber":138,"author":{"gitId":"Kappaccinoh"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2024-03-26"},{"lineNumber":139,"author":{"gitId":"Kappaccinoh"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":140,"author":{"gitId":"Kappaccinoh"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2024-03-26"},{"lineNumber":141,"author":{"gitId":"Kappaccinoh"},"content":"     *   - matches substring at the beginning of the sentence","lastModifiedDate":"2024-03-26"},{"lineNumber":142,"author":{"gitId":"Kappaccinoh"},"content":"     *   - matches substring at the end of the sentence","lastModifiedDate":"2024-03-26"},{"lineNumber":143,"author":{"gitId":"Kappaccinoh"},"content":"     *   - matches substring in the middle of the sentence","lastModifiedDate":"2024-03-26"},{"lineNumber":144,"author":{"gitId":"Kappaccinoh"},"content":"     *   - matches multiple occurrences of the substring","lastModifiedDate":"2024-03-26"},{"lineNumber":145,"author":{"gitId":"Kappaccinoh"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":146,"author":{"gitId":"Kappaccinoh"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"Kappaccinoh"},"content":"     *   - substring partially matches a word in the sentence","lastModifiedDate":"2024-03-26"},{"lineNumber":148,"author":{"gitId":"Kappaccinoh"},"content":"     *   - word in the sentence partially matches the substring","lastModifiedDate":"2024-03-26"},{"lineNumber":149,"author":{"gitId":"Kappaccinoh"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":150,"author":{"gitId":"Kappaccinoh"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":152,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":153,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":154,"author":{"gitId":"Kappaccinoh"},"content":"    public void containsSubstringIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2024-03-26"},{"lineNumber":155,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":156,"author":{"gitId":"Kappaccinoh"},"content":"        // Empty sentence","lastModifiedDate":"2024-03-26"},{"lineNumber":157,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(StringUtil.containsSubstringIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2024-03-26"},{"lineNumber":158,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(StringUtil.containsSubstringIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":159,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":160,"author":{"gitId":"Kappaccinoh"},"content":"        // Matches a partial substring only","lastModifiedDate":"2024-03-26"},{"lineNumber":161,"author":{"gitId":"Kappaccinoh"},"content":"        // Sentence word bigger than substring","lastModifiedDate":"2024-03-26"},{"lineNumber":162,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"aaa bbb ccc\", \"bb\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":163,"author":{"gitId":"Kappaccinoh"},"content":"        // Substring bigger than sentence word","lastModifiedDate":"2024-03-26"},{"lineNumber":164,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(StringUtil.containsSubstringIgnoreCase(\"aaa bbb ccc\", \"bbbb\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":165,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":166,"author":{"gitId":"Kappaccinoh"},"content":"        // Matches substring in the sentence, different upper/lower case letters","lastModifiedDate":"2024-03-26"},{"lineNumber":167,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2024-03-26"},{"lineNumber":168,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2024-03-26"},{"lineNumber":169,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2024-03-26"},{"lineNumber":170,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2024-03-26"},{"lineNumber":171,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2024-03-26"},{"lineNumber":172,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":173,"author":{"gitId":"Kappaccinoh"},"content":"        // Matches multiple substrings in sentence","lastModifiedDate":"2024-03-26"},{"lineNumber":174,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":175,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":176,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":177,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":178,"author":{"gitId":"Kappaccinoh"},"content":"    public void containsSubstringIgnoreCase_emptySubstring_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":179,"author":{"gitId":"Kappaccinoh"},"content":"        // Test empty substring","lastModifiedDate":"2024-03-26"},{"lineNumber":180,"author":{"gitId":"Kappaccinoh"},"content":"        assertThrows(IllegalArgumentException.class, \"Substring parameter cannot be empty\", () -\u003e {","lastModifiedDate":"2024-03-26"},{"lineNumber":181,"author":{"gitId":"Kappaccinoh"},"content":"            StringUtil.containsSubstringIgnoreCase(\"example sentence\", \"\");","lastModifiedDate":"2024-03-26"},{"lineNumber":182,"author":{"gitId":"Kappaccinoh"},"content":"        });","lastModifiedDate":"2024-03-26"},{"lineNumber":183,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":184,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Kappaccinoh":59,"-":143}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOB_DESC_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"import static seedu.address.testutil.TypicalPersons.BROWN;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressbook.json\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"    //","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"    //    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"    //    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"    //        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"    //                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"    //    }","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"    //","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"    //    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"    //    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"    //        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"    //                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"    //    }","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"Kappaccinoh"},"content":"    public void getFilteredAppointmentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"Kappaccinoh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredAppointmentList().remove(0));","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"    public void getAppointmentList_getList_listIsNotNull() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"        model.addPerson(ALICE);","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"        model.addPerson(BROWN);","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"        model.addAppointment(new AppointmentBuilder().withDoctor((Doctor) BROWN)","lastModifiedDate":"2024-04-15"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"                .withPatient((Patient) ALICE).withDateTime(\"2024-11-11 11:02\").build());","lastModifiedDate":"2024-04-15"},{"lineNumber":106,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(model.getFilteredAppointmentList() !\u003d null);","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(model.getFilteredAppointmentList().size() \u003d\u003d 1);","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"ararchch"},"content":"    public void getAddressBook_getBook_bookIsNotNull() {","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"        assertTrue(model.getAddressBook() !\u003d null);","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"ararchch"},"content":"    public void getAddressBookFilePath_getPath_pathIsNotNull() {","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"ararchch"},"content":"        assertTrue(model.getAddressBookFilePath() !\u003d null);","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"ararchch"},"content":"    public void getGuiSettings_getSettings_settingsIsNotNull() {","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"ararchch"},"content":"        assertTrue(model.getGuiSettings() !\u003d null);","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"ararchch"},"content":"    public void setGuiSettings_setSettings_settingsIsSetWithNoError() {","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"ararchch"},"content":"        GuiSettings settings \u003d new GuiSettings(0.1, 0.1, 1, 1);","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"ararchch"},"content":"        model.setGuiSettings(settings);","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"ararchch"},"content":"        assertEquals(model.getGuiSettings(), settings);","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":151,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":160,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":169,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":183,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":216,"author":{"gitId":"ararchch"},"content":"        String addCommand \u003d AddPatientCommand.COMMAND_WORD + NRIC_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":217,"author":{"gitId":"ararchch"},"content":"                + DOB_DESC_AMY + PHONE_DESC_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":218,"author":{"gitId":"alfaloo"},"content":"        Person expectedPerson \u003d new PatientBuilder(ALICE).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"alfaloo":20,"Kappaccinoh":4,"-":159,"ararchch":40}},{"path":"src/test/java/seedu/address/logic/MessagesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.logic;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"class MessagesTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"    public void format_validPatient_stringFormattedPerson() {","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"        Person patient \u003d new PatientBuilder().build();","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"        assertEquals(Messages.format(patient), \"NRIC: \"","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"                + patient.getNric()","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"                + \"; Name: \"","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"                + patient.getName()","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"                + \"; DoB: \"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"                + patient.getDoB()","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"                + \"; Phone: \"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"                + patient.getPhone()","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"                + \";\");","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"    public void format_validDoctor_stringFormattedPerson() {","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"        Person doctor \u003d new DoctorBuilder().build();","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"        assertEquals(Messages.format(doctor), \"NRIC: \"","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"                + doctor.getNric()","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"                + \"; Name: \"","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"                + doctor.getName()","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"                + \"; DoB: \"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"                + doctor.getDoB()","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"                + \"; Phone: \"","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"                + doctor.getPhone()","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"                + \";\");","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"    public void format_validAppointment_stringFormattedAppointment() {","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"        Appointment a \u003d new AppointmentBuilder().build();","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"        assertEquals(Messages.format(a), \"Date: \"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"Alteqa"},"content":"                + a.getAppointmentDateTime()","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"                + \"; Doctor: \"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"                + a.getDoctorNric()","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"                + \"; Patient: \"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"                + a.getPatientNric());","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"Alteqa":1,"alfaloo":3,"Kappaccinoh":30,"ararchch":19}},{"path":"src/test/java/seedu/address/logic/commands/AddAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import static seedu.address.testutil.TypicalPersons.BROWN;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.exceptions.InvalidAppointmentException;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"class AddAppointmentCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"    private void addPersonsForTest() {","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(BROWN);","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"    void execute_validCommand_executesCommand() throws CommandException, ParseException {","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"        this.addPersonsForTest();","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"        Appointment appt \u003d new AppointmentBuilder().withDoctor((Doctor) BROWN).withPatient((Patient) ALICE).build();","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"        AddAppointmentCommand ad \u003d new AddAppointmentCommand(appt);","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"        CommandResult commandResult \u003d ad.execute(modelManager);","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(modelManager.getFilteredAppointmentList().size() \u003d\u003d 1);","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"    void execute_invalidCommand_missingPerson() throws CommandException, ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"Alteqa"},"content":"        Appointment appt \u003d new Appointment(BROWN.getNric(), ALICE.getNric(),","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"                new AppointmentDateTime(\"2024-09-01 11:02\"), false);","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"        AddAppointmentCommand ad \u003d new AddAppointmentCommand(appt);","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"        assertThrows(CommandException.class, () -\u003e ad.execute(modelManager));","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"    void execute_invalidCommand_throwsInvalidAppointmentException() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"        this.addPersonsForTest();","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"        Appointment appt \u003d new Appointment(ALICE.getNric(), BROWN.getNric(),","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"                new AppointmentDateTime(\"2024-09-01 11:02\"), false);","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"        AddAppointmentCommand ad \u003d new AddAppointmentCommand(appt);","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"        assertThrows(InvalidAppointmentException.class, () -\u003e ad.execute(modelManager));","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"    void execute_invalidCommandAppointmentExists_throwsCommandException() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"        this.addPersonsForTest();","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"Alteqa"},"content":"        Appointment appt \u003d new Appointment(BROWN.getNric(), ALICE.getNric(),","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"                new AppointmentDateTime(\"2024-09-01 11:02\"), false);","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"        modelManager.addAppointment(appt);","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"        AddAppointmentCommand ad \u003d new AddAppointmentCommand(appt);","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"        assertThrows(CommandException.class, () -\u003e ad.execute(modelManager));","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"    void equals_sameCommandButDifferentObject_returnsTrue() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"        this.addPersonsForTest();","lastModifiedDate":"2024-04-15"},{"lineNumber":70,"author":{"gitId":"Alteqa"},"content":"        Appointment appt \u003d new Appointment(BROWN.getNric(), ALICE.getNric(),","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"                new AppointmentDateTime(\"2024-09-01 11:02\"), false);","lastModifiedDate":"2024-04-15"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"        AddAppointmentCommand ad \u003d new AddAppointmentCommand(appt);","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"        AddAppointmentCommand ad2 \u003d new AddAppointmentCommand(appt);","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"        assertTrue(ad.equals(ad2));","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"    void equals_sameCommandSameObject_returnsTrue() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"        this.addPersonsForTest();","lastModifiedDate":"2024-04-15"},{"lineNumber":80,"author":{"gitId":"Alteqa"},"content":"        Appointment appt \u003d new Appointment(BROWN.getNric(), ALICE.getNric(),","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"                new AppointmentDateTime(\"2024-09-01 11:02\"), false);","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"        AddAppointmentCommand ad \u003d new AddAppointmentCommand(appt);","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"        assertTrue(ad.equals(ad));","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"    void equals_differentClass_returnsFalse() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"        this.addPersonsForTest();","lastModifiedDate":"2024-04-15"},{"lineNumber":89,"author":{"gitId":"Alteqa"},"content":"        Appointment appt \u003d new Appointment(BROWN.getNric(), ALICE.getNric(),","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"                new AppointmentDateTime(\"2024-09-01 11:02\"), false);","lastModifiedDate":"2024-04-15"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"        AddAppointmentCommand ad \u003d new AddAppointmentCommand(appt);","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"        assertFalse(ad.equals(\"hi\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"    void toString_returnsValidString() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"        this.addPersonsForTest();","lastModifiedDate":"2024-04-15"},{"lineNumber":98,"author":{"gitId":"Alteqa"},"content":"        Appointment appt \u003d new Appointment(BROWN.getNric(), ALICE.getNric(),","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"                new AppointmentDateTime(\"2024-09-01 11:02\"), false);","lastModifiedDate":"2024-04-15"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"        AddAppointmentCommand ad \u003d new AddAppointmentCommand(appt);","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"        assertEquals(ad.toString(), \"seedu.address.logic.commands.AddAppointmentCommand{toAdd\u003d\"","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"                + appt.toString()","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"                + \"}\");","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"Alteqa":8,"alfaloo":13,"Kappaccinoh":1,"ararchch":83}},{"path":"src/test/java/seedu/address/logic/commands/AddDoctorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.testutil.TypicalPersons.DAMES;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"officialchengyud"},"content":"public class AddDoctorCommandTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"    public void constructor_nullDoctor_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddDoctorCommand(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"    public void execute_doctorAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"        Doctor validPerson \u003d new DoctorBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"        CommandResult commandResult \u003d new AddDoctorCommand(validPerson).execute(modelStub);","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"officialchengyud"},"content":"        assertEquals(String.format(AddDoctorCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"officialchengyud"},"content":"    public void execute_duplicateDoctor_throwsCommandException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"officialchengyud"},"content":"        Doctor validPerson \u003d new DoctorBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"officialchengyud"},"content":"        AddDoctorCommand addDoctorCommand \u003d new AddDoctorCommand(validPerson);","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"officialchengyud"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"officialchengyud"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"officialchengyud"},"content":"                AddDoctorCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addDoctorCommand.execute(modelStub));","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"officialchengyud"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"officialchengyud"},"content":"        Doctor alice \u003d new DoctorBuilder().withName(\"Alice\").build();","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"officialchengyud"},"content":"        Doctor bob \u003d new DoctorBuilder().withName(\"Bob\").build();","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"officialchengyud"},"content":"        AddDoctorCommand addAliceCommand \u003d new AddDoctorCommand(alice);","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"officialchengyud"},"content":"        AddDoctorCommand addBobCommand \u003d new AddDoctorCommand(bob);","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"officialchengyud"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"officialchengyud"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"officialchengyud"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"officialchengyud"},"content":"        AddDoctorCommand addAliceCommandCopy \u003d new AddDoctorCommand(alice);","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"officialchengyud"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"officialchengyud"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"officialchengyud"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"officialchengyud"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"officialchengyud"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"officialchengyud"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"officialchengyud"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"officialchengyud"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"Alteqa"},"content":"        AddDoctorCommand addDoctorCommand \u003d new AddDoctorCommand((Doctor) DAMES);","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"Alteqa"},"content":"        String expected \u003d AddDoctorCommand.class.getCanonicalName() + \"{toAdd\u003d\" + DAMES + \"}\";","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"officialchengyud"},"content":"        assertEquals(expected, addDoctorCommand.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"officialchengyud"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"officialchengyud"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"officialchengyud"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"officialchengyud"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"officialchengyud"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"officialchengyud"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"officialchengyud"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"officialchengyud"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"officialchengyud"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"officialchengyud"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"officialchengyud"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"officialchengyud"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"officialchengyud"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"officialchengyud"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"alfaloo"},"content":"        @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":155,"author":{"gitId":"alfaloo"},"content":"        public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2024-03-26"},{"lineNumber":156,"author":{"gitId":"alfaloo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-26"},{"lineNumber":157,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":158,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":159,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"officialchengyud"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"officialchengyud"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"officialchengyud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":170,"author":{"gitId":"Kappaccinoh"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":172,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":173,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":174,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":175,"author":{"gitId":"ararchch"},"content":"        public boolean isValidAppointment(Appointment appt) {","lastModifiedDate":"2024-03-16"},{"lineNumber":176,"author":{"gitId":"ararchch"},"content":"            //TODO: implement","lastModifiedDate":"2024-03-16"},{"lineNumber":177,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":178,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":179,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":180,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":181,"author":{"gitId":"ararchch"},"content":"        public void addAppointment(Appointment appt) {","lastModifiedDate":"2024-03-16"},{"lineNumber":182,"author":{"gitId":"ararchch"},"content":"            //TODO: implement","lastModifiedDate":"2024-03-16"},{"lineNumber":183,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":184,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":186,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":187,"author":{"gitId":"ararchch"},"content":"        public void deleteAppointment(Appointment appt) {","lastModifiedDate":"2024-03-16"},{"lineNumber":188,"author":{"gitId":"ararchch"},"content":"            //TODO: implement","lastModifiedDate":"2024-03-16"},{"lineNumber":189,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":190,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":191,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":192,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":193,"author":{"gitId":"ararchch"},"content":"        public boolean hasAppointment(Appointment appt) {","lastModifiedDate":"2024-03-16"},{"lineNumber":194,"author":{"gitId":"ararchch"},"content":"            //TODO: implement","lastModifiedDate":"2024-03-16"},{"lineNumber":195,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":196,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":197,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":198,"author":{"gitId":"Kappaccinoh"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":199,"author":{"gitId":"Kappaccinoh"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e appointment) {","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":202,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":203,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":204,"author":{"gitId":"officialchengyud"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2024-03-12"},{"lineNumber":205,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":206,"author":{"gitId":"officialchengyud"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2024-03-12"},{"lineNumber":207,"author":{"gitId":"officialchengyud"},"content":"        private final Person person;","lastModifiedDate":"2024-03-12"},{"lineNumber":208,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":209,"author":{"gitId":"officialchengyud"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2024-03-12"},{"lineNumber":210,"author":{"gitId":"officialchengyud"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-12"},{"lineNumber":211,"author":{"gitId":"officialchengyud"},"content":"            this.person \u003d person;","lastModifiedDate":"2024-03-12"},{"lineNumber":212,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":213,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":214,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":215,"author":{"gitId":"officialchengyud"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-12"},{"lineNumber":216,"author":{"gitId":"officialchengyud"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-12"},{"lineNumber":217,"author":{"gitId":"officialchengyud"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2024-03-12"},{"lineNumber":218,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":219,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":220,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":221,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":222,"author":{"gitId":"officialchengyud"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2024-03-12"},{"lineNumber":223,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":224,"author":{"gitId":"officialchengyud"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2024-03-12"},{"lineNumber":225,"author":{"gitId":"officialchengyud"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-12"},{"lineNumber":226,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":227,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":228,"author":{"gitId":"officialchengyud"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-12"},{"lineNumber":229,"author":{"gitId":"officialchengyud"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-12"},{"lineNumber":230,"author":{"gitId":"officialchengyud"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2024-03-12"},{"lineNumber":231,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":232,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":233,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":234,"author":{"gitId":"officialchengyud"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-12"},{"lineNumber":235,"author":{"gitId":"officialchengyud"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-12"},{"lineNumber":236,"author":{"gitId":"officialchengyud"},"content":"            personsAdded.add(person);","lastModifiedDate":"2024-03-12"},{"lineNumber":237,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":238,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":239,"author":{"gitId":"officialchengyud"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":240,"author":{"gitId":"officialchengyud"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-12"},{"lineNumber":241,"author":{"gitId":"officialchengyud"},"content":"            return new AddressBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":242,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":243,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":244,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":245,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Alteqa":3,"alfaloo":5,"officialchengyud":203,"Kappaccinoh":5,"ararchch":29}},{"path":"src/test/java/seedu/address/logic/commands/AddPatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"public class AddPatientCommandTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"    public void constructor_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPatientCommand(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"    public void execute_patientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"        Patient validPerson \u003d new PatientBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"        CommandResult commandResult \u003d new AddPatientCommand(validPerson).execute(modelStub);","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"        assertEquals(String.format(AddPatientCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"    public void execute_duplicatePatient_throwsCommandException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"        Patient validPerson \u003d new PatientBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"        AddPatientCommand addPatientCommand \u003d new AddPatientCommand(validPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"                AddPatientCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addPatientCommand.execute(modelStub));","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"        Patient alice \u003d new PatientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"        Patient bob \u003d new PatientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"        AddPatientCommand addAliceCommand \u003d new AddPatientCommand(alice);","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"        AddPatientCommand addBobCommand \u003d new AddPatientCommand(bob);","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"        AddPatientCommand addAliceCommandCopy \u003d new AddPatientCommand(alice);","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"        AddPatientCommand addPatientCommand \u003d new AddPatientCommand((Patient) ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"        String expected \u003d AddPatientCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"        assertEquals(expected, addPatientCommand.toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"alfaloo"},"content":"        @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":155,"author":{"gitId":"alfaloo"},"content":"        public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2024-03-26"},{"lineNumber":156,"author":{"gitId":"alfaloo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-26"},{"lineNumber":157,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":158,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":168,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":170,"author":{"gitId":"Kappaccinoh"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":172,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":173,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":174,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":175,"author":{"gitId":"ararchch"},"content":"        public boolean isValidAppointment(Appointment appt) {","lastModifiedDate":"2024-03-16"},{"lineNumber":176,"author":{"gitId":"ararchch"},"content":"            //TODO: implement","lastModifiedDate":"2024-03-16"},{"lineNumber":177,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":178,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":179,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":180,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":181,"author":{"gitId":"ararchch"},"content":"        public void addAppointment(Appointment appt) {","lastModifiedDate":"2024-03-16"},{"lineNumber":182,"author":{"gitId":"ararchch"},"content":"            //TODO: implement","lastModifiedDate":"2024-03-16"},{"lineNumber":183,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":184,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":186,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":187,"author":{"gitId":"ararchch"},"content":"        public void deleteAppointment(Appointment appt) {","lastModifiedDate":"2024-03-16"},{"lineNumber":188,"author":{"gitId":"ararchch"},"content":"            //TODO: implement","lastModifiedDate":"2024-03-16"},{"lineNumber":189,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":190,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":191,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":192,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":193,"author":{"gitId":"ararchch"},"content":"        public boolean hasAppointment(Appointment appt) {","lastModifiedDate":"2024-03-16"},{"lineNumber":194,"author":{"gitId":"ararchch"},"content":"            //TODO: implement","lastModifiedDate":"2024-03-16"},{"lineNumber":195,"author":{"gitId":"ararchch"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":196,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":197,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":198,"author":{"gitId":"Kappaccinoh"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":199,"author":{"gitId":"Kappaccinoh"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e appointment) {","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2024-03-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2024-03-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2024-03-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2024-03-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2024-03-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2024-03-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2024-03-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":27,"Kappaccinoh":5,"-":184,"ararchch":29}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"import java.util.Date;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.appointment.AppointmentContainsPatientPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"    public static final String VALID_NRIC_AMY \u003d \"S1234567A\";","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"    public static final String VALID_NRIC_BOB \u003d \"F1234567B\";","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"    public static final String VALID_NAME_JAMES \u003d \"James Tasman\";","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"    public static final String VALID_NAME_BROWN \u003d \"Brown East\";","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"    public static final String VALID_DOB_AMY \u003d \"2002-03-04\";","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"    public static final String VALID_DOB_BOB \u003d \"1999-06-07\";","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"    public static final String VALID_DOB_JAMES \u003d \"2000-03-02\";","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"    public static final String VALID_DOB_BROWN \u003d \"2000-05-02\";","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"    public static final String VALID_PHONE_JAMES \u003d \"11112222\";","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"    public static final String VALID_PHONE_BROWN \u003d \"12312312\";","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"    public static final String VALID_DATE \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date());","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"    public static final String NRIC_DESC_AMY \u003d \" \" + PREFIX_NRIC + VALID_NRIC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"    public static final String NRIC_DESC_BOB \u003d \" \" + PREFIX_NRIC + VALID_NRIC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"    public static final String DOB_DESC_AMY \u003d \" \" + PREFIX_DOB + VALID_DOB_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"    public static final String DOB_DESC_BOB \u003d \" \" + PREFIX_DOB + VALID_DOB_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"    public static final String INVALID_NRIC_DESC \u003d \" \" + PREFIX_NRIC + \"A0983\";","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"    public static final String INVALID_DOB_DESC \u003d \" \" + PREFIX_DOB + \"22-03-2009\";","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"Alteqa"},"content":"                .withPhone(VALID_PHONE_AMY).withNric(VALID_NRIC_AMY).withDob(VALID_DOB_AMY).build();","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"Alteqa"},"content":"                .withPhone(VALID_PHONE_BOB).withNric(VALID_NRIC_BOB).withDob(VALID_DOB_BOB).build();","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"alfaloo"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"alfaloo"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"alfaloo"},"content":"    public static void showAppointmentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"alfaloo"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredAppointmentList().size());","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"alfaloo"},"content":"        Appointment appointment \u003d model.getFilteredAppointmentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"alfaloo"},"content":"        List\u003cString\u003e pred \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"alfaloo"},"content":"        pred.add(appointment.getPatientNric().nric);","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"alfaloo"},"content":"        model.updateFilteredAppointmentList(new AppointmentContainsPatientPredicate(pred));","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Alteqa":3,"alfaloo":29,"officialchengyud":6,"-":109}},{"path":"src/test/java/seedu/address/logic/commands/DeleteAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":" * {@code DeleteAppointmentCommand}.","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"public class DeleteAppointmentCommandTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"officialchengyud"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"    public void execute_validDeleteAppointmentIndexList_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"        Appointment appointmentToDelete \u003d model.getFilteredAppointmentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"        String deleteAppointmentMessage \u003d DeleteAppointmentCommand.MESSAGE_DELETE_APPOINTMENT_SUCCESS;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"        String expectedMessage \u003d String.format(deleteAppointmentMessage, Messages.format(appointmentToDelete));","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"officialchengyud"},"content":"        expectedModel.deleteAppointment(appointmentToDelete);","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"        assertCommandSuccess(deleteAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"    public void execute_invalidDeleteAppointmentIndexList_throwsCommandException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredAppointmentList().size() + 1);","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(outOfBoundIndex);","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"        assertCommandFailure(deleteAppointmentCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"officialchengyud"},"content":"    public void equals() {","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"officialchengyud"},"content":"        DeleteAppointmentCommand deleteAppointmentFirstCommand \u003d new DeleteAppointmentCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"officialchengyud"},"content":"        DeleteAppointmentCommand deleteAppointmentSecondCommand \u003d new DeleteAppointmentCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"officialchengyud"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"officialchengyud"},"content":"        assertTrue(deleteAppointmentFirstCommand.equals(deleteAppointmentFirstCommand));","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"officialchengyud"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"officialchengyud"},"content":"        DeleteAppointmentCommand deleteAppointmentFirstCommandCopy \u003d new DeleteAppointmentCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"officialchengyud"},"content":"        assertTrue(deleteAppointmentFirstCommand.equals(deleteAppointmentFirstCommandCopy));","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"officialchengyud"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"officialchengyud"},"content":"        assertFalse(deleteAppointmentFirstCommand.equals(1));","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"officialchengyud"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"officialchengyud"},"content":"        assertFalse(deleteAppointmentFirstCommand.equals(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"officialchengyud"},"content":"        // different appointments -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"officialchengyud"},"content":"        assertFalse(deleteAppointmentFirstCommand.equals(deleteAppointmentSecondCommand));","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"officialchengyud"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"officialchengyud"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"officialchengyud"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(targetIndex);","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"officialchengyud"},"content":"        String expected \u003d DeleteAppointmentCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"officialchengyud"},"content":"        assertEquals(expected, deleteAppointmentCommand.toString());","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"officialchengyud":77,"Kappaccinoh":2}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Type;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"        String deleteMessage \u003d (personToDelete.getType() \u003d\u003d Type.PATIENT","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"                ? DeleteCommand.MESSAGE_DELETE_PATIENT_SUCCESS","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"                : DeleteCommand.MESSAGE_DELETE_DOCTOR_SUCCESS);","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d String.format(deleteMessage, Messages.format(personToDelete));","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"        String deleteMessage \u003d (personToDelete.getType() \u003d\u003d Type.PATIENT","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"                ? DeleteCommand.MESSAGE_DELETE_PATIENT_SUCCESS","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"                : DeleteCommand.MESSAGE_DELETE_DOCTOR_SUCCESS);","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d String.format(deleteMessage, Messages.format(personToDelete));","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"alfaloo":9,"-":116}},{"path":"src/test/java/seedu/address/logic/commands/EditAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showAppointmentAtIndex;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT_1;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT_2;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_APPOINTMENT;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.testutil.TypicalPersons.BROWN;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"import seedu.address.testutil.EditAppointmentDescriptorBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"public class EditAppointmentCommandTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        Appointment editedAppointment \u003d new AppointmentBuilder().withDoctor((Doctor) BROWN).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder(editedAppointment).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(INDEX_FIRST_APPOINTMENT, descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d String.format(EditAppointmentCommand.MESSAGE_EDIT_APPOINTMENT_SUCCESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"                Messages.format(editedAppointment));","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"        expectedModel.setAppointment(model.getFilteredAppointmentList().get(0), editedAppointment);","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"        assertCommandSuccess(editAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"        Index indexLastAppointment \u003d Index.fromOneBased(model.getFilteredAppointmentList().size());","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"        Appointment lastAppointment \u003d model.getFilteredAppointmentList().get(indexLastAppointment.getZeroBased());","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"        AppointmentBuilder appointmentInList \u003d new AppointmentBuilder(lastAppointment);","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"Alteqa"},"content":"        Appointment editedAppointment \u003d appointmentInList.withDateTime(VALID_DATE).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"Alteqa"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder().withDateTime(VALID_DATE).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(indexLastAppointment, descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d String.format(EditAppointmentCommand.MESSAGE_EDIT_APPOINTMENT_SUCCESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"                Messages.format(editedAppointment));","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"        expectedModel.setAppointment(lastAppointment, editedAppointment);","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"        assertCommandSuccess(editAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"    //    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"    //    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"    //        EditAppointmentCommand editAppointmentCommand \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"    //                new EditAppointmentCommand(INDEX_FIRST_APPOINTMENT, new EditAppointmentDescriptor());","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"    //        Appointment editedAppointment \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"    //        model.getFilteredAppointmentList().get(INDEX_FIRST_APPOINTMENT.getZeroBased());","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"    //","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"    //        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"    //                EditAppointmentCommand.MESSAGE_EDIT_APPOINTMENT_SUCCESS, Messages.format(editedAppointment));","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"    //","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"    //        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"    //","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"    //        assertCommandSuccess(editAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"    //    }","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"        Appointment appointmentInFilteredList \u003d model.getFilteredAppointmentList()","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"                .get(INDEX_FIRST_APPOINTMENT.getZeroBased());","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"Alteqa"},"content":"        Appointment editedAppointment \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"Alteqa"},"content":"                new AppointmentBuilder(appointmentInFilteredList).withDateTime(VALID_DATE).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(INDEX_FIRST_APPOINTMENT,","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"Alteqa"},"content":"                new EditAppointmentDescriptorBuilder().withDateTime(VALID_DATE).build());","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d String.format(EditAppointmentCommand.MESSAGE_EDIT_APPOINTMENT_SUCCESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"                Messages.format(editedAppointment));","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"alfaloo"},"content":"        expectedModel.setAppointment(model.getFilteredAppointmentList().get(0), editedAppointment);","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"        assertCommandSuccess(editAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"    public void execute_appointmentAlreadyExists_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"ararchch"},"content":"        model.addAppointment(APPOINTMENT_1);","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"ararchch"},"content":"        Index idx \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"Alteqa"},"content":"        EditAppointmentDescriptor descriptor \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"Alteqa"},"content":"                new EditAppointmentDescriptorBuilder().withDateTime(\"2124-03-19 11:11\").build();","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"ararchch"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(idx, descriptor);","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"ararchch"},"content":"        assertThrows(CommandException.class, () -\u003e editAppointmentCommand.execute(model));","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"alfaloo"},"content":"    public void execute_invalidAppointmentIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"alfaloo"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredAppointmentList().size() + 1);","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"Alteqa"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder().withDateTime(VALID_DATE).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"alfaloo"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"alfaloo"},"content":"        assertCommandFailure(editAppointmentCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"alfaloo"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"alfaloo"},"content":"     * but smaller than size of address book","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"alfaloo"},"content":"    public void execute_invalidAppointmentIndexFilteredList_failure() {","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"alfaloo"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_APPOINTMENT;","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"alfaloo"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"alfaloo"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getAppointmentList().size());","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"alfaloo"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(outOfBoundIndex,","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"Alteqa"},"content":"                new EditAppointmentDescriptorBuilder().withDateTime(VALID_DATE).build());","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"alfaloo"},"content":"        assertCommandFailure(editAppointmentCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"alfaloo"},"content":"    public void equals() {","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"alfaloo"},"content":"        final EditAppointmentCommand standardAppointmentCommand \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"alfaloo"},"content":"                new EditAppointmentCommand(INDEX_FIRST_APPOINTMENT, new EditAppointmentDescriptor());","lastModifiedDate":"2024-03-27"},{"lineNumber":152,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"alfaloo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"alfaloo"},"content":"        EditAppointmentDescriptor copyDescriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"alfaloo"},"content":"        EditAppointmentCommand commandWithSameValues \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"alfaloo"},"content":"                new EditAppointmentCommand(INDEX_FIRST_APPOINTMENT, copyDescriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"alfaloo"},"content":"        assertTrue(standardAppointmentCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"alfaloo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"alfaloo"},"content":"        assertTrue(standardAppointmentCommand.equals(standardAppointmentCommand));","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":162,"author":{"gitId":"alfaloo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"alfaloo"},"content":"        assertFalse(standardAppointmentCommand.equals(null));","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":165,"author":{"gitId":"alfaloo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"alfaloo"},"content":"        assertFalse(standardAppointmentCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-27"},{"lineNumber":167,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"alfaloo"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":169,"author":{"gitId":"alfaloo"},"content":"        assertFalse(standardAppointmentCommand.equals(","lastModifiedDate":"2024-03-27"},{"lineNumber":170,"author":{"gitId":"alfaloo"},"content":"                new EditAppointmentCommand(INDEX_SECOND_APPOINTMENT, new EditAppointmentDescriptor())));","lastModifiedDate":"2024-03-27"},{"lineNumber":171,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":172,"author":{"gitId":"alfaloo"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"alfaloo"},"content":"        EditAppointmentDescriptor differentDescriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"Alteqa"},"content":"        differentDescriptor.setDateTime(new AppointmentDateTime(\"3000-03-03 10:55\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":175,"author":{"gitId":"alfaloo"},"content":"        assertFalse(standardAppointmentCommand.equals(","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"alfaloo"},"content":"                new EditAppointmentCommand(INDEX_FIRST_APPOINTMENT, differentDescriptor)));","lastModifiedDate":"2024-03-27"},{"lineNumber":177,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"alfaloo"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"alfaloo"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"alfaloo"},"content":"        EditAppointmentDescriptor editAppointmentDescriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2024-03-27"},{"lineNumber":183,"author":{"gitId":"alfaloo"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(index, editAppointmentDescriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":184,"author":{"gitId":"alfaloo"},"content":"        String expected \u003d EditAppointmentCommand.class.getCanonicalName() + \"{index\u003d\" + index","lastModifiedDate":"2024-03-27"},{"lineNumber":185,"author":{"gitId":"alfaloo"},"content":"                + \", editAppointmentDescriptor\u003d\" + editAppointmentDescriptor + \"}\";","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"alfaloo"},"content":"        assertEquals(expected, editAppointmentCommand.toString());","lastModifiedDate":"2024-03-27"},{"lineNumber":187,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":190,"author":{"gitId":"ararchch"},"content":"    public void getPatientNric_returnsNricAsOptional() {","lastModifiedDate":"2024-04-03"},{"lineNumber":191,"author":{"gitId":"ararchch"},"content":"        model.addAppointment(APPOINTMENT_2);","lastModifiedDate":"2024-04-03"},{"lineNumber":192,"author":{"gitId":"ararchch"},"content":"        Index idx \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-04-03"},{"lineNumber":193,"author":{"gitId":"Alteqa"},"content":"        EditAppointmentDescriptor descriptor \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":194,"author":{"gitId":"Alteqa"},"content":"                new EditAppointmentDescriptorBuilder().withDateTime(\"2124-03-19 11:00\").build();","lastModifiedDate":"2024-04-04"},{"lineNumber":195,"author":{"gitId":"ararchch"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(idx, descriptor);","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":197,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":198,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"Alteqa":13,"alfaloo":151,"ararchch":34}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"        Person editedPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPatient).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"Alteqa"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"Alteqa"},"content":"                Messages.format(editedPatient));","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"Alteqa"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPatient);","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"Alteqa"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"Alteqa"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"Alteqa"},"content":"        Person editedPatient \u003d new PatientBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"Alteqa"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"Alteqa"},"content":"                Messages.format(editedPatient));","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"Alteqa"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPatient);","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2024-04-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2024-04-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2024-04-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-04-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-04-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-04-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-04-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2024-04-01"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2024-04-01"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"Alteqa":12,"-":151}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"        EditCommand.EditPersonDescriptor descriptorWithSameValues \u003d new EditCommand.EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"        EditCommand.EditPersonDescriptor editedAmy \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"                new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"Alteqa"},"content":"        // different nric -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"Alteqa"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"Alteqa"},"content":"        // different dob -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withDob(VALID_DOB_BOB).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"Alteqa"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"Alteqa"},"content":"        String expected \u003d EditCommand.EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"Alteqa"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", nric\u003d\"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"Alteqa"},"content":"                + editPersonDescriptor.getNric().orElse(null) + \", dob\u003d\"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"Alteqa"},"content":"                + editPersonDescriptor.getDob().orElse(null) + \"}\";","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"Alteqa":14,"-":51}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalPersons.CARL_GOH;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"Kappaccinoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"Kappaccinoh"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Alice Benson\");","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON), model.getFilteredPersonList());","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"Kappaccinoh"},"content":"    public void execute_singleKeyword_multiplePatientsFound() {","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"Kappaccinoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"Kappaccinoh"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Carl\");","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"Kappaccinoh"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"Kappaccinoh"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"Kappaccinoh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(Arrays.asList(CARL, CARL_GOH), model.getFilteredPersonList());","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"Kappaccinoh"},"content":"    public void execute_noMatch_noPatientFound() {","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"Kappaccinoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"Kappaccinoh"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Zorro\");","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"Kappaccinoh"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"Kappaccinoh"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"Kappaccinoh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"Kappaccinoh":26,"-":86}},{"path":"src/test/java/seedu/address/logic/commands/QueryDoctorAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.Messages.MESSAGE_APPOINTMENTS_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT_1;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT_2;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT_3;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAddressBook;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.appointment.AppointmentContainsDoctorPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"public class QueryDoctorAppointmentCommandTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"    public void equals() {","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsDoctorPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsDoctorPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsDoctorPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsDoctorPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"        QueryDoctorAppointmentCommand findFirstCommand \u003d new QueryDoctorAppointmentCommand(firstPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"        QueryDoctorAppointmentCommand findSecondCommand \u003d new QueryDoctorAppointmentCommand(secondPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"        QueryDoctorAppointmentCommand findFirstCommandCopy \u003d new QueryDoctorAppointmentCommand(firstPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"    public void execute_zeroKeywords_noAppointmentsFound() {","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPOINTMENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsDoctorPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"        QueryDoctorAppointmentCommand command \u003d new QueryDoctorAppointmentCommand(predicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredAppointmentList());","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"Kappaccinoh"},"content":"    public void execute_singleKeyword_singleAppointmentFound() {","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"Kappaccinoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPOINTMENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsDoctorPredicate predicate \u003d preparePredicate(\"S2378593A\");","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"Kappaccinoh"},"content":"        QueryDoctorAppointmentCommand command \u003d new QueryDoctorAppointmentCommand(predicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"Kappaccinoh"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"Kappaccinoh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(Arrays.asList(APPOINTMENT_1, APPOINTMENT_2, APPOINTMENT_3), model.getFilteredAppointmentList());","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"    public void execute_noMatch_noPatientFound() {","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"Kappaccinoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPOINTMENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsDoctorPredicate predicate \u003d preparePredicate(\"Zorro\");","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"Kappaccinoh"},"content":"        QueryDoctorAppointmentCommand command \u003d new QueryDoctorAppointmentCommand(predicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"Kappaccinoh"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"Kappaccinoh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredAppointmentList());","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"Kappaccinoh"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsDoctorPredicate predicate \u003d new AppointmentContainsDoctorPredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"Kappaccinoh"},"content":"                Arrays.asList(\"keyword\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"Kappaccinoh"},"content":"        QueryDoctorAppointmentCommand findCommand \u003d new QueryDoctorAppointmentCommand(predicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"Kappaccinoh"},"content":"        String expected \u003d QueryDoctorAppointmentCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"Kappaccinoh"},"content":"     * Parses {@code userInput} into a {@code AppointmentContainsDoctorPredicate}.","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"Kappaccinoh"},"content":"    private AppointmentContainsDoctorPredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"Kappaccinoh"},"content":"        return new AppointmentContainsDoctorPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"Kappaccinoh":99}},{"path":"src/test/java/seedu/address/logic/commands/QueryDoctorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.testutil.TypicalPersons.DAMES;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.testutil.TypicalPersons.DAMES_GOH;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.testutil.TypicalPersons.ERIN;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.testutil.TypicalPersons.GON;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.person.DoctorContainsKeywordsPredicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"public class QueryDoctorCommandTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"    public void equals() {","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"        DoctorContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"                new DoctorContainsKeywordsPredicate((Collections.singletonList(\"first\")));","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"        DoctorContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"                new DoctorContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"        QueryDoctorCommand findFirstCommand \u003d new QueryDoctorCommand(firstPredicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"        QueryDoctorCommand findSecondCommand \u003d new QueryDoctorCommand(secondPredicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Alteqa"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"Alteqa"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Alteqa"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"Alteqa"},"content":"        QueryDoctorCommand findFirstCommandCopy \u003d new QueryDoctorCommand(firstPredicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"Alteqa"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"Alteqa"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"Alteqa"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"Alteqa"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"Alteqa"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"Alteqa"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"Alteqa"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"Alteqa"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"        DoctorContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"Alteqa"},"content":"        QueryDoctorCommand command \u003d new QueryDoctorCommand(predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"Alteqa"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"Alteqa"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"Alteqa"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"Alteqa"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"Alteqa"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"Kappaccinoh"},"content":"        DoctorContainsKeywordsPredicate predicate \u003d preparePredicate(\"Erin Gon\");","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"Alteqa"},"content":"        QueryDoctorCommand command \u003d new QueryDoctorCommand(predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"Alteqa"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"Alteqa"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"Alteqa"},"content":"        assertEquals(Arrays.asList(ERIN, GON), model.getFilteredPersonList());","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"Alteqa"},"content":"    public void execute_singleKeyword_multipleDoctorsFound() {","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"Alteqa"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"Kappaccinoh"},"content":"        DoctorContainsKeywordsPredicate predicate \u003d preparePredicate(\"Dames\");","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"Alteqa"},"content":"        QueryDoctorCommand command \u003d new QueryDoctorCommand(predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"Alteqa"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"Alteqa"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"Alteqa"},"content":"        assertEquals(Arrays.asList(DAMES, DAMES_GOH), model.getFilteredPersonList());","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"Alteqa"},"content":"    public void execute_noMatch_noDoctorFound() {","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"Alteqa"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"Kappaccinoh"},"content":"        DoctorContainsKeywordsPredicate predicate \u003d preparePredicate(\"Zorro\");","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"Alteqa"},"content":"        QueryDoctorCommand command \u003d new QueryDoctorCommand(predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"Alteqa"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"Alteqa"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"Alteqa"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"Alteqa"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"Kappaccinoh"},"content":"        DoctorContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"Kappaccinoh"},"content":"                new DoctorContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"Alteqa"},"content":"        QueryDoctorCommand findCommand \u003d new QueryDoctorCommand(predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"Alteqa"},"content":"        String expected \u003d QueryDoctorCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"Alteqa"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"Alteqa"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"Alteqa"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"Alteqa"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"Kappaccinoh"},"content":"    private DoctorContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"Kappaccinoh"},"content":"        return new DoctorContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"Alteqa"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Alteqa":100,"Kappaccinoh":13}},{"path":"src/test/java/seedu/address/logic/commands/QueryPatientAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.Messages.MESSAGE_APPOINTMENTS_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT_4;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAddressBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.appointment.AppointmentContainsPatientPredicate;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"public class QueryPatientAppointmentCommandTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"    public void equals() {","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsPatientPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsPatientPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientAppointmentCommand findFirstCommand \u003d new QueryPatientAppointmentCommand(firstPredicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientAppointmentCommand findSecondCommand \u003d new QueryPatientAppointmentCommand(secondPredicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientAppointmentCommand findFirstCommandCopy \u003d new QueryPatientAppointmentCommand(firstPredicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"    public void execute_zeroKeywords_noAppointmentsFound() {","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPOINTMENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientAppointmentCommand command \u003d new QueryPatientAppointmentCommand(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredAppointmentList());","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"    public void execute_singleKeyword_singleAppointmentFound() {","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPOINTMENTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate predicate \u003d preparePredicate(\"S8734985A\");","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientAppointmentCommand command \u003d new QueryPatientAppointmentCommand(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"Kappaccinoh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(Arrays.asList(APPOINTMENT_4), model.getFilteredAppointmentList());","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"Kappaccinoh"},"content":"    public void execute_noMatch_noPatientFound() {","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"Kappaccinoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPOINTMENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate predicate \u003d preparePredicate(\"Zorro\");","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientAppointmentCommand command \u003d new QueryPatientAppointmentCommand(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"Kappaccinoh"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"Kappaccinoh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredAppointmentList());","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"Kappaccinoh"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate predicate \u003d new AppointmentContainsPatientPredicate(","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"Kappaccinoh"},"content":"                Arrays.asList(\"keyword\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientAppointmentCommand findCommand \u003d new QueryPatientAppointmentCommand(predicate);","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"Kappaccinoh"},"content":"        String expected \u003d QueryPatientAppointmentCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"Kappaccinoh"},"content":"     * Parses {@code userInput} into a {@code AppointmentContainsPatientPredicate}.","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"Kappaccinoh"},"content":"    private AppointmentContainsPatientPredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"Kappaccinoh"},"content":"        return new AppointmentContainsPatientPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Kappaccinoh":97}},{"path":"src/test/java/seedu/address/logic/commands/QueryPatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalPersons.CARL_GOH;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.person.PatientContainsKeywordsPredicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"public class QueryPatientCommandTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"        PatientContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientContainsKeywordsPredicate((Collections.singletonList(\"first\")));","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"        PatientContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientCommand findFirstCommand \u003d new QueryPatientCommand(firstPredicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientCommand findSecondCommand \u003d new QueryPatientCommand(secondPredicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientCommand findFirstCommandCopy \u003d new QueryPatientCommand(firstPredicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"        PatientContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientCommand command \u003d new QueryPatientCommand(predicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"Kappaccinoh"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"Kappaccinoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"Kappaccinoh"},"content":"        PatientContainsKeywordsPredicate predicate \u003d preparePredicate(\"Alice Benson\");","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientCommand command \u003d new QueryPatientCommand(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"Kappaccinoh"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"Kappaccinoh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON), model.getFilteredPersonList());","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"Kappaccinoh"},"content":"    public void execute_singleKeyword_multiplePatientsFound() {","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"Kappaccinoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"Kappaccinoh"},"content":"        PatientContainsKeywordsPredicate predicate \u003d preparePredicate(\"Carl\");","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientCommand command \u003d new QueryPatientCommand(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"Kappaccinoh"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"Kappaccinoh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(Arrays.asList(CARL, CARL_GOH), model.getFilteredPersonList());","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"Kappaccinoh"},"content":"    public void execute_noMatch_noPatientFound() {","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"Kappaccinoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"Kappaccinoh"},"content":"        PatientContainsKeywordsPredicate predicate \u003d preparePredicate(\"Zorro\");","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientCommand command \u003d new QueryPatientCommand(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"Kappaccinoh"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"Kappaccinoh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"Kappaccinoh"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"Kappaccinoh"},"content":"        PatientContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientCommand findCommand \u003d new QueryPatientCommand(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"Kappaccinoh"},"content":"        String expected \u003d QueryPatientCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"Kappaccinoh"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"Kappaccinoh"},"content":"    private PatientContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"Kappaccinoh"},"content":"        return new PatientContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Kappaccinoh":113}},{"path":"src/test/java/seedu/address/logic/parser/AddAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"class AddAppointmentCommandParserTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"    private final AddAppointmentCommandParser parser \u003d new AddAppointmentCommandParser();","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"    public void parse_missingPrefix_throwsParseException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"        String args \u003d \"ad/2024-01-01\";","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    public void parse_emptyPrefix_throwsParseException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"        String args \u003d \"\";","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"ararchch":24}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"////package seedu.address.logic.parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"////import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"Alteqa"},"content":"////import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"////import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"////import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"Alteqa"},"content":"////import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"Alteqa"},"content":"////import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"Alteqa"},"content":"////import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"Alteqa"},"content":"////import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"Alteqa"},"content":"////import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"Alteqa"},"content":"////import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"Alteqa"},"content":"////import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"Alteqa"},"content":"////public class AddCommandParserTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"Alteqa"},"content":"////    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"////    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"Alteqa"},"content":"////    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"Alteqa"},"content":"////        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"Alteqa"},"content":"////        // whitespace only preamble","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"Alteqa"},"content":"////        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"Alteqa"},"content":"////                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"Alteqa"},"content":"////        // multiple tags - all accepted","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"Alteqa"},"content":"////        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"Alteqa"},"content":"////                .build();","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"Alteqa"},"content":"////        assertParseSuccess(parser,","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"Alteqa"},"content":"////                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB +","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"Alteqa"},"content":"////                TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"Alteqa"},"content":"////                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"Alteqa"},"content":"////    }","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"Alteqa"},"content":"////    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"Alteqa"},"content":"////    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"Alteqa"},"content":"////        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"Alteqa"},"content":"////                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"Alteqa"},"content":"////        // multiple names","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"Alteqa"},"content":"////                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"Alteqa"},"content":"////        // multiple phones","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"Alteqa"},"content":"////                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"Alteqa"},"content":"////        // multiple emails","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"Alteqa"},"content":"////                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"Alteqa"},"content":"////        // multiple addresses","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"Alteqa"},"content":"////                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"Alteqa"},"content":"////        // multiple fields repeated","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser,","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"Alteqa"},"content":"////                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"Alteqa"},"content":"////                        + validExpectedPersonString,","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"Alteqa"},"content":"////                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"Alteqa"},"content":"////                PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"Alteqa"},"content":"////        // invalid value followed by valid value","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"Alteqa"},"content":"////        // invalid name","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"Alteqa"},"content":"////                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"Alteqa"},"content":"////        // invalid email","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"Alteqa"},"content":"////                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"Alteqa"},"content":"////        // invalid phone","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"Alteqa"},"content":"////                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"Alteqa"},"content":"////        // invalid address","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"Alteqa"},"content":"////                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2024-03-31"},{"lineNumber":114,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"Alteqa"},"content":"////        // valid value followed by invalid value","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":117,"author":{"gitId":"Alteqa"},"content":"////        // invalid name","lastModifiedDate":"2024-03-31"},{"lineNumber":118,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"Alteqa"},"content":"////                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":121,"author":{"gitId":"Alteqa"},"content":"////        // invalid email","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"Alteqa"},"content":"////                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"Alteqa"},"content":"////        // invalid phone","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"Alteqa"},"content":"////                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-31"},{"lineNumber":128,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":129,"author":{"gitId":"Alteqa"},"content":"////        // invalid address","lastModifiedDate":"2024-03-31"},{"lineNumber":130,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2024-03-31"},{"lineNumber":131,"author":{"gitId":"Alteqa"},"content":"////                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2024-03-31"},{"lineNumber":132,"author":{"gitId":"Alteqa"},"content":"////    }","lastModifiedDate":"2024-03-31"},{"lineNumber":133,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":134,"author":{"gitId":"Alteqa"},"content":"////    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"Alteqa"},"content":"////    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":136,"author":{"gitId":"Alteqa"},"content":"////        // zero tags","lastModifiedDate":"2024-03-31"},{"lineNumber":137,"author":{"gitId":"Alteqa"},"content":"////        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2024-03-31"},{"lineNumber":138,"author":{"gitId":"Alteqa"},"content":"////        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2024-03-31"},{"lineNumber":139,"author":{"gitId":"Alteqa"},"content":"////                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"Alteqa"},"content":"////    }","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":142,"author":{"gitId":"Alteqa"},"content":"////    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":143,"author":{"gitId":"Alteqa"},"content":"////    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-31"},{"lineNumber":144,"author":{"gitId":"Alteqa"},"content":"////        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-31"},{"lineNumber":145,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":146,"author":{"gitId":"Alteqa"},"content":"////        // missing name prefix","lastModifiedDate":"2024-03-31"},{"lineNumber":147,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-03-31"},{"lineNumber":148,"author":{"gitId":"Alteqa"},"content":"////                expectedMessage);","lastModifiedDate":"2024-03-31"},{"lineNumber":149,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":150,"author":{"gitId":"Alteqa"},"content":"////        // missing phone prefix","lastModifiedDate":"2024-03-31"},{"lineNumber":151,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-03-31"},{"lineNumber":152,"author":{"gitId":"Alteqa"},"content":"////                expectedMessage);","lastModifiedDate":"2024-03-31"},{"lineNumber":153,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":154,"author":{"gitId":"Alteqa"},"content":"////        // missing email prefix","lastModifiedDate":"2024-03-31"},{"lineNumber":155,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-03-31"},{"lineNumber":156,"author":{"gitId":"Alteqa"},"content":"////                expectedMessage);","lastModifiedDate":"2024-03-31"},{"lineNumber":157,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":158,"author":{"gitId":"Alteqa"},"content":"////        // missing address prefix","lastModifiedDate":"2024-03-31"},{"lineNumber":159,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2024-03-31"},{"lineNumber":160,"author":{"gitId":"Alteqa"},"content":"////                expectedMessage);","lastModifiedDate":"2024-03-31"},{"lineNumber":161,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":162,"author":{"gitId":"Alteqa"},"content":"////        // all prefixes missing","lastModifiedDate":"2024-03-31"},{"lineNumber":163,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2024-03-31"},{"lineNumber":164,"author":{"gitId":"Alteqa"},"content":"////                expectedMessage);","lastModifiedDate":"2024-03-31"},{"lineNumber":165,"author":{"gitId":"Alteqa"},"content":"////    }","lastModifiedDate":"2024-03-31"},{"lineNumber":166,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":167,"author":{"gitId":"Alteqa"},"content":"////    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":168,"author":{"gitId":"Alteqa"},"content":"////    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-31"},{"lineNumber":169,"author":{"gitId":"Alteqa"},"content":"////        // invalid name","lastModifiedDate":"2024-03-31"},{"lineNumber":170,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-31"},{"lineNumber":171,"author":{"gitId":"Alteqa"},"content":"////                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-31"},{"lineNumber":172,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":173,"author":{"gitId":"Alteqa"},"content":"////        // invalid phone","lastModifiedDate":"2024-03-31"},{"lineNumber":174,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-31"},{"lineNumber":175,"author":{"gitId":"Alteqa"},"content":"////                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-31"},{"lineNumber":176,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":177,"author":{"gitId":"Alteqa"},"content":"////        // invalid email","lastModifiedDate":"2024-03-31"},{"lineNumber":178,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-31"},{"lineNumber":179,"author":{"gitId":"Alteqa"},"content":"////                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-31"},{"lineNumber":180,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":181,"author":{"gitId":"Alteqa"},"content":"////        // invalid address","lastModifiedDate":"2024-03-31"},{"lineNumber":182,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2024-03-31"},{"lineNumber":183,"author":{"gitId":"Alteqa"},"content":"////                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-31"},{"lineNumber":184,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":185,"author":{"gitId":"Alteqa"},"content":"////        // invalid tag","lastModifiedDate":"2024-03-31"},{"lineNumber":186,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-31"},{"lineNumber":187,"author":{"gitId":"Alteqa"},"content":"////                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-31"},{"lineNumber":188,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":189,"author":{"gitId":"Alteqa"},"content":"////        // two invalid values, only first invalid value reported","lastModifiedDate":"2024-03-31"},{"lineNumber":190,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2024-03-31"},{"lineNumber":191,"author":{"gitId":"Alteqa"},"content":"////                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-31"},{"lineNumber":192,"author":{"gitId":"Alteqa"},"content":"////","lastModifiedDate":"2024-03-31"},{"lineNumber":193,"author":{"gitId":"Alteqa"},"content":"////        // non-empty preamble","lastModifiedDate":"2024-03-31"},{"lineNumber":194,"author":{"gitId":"Alteqa"},"content":"////        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-31"},{"lineNumber":195,"author":{"gitId":"Alteqa"},"content":"////                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-31"},{"lineNumber":196,"author":{"gitId":"Alteqa"},"content":"////                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-31"},{"lineNumber":197,"author":{"gitId":"Alteqa"},"content":"////    }","lastModifiedDate":"2024-03-31"},{"lineNumber":198,"author":{"gitId":"Alteqa"},"content":"////}","lastModifiedDate":"2024-03-31"},{"lineNumber":199,"author":{"gitId":"Alteqa"},"content":"//","lastModifiedDate":"2024-03-31"},{"lineNumber":200,"author":{"gitId":"alfaloo"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2024-03-11"},{"lineNumber":201,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":202,"author":{"gitId":"Alteqa"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-31"},{"lineNumber":203,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-11"},{"lineNumber":204,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":205,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":206,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":207,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":208,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":209,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":210,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":211,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":212,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":213,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":214,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":215,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":216,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":217,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-11"},{"lineNumber":218,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-11"},{"lineNumber":219,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-11"},{"lineNumber":220,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":221,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":222,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":223,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":224,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-11"},{"lineNumber":225,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-11"},{"lineNumber":226,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-11"},{"lineNumber":227,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":228,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-11"},{"lineNumber":229,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-11"},{"lineNumber":230,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":231,"author":{"gitId":"alfaloo"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":232,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":233,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":234,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":235,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-11"},{"lineNumber":236,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-11"},{"lineNumber":237,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":238,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":239,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":240,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":241,"author":{"gitId":"alfaloo"},"content":"//public class AddCommandParserTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":242,"author":{"gitId":"alfaloo"},"content":"//    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2024-03-11"},{"lineNumber":243,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":244,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":245,"author":{"gitId":"alfaloo"},"content":"//    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":246,"author":{"gitId":"Alteqa"},"content":"//        assertTrue(true);","lastModifiedDate":"2024-03-31"},{"lineNumber":247,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":248,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":249,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":250,"author":{"gitId":"alfaloo"},"content":"//    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":251,"author":{"gitId":"alfaloo"},"content":"//        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":252,"author":{"gitId":"alfaloo"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-11"},{"lineNumber":253,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":254,"author":{"gitId":"alfaloo"},"content":"//        // multiple names","lastModifiedDate":"2024-03-11"},{"lineNumber":255,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":256,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-11"},{"lineNumber":257,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":258,"author":{"gitId":"alfaloo"},"content":"//        // multiple phones","lastModifiedDate":"2024-03-11"},{"lineNumber":259,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":260,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-11"},{"lineNumber":261,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":262,"author":{"gitId":"alfaloo"},"content":"//        // multiple emails","lastModifiedDate":"2024-03-11"},{"lineNumber":263,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":264,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2024-03-11"},{"lineNumber":265,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":266,"author":{"gitId":"alfaloo"},"content":"//        // multiple addresses","lastModifiedDate":"2024-03-11"},{"lineNumber":267,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":268,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2024-03-11"},{"lineNumber":269,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":270,"author":{"gitId":"alfaloo"},"content":"//        // multiple fields repeated","lastModifiedDate":"2024-03-11"},{"lineNumber":271,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser,","lastModifiedDate":"2024-03-11"},{"lineNumber":272,"author":{"gitId":"alfaloo"},"content":"//                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-11"},{"lineNumber":273,"author":{"gitId":"alfaloo"},"content":"//                        + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":274,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-11"},{"lineNumber":275,"author":{"gitId":"alfaloo"},"content":"//                        PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2024-03-11"},{"lineNumber":276,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":277,"author":{"gitId":"alfaloo"},"content":"//        // invalid value followed by valid value","lastModifiedDate":"2024-03-11"},{"lineNumber":278,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":279,"author":{"gitId":"alfaloo"},"content":"//        // invalid name","lastModifiedDate":"2024-03-11"},{"lineNumber":280,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":281,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-11"},{"lineNumber":282,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":283,"author":{"gitId":"alfaloo"},"content":"//        // invalid email","lastModifiedDate":"2024-03-11"},{"lineNumber":284,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":285,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2024-03-11"},{"lineNumber":286,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":287,"author":{"gitId":"alfaloo"},"content":"//        // invalid phone","lastModifiedDate":"2024-03-11"},{"lineNumber":288,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":289,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-11"},{"lineNumber":290,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":291,"author":{"gitId":"alfaloo"},"content":"//        // invalid address","lastModifiedDate":"2024-03-11"},{"lineNumber":292,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":293,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2024-03-11"},{"lineNumber":294,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":295,"author":{"gitId":"alfaloo"},"content":"//        // valid value followed by invalid value","lastModifiedDate":"2024-03-11"},{"lineNumber":296,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":297,"author":{"gitId":"alfaloo"},"content":"//        // invalid name","lastModifiedDate":"2024-03-11"},{"lineNumber":298,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":299,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-11"},{"lineNumber":300,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":301,"author":{"gitId":"alfaloo"},"content":"//        // invalid email","lastModifiedDate":"2024-03-11"},{"lineNumber":302,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":303,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2024-03-11"},{"lineNumber":304,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":305,"author":{"gitId":"alfaloo"},"content":"//        // invalid phone","lastModifiedDate":"2024-03-11"},{"lineNumber":306,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":307,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-11"},{"lineNumber":308,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":309,"author":{"gitId":"alfaloo"},"content":"//        // invalid address","lastModifiedDate":"2024-03-11"},{"lineNumber":310,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":311,"author":{"gitId":"alfaloo"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2024-03-11"},{"lineNumber":312,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":313,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":314,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":315,"author":{"gitId":"alfaloo"},"content":"//    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":316,"author":{"gitId":"Alteqa"},"content":"//        assertTrue(true);","lastModifiedDate":"2024-03-31"},{"lineNumber":317,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":318,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":319,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":320,"author":{"gitId":"alfaloo"},"content":"//    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":321,"author":{"gitId":"alfaloo"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-11"},{"lineNumber":322,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":323,"author":{"gitId":"alfaloo"},"content":"//        // missing name prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":324,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":325,"author":{"gitId":"alfaloo"},"content":"//                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":326,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":327,"author":{"gitId":"alfaloo"},"content":"//        // missing phone prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":328,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":329,"author":{"gitId":"alfaloo"},"content":"//                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":330,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":331,"author":{"gitId":"alfaloo"},"content":"//        // missing email prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":332,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":333,"author":{"gitId":"alfaloo"},"content":"//                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":334,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":335,"author":{"gitId":"alfaloo"},"content":"//        // missing address prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":336,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":337,"author":{"gitId":"alfaloo"},"content":"//                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":338,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":339,"author":{"gitId":"alfaloo"},"content":"//        // all prefixes missing","lastModifiedDate":"2024-03-11"},{"lineNumber":340,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":341,"author":{"gitId":"alfaloo"},"content":"//                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":342,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":343,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":344,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":345,"author":{"gitId":"alfaloo"},"content":"//    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":346,"author":{"gitId":"alfaloo"},"content":"//        // invalid name","lastModifiedDate":"2024-03-11"},{"lineNumber":347,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":348,"author":{"gitId":"alfaloo"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":349,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":350,"author":{"gitId":"alfaloo"},"content":"//        // invalid phone","lastModifiedDate":"2024-03-11"},{"lineNumber":351,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":352,"author":{"gitId":"alfaloo"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":353,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":354,"author":{"gitId":"alfaloo"},"content":"//        // invalid email","lastModifiedDate":"2024-03-11"},{"lineNumber":355,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":356,"author":{"gitId":"alfaloo"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":357,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":358,"author":{"gitId":"alfaloo"},"content":"//        // invalid address","lastModifiedDate":"2024-03-11"},{"lineNumber":359,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2024-03-11"},{"lineNumber":360,"author":{"gitId":"alfaloo"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":361,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":362,"author":{"gitId":"alfaloo"},"content":"//        // invalid tag","lastModifiedDate":"2024-03-11"},{"lineNumber":363,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":364,"author":{"gitId":"alfaloo"},"content":"//                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":365,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":366,"author":{"gitId":"alfaloo"},"content":"//        // two invalid values, only first invalid value reported","lastModifiedDate":"2024-03-11"},{"lineNumber":367,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":368,"author":{"gitId":"alfaloo"},"content":"//                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":369,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":370,"author":{"gitId":"alfaloo"},"content":"//        // non-empty preamble","lastModifiedDate":"2024-03-11"},{"lineNumber":371,"author":{"gitId":"alfaloo"},"content":"//        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":372,"author":{"gitId":"alfaloo"},"content":"//                        + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-11"},{"lineNumber":373,"author":{"gitId":"alfaloo"},"content":"//                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-11"},{"lineNumber":374,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":375,"author":{"gitId":"alfaloo"},"content":"//}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"Alteqa":202,"alfaloo":173}},{"path":"src/test/java/seedu/address/logic/parser/AddDoctorCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOB_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOB_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DOB_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"officialchengyud"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.DoB;","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"public class AddDoctorCommandParserTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"officialchengyud"},"content":"    private AddDoctorCommandParser parser \u003d new AddDoctorCommandParser();","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"    //    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"    //    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"    //        Patient expectedPerson \u003d new PatientBuilder(BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"    //","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"    //        // whitespace only preamble","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"officialchengyud"},"content":"    //        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NRIC_DESC_BOB + NAME_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"    //                + PHONE_DESC_BOB, new AddPatientCommand(expectedPerson));","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"    //    }","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"officialchengyud"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"officialchengyud"},"content":"        String validExpectedPersonString \u003d NRIC_DESC_BOB + NAME_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"officialchengyud"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"officialchengyud"},"content":"        // multiple names","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, NRIC_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"officialchengyud"},"content":"        // multiple phones","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"officialchengyud"},"content":"        // multiple emails","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, DOB_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DOB));","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"officialchengyud"},"content":"        // multiple addresses","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"officialchengyud"},"content":"        // multiple fields repeated","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"officialchengyud"},"content":"                validExpectedPersonString + NRIC_DESC_AMY + NAME_DESC_AMY + DOB_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"officialchengyud"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC, PREFIX_NAME,","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"officialchengyud"},"content":"                        PREFIX_DOB, PREFIX_PHONE));","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"officialchengyud"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"officialchengyud"},"content":"        // invalid nric","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"officialchengyud"},"content":"        // invalid name","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"officialchengyud"},"content":"        // invalid dob","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, INVALID_DOB_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DOB));","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"officialchengyud"},"content":"        // invalid phone","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"officialchengyud"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"officialchengyud"},"content":"        // invalid nric","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NRIC_DESC,","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"officialchengyud"},"content":"        // invalid name","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"officialchengyud"},"content":"        // invalid dob","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_DOB_DESC,","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DOB));","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"officialchengyud"},"content":"        // invalid phone","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"officialchengyud"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"officialchengyud"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"officialchengyud"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDoctorCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"officialchengyud"},"content":"        // missing nric prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, VALID_NRIC_BOB + NAME_DESC_BOB + DOB_DESC_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"officialchengyud"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"officialchengyud"},"content":"        // missing name prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + VALID_NAME_BOB + DOB_DESC_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"officialchengyud"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"officialchengyud"},"content":"        // missing dob prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + VALID_NAME_BOB + VALID_DOB_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"officialchengyud"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"officialchengyud"},"content":"        // missing phone prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + VALID_NAME_BOB + VALID_DOB_BOB + VALID_PHONE_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"officialchengyud"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"officialchengyud"},"content":"        // all prefixes missing","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, VALID_NRIC_BOB + VALID_NAME_BOB + VALID_DOB_BOB + VALID_PHONE_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"officialchengyud"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"officialchengyud"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"officialchengyud"},"content":"        // invalid nric","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + NAME_DESC_BOB + DOB_DESC_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"officialchengyud"},"content":"                Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"officialchengyud"},"content":"        // invalid name","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + INVALID_NAME_DESC + DOB_DESC_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"officialchengyud"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"officialchengyud"},"content":"        // invalid dob","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB + INVALID_DOB_DESC + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"officialchengyud"},"content":"                DoB.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"officialchengyud"},"content":"        // invalid phone","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB + DOB_DESC_BOB + INVALID_PHONE_DESC,","lastModifiedDate":"2024-04-12"},{"lineNumber":154,"author":{"gitId":"alfaloo"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-12"},{"lineNumber":155,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"officialchengyud"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + NAME_DESC_BOB + DOB_DESC_BOB + INVALID_PHONE_DESC,","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"officialchengyud"},"content":"                Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"officialchengyud"},"content":"        // non-empty preamble","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NRIC_DESC_BOB + NAME_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"officialchengyud"},"content":"                        + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"officialchengyud"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDoctorCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"alfaloo":2,"officialchengyud":163}},{"path":"src/test/java/seedu/address/logic/parser/AddPatientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOB_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOB_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DOB_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.DoB;","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"public class AddPatientCommandParserTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"    private AddPatientCommandParser parser \u003d new AddPatientCommandParser();","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    //    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"    //    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"    //        Patient expectedPerson \u003d new PatientBuilder(BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"    //","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"    //        // whitespace only preamble","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"    //        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NRIC_DESC_BOB + NAME_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"    //                + PHONE_DESC_BOB, new AddPatientCommand(expectedPerson));","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"    //    }","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"        String validExpectedPersonString \u003d NRIC_DESC_BOB + NAME_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"        // multiple names","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, NRIC_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"        // multiple phones","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"        // multiple emails","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, DOB_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DOB));","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"        // multiple addresses","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"        // multiple fields repeated","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"                validExpectedPersonString + NRIC_DESC_AMY + NAME_DESC_AMY + DOB_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC, PREFIX_NAME,","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"                        PREFIX_DOB, PREFIX_PHONE));","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"        // invalid nric","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"        // invalid name","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"        // invalid dob","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, INVALID_DOB_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DOB));","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"        // invalid phone","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"        // invalid nric","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NRIC_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"        // invalid name","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"        // invalid dob","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_DOB_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DOB));","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"        // invalid phone","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"alfaloo"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPatientCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"alfaloo"},"content":"        // missing nric prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, VALID_NRIC_BOB + NAME_DESC_BOB + DOB_DESC_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"alfaloo"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"alfaloo"},"content":"        // missing name prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + VALID_NAME_BOB + DOB_DESC_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"alfaloo"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"alfaloo"},"content":"        // missing dob prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + VALID_NAME_BOB + VALID_DOB_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"alfaloo"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"alfaloo"},"content":"        // missing phone prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + VALID_NAME_BOB + VALID_DOB_BOB + VALID_PHONE_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"alfaloo"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"alfaloo"},"content":"        // all prefixes missing","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, VALID_NRIC_BOB + VALID_NAME_BOB + VALID_DOB_BOB + VALID_PHONE_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"alfaloo"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"alfaloo"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"alfaloo"},"content":"        // invalid nric","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + NAME_DESC_BOB + DOB_DESC_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"alfaloo"},"content":"                Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"alfaloo"},"content":"        // invalid name","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + INVALID_NAME_DESC + DOB_DESC_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"alfaloo"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"alfaloo"},"content":"        // invalid dob","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB + INVALID_DOB_DESC + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"alfaloo"},"content":"                DoB.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"alfaloo"},"content":"        // invalid phone","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB + DOB_DESC_BOB + INVALID_PHONE_DESC,","lastModifiedDate":"2024-04-12"},{"lineNumber":154,"author":{"gitId":"alfaloo"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-12"},{"lineNumber":155,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"alfaloo"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2024-03-11"},{"lineNumber":157,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + NAME_DESC_BOB + DOB_DESC_BOB + INVALID_PHONE_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":158,"author":{"gitId":"alfaloo"},"content":"                Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"alfaloo"},"content":"        // non-empty preamble","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"alfaloo"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NRIC_DESC_BOB + NAME_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"alfaloo"},"content":"                        + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"alfaloo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":165,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":165}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"import java.util.Date;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryDoctorAppointmentCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryDoctorCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryPatientAppointmentCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryPatientCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.appointment.AppointmentContainsDoctorPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.appointment.AppointmentContainsPatientPredicate;","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.person.DoctorContainsKeywordsPredicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.person.PatientContainsKeywordsPredicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"Alteqa"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"Alteqa"},"content":"import seedu.address.testutil.AppointmentUtil;","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"Alteqa"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"Alteqa"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"Alteqa"},"content":"    public void parseCommand_addDoctor() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"Alteqa"},"content":"        Doctor person \u003d new DoctorBuilder().build();","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"Alteqa"},"content":"        AddDoctorCommand command \u003d (AddDoctorCommand) parser.parseCommand(PersonUtil.getAddDoctorCommand(person));","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"Alteqa"},"content":"        assertEquals(new AddDoctorCommand(person), command);","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"Kappaccinoh"},"content":"    public void parseCommand_addpatient() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"Kappaccinoh"},"content":"        Patient person \u003d new PatientBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"        AddPatientCommand command \u003d (AddPatientCommand) parser.parseCommand(PersonUtil.getAddPatientCommand(person));","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(new AddPatientCommand(person), command);","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"    public void parseCommand_addappointment() throws Exception {","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"        Appointment appt \u003d new AppointmentBuilder().build();","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"        AddAppointmentCommand command \u003d (AddAppointmentCommand) parser.parseCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"                AppointmentUtil.getAddAppointmentCommand(appt));","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"        assertEquals(new AddAppointmentCommand(appt), command);","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"Kappaccinoh"},"content":"    public void parseCommand_querydoctorappointment() throws Exception {","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"T1234567A\");","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"Kappaccinoh"},"content":"        QueryDoctorAppointmentCommand command \u003d (QueryDoctorAppointmentCommand) parser.parseCommand(","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"Kappaccinoh"},"content":"                QueryDoctorAppointmentCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"Kappaccinoh"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(new QueryDoctorAppointmentCommand(new AppointmentContainsDoctorPredicate(keywords)), command);","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"Kappaccinoh"},"content":"    public void parseCommand_querypatientappointment() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"T1234567A\");","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientAppointmentCommand command \u003d (QueryPatientAppointmentCommand) parser.parseCommand(","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"Kappaccinoh"},"content":"                QueryPatientAppointmentCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"Kappaccinoh"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(new QueryPatientAppointmentCommand(new AppointmentContainsPatientPredicate(keywords)), command);","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"officialchengyud"},"content":"    public void parseCommand_deleteappointment() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"officialchengyud"},"content":"        DeleteAppointmentCommand command \u003d (DeleteAppointmentCommand) parser.parseCommand(","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"officialchengyud"},"content":"                DeleteAppointmentCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"officialchengyud"},"content":"        assertEquals(new DeleteAppointmentCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"Alteqa"},"content":"        Patient person \u003d new PatientBuilder().build();","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"Alteqa"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"alfaloo"},"content":"    public void parseCommand_editAppointment() throws Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"alfaloo"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"alfaloo"},"content":"        Doctor doctor \u003d new DoctorBuilder().build();","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"Alteqa"},"content":"        String today \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date());","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"alfaloo"},"content":"        Appointment appointment \u003d new Appointment(doctor.getNric(), patient.getNric(),","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"alfaloo"},"content":"                new AppointmentDateTime(today), false);","lastModifiedDate":"2024-04-15"},{"lineNumber":133,"author":{"gitId":"alfaloo"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"Alteqa"},"content":"        descriptor.setDateTime(new AppointmentDateTime(\"3\" + today.substring(1)));","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"alfaloo"},"content":"        EditAppointmentCommand command \u003d (EditAppointmentCommand) parser","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"alfaloo"},"content":"                .parseCommand(EditAppointmentCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"alfaloo"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_DATE + \"3\" + today.substring(1));","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"        assertEquals(new EditAppointmentCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":155,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"Alteqa"},"content":"    public void parseCommand_querydoctor() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"Alteqa"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"Alteqa"},"content":"        QueryDoctorCommand command \u003d (QueryDoctorCommand) parser.parseCommand(","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"Alteqa"},"content":"                QueryDoctorCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"Alteqa"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(new QueryDoctorCommand(new DoctorContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2024-03-26"},{"lineNumber":162,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":163,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":164,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"Kappaccinoh"},"content":"    public void parseCommand_querypatient() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientCommand command \u003d (QueryPatientCommand) parser.parseCommand(","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"Kappaccinoh"},"content":"                QueryPatientCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"Kappaccinoh"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(new QueryPatientCommand(new PatientContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2024-03-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":172,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":193,"author":{"gitId":"Kappaccinoh"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2024-03-12"},{"lineNumber":194,"author":{"gitId":"Kappaccinoh"},"content":"                MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Alteqa":24,"alfaloo":15,"officialchengyud":5,"Kappaccinoh":48,"-":96,"ararchch":8}},{"path":"src/test/java/seedu/address/logic/parser/DeleteAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"officialchengyud"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":" * outside of the DeleteAppointmentCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":" * same path through the DeleteAppointmentCommand, and therefore we test only one of them.","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"public class DeleteAppointmentCommandParserTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"    private DeleteAppointmentCommandParser parser \u003d new DeleteAppointmentCommandParser();","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"        assertParseSuccess(parser, \"1\", new DeleteAppointmentCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"officialchengyud"},"content":"        String expectedString \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"                DeleteAppointmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"        assertParseFailure(parser, \"a\", expectedString);","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"officialchengyud":34}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOB_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DOB_DESC;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC_DESC;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.person.DoB;","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":70,"author":{"gitId":"Alteqa"},"content":"        assertParseFailure(parser, \"1 o/string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":77,"author":{"gitId":"Alteqa"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NRIC_DESC, Nric.MESSAGE_CONSTRAINTS); // invalid nric","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"Alteqa"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DOB_DESC, DoB.MESSAGE_CONSTRAINTS); // invalid dob","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"Alteqa"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + NRIC_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"Alteqa"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_NRIC_DESC","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"Alteqa"},"content":"                        + VALID_DOB_AMY + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":91,"author":{"gitId":"Alteqa"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"Alteqa"},"content":"                + NRIC_DESC_AMY + DOB_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"Alteqa"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"Alteqa"},"content":"                .withPhone(VALID_PHONE_BOB).withNric(VALID_NRIC_AMY).withDob(VALID_DOB_AMY).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":104,"author":{"gitId":"Alteqa"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + NRIC_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"Alteqa"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"Alteqa"},"content":"                .withNric(VALID_NRIC_AMY).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":118,"author":{"gitId":"Alteqa"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"Alteqa"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"Alteqa"},"content":"        userInput \u003d targetIndex.getOneBased() + NRIC_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":131,"author":{"gitId":"Alteqa"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withNric(VALID_NRIC_AMY).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"Alteqa"},"content":"        userInput \u003d targetIndex.getOneBased() + DOB_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":137,"author":{"gitId":"Alteqa"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withDob(VALID_DOB_AMY).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"Alteqa"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2024-04-01"},{"lineNumber":159,"author":{"gitId":"Alteqa"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + DOB_DESC_AMY + NRIC_DESC_AMY","lastModifiedDate":"2024-04-01"},{"lineNumber":160,"author":{"gitId":"Alteqa"},"content":"                + PHONE_DESC_AMY + DOB_DESC_AMY + NRIC_DESC_AMY","lastModifiedDate":"2024-04-01"},{"lineNumber":161,"author":{"gitId":"Alteqa"},"content":"                + PHONE_DESC_BOB + NRIC_DESC_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":164,"author":{"gitId":"Alteqa"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_NRIC, PREFIX_DOB));","lastModifiedDate":"2024-04-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":167,"author":{"gitId":"Alteqa"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_DOB_DESC + INVALID_NRIC_DESC","lastModifiedDate":"2024-04-01"},{"lineNumber":168,"author":{"gitId":"Alteqa"},"content":"                + INVALID_PHONE_DESC + INVALID_DOB_DESC + INVALID_NRIC_DESC;","lastModifiedDate":"2024-04-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"Alteqa"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_NRIC, PREFIX_DOB));","lastModifiedDate":"2024-04-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Alteqa":38,"-":135}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"    private static final String VALID_PHONE \u003d \"12345678\";","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"ararchch"},"content":"    public void parseAppointmentDate_validDate_returnsAppointmentDate() throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"Alteqa"},"content":"        String date \u003d \"2024-09-02 11:02\";","lastModifiedDate":"2024-04-04"},{"lineNumber":148,"author":{"gitId":"Alteqa"},"content":"        AppointmentDateTime ad \u003d new AppointmentDateTime(date);","lastModifiedDate":"2024-04-04"},{"lineNumber":149,"author":{"gitId":"Alteqa"},"content":"        assertEquals(ad, ParserUtil.parseAppointmentDateTime(date));","lastModifiedDate":"2024-04-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"Alteqa"},"content":"    public void parseAppointmentDate_invalidDateTime_throwsParseException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":154,"author":{"gitId":"Alteqa"},"content":"        String date \u003d \"2024-00-010 11:0\";","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"Alteqa"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointmentDateTime(date));","lastModifiedDate":"2024-04-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"Alteqa"},"content":"    public void parseAppointmentDate_invalidApptDateTime_throwsParseException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":160,"author":{"gitId":"Alteqa"},"content":"        String date \u003d \" 2024-00-00 11:11\";","lastModifiedDate":"2024-04-04"},{"lineNumber":161,"author":{"gitId":"Alteqa"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointmentDateTime(date));","lastModifiedDate":"2024-04-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"Alteqa"},"content":"    public void parseAppointmentDateTime_whitespacedDateTime_returnsAppointmentDateTime() throws ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"Alteqa"},"content":"        String date \u003d \" 2024-09-02 11:02 \";","lastModifiedDate":"2024-04-04"},{"lineNumber":167,"author":{"gitId":"Alteqa"},"content":"        AppointmentDateTime ad \u003d new AppointmentDateTime(date.strip());","lastModifiedDate":"2024-04-04"},{"lineNumber":168,"author":{"gitId":"Alteqa"},"content":"        assertEquals(ad, ParserUtil.parseAppointmentDateTime(date));","lastModifiedDate":"2024-04-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"Alteqa"},"content":"    //TODO: test parseAppointmentDateTime with null input once caught","lastModifiedDate":"2024-04-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Alteqa":15,"alfaloo":1,"-":155,"ararchch":1}},{"path":"src/test/java/seedu/address/logic/parser/QueryDoctorAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryDoctorAppointmentCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.appointment.AppointmentContainsDoctorPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"public class QueryDoctorAppointmentCommandParserTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    private QueryDoctorAppointmentCommandParser parser \u003d new QueryDoctorAppointmentCommandParser();","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"                QueryDoctorAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"    public void parse_validArgs_returnsQueryCommand() {","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"        QueryDoctorAppointmentCommand expectedQueryCommand \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"                new QueryDoctorAppointmentCommand(new AppointmentContainsDoctorPredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"                        Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedQueryCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedQueryCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"Kappaccinoh":34}},{"path":"src/test/java/seedu/address/logic/parser/QueryDoctorCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"import seedu.address.logic.commands.QueryDoctorCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.person.DoctorContainsKeywordsPredicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"public class QueryDoctorCommandParserTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"    private QueryDoctorCommandParser parser \u003d new QueryDoctorCommandParser();","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"                QueryDoctorCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"    public void parse_validArgs_returnsQueryCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"        QueryDoctorCommand expectedQueryCommand \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"                new QueryDoctorCommand(new DoctorContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedQueryCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedQueryCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Alteqa":31,"Kappaccinoh":3}},{"path":"src/test/java/seedu/address/logic/parser/QueryPatientAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryPatientAppointmentCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.appointment.AppointmentContainsPatientPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"public class QueryPatientAppointmentCommandParserTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    private QueryPatientAppointmentCommandParser parser \u003d new QueryPatientAppointmentCommandParser();","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"                QueryPatientAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"    public void parse_validArgs_returnsQueryCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientAppointmentCommand expectedQueryCommand \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"                new QueryPatientAppointmentCommand(new AppointmentContainsPatientPredicate(","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"                        Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedQueryCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedQueryCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Kappaccinoh":34}},{"path":"src/test/java/seedu/address/logic/parser/QueryPatientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.logic.commands.QueryPatientCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.person.PatientContainsKeywordsPredicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"public class QueryPatientCommandParserTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"    private QueryPatientCommandParser parser \u003d new QueryPatientCommandParser();","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"                QueryPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"    public void parse_validArgs_returnsQueryCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"        QueryPatientCommand expectedQueryCommand \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"                new QueryPatientCommand(new PatientContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedQueryCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedQueryCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Kappaccinoh":35}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT_1;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"        private final ObservableList\u003cAppointment\u003e appointments \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"ararchch"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"        public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"ararchch"},"content":"            return appointments;","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"ararchch"},"content":"    public void getPersonByNric_bookHasPerson_returnsPerson() {","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"ararchch"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"ararchch"},"content":"        assertEquals(ALICE, addressBook.getPersonByNric(ALICE.getNric()));","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"ararchch"},"content":"    public void getPersonByNric_bookDoesNotHavePerson_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"ararchch"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"ararchch"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e addressBook.getPersonByNric(new Nric(\"T1234567G\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"ararchch"},"content":"    public void getPersonByNric_nricInputIsNull_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"ararchch"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.getPersonByNric(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"ararchch"},"content":"    public void getPersonByNric_addressbookIsEmpty_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"ararchch"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e addressBook.getPersonByNric(ALICE.getNric()));","lastModifiedDate":"2024-03-16"},{"lineNumber":139,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"ararchch"},"content":"    public void setAppointments_validSet_setsAppointments() throws DuplicateAppointmentException {","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"ararchch"},"content":"        List\u003cAppointment\u003e appts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"ararchch"},"content":"        appts.add(APPOINTMENT_1);","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"ararchch"},"content":"        addressBook.setAppointments(appts);","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"ararchch"},"content":"        assertTrue(addressBook.hasAppointment(APPOINTMENT_1));","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"ararchch"},"content":"    public void equalsMethod() {","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"ararchch"},"content":"        // same object","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"ararchch"},"content":"        assertTrue(addressBook.equals(addressBook));","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"ararchch"},"content":"        // different class","lastModifiedDate":"2024-04-03"},{"lineNumber":155,"author":{"gitId":"ararchch"},"content":"        assertFalse(addressBook.equals(APPOINTMENT_1));","lastModifiedDate":"2024-04-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"alfaloo":4,"-":103,"ararchch":51}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import static seedu.address.testutil.TypicalPersons.BROWN;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"Kappaccinoh"},"content":"    public void getFilteredAppointmentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"Kappaccinoh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredAppointmentList().remove(0));","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"ararchch"},"content":"    public void hasAppointment_validAppointment_returnsTrue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"ararchch"},"content":"        Appointment a \u003d new AppointmentBuilder().build();","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"ararchch"},"content":"        modelManager.addAppointment(a);","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"ararchch"},"content":"        assertTrue(modelManager.hasAppointment(a));","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"ararchch"},"content":"    public void deleteAppointment_validAppointment_deletesAppointment() {","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"ararchch"},"content":"        Appointment a \u003d new AppointmentBuilder().build();","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"ararchch"},"content":"        modelManager.addAppointment(a);","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"ararchch"},"content":"        modelManager.deleteAppointment(a);","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"ararchch"},"content":"        assertFalse(modelManager.hasAppointment(a));","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"ararchch"},"content":"    public void setPerson_validPerson_setsPerson() {","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"ararchch"},"content":"        Person p0 \u003d BENSON;","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"ararchch"},"content":"        Person p1 \u003d ALICE;","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(p0);","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"ararchch"},"content":"        modelManager.setPerson(p0, p1);","lastModifiedDate":"2024-03-18"},{"lineNumber":167,"author":{"gitId":"ararchch"},"content":"        assertTrue(modelManager.hasPerson(p1));","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"ararchch"},"content":"        assertFalse(modelManager.hasPerson(p0));","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"ararchch"},"content":"    public void isValidAppointment_validAppointment_returnsTrue() throws ParseException {","lastModifiedDate":"2024-04-15"},{"lineNumber":173,"author":{"gitId":"ararchch"},"content":"        this.addPersonsForTest();","lastModifiedDate":"2024-04-15"},{"lineNumber":174,"author":{"gitId":"ararchch"},"content":"        Appointment a \u003d new AppointmentBuilder().withDoctor((Doctor) BROWN).withPatient((Patient) ALICE).build();","lastModifiedDate":"2024-04-15"},{"lineNumber":175,"author":{"gitId":"ararchch"},"content":"        assertTrue(modelManager.isValidAppointment(a));","lastModifiedDate":"2024-03-18"},{"lineNumber":176,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"ararchch"},"content":"    public void isValidAppointment_invalidAppointment_returnsFalse() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":180,"author":{"gitId":"ararchch"},"content":"        this.addPersonsForTest();","lastModifiedDate":"2024-04-15"},{"lineNumber":181,"author":{"gitId":"ararchch"},"content":"        Appointment a \u003d new Appointment(ALICE.getNric(), BROWN.getNric(),","lastModifiedDate":"2024-04-15"},{"lineNumber":182,"author":{"gitId":"ararchch"},"content":"                new AppointmentDateTime(\"2024-08-30 11:02\"), false);","lastModifiedDate":"2024-04-15"},{"lineNumber":183,"author":{"gitId":"ararchch"},"content":"        assertFalse(modelManager.isValidAppointment(a));","lastModifiedDate":"2024-04-15"},{"lineNumber":184,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":185,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":186,"author":{"gitId":"ararchch"},"content":"    private void addPersonsForTest() throws ParseException {","lastModifiedDate":"2024-04-15"},{"lineNumber":187,"author":{"gitId":"ararchch"},"content":"        Doctor d \u003d (Doctor) BROWN;","lastModifiedDate":"2024-04-15"},{"lineNumber":188,"author":{"gitId":"ararchch"},"content":"        Patient p \u003d (Patient) ALICE;","lastModifiedDate":"2024-03-18"},{"lineNumber":189,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(d);","lastModifiedDate":"2024-03-18"},{"lineNumber":190,"author":{"gitId":"ararchch"},"content":"        modelManager.addPerson(p);","lastModifiedDate":"2024-03-18"},{"lineNumber":191,"author":{"gitId":"alfaloo"},"content":"        Appointment a \u003d new Appointment(ALICE.getNric(), BROWN.getNric(),","lastModifiedDate":"2024-04-15"},{"lineNumber":192,"author":{"gitId":"alfaloo"},"content":"                new AppointmentDateTime(\"2024-08-30 11:02\"), false);","lastModifiedDate":"2024-04-15"},{"lineNumber":193,"author":{"gitId":"ararchch"},"content":"        assertFalse(modelManager.isValidAppointment(a));","lastModifiedDate":"2024-03-18"},{"lineNumber":194,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Alteqa":1,"alfaloo":2,"Kappaccinoh":5,"-":132,"ararchch":55}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentContainsDoctorPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT_1;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT_4;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"public class AppointmentContainsDoctorPredicateTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"    public void equals() {","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsDoctorPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsDoctorPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsDoctorPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsDoctorPredicate(secondPredicateKeywordList);","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsDoctorPredicate firstPredicateCopy \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsDoctorPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_predicateReturnsAppointment() {","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"S2378593A\");","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsDoctorPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsDoctorPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"        // Object Appointment -\u003e returns True","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"        Appointment p \u003d APPOINTMENT_1;","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(firstPredicate.test(p));","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_appointmentContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"S2378593A\");","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsDoctorPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsDoctorPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"        // Object Appointment with Brown -\u003e returns True","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"        Appointment p \u003d APPOINTMENT_1;","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(firstPredicate.test(p));","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"Kappaccinoh"},"content":"        // Object Appointment without Brown -\u003e returns False","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"Kappaccinoh"},"content":"        Appointment p1 \u003d APPOINTMENT_4;","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(firstPredicate.test(p1));","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"Kappaccinoh"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"S1111111A\");","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsDoctorPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsDoctorPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"Kappaccinoh"},"content":"        // Object Appointment with Brown -\u003e returns True","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"Kappaccinoh"},"content":"        Appointment p \u003d APPOINTMENT_1;","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(firstPredicate.test(p));","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"Kappaccinoh"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsDoctorPredicate predicate \u003d new AppointmentContainsDoctorPredicate(keywords);","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"Kappaccinoh"},"content":"        String expected \u003d AppointmentContainsDoctorPredicate.class.getCanonicalName()","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"Kappaccinoh"},"content":"                + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"Kappaccinoh":91}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentContainsPatientPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT_1;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT_4;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"public class AppointmentContainsPatientPredicateTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"    public void equals() {","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsPatientPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsPatientPredicate(secondPredicateKeywordList);","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate firstPredicateCopy \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsPatientPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_predicateReturnsAppointment() {","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"S1234567A\");","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsPatientPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"        // Object Appointment -\u003e returns True","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"        Appointment p \u003d APPOINTMENT_1;","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(firstPredicate.test(p));","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_appointmentContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"S1234567A\");","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsPatientPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"        // Object Appointment with Alice -\u003e returns True","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"        Appointment p \u003d APPOINTMENT_1;","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(firstPredicate.test(p));","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"Kappaccinoh"},"content":"        // Object Appointment without Alice -\u003e returns False","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"Kappaccinoh"},"content":"        Appointment p1 \u003d APPOINTMENT_4;","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(firstPredicate.test(p1));","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"Kappaccinoh"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"S1111111A\");","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"                new AppointmentContainsPatientPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"Kappaccinoh"},"content":"        // Object Appointment with Alice -\u003e returns True","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"Kappaccinoh"},"content":"        Appointment p \u003d APPOINTMENT_1;","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(firstPredicate.test(p));","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"Kappaccinoh"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"Kappaccinoh"},"content":"        AppointmentContainsPatientPredicate predicate \u003d new AppointmentContainsPatientPredicate(keywords);","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"Kappaccinoh"},"content":"        String expected \u003d AppointmentContainsPatientPredicate.class.getCanonicalName()","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"Kappaccinoh"},"content":"                + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Kappaccinoh":91}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"class AppointmentDateTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"    public void isValidDate_validDate_returnsTrue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"        //TODO: Implement","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"    void testToString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"    void testHashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    void compareTo() {","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"ararchch":23}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"class AppointmentTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    void getDoctorNric() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"        Nric doctorNric \u003d new Nric(\"S1234567A\");","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"        Appointment appointment \u003d new Appointment(doctorNric, new Nric(\"T1234567A\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"                new AppointmentDateTime(LocalDateTime.now()), false);","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(doctorNric, appointment.getDoctorNric());","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"    void getPatientNric() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"        Nric patientNric \u003d new Nric(\"T1234567A\");","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"        Appointment appointment \u003d new Appointment(new Nric(\"S1234567A\"), patientNric,","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"                new AppointmentDateTime(LocalDateTime.now()), false);","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(patientNric, appointment.getPatientNric());","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"    void getAppointmentDate() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"        AppointmentDateTime appointmentDateTime \u003d new AppointmentDateTime(LocalDateTime.now());","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"        Appointment appointment \u003d","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"                new Appointment(new Nric(\"S1234567A\"), new Nric(\"T1234567A\"), appointmentDateTime, false);","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"Alteqa"},"content":"        assertEquals(appointmentDateTime, appointment.getAppointmentDateTime());","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"    void isValidAppointmentDateTime_validDate_returnsTrue() throws ParseException {","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"Alteqa"},"content":"        AppointmentDateTime futureDateTime \u003d new AppointmentDateTime(LocalDateTime.now().plusDays(1));","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"        Appointment appointment \u003d","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"                new Appointment(new Nric(\"S1234567A\"), new Nric(\"T1234567A\"), futureDateTime, false);","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"        assertTrue(appointment.isValidAppointmentDateTime(futureDateTime));","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"    void isValidAppointmentDateTime_pastDate_returnsFalse() {","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"Alteqa"},"content":"        AppointmentDateTime pastDateTime \u003d new AppointmentDateTime(LocalDateTime.now().minusDays(1));","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"        // Use assertThrows to check if IllegalArgumentException is thrown","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"        assertThrows(ParseException.class, () -\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"            new Appointment(new Nric(\"S1234567A\"), new Nric(\"T1234567A\"), pastDateTime, false);","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"        });","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"    void isSameAppointment() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"        Nric doctorNric \u003d new Nric(\"S1234567A\");","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"Kappaccinoh"},"content":"        Nric patientNric \u003d new Nric(\"T1234567A\");","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"Alteqa"},"content":"        AppointmentDateTime appointmentDateTime \u003d new AppointmentDateTime(LocalDateTime.now());","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"        Appointment appointment1 \u003d new Appointment(doctorNric, patientNric, appointmentDateTime, false);","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"        Appointment appointment2 \u003d new Appointment(doctorNric, patientNric, appointmentDateTime, false);","lastModifiedDate":"2024-04-15"},{"lineNumber":69,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(appointment1.isSameAppointment(appointment2));","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"    void appointmentContainsPerson() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"Kappaccinoh"},"content":"        Nric doctorNric \u003d new Nric(\"S1234567A\");","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"        Nric patientNric \u003d new Nric(\"T1234567A\");","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"Alteqa"},"content":"        AppointmentDateTime appointmentDateTime \u003d new AppointmentDateTime(LocalDateTime.now());","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"        Appointment appointment \u003d new Appointment(doctorNric, patientNric, appointmentDateTime, false);","lastModifiedDate":"2024-04-15"},{"lineNumber":78,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"Kappaccinoh"},"content":"        // False Doctor and Patient","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"Kappaccinoh"},"content":"        Person doctor \u003d new DoctorBuilder().withNric(\"S7654321A\").build();","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"Kappaccinoh"},"content":"        Person patient \u003d new PatientBuilder().withNric(\"T7654321A\").build();","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(appointment.appointmentContainsPerson(doctor));","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(appointment.appointmentContainsPerson(patient));","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"Kappaccinoh"},"content":"        // True Doctor and Patient","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"Kappaccinoh"},"content":"        doctor \u003d new DoctorBuilder().withNric(\"S1234567A\").build();","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"Kappaccinoh"},"content":"        patient \u003d new PatientBuilder().withNric(\"T1234567A\").build();","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(appointment.appointmentContainsPerson(doctor));","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(appointment.appointmentContainsPerson(patient));","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"    void testEquals() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"Kappaccinoh"},"content":"        Nric doctorNric \u003d new Nric(\"S1234567A\");","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"Kappaccinoh"},"content":"        Nric patientNric \u003d new Nric(\"T1234567A\");","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"Alteqa"},"content":"        AppointmentDateTime appointmentDateTime \u003d new AppointmentDateTime(LocalDateTime.now());","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"        Appointment appointment1 \u003d new Appointment(doctorNric, patientNric, appointmentDateTime, false);","lastModifiedDate":"2024-04-15"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"        Appointment appointment2 \u003d new Appointment(doctorNric, patientNric, appointmentDateTime, false);","lastModifiedDate":"2024-04-15"},{"lineNumber":99,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(appointment1, appointment2);","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"    void testToString() throws ParseException {","lastModifiedDate":"2024-04-15"},{"lineNumber":104,"author":{"gitId":"Kappaccinoh"},"content":"        Nric doctorNric \u003d new Nric(\"S1234567A\");","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"Kappaccinoh"},"content":"        Nric patientNric \u003d new Nric(\"T1234567A\");","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"Alteqa"},"content":"        AppointmentDateTime appointmentDateTime \u003d new AppointmentDateTime(LocalDateTime.now());","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"        Appointment appointment \u003d new Appointment(doctorNric, patientNric, appointmentDateTime, false);","lastModifiedDate":"2024-04-15"},{"lineNumber":108,"author":{"gitId":"Alteqa"},"content":"        String expectedString \u003d \"seedu.address.model.appointment.Appointment{Date\u003d\" + appointmentDateTime + \", Doctor\u003d\"","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"                + doctorNric + \", Patient\u003d\" + patientNric + \"}\";","lastModifiedDate":"2024-04-15"},{"lineNumber":110,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(expectedString, appointment.toString());","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"Alteqa":10,"alfaloo":15,"Kappaccinoh":55,"ararchch":32}},{"path":"src/test/java/seedu/address/model/appointment/UniqueAppointmentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import static seedu.address.testutil.TypicalPersons.BROWN;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"public class UniqueAppointmentListTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    private static final Appointment VALID_APPT \u003d new AppointmentBuilder().build();","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    private final UniqueAppointmentList uniqueAppointmentList \u003d new UniqueAppointmentList();","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"    private final UniqueAppointmentList expectedUniqueAppointmentList \u003d new UniqueAppointmentList();","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    public void contains_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAppointmentList.contains((Appointment) null));","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"    public void contains_appointmentNotInList_returnsFalse() {","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"        assertFalse(uniqueAppointmentList.contains(VALID_APPT));","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"    public void contains_appointmentInList_returnsTrue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.add(VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"        assertTrue(uniqueAppointmentList.contains(VALID_APPT));","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"    public void contains_appointmentWithSameIdentityFieldsInList_returnsTrue() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.add(VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"        Appointment editedAppt \u003d new Appointment(","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"                VALID_APPT.getDoctorNric(),","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"                VALID_APPT.getPatientNric(),","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"                VALID_APPT.getAppointmentDateTime(),","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"                false","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"        assertTrue(uniqueAppointmentList.contains(editedAppt));","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"    public void add_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAppointmentList.add(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"    //    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"    //    public void add_duplicateAppointment_throwsDuplicateAppointmentException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"    //        uniqueAppointmentList.add(VALID_APPT);","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"    //        assertThrows(DuplicateAppointmentException.class, () -\u003e uniqueAppointmentList.add(VALID_APPT));","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"    //    }","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"    public void setAppointment_nullTargetAppointment_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAppointmentList.setAppointment(null, VALID_APPT));","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"    public void setAppointment_nullEditedAppointment_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAppointmentList.setAppointment(","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"                VALID_APPT, null));","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"    public void setAppointment_editedAppointmentIsSameAppointment_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.add(VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.setAppointment(VALID_APPT, VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"        expectedUniqueAppointmentList.add(VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"        assertEquals(expectedUniqueAppointmentList, uniqueAppointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"    public void setAppointment_editedAppointmentHasSameIdentity_success() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.add(VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"        Appointment editedAppt \u003d new Appointment(","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"Kappaccinoh"},"content":"                VALID_APPT.getDoctorNric(),","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"                VALID_APPT.getPatientNric(),","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"                VALID_APPT.getAppointmentDateTime(),","lastModifiedDate":"2024-04-15"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"                false","lastModifiedDate":"2024-04-15"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.setAppointment(VALID_APPT, editedAppt);","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"        expectedUniqueAppointmentList.add(editedAppt);","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"        assertEquals(expectedUniqueAppointmentList, uniqueAppointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"    public void setAppointment_editedAppointmentHasDifferentIdentity_success() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.add(VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"        Appointment editedAppt \u003d new Appointment(","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"                BROWN.getNric(),","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"                VALID_APPT.getPatientNric(),","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"                VALID_APPT.getAppointmentDateTime(),","lastModifiedDate":"2024-04-15"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"                false","lastModifiedDate":"2024-04-15"},{"lineNumber":106,"author":{"gitId":"ararchch"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.setAppointment(VALID_APPT, editedAppt);","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"        expectedUniqueAppointmentList.add(editedAppt);","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"        assertEquals(expectedUniqueAppointmentList, uniqueAppointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"    public void remove_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"ararchch"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAppointmentList.remove(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"ararchch"},"content":"    public void remove_existingAppointment_removesAppointment() {","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.add(VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.remove(VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"ararchch"},"content":"        assertEquals(expectedUniqueAppointmentList, uniqueAppointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"ararchch"},"content":"    public void setAppointments_nullUniqueAppointmentList_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"ararchch"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAppointmentList.setAppointments(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"ararchch"},"content":"    public void setAppointments_uniqueAppointmentList_replacesOwnListWithProvidedUniqueAppointmentList()","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"ararchch"},"content":"            throws ParseException, DuplicateAppointmentException {","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.add(VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"ararchch"},"content":"        UniqueAppointmentList expectedUniqueAppointmentList \u003d new UniqueAppointmentList();","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"ararchch"},"content":"        Appointment editedAppt \u003d new Appointment(","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"ararchch"},"content":"                BROWN.getNric(),","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"ararchch"},"content":"                VALID_APPT.getPatientNric(),","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"alfaloo"},"content":"                VALID_APPT.getAppointmentDateTime(),","lastModifiedDate":"2024-04-15"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"                false","lastModifiedDate":"2024-04-15"},{"lineNumber":139,"author":{"gitId":"ararchch"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"ararchch"},"content":"        expectedUniqueAppointmentList.add(editedAppt);","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.setAppointments(expectedUniqueAppointmentList.asUnmodifiableObservableList());","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"ararchch"},"content":"        assertEquals(expectedUniqueAppointmentList, uniqueAppointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"ararchch"},"content":"    public void setAppointments_nullList_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"ararchch"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAppointmentList.setAppointments((List\u003cAppointment\u003e) null));","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"ararchch"},"content":"    public void setAppointments_list_replacesOwnListWithProvidedList()","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"ararchch"},"content":"            throws DuplicateAppointmentException, ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.add(VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"ararchch"},"content":"        Appointment editedAppt \u003d new Appointment(","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"Kappaccinoh"},"content":"                VALID_APPT.getDoctorNric(),","lastModifiedDate":"2024-03-20"},{"lineNumber":156,"author":{"gitId":"ararchch"},"content":"                VALID_APPT.getPatientNric(),","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"alfaloo"},"content":"                VALID_APPT.getAppointmentDateTime(),","lastModifiedDate":"2024-04-15"},{"lineNumber":158,"author":{"gitId":"alfaloo"},"content":"                false","lastModifiedDate":"2024-04-15"},{"lineNumber":159,"author":{"gitId":"ararchch"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"ararchch"},"content":"        List\u003cAppointment\u003e appointmentList \u003d Collections.singletonList(editedAppt);","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"ararchch"},"content":"        uniqueAppointmentList.setAppointments(appointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"ararchch"},"content":"        expectedUniqueAppointmentList.add(editedAppt);","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"ararchch"},"content":"        assertEquals(expectedUniqueAppointmentList, uniqueAppointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":165,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":167,"author":{"gitId":"ararchch"},"content":"    public void setAppointments_listWithDuplicateAppointments_throwsDuplicateAppointmentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"ararchch"},"content":"        List\u003cAppointment\u003e listWithDuplicateAppointments \u003d Arrays.asList(VALID_APPT, VALID_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"ararchch"},"content":"        assertThrows(DuplicateAppointmentException.class, () -\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"ararchch"},"content":"                uniqueAppointmentList.setAppointments(listWithDuplicateAppointments));","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":173,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"ararchch"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":175,"author":{"gitId":"ararchch"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2024-03-18"},{"lineNumber":176,"author":{"gitId":"ararchch"},"content":"                -\u003e uniqueAppointmentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":180,"author":{"gitId":"ararchch"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"ararchch"},"content":"        assertEquals(uniqueAppointmentList.asUnmodifiableObservableList().toString(), uniqueAppointmentList.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":183,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":184,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"alfaloo":10,"Kappaccinoh":4,"ararchch":170}},{"path":"src/test/java/seedu/address/model/appointment/exceptions/AppointmentNotFoundExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"public class AppointmentNotFoundExceptionTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"    public void appointmentNotFoundException_createNewException_errorMessageIsAccurate() {","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"        AppointmentNotFoundException e \u003d new AppointmentNotFoundException();","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"        assertEquals(\"Unable to locate appointment\", e.getMessage());","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"ararchch":14}},{"path":"src/test/java/seedu/address/model/appointment/exceptions/DuplicateAppointmentExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"public class DuplicateAppointmentExceptionTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"    public void duplicateAppointmentException_createNewException_errorMessageIsAccurate() {","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"        DuplicateAppointmentException e \u003d new DuplicateAppointmentException();","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"        assertEquals(\"Operation would result in duplicate appointments\", e.getMessage());","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"ararchch":14}},{"path":"src/test/java/seedu/address/model/appointment/exceptions/InvalidAppointmentExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"public class InvalidAppointmentExceptionTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"    public void invalidAppointmentException_createNewException_errorMessageIsAccurate() {","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"        InvalidAppointmentException e \u003d new InvalidAppointmentException();","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"        assertEquals(\"This appointment is invalid due to invalid inputs.\", e.getMessage());","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"ararchch":14}},{"path":"src/test/java/seedu/address/model/person/DoBTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"public class DoBTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DoB(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"    public void constructor_invalidDoB_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"        String invalidDoB \u003d \"\";","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"        assertThrows(AssertionError.class, () -\u003e new DoB(invalidDoB));","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    public void isValidDoB() {","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"        // null name","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"        assertThrows(NullPointerException.class, () -\u003e DoB.isValidDoB(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"        // invalid name","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"        assertFalse(DoB.isValidDoB(\"\")); // empty string","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"        assertFalse(DoB.isValidDoB(\" ^\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"        assertFalse(DoB.isValidDoB(\"23-09-2003\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"        assertFalse(DoB.isValidDoB(\"2003-04-45\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"        // valid name","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"        assertTrue(DoB.isValidDoB(\"1998-01-01\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"        assertTrue(DoB.isValidDoB(\"2003-02-03\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"        DoB dob \u003d new DoB(\"2003-04-02\");","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        assertTrue(dob.equals(new DoB(\"2003-04-02\")));","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"        assertTrue(dob.equals(dob));","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"        assertFalse(dob.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"        assertFalse(dob.equals(5.0f));","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"        assertFalse(dob.equals(new DoB(\"2003-04-12\")));","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":57}},{"path":"src/test/java/seedu/address/model/person/DoctorContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"public class DoctorContainsKeywordsPredicateTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"    public void equals() {","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"        DoctorContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"                new DoctorContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"        DoctorContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"                new DoctorContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"        DoctorContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"                new DoctorContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"Alteqa"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Alteqa"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"Alteqa"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"Alteqa"},"content":"    public void test_predicateReturnsDoctorsOnly() {","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"Alteqa"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"Alice\");","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"        DoctorContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"                new DoctorContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"        // Object type Doctor -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"Alteqa"},"content":"        Doctor p \u003d new Doctor(new Nric(\"T1234567A\"), new Name(\"Alice\"), new DoB(\"2001-01-01\"), new Phone(\"98765432\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"Alteqa"},"content":"        assertTrue(firstPredicate.test(p));","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"Alteqa"},"content":"        Patient d \u003d new Patient(new Nric(\"T1234567A\"), new Name(\"Alice\"), new DoB(\"2001-01-01\"), new Phone(\"98765432\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"Alteqa"},"content":"        // Object type Doctor -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"Alteqa"},"content":"        assertFalse(firstPredicate.test(d));","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"Alteqa"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"Alteqa"},"content":"        // One keyword","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"        DoctorContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"                new DoctorContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"Alteqa"},"content":"        assertTrue(predicate.test(new DoctorBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"Alteqa"},"content":"        // Multiple keywords","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new DoctorContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"Alteqa"},"content":"        assertTrue(predicate.test(new DoctorBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"Alteqa"},"content":"        // Only one matching keyword","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new DoctorContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"Alteqa"},"content":"        assertTrue(predicate.test(new DoctorBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"Alteqa"},"content":"        // Mixed-case keywords","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new DoctorContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"Alteqa"},"content":"        assertTrue(predicate.test(new DoctorBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"Alteqa"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"Alteqa"},"content":"        // Zero keywords","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"Kappaccinoh"},"content":"        DoctorContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"Kappaccinoh"},"content":"                new DoctorContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"Alteqa"},"content":"        assertFalse(predicate.test(new DoctorBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"Alteqa"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new DoctorContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"Alteqa"},"content":"        assertFalse(predicate.test(new DoctorBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_nricContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"Kappaccinoh"},"content":"        // One NRIC","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"Kappaccinoh"},"content":"        DoctorContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"Kappaccinoh"},"content":"                new DoctorContainsKeywordsPredicate(Collections.singletonList(\"T1234567A\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new DoctorBuilder().withNric(\"T1234567A\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"Kappaccinoh"},"content":"        // NRIC substring","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new DoctorContainsKeywordsPredicate(Collections.singletonList(\"1234\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new DoctorBuilder().withNric(\"T1234567A\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"Kappaccinoh"},"content":"        // Multiple NRICs","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new DoctorContainsKeywordsPredicate(Arrays.asList(\"T0170911E\", \"S1234567A\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new DoctorBuilder().withNric(\"T0170911E\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_nricContainsKeywords_returnsFalse() {","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"Kappaccinoh"},"content":"        // Zero keywords","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"Kappaccinoh"},"content":"        DoctorContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"Kappaccinoh"},"content":"                new DoctorContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(predicate.test(new DoctorBuilder().withNric(\"T0170911E\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"Kappaccinoh"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new DoctorContainsKeywordsPredicate(Arrays.asList(\"T0170911E\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(predicate.test(new DoctorBuilder().withNric(\"S1234567A\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":120,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_dobContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"Kappaccinoh"},"content":"        // One dob","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"Kappaccinoh"},"content":"        DoctorContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":124,"author":{"gitId":"Kappaccinoh"},"content":"                new DoctorContainsKeywordsPredicate(Collections.singletonList(\"2001-01-01\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":125,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new DoctorBuilder().withDoB(\"2001-01-01\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"Kappaccinoh"},"content":"        // dob substring","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new DoctorContainsKeywordsPredicate(Collections.singletonList(\"01\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new DoctorBuilder().withDoB(\"2001-01-01\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":131,"author":{"gitId":"Kappaccinoh"},"content":"        // multiple dob","lastModifiedDate":"2024-03-26"},{"lineNumber":132,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new DoctorContainsKeywordsPredicate(Arrays.asList(\"2001-01-01\", \"2001-01-02\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":133,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new DoctorBuilder().withDoB(\"2001-01-01\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":134,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":135,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":137,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_dobContainsKeywords_returnsFalse() {","lastModifiedDate":"2024-03-26"},{"lineNumber":138,"author":{"gitId":"Kappaccinoh"},"content":"        // Zero keywords","lastModifiedDate":"2024-03-26"},{"lineNumber":139,"author":{"gitId":"Kappaccinoh"},"content":"        DoctorContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":140,"author":{"gitId":"Kappaccinoh"},"content":"                new DoctorContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-26"},{"lineNumber":141,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(predicate.test(new DoctorBuilder().withDoB(\"2001-01-01\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":142,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":143,"author":{"gitId":"Kappaccinoh"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-26"},{"lineNumber":144,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new DoctorContainsKeywordsPredicate(Arrays.asList(\"22\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":145,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(predicate.test(new DoctorBuilder().withDoB(\"2001-01-01\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":146,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":148,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":149,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_phoneContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-03-26"},{"lineNumber":150,"author":{"gitId":"Kappaccinoh"},"content":"        // One phone","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"Kappaccinoh"},"content":"        DoctorContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":152,"author":{"gitId":"Kappaccinoh"},"content":"                new DoctorContainsKeywordsPredicate(Collections.singletonList(\"91234567\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":153,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new DoctorBuilder().withPhone(\"91234567\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":154,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":155,"author":{"gitId":"Kappaccinoh"},"content":"        // phone substring","lastModifiedDate":"2024-03-26"},{"lineNumber":156,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new DoctorContainsKeywordsPredicate(Collections.singletonList(\"4567\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":157,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new DoctorBuilder().withPhone(\"91234567\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":158,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":159,"author":{"gitId":"Kappaccinoh"},"content":"        // multiple phone numbers","lastModifiedDate":"2024-03-26"},{"lineNumber":160,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new DoctorContainsKeywordsPredicate(Arrays.asList(\"91234567\", \"99991111\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":161,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new DoctorBuilder().withPhone(\"91234567\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":162,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":163,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":164,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":165,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_phoneContainsKeywords_returnsFalse() {","lastModifiedDate":"2024-03-26"},{"lineNumber":166,"author":{"gitId":"Kappaccinoh"},"content":"        // Zero keywords","lastModifiedDate":"2024-03-26"},{"lineNumber":167,"author":{"gitId":"Kappaccinoh"},"content":"        DoctorContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":168,"author":{"gitId":"Kappaccinoh"},"content":"                new DoctorContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-26"},{"lineNumber":169,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(predicate.test(new DoctorBuilder().withPhone(\"91234567\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":170,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":171,"author":{"gitId":"Kappaccinoh"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-26"},{"lineNumber":172,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new DoctorContainsKeywordsPredicate(Arrays.asList(\"7654\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":173,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(predicate.test(new DoctorBuilder().withPhone(\"91234567\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":174,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":175,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":176,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":177,"author":{"gitId":"Alteqa"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-17"},{"lineNumber":178,"author":{"gitId":"Alteqa"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2024-03-17"},{"lineNumber":179,"author":{"gitId":"Kappaccinoh"},"content":"        DoctorContainsKeywordsPredicate predicate \u003d new DoctorContainsKeywordsPredicate(keywords);","lastModifiedDate":"2024-03-26"},{"lineNumber":180,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":181,"author":{"gitId":"Kappaccinoh"},"content":"        String expected \u003d DoctorContainsKeywordsPredicate.class.getCanonicalName()","lastModifiedDate":"2024-03-26"},{"lineNumber":182,"author":{"gitId":"Alteqa"},"content":"                + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2024-03-17"},{"lineNumber":183,"author":{"gitId":"Alteqa"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":184,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":185,"author":{"gitId":"Alteqa"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Alteqa":83,"Kappaccinoh":102}},{"path":"src/test/java/seedu/address/model/person/DoctorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_BROWN;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BROWN;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BROWN;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.testutil.TypicalPersons.DAMES;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"import static seedu.address.testutil.TypicalPersons.FROWN;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"public class DoctorTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"    public void isSamePerson() {","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"        assertTrue(DAMES.isSamePerson(DAMES));","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"        assertFalse(DAMES.isSamePerson(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"        Doctor editedDames \u003d new DoctorBuilder(DAMES).withName(VALID_NAME_BROWN).withDoB(VALID_DOB_BROWN)","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"                .withPhone(VALID_PHONE_BROWN).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"        assertTrue(DAMES.isSamePerson(editedDames));","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"        // different name, all other attributes same -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"        editedDames \u003d new DoctorBuilder(DAMES).withName(VALID_NAME_BROWN).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"Alteqa"},"content":"        assertTrue(DAMES.isSamePerson(editedDames));","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"        Person editedBob \u003d new DoctorBuilder(DAMES).withName(VALID_NAME_BROWN.toLowerCase()).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"Alteqa"},"content":"        assertTrue(DAMES.isSamePerson(editedBob));","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BROWN + \" \";","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Alteqa"},"content":"        editedBob \u003d new DoctorBuilder(DAMES).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"Alteqa"},"content":"        assertTrue(DAMES.isSamePerson(editedBob));","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"officialchengyud"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"officialchengyud"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"        Person aliceCopy \u003d new DoctorBuilder(DAMES).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"Alteqa"},"content":"        assertTrue(DAMES.equals(aliceCopy));","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"officialchengyud"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Alteqa"},"content":"        assertTrue(DAMES.equals(DAMES));","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"officialchengyud"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Alteqa"},"content":"        assertFalse(DAMES.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"officialchengyud"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"Alteqa"},"content":"        assertFalse(DAMES.equals(5));","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"officialchengyud"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"Alteqa"},"content":"        assertFalse(DAMES.equals(FROWN));","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"officialchengyud"},"content":"        // different nric -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"Alteqa"},"content":"        Person editedAlice \u003d new DoctorBuilder(DAMES).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"Alteqa"},"content":"        assertFalse(DAMES.equals(editedAlice));","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"officialchengyud"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"Alteqa"},"content":"        editedAlice \u003d new DoctorBuilder(DAMES).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"Alteqa"},"content":"        assertFalse(DAMES.equals(editedAlice));","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"officialchengyud"},"content":"        // different dob -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"Alteqa"},"content":"        editedAlice \u003d new DoctorBuilder(DAMES).withDoB(VALID_DOB_BOB).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"Alteqa"},"content":"        assertFalse(DAMES.equals(editedAlice));","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"officialchengyud"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"Alteqa"},"content":"        editedAlice \u003d new DoctorBuilder(DAMES).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"Alteqa"},"content":"        assertFalse(DAMES.equals(editedAlice));","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"officialchengyud"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"Alteqa"},"content":"        String expected \u003d Doctor.class.getCanonicalName() + \"{type\u003d\" + DAMES.getType() + \", nric\u003d\" + DAMES.getNric()","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"Alteqa"},"content":"                + \", name\u003d\" + DAMES.getName() + \", dob\u003d\" + DAMES.getDoB() + \", phone\u003d\" + DAMES.getPhone() + \"}\";","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"Alteqa"},"content":"        assertEquals(expected, DAMES.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Alteqa":29,"officialchengyud":60}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"        // // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"        // predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"        // assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"        // .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"alfaloo":11,"-":74}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"        assertTrue(Name.isValidName(\"Hue Jack Jack Man\")); // numbers only","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"        assertTrue(Name.isValidName(\"peter the second\")); // alphanumeric characters","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr II\")); // long names","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"alfaloo":3,"-":57}},{"path":"src/test/java/seedu/address/model/person/NricTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"public class NricTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Nric(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"    public void constructor_invalidNric_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"        String invalidNric \u003d \"A0234\";","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"        assertThrows(AssertionError.class, () -\u003e new Nric(invalidNric));","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    public void isValidNric() {","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"        // null name","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"        assertThrows(NullPointerException.class, () -\u003e Nric.isValidNric(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"        // invalid name","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"        assertFalse(Nric.isValidNric(\"\")); // empty string","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"        assertFalse(Nric.isValidNric(\" \")); // spaces only","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"        assertFalse(Nric.isValidNric(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"        assertFalse(Nric.isValidNric(\"S0923*\")); // contains non-alphanumeric characters","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"        // valid name","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"        assertTrue(Nric.isValidNric(\"G1234567A\")); // alphabets only","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"        assertTrue(Nric.isValidNric(\"S0947384B\")); // numbers only","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"        assertTrue(Nric.isValidNric(\"T8749283C\")); // alphanumeric characters","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"        assertTrue(Nric.isValidNric(\"g8947283d\")); // with capital letters","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"        assertTrue(Nric.isValidNric(\"m8749508e\")); // long names","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        Nric nric \u003d new Nric(\"S1234567A\");","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"        assertTrue(nric.equals(new Nric(\"S1234567A\")));","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"        assertTrue(nric.equals(nric));","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"        assertFalse(nric.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"        assertFalse(nric.equals(5.0f));","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"        assertFalse(nric.equals(new Nric(\"S0123456A\")));","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":60}},{"path":"src/test/java/seedu/address/model/person/PatientContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"public class PatientContainsKeywordsPredicateTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"        PatientContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"        PatientContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"        PatientContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_predicateReturnsPatientsOnly() {","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"Alice\");","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"        PatientContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"        // Object type Patient -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"        Patient p \u003d new Patient(new Nric(\"T1234567A\"), new Name(\"Alice\"), new DoB(\"2001-01-01\"), new Phone(\"98765432\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(firstPredicate.test(p));","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"        Doctor d \u003d new Doctor(new Nric(\"T1234567A\"), new Name(\"Alice\"), new DoB(\"2001-01-01\"), new Phone(\"98765432\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"        // Object type Doctor -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(firstPredicate.test(d));","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"        // One keyword","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"        PatientContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"        // Multiple keywords","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new PatientContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"Kappaccinoh"},"content":"        // Only one matching keyword","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new PatientContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"        // Mixed-case keywords","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new PatientContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"Kappaccinoh"},"content":"        // Zero keywords","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"Kappaccinoh"},"content":"        PatientContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"Kappaccinoh"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new PatientContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_nricContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"Kappaccinoh"},"content":"        // One NRIC","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"Kappaccinoh"},"content":"        PatientContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientContainsKeywordsPredicate(Collections.singletonList(\"T1234567A\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new PatientBuilder().withNric(\"T1234567A\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"Kappaccinoh"},"content":"        // NRIC substring","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new PatientContainsKeywordsPredicate(Collections.singletonList(\"1234\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new PatientBuilder().withNric(\"T1234567A\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"Kappaccinoh"},"content":"        // Multiple NRICs","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new PatientContainsKeywordsPredicate(Arrays.asList(\"T0170911E\", \"S1234567A\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new PatientBuilder().withNric(\"T0170911E\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_nricContainsKeywords_returnsFalse() {","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"Kappaccinoh"},"content":"        // Zero keywords","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"Kappaccinoh"},"content":"        PatientContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(predicate.test(new PatientBuilder().withNric(\"T0170911E\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"Kappaccinoh"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new PatientContainsKeywordsPredicate(Arrays.asList(\"T0170911E\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(predicate.test(new PatientBuilder().withNric(\"S1234567A\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":120,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_dobContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"Kappaccinoh"},"content":"        // One dob","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"Kappaccinoh"},"content":"        PatientContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":124,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientContainsKeywordsPredicate(Collections.singletonList(\"2001-01-01\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":125,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new PatientBuilder().withDoB(\"2001-01-01\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"Kappaccinoh"},"content":"        // dob substring","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new PatientContainsKeywordsPredicate(Collections.singletonList(\"01\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new PatientBuilder().withDoB(\"2001-01-01\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":131,"author":{"gitId":"Kappaccinoh"},"content":"        // multiple dob","lastModifiedDate":"2024-03-26"},{"lineNumber":132,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new PatientContainsKeywordsPredicate(Arrays.asList(\"2001-01-01\", \"2001-01-02\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":133,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new PatientBuilder().withDoB(\"2001-01-01\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":134,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":135,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":137,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_dobContainsKeywords_returnsFalse() {","lastModifiedDate":"2024-03-26"},{"lineNumber":138,"author":{"gitId":"Kappaccinoh"},"content":"        // Zero keywords","lastModifiedDate":"2024-03-26"},{"lineNumber":139,"author":{"gitId":"Kappaccinoh"},"content":"        PatientContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":140,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-26"},{"lineNumber":141,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(predicate.test(new PatientBuilder().withDoB(\"2001-01-01\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":142,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":143,"author":{"gitId":"Kappaccinoh"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-26"},{"lineNumber":144,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new PatientContainsKeywordsPredicate(Arrays.asList(\"22\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":145,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(predicate.test(new PatientBuilder().withDoB(\"2001-01-01\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":146,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":148,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":149,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_phoneContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-03-26"},{"lineNumber":150,"author":{"gitId":"Kappaccinoh"},"content":"        // One phone","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"Kappaccinoh"},"content":"        PatientContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":152,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientContainsKeywordsPredicate(Collections.singletonList(\"91234567\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":153,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new PatientBuilder().withPhone(\"91234567\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":154,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":155,"author":{"gitId":"Kappaccinoh"},"content":"        // phone substring","lastModifiedDate":"2024-03-26"},{"lineNumber":156,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new PatientContainsKeywordsPredicate(Collections.singletonList(\"4567\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":157,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new PatientBuilder().withPhone(\"91234567\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":158,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":159,"author":{"gitId":"Kappaccinoh"},"content":"        // multiple phone numbers","lastModifiedDate":"2024-03-26"},{"lineNumber":160,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new PatientContainsKeywordsPredicate(Arrays.asList(\"91234567\", \"99991111\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":161,"author":{"gitId":"Kappaccinoh"},"content":"        assertTrue(predicate.test(new PatientBuilder().withPhone(\"91234567\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":162,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":163,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":164,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":165,"author":{"gitId":"Kappaccinoh"},"content":"    public void test_phoneContainsKeywords_returnsFalse() {","lastModifiedDate":"2024-03-26"},{"lineNumber":166,"author":{"gitId":"Kappaccinoh"},"content":"        // Zero keywords","lastModifiedDate":"2024-03-26"},{"lineNumber":167,"author":{"gitId":"Kappaccinoh"},"content":"        PatientContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":168,"author":{"gitId":"Kappaccinoh"},"content":"                new PatientContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-26"},{"lineNumber":169,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(predicate.test(new PatientBuilder().withPhone(\"91234567\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":170,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":171,"author":{"gitId":"Kappaccinoh"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-26"},{"lineNumber":172,"author":{"gitId":"Kappaccinoh"},"content":"        predicate \u003d new PatientContainsKeywordsPredicate(Arrays.asList(\"7654\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":173,"author":{"gitId":"Kappaccinoh"},"content":"        assertFalse(predicate.test(new PatientBuilder().withPhone(\"91234567\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":174,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":175,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":176,"author":{"gitId":"Kappaccinoh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":177,"author":{"gitId":"Kappaccinoh"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":178,"author":{"gitId":"Kappaccinoh"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2024-03-12"},{"lineNumber":179,"author":{"gitId":"Kappaccinoh"},"content":"        PatientContainsKeywordsPredicate predicate \u003d new PatientContainsKeywordsPredicate(keywords);","lastModifiedDate":"2024-03-26"},{"lineNumber":180,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":181,"author":{"gitId":"Kappaccinoh"},"content":"        String expected \u003d PatientContainsKeywordsPredicate.class.getCanonicalName()","lastModifiedDate":"2024-03-26"},{"lineNumber":182,"author":{"gitId":"Kappaccinoh"},"content":"                + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":183,"author":{"gitId":"Kappaccinoh"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":184,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":185,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Kappaccinoh":185}},{"path":"src/test/java/seedu/address/model/person/PatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"public class PatientTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"    public void isSamePerson() {","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).withDoB(VALID_DOB_BOB)","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"        // different name, all other attributes same -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"        Person editedBob \u003d new PatientBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"        editedBob \u003d new PatientBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"        Person aliceCopy \u003d new PatientBuilder(ALICE).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"        // different nric -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"        // different dob -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withDoB(VALID_DOB_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"        String expected \u003d Patient.class.getCanonicalName() + \"{type\u003d\" + ALICE.getType() + \", nric\u003d\" + ALICE.getNric()","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"                + \", name\u003d\" + ALICE.getName() + \", dob\u003d\" + ALICE.getDoB() + \", phone\u003d\" + ALICE.getPhone() + \"}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":86}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"//public class PersonTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"//    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"//        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"//    public void isSamePerson() {","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"//        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"//        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"//                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"//        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"//        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"//        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"//        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"//        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"//        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"//        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"//    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"//        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"//        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"//        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(ALICE.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"//        // different type -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(ALICE.equals(5));","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"//        // different name -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"//        // different phone -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"//        // different email -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"//        // different address -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"//        // different tags -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"//    public void toStringMethod() {","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"//        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"//                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \",","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"//                tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"//}","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"alfaloo"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"alfaloo"},"content":"    public void canNotInstantiate() {","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"alfaloo"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).withDoB(VALID_DOB_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"alfaloo"},"content":"        // different name, all other attributes same -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"alfaloo"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"alfaloo"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"alfaloo"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"alfaloo"},"content":"        Person editedBob \u003d new PatientBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"alfaloo"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"alfaloo"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"alfaloo"},"content":"        editedBob \u003d new PatientBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"alfaloo"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"alfaloo"},"content":"        Person aliceCopy \u003d new PatientBuilder(ALICE).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2024-03-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":172,"author":{"gitId":"alfaloo"},"content":"        // different nric -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":173,"author":{"gitId":"alfaloo"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":176,"author":{"gitId":"alfaloo"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":177,"author":{"gitId":"alfaloo"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":180,"author":{"gitId":"alfaloo"},"content":"        // different dob -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":181,"author":{"gitId":"alfaloo"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withDoB(VALID_DOB_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":184,"author":{"gitId":"alfaloo"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":185,"author":{"gitId":"alfaloo"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-11"},{"lineNumber":190,"author":{"gitId":"alfaloo"},"content":"        String expected \u003d Patient.class.getCanonicalName() + \"{type\u003d\" + ALICE.getType() + \", nric\u003d\" + ALICE.getNric()","lastModifiedDate":"2024-03-12"},{"lineNumber":191,"author":{"gitId":"alfaloo"},"content":"                + \", name\u003d\" + ALICE.getName() + \", dob\u003d\" + ALICE.getDoB() + \", phone\u003d\" + ALICE.getPhone() + \"}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":194,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":195,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":131,"-":63,"ararchch":2}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"        assertThrows(AssertionError.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"        assertTrue(Phone.isValidPhone(\"82739487\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"        assertTrue(Phone.isValidPhone(\"29384750\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        Phone phone \u003d new Phone(\"12345678\");","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"        assertTrue(phone.equals(new Phone(\"12345678\")));","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"        assertFalse(phone.equals(new Phone(\"01234567\")));","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"alfaloo":6,"-":54}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"//import java.util.Arrays;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"//import java.util.Collections;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"//import java.util.List;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"//public class UniquePersonListTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"//    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"//    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"//    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"//    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"//        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"//    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"//                .build();","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"//        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"//    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"//    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"//    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"//    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"//    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"//    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"//        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"//    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"//                .build();","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"//        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"//    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"//        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"alfaloo"},"content":"//    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.add(BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"alfaloo"},"content":"//    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"alfaloo"},"content":"//    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"alfaloo"},"content":"//    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.remove(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"alfaloo"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"alfaloo"},"content":"//    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"alfaloo"},"content":"//    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"alfaloo"},"content":"//        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"alfaloo"},"content":"//    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"alfaloo"},"content":"//    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"alfaloo"},"content":"//        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"alfaloo"},"content":"//        uniquePersonList.setPersons(personList);","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"alfaloo"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"alfaloo"},"content":"//        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":157,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":158,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"alfaloo"},"content":"//    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"alfaloo"},"content":"//        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":165,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":166,"author":{"gitId":"alfaloo"},"content":"//    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":167,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2024-03-11"},{"lineNumber":168,"author":{"gitId":"alfaloo"},"content":"//            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2024-03-11"},{"lineNumber":169,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":170,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":171,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":172,"author":{"gitId":"alfaloo"},"content":"//    public void toStringMethod() {","lastModifiedDate":"2024-03-11"},{"lineNumber":173,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":174,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":175,"author":{"gitId":"alfaloo"},"content":"//}","lastModifiedDate":"2024-03-11"},{"lineNumber":176,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":181,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-11"},{"lineNumber":195,"author":{"gitId":"alfaloo"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2024-03-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2024-03-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2024-03-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":220,"author":{"gitId":"alfaloo"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2024-03-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":262,"author":{"gitId":"alfaloo"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2024-03-11"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2024-03-11"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2024-03-11"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2024-03-11"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2024-03-11"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2024-03-11"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2024-03-11"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2024-03-11"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2024-03-11"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-11"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2024-03-11"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2024-03-11"},{"lineNumber":341,"author":{"gitId":"alfaloo"},"content":"                -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2024-03-11"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-11"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":348,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":349,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":350,"author":{"gitId":"ararchch"},"content":"    public void getPersonByNric_uniquePersonListHasPerson_returnsPerson() {","lastModifiedDate":"2024-03-14"},{"lineNumber":351,"author":{"gitId":"ararchch"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":352,"author":{"gitId":"ararchch"},"content":"        assertEquals(ALICE, uniquePersonList.getPersonByNric(ALICE.getNric()));","lastModifiedDate":"2024-03-14"},{"lineNumber":353,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":354,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":355,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":356,"author":{"gitId":"ararchch"},"content":"    public void getPersonByNric_uniquePersonListIsEmpty_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":357,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":358,"author":{"gitId":"ararchch"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.getPersonByNric(ALICE.getNric()));","lastModifiedDate":"2024-03-14"},{"lineNumber":359,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":360,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":361,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":362,"author":{"gitId":"ararchch"},"content":"    public void getPersonByNric_uniquePersonListDoesNotHavePerson_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":363,"author":{"gitId":"ararchch"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":364,"author":{"gitId":"ararchch"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.getPersonByNric(new Nric(\"S1111111S\")));","lastModifiedDate":"2024-03-14"},{"lineNumber":365,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":366,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":367,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":368,"author":{"gitId":"ararchch"},"content":"    public void containsNric_validNric_returnsTrue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":369,"author":{"gitId":"ararchch"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-18"},{"lineNumber":370,"author":{"gitId":"ararchch"},"content":"        assertTrue(uniquePersonList.containsNric(ALICE.getNric().nric));","lastModifiedDate":"2024-03-18"},{"lineNumber":371,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":372,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":373,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":374,"author":{"gitId":"ararchch"},"content":"    public void containsNric_invalidNric_returnsFalse() {","lastModifiedDate":"2024-03-18"},{"lineNumber":375,"author":{"gitId":"ararchch"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-18"},{"lineNumber":376,"author":{"gitId":"ararchch"},"content":"        assertFalse(uniquePersonList.containsNric(BOB.getNric().nric));","lastModifiedDate":"2024-03-18"},{"lineNumber":377,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":378,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":379,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":380,"author":{"gitId":"ararchch"},"content":"    public void iterator_returnsIteratorNotNull() {","lastModifiedDate":"2024-03-18"},{"lineNumber":381,"author":{"gitId":"ararchch"},"content":"        assertNotNull(uniquePersonList.iterator());","lastModifiedDate":"2024-03-18"},{"lineNumber":382,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":383,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":384,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":385,"author":{"gitId":"ararchch"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":386,"author":{"gitId":"ararchch"},"content":"        assertTrue(uniquePersonList.equals(uniquePersonList));","lastModifiedDate":"2024-03-18"},{"lineNumber":387,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":388,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":389,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":390,"author":{"gitId":"ararchch"},"content":"    public void equals_differentClass_returnsFalse() {","lastModifiedDate":"2024-03-18"},{"lineNumber":391,"author":{"gitId":"ararchch"},"content":"        assertFalse(uniquePersonList.equals(\"hi\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":392,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":393,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":394,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":395,"author":{"gitId":"ararchch"},"content":"    public void hashcode_validInput_returnsValidHash() {","lastModifiedDate":"2024-03-18"},{"lineNumber":396,"author":{"gitId":"ararchch"},"content":"        int hash1 \u003d uniquePersonList.hashCode();","lastModifiedDate":"2024-03-18"},{"lineNumber":397,"author":{"gitId":"ararchch"},"content":"        int hash2 \u003d uniquePersonList.hashCode();","lastModifiedDate":"2024-03-18"},{"lineNumber":398,"author":{"gitId":"ararchch"},"content":"        assertNotNull(hash1);","lastModifiedDate":"2024-03-18"},{"lineNumber":399,"author":{"gitId":"ararchch"},"content":"        assertNotNull(hash2);","lastModifiedDate":"2024-03-18"},{"lineNumber":400,"author":{"gitId":"ararchch"},"content":"        assertEquals(hash1, hash2);","lastModifiedDate":"2024-03-18"},{"lineNumber":401,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":402,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":403,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":180,"-":167,"ararchch":56}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedAppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT_1;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT_2;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":" * JUnit test class for {@code JsonAdaptedAppointment}.","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"public class JsonAdaptedAppointmentTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"    private static final String INVALID_NRIC_1 \u003d \"G1234A\";","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"    private static final String INVALID_NRIC_2 \u003d \"S123456A\";","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"    private static final String INVALID_DATE \u003d \"2023-02-31 11:0\";","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"    private static final String INVALID_APPOINTMENT_ID \u003d \"a9568782\";","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"    private static final String VALID_NRIC_1 \u003d APPOINTMENT_1.getPatientNric().toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"    private static final String VALID_NRIC_2 \u003d APPOINTMENT_1.getDoctorNric().toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"    private static final String VALID_DATE_A \u003d APPOINTMENT_1.getAppointmentDateTime().toString();","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"    private static final String VALID_DATE_B \u003d APPOINTMENT_1.getAppointmentDateTime().toString();","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"officialchengyud"},"content":"     * Tests the conversion of an appointment with invalid patient and doctor NRIC to a model type.","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"    public void toModelType_invalidPatientDoctorNric_throwsIllegalValueException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(INVALID_NRIC_1, INVALID_NRIC_2,","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"                VALID_DATE_A);","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"        String expectedMessage \u003d Nric.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"officialchengyud"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"     * Tests the conversion of an appointment with invalid patient NRIC to a model type.","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"officialchengyud"},"content":"    public void toModelType_invalidPatientNric_throwsIllegalValueException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_NRIC_1, INVALID_NRIC_2,","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"                VALID_DATE_A);","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"        String expectedMessage \u003d Nric.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"officialchengyud"},"content":"     * Tests the conversion of an appointment with missing doctor NRIC to a model type.","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"officialchengyud"},"content":"    public void toModelType_missingDoctorNric_throwsMissingFieldException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"officialchengyud"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(null, VALID_NRIC_2,","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"                VALID_DATE_A);","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"officialchengyud"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedAppointment.MISSING_FIELD_MESSAGE_FORMAT, \"Nric\");","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"officialchengyud"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"officialchengyud"},"content":"     * Tests the conversion of an appointment with missing patient NRIC to a model type.","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"officialchengyud"},"content":"    public void toModelType_missingPatientNric_throwsMissingFieldException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"officialchengyud"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_NRIC_1, null,","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"                VALID_DATE_A);","lastModifiedDate":"2024-04-15"},{"lineNumber":69,"author":{"gitId":"officialchengyud"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedAppointment.MISSING_FIELD_MESSAGE_FORMAT, \"Nric\");","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"officialchengyud"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"Alteqa"},"content":"     * Tests the conversion of an appointment with missing appointment dateTime to a model type.","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"Alteqa"},"content":"    public void toModelType_missingAppointmentDateTime_throwsMissingFieldException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"officialchengyud"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_NRIC_1, VALID_NRIC_2,","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"                null);","lastModifiedDate":"2024-04-15"},{"lineNumber":80,"author":{"gitId":"Alteqa"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"Alteqa"},"content":"                String.format(JsonAdaptedAppointment.MISSING_FIELD_MESSAGE_FORMAT, \"AppointmentDateTime\");","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"officialchengyud"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"officialchengyud"},"content":"     * Tests the conversion of an appointment with invalid doctor NRIC to a model type.","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"officialchengyud"},"content":"    public void toModelType_invalidDoctorNric_throwsIllegalValueException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_NRIC_1, INVALID_NRIC_2, VALID_DATE_A);","lastModifiedDate":"2024-04-15"},{"lineNumber":91,"author":{"gitId":"officialchengyud"},"content":"        String expectedMessage \u003d Nric.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"officialchengyud"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"Alteqa"},"content":"     * Tests the conversion of an appointment with invalid appointment dateTime to a model type.","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"Alteqa"},"content":"    public void toModelType_invalidAppointmentDateTime_throwsIllegalValueException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"officialchengyud"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_NRIC_1, VALID_NRIC_2,","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"                INVALID_DATE);","lastModifiedDate":"2024-04-15"},{"lineNumber":102,"author":{"gitId":"Alteqa"},"content":"        String expectedMessage \u003d AppointmentDateTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"officialchengyud"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"officialchengyud"},"content":"     * Tests the conversion of a valid appointment with valid details to a model type.","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"officialchengyud"},"content":"     * The method should return an {@code Appointment} object that matches the predefined {@code APPOINTMENT_1}.","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"officialchengyud"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"officialchengyud"},"content":"     * @throws Exception if an error occurs during the test.","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"officialchengyud"},"content":"    public void toModelType_validAppointmentDetails_returnsAppointment() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"officialchengyud"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_NRIC_2, VALID_NRIC_1,","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"alfaloo"},"content":"                VALID_DATE_A);","lastModifiedDate":"2024-04-15"},{"lineNumber":116,"author":{"gitId":"officialchengyud"},"content":"        assertEquals(APPOINTMENT_1, appointment.toModelType());","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":119,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"officialchengyud"},"content":"     * Tests the conversion of an appointment with different details to a model type.","lastModifiedDate":"2024-03-24"},{"lineNumber":121,"author":{"gitId":"officialchengyud"},"content":"     * The method should return an {@code Appointment} object that is different","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"officialchengyud"},"content":"     * from the predefined {@code APPOINTMENT_1}.","lastModifiedDate":"2024-03-24"},{"lineNumber":123,"author":{"gitId":"officialchengyud"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":124,"author":{"gitId":"officialchengyud"},"content":"     * @throws Exception if an error occurs during the test.","lastModifiedDate":"2024-03-24"},{"lineNumber":125,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":126,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":127,"author":{"gitId":"officialchengyud"},"content":"    public void toModelType_differentAppointmentDetails_returnsDifferentAppointment() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":128,"author":{"gitId":"alfaloo"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_NRIC_1, VALID_NRIC_2, VALID_DATE_A);","lastModifiedDate":"2024-04-15"},{"lineNumber":129,"author":{"gitId":"officialchengyud"},"content":"        assertFalse(APPOINTMENT_1.equals(appointment.toModelType()));","lastModifiedDate":"2024-03-24"},{"lineNumber":130,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":131,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":132,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":133,"author":{"gitId":"officialchengyud"},"content":"     * Tests the conversion of a valid {@code Appointment} object to a {@code JsonAdaptedAppointment} object.","lastModifiedDate":"2024-03-24"},{"lineNumber":134,"author":{"gitId":"officialchengyud"},"content":"     * The method should return a {@code JsonAdaptedAppointment} object that is","lastModifiedDate":"2024-03-24"},{"lineNumber":135,"author":{"gitId":"officialchengyud"},"content":"     * equal to the expected JSON-adapted appointment.","lastModifiedDate":"2024-03-24"},{"lineNumber":136,"author":{"gitId":"officialchengyud"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":137,"author":{"gitId":"officialchengyud"},"content":"     * @throws Exception if an error occurs during the test.","lastModifiedDate":"2024-03-24"},{"lineNumber":138,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":139,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":140,"author":{"gitId":"officialchengyud"},"content":"    public void toJsonAdapatedAppointment_validAppointmentObject_returnsValidJsonAdaptedAppointment() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":141,"author":{"gitId":"officialchengyud"},"content":"        JsonAdaptedAppointment jsonAdaptedAppointment \u003d new JsonAdaptedAppointment(APPOINTMENT_1);","lastModifiedDate":"2024-03-24"},{"lineNumber":142,"author":{"gitId":"alfaloo"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_NRIC_2, VALID_NRIC_1, VALID_DATE_B);","lastModifiedDate":"2024-04-15"},{"lineNumber":143,"author":{"gitId":"officialchengyud"},"content":"        assertEquals(jsonAdaptedAppointment, appointment);","lastModifiedDate":"2024-03-24"},{"lineNumber":144,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":145,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":146,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":147,"author":{"gitId":"officialchengyud"},"content":"     * Tests the conversion of a different {@code Appointment} object to a {@code JsonAdaptedAppointment} object.","lastModifiedDate":"2024-03-24"},{"lineNumber":148,"author":{"gitId":"officialchengyud"},"content":"     * The method should return a {@code JsonAdaptedAppointment} object that is different","lastModifiedDate":"2024-03-24"},{"lineNumber":149,"author":{"gitId":"officialchengyud"},"content":"     * from the expected JSON-adapted appointment.","lastModifiedDate":"2024-03-24"},{"lineNumber":150,"author":{"gitId":"officialchengyud"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":151,"author":{"gitId":"officialchengyud"},"content":"     * @throws Exception if an error occurs during the test.","lastModifiedDate":"2024-03-24"},{"lineNumber":152,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":153,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":154,"author":{"gitId":"officialchengyud"},"content":"    public void toJsonAdapatedAppointment_differentAppointmentObject_returnsDifferentJsonAdaptedAppointment()","lastModifiedDate":"2024-03-24"},{"lineNumber":155,"author":{"gitId":"officialchengyud"},"content":"            throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":156,"author":{"gitId":"officialchengyud"},"content":"        JsonAdaptedAppointment jsonAdaptedAppointment \u003d new JsonAdaptedAppointment(APPOINTMENT_2);","lastModifiedDate":"2024-03-24"},{"lineNumber":157,"author":{"gitId":"alfaloo"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_NRIC_2, VALID_NRIC_1, VALID_DATE_A);","lastModifiedDate":"2024-04-15"},{"lineNumber":158,"author":{"gitId":"officialchengyud"},"content":"        assertFalse(jsonAdaptedAppointment.equals(appointment));","lastModifiedDate":"2024-03-24"},{"lineNumber":159,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":160,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":161,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":162,"author":{"gitId":"officialchengyud"},"content":"     * Tests the comparison of a {@code JsonAdaptedAppointment} object with itself.","lastModifiedDate":"2024-03-24"},{"lineNumber":163,"author":{"gitId":"officialchengyud"},"content":"     * The method should return true if the objects are the same instance.","lastModifiedDate":"2024-03-24"},{"lineNumber":164,"author":{"gitId":"officialchengyud"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":165,"author":{"gitId":"officialchengyud"},"content":"     * @throws Exception if an error occurs during the test.","lastModifiedDate":"2024-03-24"},{"lineNumber":166,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":167,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":168,"author":{"gitId":"officialchengyud"},"content":"    public void toJsonAdapatedAppointment_sameAppointmentObject_returnsSameJsonAdaptedAppointment() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":169,"author":{"gitId":"officialchengyud"},"content":"        JsonAdaptedAppointment jsonAdaptedAppointment \u003d new JsonAdaptedAppointment(APPOINTMENT_2);","lastModifiedDate":"2024-03-24"},{"lineNumber":170,"author":{"gitId":"officialchengyud"},"content":"        assert(jsonAdaptedAppointment.equals(jsonAdaptedAppointment));","lastModifiedDate":"2024-03-24"},{"lineNumber":171,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":172,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":173,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":174,"author":{"gitId":"officialchengyud"},"content":"     * Tests the comparison of a {@code JsonAdaptedAppointment} object with a different type of object.","lastModifiedDate":"2024-03-24"},{"lineNumber":175,"author":{"gitId":"officialchengyud"},"content":"     * The method should return false as the objects are of different types.","lastModifiedDate":"2024-03-24"},{"lineNumber":176,"author":{"gitId":"officialchengyud"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":177,"author":{"gitId":"officialchengyud"},"content":"     * @throws Exception if an error occurs during the test.","lastModifiedDate":"2024-03-24"},{"lineNumber":178,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":179,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":180,"author":{"gitId":"officialchengyud"},"content":"    public void toJsonAdapatedAppointment_differentObjectType_returnsFalse() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":181,"author":{"gitId":"officialchengyud"},"content":"        JsonAdaptedAppointment jsonAdaptedAppointment \u003d new JsonAdaptedAppointment(APPOINTMENT_2);","lastModifiedDate":"2024-03-24"},{"lineNumber":182,"author":{"gitId":"officialchengyud"},"content":"        assertFalse(jsonAdaptedAppointment.equals(APPOINTMENT_2));","lastModifiedDate":"2024-03-24"},{"lineNumber":183,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":184,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Alteqa":10,"alfaloo":12,"officialchengyud":162}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.DoB;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"public class JsonAdaptedPatientTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"    private static final String INVALID_NRIC \u003d \"Z123456\";","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"    private static final String INVALID_DOB \u003d \"2023-02-31\";","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    private static final String VALID_NRIC \u003d BENSON.getNric().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    private static final String VALID_DOB \u003d BENSON.getDoB().dateOfBirth.toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"    //    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"    //    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"    //        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"    //        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"    //    }","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"    public void toModelType_invalidNric_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"                new JsonAdaptedPerson(\"PATIENT\", INVALID_NRIC, VALID_NAME, VALID_DOB, VALID_PHONE);","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d Nric.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"    public void toModelType_nullNric_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(\"PATIENT\", null, VALID_NAME, VALID_DOB, VALID_PHONE);","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"                new JsonAdaptedPerson(\"PATIENT\", VALID_NRIC, INVALID_NAME, VALID_DOB, VALID_PHONE);","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(\"PATIENT\", VALID_NRIC, null, VALID_DOB, VALID_PHONE);","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"    public void toModelType_invalidDoB_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"                new JsonAdaptedPerson(\"PATIENT\", VALID_NRIC, VALID_NAME, INVALID_DOB, VALID_PHONE);","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d DoB.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"    public void toModelType_nullDoB_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(\"PATIENT\", VALID_NRIC, VALID_NAME, null, VALID_PHONE);","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, DoB.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"                new JsonAdaptedPerson(\"PATIENT\", VALID_NRIC, VALID_NAME, VALID_DOB, INVALID_PHONE);","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(\"PATIENT\", VALID_NRIC, VALID_NAME, VALID_DOB, null);","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":91}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"//package seedu.address.storage;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"//import java.util.List;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"//public class JsonAdaptedPersonTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"//    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"//    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"//    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"//    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"//    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"//    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"//    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"//    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"//    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"//    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"//            .map(JsonAdaptedTag::new)","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"//            .collect(Collectors.toList());","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"//    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"//    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"//                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"//        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"//    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"//    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"//                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"//        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"//    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"//    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"//        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"//    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"//    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"//        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"//    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"//    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"//        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"//        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"alfaloo"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"//}","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":158,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":168,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":173,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":178,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":121,"-":60}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"//package seedu.address.storage;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"//import java.io.IOException;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"//import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"//public class JsonAddressBookStorageTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"//    @TempDir","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"//    public Path testFolder;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"//    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"//    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"//        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"//    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"//        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"//                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"//                : null;","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"//    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"//        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"//    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"//    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"//    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"//    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"//        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"//        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"//        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"//        // Save in new file and read back","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"//        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"//        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"//        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"//        original.addPerson(HOON);","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"//        original.removePerson(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"//        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"//        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"//        // Save and read without specifying file path","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"//        original.addPerson(IDA);","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"//        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"//        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"//    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"//    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"//     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"//     */","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"//    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"//        try {","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"//            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"//                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"//        } catch (IOException ioe) {","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"//            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"//        }","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"//","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"alfaloo"},"content":"//    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"//    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"//    }","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"//}","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2024-03-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2024-03-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2024-03-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2024-03-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2024-03-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2024-03-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2024-03-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2024-03-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2024-03-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2024-03-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2024-03-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2024-03-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2024-03-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2024-03-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2024-03-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2024-03-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2024-03-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-03-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2024-03-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-03-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2024-03-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2024-03-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2024-03-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-11"},{"lineNumber":218,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alfaloo":112,"-":106}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.testutil.TypicalAppointments;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"    private static final Path TYPICAL_APPOINTMENTS_FILE \u003d TEST_DATA_FOLDER.resolve(","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"            \"typicalAppointmentsAddressBook.json\");","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"    private static final Path DUPLICATE_APPOINTMENT_FILE \u003d TEST_DATA_FOLDER.resolve(","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"officialchengyud"},"content":"            \"duplicateAppointmentAddressBook.json\");","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"                    JsonSerializableAddressBook.class).get();","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getShortTypicalAddressBook();","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"    public void toModelType_typicalAppointmentsFile_success() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_APPOINTMENTS_FILE,","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"        AddressBook typicalAppointmentsAddressBook \u003d TypicalAppointments.getTypicalAddressBook();","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"officialchengyud"},"content":"        assertEquals(addressBookFromFile, typicalAppointmentsAddressBook);","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"officialchengyud"},"content":"                    JsonSerializableAddressBook.class).get();","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"officialchengyud"},"content":"                    dataFromFile::toModelType);","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"officialchengyud"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"officialchengyud"},"content":"    public void toModelType_duplicateAppointments_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"officialchengyud"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_APPOINTMENT_FILE,","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"officialchengyud"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"officialchengyud"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_APPOINTMENTS,","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"officialchengyud":27,"-":45}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2024-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2024-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2024-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2024-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2024-04-05"},{"lineNumber":56,"author":{"gitId":"Alteqa"},"content":"        Optional\u003cReadOnlyAddressBook\u003e retrieved \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":57,"author":{"gitId":"Alteqa"},"content":"                storageManager.readAddressBook(getTempFilePath(\"addressbookinvalid.json\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":58,"author":{"gitId":"Alteqa"},"content":"        assertEquals(Optional.empty(), retrieved);","lastModifiedDate":"2024-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Alteqa":4,"-":62}},{"path":"src/test/java/seedu/address/testutil/AppointmentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"public class AppointmentBuilder {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"    public static final String DEFAULT_APPTDATE \u003d \"2024-08-30 11:02\";","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"    private Nric doctorNric;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    private Nric patientNric;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"    private AppointmentDateTime appointmentDateTime;","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"    public AppointmentBuilder() {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"        Doctor d \u003d new DoctorBuilder().build();","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"        Patient p \u003d new PatientBuilder().build();","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"        this.doctorNric \u003d d.getNric();","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"        this.patientNric \u003d p.getNric();","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"        this.appointmentDateTime \u003d new AppointmentDateTime(DEFAULT_APPTDATE);","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"     * Initializes the AppointmentBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"    public AppointmentBuilder(Appointment apptToCopy) {","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"        this.appointmentDateTime \u003d apptToCopy.getAppointmentDateTime();","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"        this.doctorNric \u003d apptToCopy.getDoctorNric();","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"        this.patientNric \u003d apptToCopy.getPatientNric();","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"     * Sets the {@code date} of the {@code Appointment} that we are building.","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"Alteqa"},"content":"    public AppointmentBuilder withDateTime(String dateTimeString) {","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"Alteqa"},"content":"        this.appointmentDateTime \u003d new AppointmentDateTime(dateTimeString);","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"        return this;","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"     * Sets the {@code doctorNric} of the {@code Appointment} that we are building.","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"    public AppointmentBuilder withDoctor(Doctor doctor) {","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"        this.doctorNric \u003d doctor.getNric();","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"        return this;","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"     * Sets the {@code patientNric} of the {@code Appointment} that we are building.","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"    public AppointmentBuilder withPatient(Patient patient) {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"        this.patientNric \u003d patient.getNric();","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"        return this;","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"     * Builds appointment with specified attributes.","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"     * If parameters are incorrect, or invalid, returns null.","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"     * @return Appointment with specified attributes","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"    public Appointment build() {","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"            return new Appointment(doctorNric, patientNric, appointmentDateTime, false);","lastModifiedDate":"2024-04-15"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"            return null;","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"Alteqa":7,"alfaloo":1,"Kappaccinoh":1,"ararchch":71}},{"path":"src/test/java/seedu/address/testutil/AppointmentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTORNRIC;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENTNRIC;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":" * A utility class for Appointment.","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"public class AppointmentUtil {","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"     * Returns an add command string for adding the {@code appointment}.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    public static String getAddAppointmentCommand(Appointment appointment) {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"        return AddAppointmentCommand.COMMAND_WORD + \" \" + getAppointmentDetails(appointment);","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    public static String getAppointmentDetails(Appointment appointment) {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"        sb.append(PREFIX_DOCTORNRIC + appointment.getDoctorNric().nric + \" \");","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"        sb.append(PREFIX_PATIENTNRIC + appointment.getPatientNric().nric + \" \");","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"        sb.append(PREFIX_DATE + appointment.getAppointmentDateTime().appointmentDateTime.format(formatter) + \" \");","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"Alteqa":2,"Kappaccinoh":1,"ararchch":32}},{"path":"src/test/java/seedu/address/testutil/DoctorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.DoB;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Type;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"public class DoctorBuilder {","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"    public static final String DEFAULT_NRIC \u003d \"S1234567A\";","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"    public static final String DEFAULT_DOB \u003d \"2002-01-30\";","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":"    private Nric nric;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"    private Name name;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"    private DoB dob;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"officialchengyud"},"content":"    private Phone phone;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"officialchengyud"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"officialchengyud"},"content":"    public DoctorBuilder() {","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"officialchengyud"},"content":"        nric \u003d new Nric(DEFAULT_NRIC);","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"officialchengyud"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"        dob \u003d new DoB(DEFAULT_DOB);","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"officialchengyud"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"    public DoctorBuilder(Person doctorToCopy) {","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"        if (doctorToCopy.getType() !\u003d Type.DOCTOR) {","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"            throw new RuntimeException();","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"        nric \u003d doctorToCopy.getNric();","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"officialchengyud"},"content":"        name \u003d doctorToCopy.getName();","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"        dob \u003d doctorToCopy.getDoB();","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"        phone \u003d doctorToCopy.getPhone();","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"officialchengyud"},"content":"     * Sets the {@code Nric} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"officialchengyud"},"content":"    public DoctorBuilder withNric(String nric) {","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"officialchengyud"},"content":"        this.nric \u003d new Nric(nric);","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"officialchengyud"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"officialchengyud"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"officialchengyud"},"content":"    public DoctorBuilder withName(String name) {","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"officialchengyud"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"officialchengyud"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"officialchengyud"},"content":"     * Sets the {@code DoB} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"officialchengyud"},"content":"    public DoctorBuilder withDoB(String dob) {","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"officialchengyud"},"content":"        this.dob \u003d new DoB(dob);","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"officialchengyud"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"officialchengyud"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"officialchengyud"},"content":"    public DoctorBuilder withPhone(String phone) {","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"officialchengyud"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"officialchengyud"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"officialchengyud"},"content":"    public Doctor build() {","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"officialchengyud"},"content":"        return new Doctor(nric, name, dob, phone);","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"officialchengyud":85}},{"path":"src/test/java/seedu/address/testutil/EditAppointmentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"public class EditAppointmentDescriptorBuilder {","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    private EditAppointmentDescriptor descriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"    public EditAppointmentDescriptorBuilder() {","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"        descriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"    public EditAppointmentDescriptorBuilder(EditAppointmentDescriptor descriptor) {","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"        this.descriptor \u003d new EditAppointmentDescriptor(descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"     * Returns an {@code EditAppointmentDescriptor} with fields containing {@code appointment}\u0027s details","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"    public EditAppointmentDescriptorBuilder(Appointment appointment) {","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"        descriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"        descriptor.setDateTime(appointment.getAppointmentDateTime());","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"        descriptor.setDoctorNric(appointment.getDoctorNric());","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"        descriptor.setPatientNric(appointment.getPatientNric());","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"     * Sets the {@code Date} of the {@code EditAppointmentDescriptor} that we are building.","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"    public EditAppointmentDescriptorBuilder withDateTime(String dateTime) {","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"Alteqa"},"content":"        descriptor.setDateTime(new AppointmentDateTime(dateTime));","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"        return this;","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"     * Builds the descriptor.","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"    public EditAppointmentDescriptor build() {","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"        return descriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"Alteqa":4,"alfaloo":42}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.person.DoB;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"        descriptor.setNric(person.getNric());","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"        descriptor.setDob(person.getDoB());","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"Alteqa"},"content":"     * Sets the {@code Nric} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"Alteqa"},"content":"    public EditPersonDescriptorBuilder withNric(String nric) {","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"Alteqa"},"content":"        descriptor.setNric(new Nric(nric));","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"Alteqa"},"content":"     * Sets the {@code Dob} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"Alteqa"},"content":"    public EditPersonDescriptorBuilder withDob(String dob) {","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"Alteqa"},"content":"        descriptor.setDob(new DoB(dob));","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Alteqa":10,"-":61}},{"path":"src/test/java/seedu/address/testutil/PatientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.DoB;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Type;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"public class PatientBuilder {","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"    public static final String DEFAULT_NRIC \u003d \"S1234567A\";","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"    public static final String DEFAULT_DOB \u003d \"2002-01-30\";","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    private Nric nric;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"    private Name name;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    private DoB dob;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    private Phone phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"     * Creates a {@code PatientBuilder} with the default details.","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"    public PatientBuilder() {","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"        nric \u003d new Nric(DEFAULT_NRIC);","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"        dob \u003d new DoB(DEFAULT_DOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"Alteqa"},"content":"     * Initializes the PatientBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    public PatientBuilder(Person patientToCopy) {","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"        if (patientToCopy.getType() !\u003d Type.PATIENT) {","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"            throw new RuntimeException();","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        nric \u003d patientToCopy.getNric();","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"        name \u003d patientToCopy.getName();","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"        dob \u003d patientToCopy.getDoB();","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"        phone \u003d patientToCopy.getPhone();","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"Alteqa"},"content":"     * Sets the {@code Nric} of the {@code Patient} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"    public PatientBuilder withNric(String nric) {","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"        this.nric \u003d new Nric(nric);","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"Alteqa"},"content":"     * Sets the {@code Name} of the {@code Patient} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"    public PatientBuilder withName(String name) {","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"Alteqa"},"content":"     * Sets the {@code DoB} of the {@code Patient} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"    public PatientBuilder withDoB(String dob) {","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"        this.dob \u003d new DoB(dob);","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"Alteqa"},"content":"     * Sets the {@code Phone} of the {@code Patient} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"    public PatientBuilder withPhone(String phone) {","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"    public Patient build() {","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"        return new Patient(nric, name, dob, phone);","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"Alteqa":6,"alfaloo":79}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    public static String getAddPatientCommand(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"        return AddPatientCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"    public static String getAddDoctorCommand(Person person) {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"        return AddDoctorCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"        sb.append(PREFIX_NRIC + person.getNric().nric + \" \");","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"        sb.append(PREFIX_DOB + person.getDoB().dateOfBirth.toString() + \" \");","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"        descriptor.getNric().ifPresent(nric -\u003e sb.append(PREFIX_NRIC).append(nric.nric).append(\" \"));","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"Alteqa"},"content":"        descriptor.getDob().ifPresent(dob -\u003e sb.append(PREFIX_DOB).append(dob.dateOfBirth).append(\" \"));","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Alteqa":8,"alfaloo":7,"-":40}},{"path":"src/test/java/seedu/address/testutil/TypicalAppointments.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"officialchengyud"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalPersons.BROWN;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.testutil.TypicalPersons.CAM;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import static seedu.address.testutil.TypicalPersons.DAMES;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.testutil.TypicalPersons.DANNY;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"officialchengyud"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"officialchengyud"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"officialchengyud"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"officialchengyud"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"officialchengyud"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"officialchengyud"},"content":" * A utility class containing a list of {@code Appointments } objects to be used in tests.","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"officialchengyud"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"officialchengyud"},"content":"public class TypicalAppointments {","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"    public static final Appointment APPOINTMENT_1 \u003d new AppointmentBuilder().withDateTime(\"2124-03-19 11:11\")","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"officialchengyud"},"content":"            .withDoctor((Doctor) BROWN).withPatient((Patient) ALICE).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"    public static final Appointment APPOINTMENT_2 \u003d new AppointmentBuilder().withDateTime(\"2124-03-20 11:09\")","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"            .withDoctor((Doctor) BROWN).withPatient((Patient) CAM).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"    public static final Appointment APPOINTMENT_3 \u003d new AppointmentBuilder().withDateTime(\"2124-03-25 12:09\")","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"            .withDoctor((Doctor) BROWN).withPatient((Patient) DANNY).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"    public static final Appointment APPOINTMENT_4 \u003d new AppointmentBuilder().withDateTime(\"2124-03-30 12:55\")","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"            .withDoctor((Doctor) DAMES).withPatient((Patient) BENSON).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"officialchengyud"},"content":"    private TypicalAppointments() {} // prevents instantiation","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"officialchengyud"},"content":"     * Returns an {@code AddressBook} with all the typical appointments.","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"officialchengyud"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"officialchengyud"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"officialchengyud"},"content":"        for (Appointment appointment : getTypicalAppointments()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"officialchengyud"},"content":"            ab.addAppointment(appointment);","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"officialchengyud"},"content":"        return ab;","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"    public static List\u003cAppointment\u003e getTypicalAppointments() {","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"officialchengyud"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"                APPOINTMENT_1, APPOINTMENT_2, APPOINTMENT_3, APPOINTMENT_4","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"officialchengyud"},"content":"        ));","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"officialchengyud"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"Alteqa":4,"alfaloo":4,"officialchengyud":35,"Kappaccinoh":7}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"    public static final Index INDEX_FIRST_APPOINTMENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"    public static final Index INDEX_SECOND_APPOINTMENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"    public static final Index INDEX_THIRD_APPOINTMENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"alfaloo":4,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    public static final Person ALICE \u003d new PatientBuilder().withNric(\"S1234567A\").withName(\"Alice Pauline\")","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"            .withDoB(\"2000-01-03\").withPhone(\"94351253\").build();","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"    public static final Person BENSON \u003d new PatientBuilder().withNric(\"S8734985A\").withName(\"Benson Chen\")","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"            .withDoB(\"2002-01-03\").withPhone(\"88927639\").build();","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"    public static final Person CAM \u003d new PatientBuilder().withNric(\"S8834985A\").withName(\"CAM SENG\")","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"            .withDoB(\"2002-01-03\").withPhone(\"88927639\").build();","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"    public static final Person DANNY \u003d new PatientBuilder().withNric(\"S0734985A\").withName(\"DANNY WOH\")","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"            .withDoB(\"2002-01-03\").withPhone(\"88927639\").build();","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"    //Patients","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"    public static final Person CARL \u003d new PatientBuilder().withNric(\"S2378593A\").withName(\"Carl Sim\")","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"            .withDoB(\"2005-01-03\").withPhone(\"87436749\").build();","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"Alteqa"},"content":"    public static final Person AMY \u003d new PatientBuilder().withNric(VALID_NRIC_AMY).withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"            .withDoB(VALID_DOB_AMY).withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"    public static final Person BOB \u003d new PatientBuilder().withNric(VALID_NRIC_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"            .withDoB(VALID_DOB_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"    public static final Person CARL_GOH \u003d new PatientBuilder().withNric(\"S1234343B\").withName(\"Carl Goh\")","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"            .withDoB(\"2001-02-24\").withPhone(\"98173241\").build();","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"officialchengyud"},"content":"    // Doctors","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"    public static final Person BROWN \u003d new DoctorBuilder().withNric(\"S2378593A\").withName(\"Brown Goh\")","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"officialchengyud"},"content":"            .withDoB(\"2005-01-03\").withPhone(\"87436749\").build();","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Alteqa"},"content":"    public static final Person DAMES \u003d new DoctorBuilder().withNric(\"S1234367A\").withName(\"Dames Tan\")","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"Alteqa"},"content":"            .withDoB(\"2020-01-03\").withPhone(\"94351223\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"Alteqa"},"content":"    public static final Person DAMES_GOH \u003d new DoctorBuilder().withNric(\"S1124133A\").withName(\"Dames Goh\")","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"            .withDoB(\"2010-01-04\").withPhone(\"94353243\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"Alteqa"},"content":"    public static final Person ERIN \u003d new DoctorBuilder().withNric(\"T0232948D\").withName(\"Erin Cher\")","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"Alteqa"},"content":"            .withDoB(\"2002-01-04\").withPhone(\"98765433\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"Alteqa"},"content":"    public static final Person FROWN \u003d new DoctorBuilder().withNric(\"S2378493A\").withName(\"Frown Lee\")","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"Alteqa"},"content":"            .withDoB(\"2004-01-03\").withPhone(\"87433749\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"Alteqa"},"content":"    public static final Person GON \u003d new DoctorBuilder().withNric(\"S2378393A\").withName(\"Gon Tan\")","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"Alteqa"},"content":"            .withDoB(\"2005-01-02\").withPhone(\"87432349\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":74,"author":{"gitId":"officialchengyud"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"officialchengyud"},"content":"     * Returns an {@code AddressBook} with shorter list of typical persons.","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"officialchengyud"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"officialchengyud"},"content":"    public static AddressBook getShortTypicalAddressBook() {","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"officialchengyud"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"officialchengyud"},"content":"        for (Person person : getShortTypicalPersons()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"officialchengyud"},"content":"            ab.addPerson(person);","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"officialchengyud"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"officialchengyud"},"content":"        return ab;","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"Kappaccinoh"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"Kappaccinoh"},"content":"                ALICE,","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"Kappaccinoh"},"content":"                BENSON,","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"Kappaccinoh"},"content":"                BOB,","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"Alteqa"},"content":"                CARL,","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"Alteqa"},"content":"                CARL_GOH,","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"Alteqa"},"content":"                DAMES,","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"Alteqa"},"content":"                DAMES_GOH,","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"Alteqa"},"content":"                ERIN,","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"Alteqa"},"content":"                GON","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"Kappaccinoh"},"content":"        ));","lastModifiedDate":"2024-03-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":98,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"officialchengyud"},"content":"    public static List\u003cPerson\u003e getShortTypicalPersons() {","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"officialchengyud"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"officialchengyud"},"content":"                ALICE,","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"officialchengyud"},"content":"                BENSON","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"officialchengyud"},"content":"        ));","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"officialchengyud"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"officialchengyud"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Alteqa":20,"alfaloo":17,"officialchengyud":22,"Kappaccinoh":8,"-":39}},{"path":"src/test/java/seedu/address/ui/AppointmentCardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"public class AppointmentCardTest {","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"    private static final int INDEX \u003d 1;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"    private AppointmentCard appointmentCard;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"    private Person samplePerson;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"    public void constructor_validPerson_correctFields() {","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"        assertTrue(true);","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"        assertTrue(true);","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"    public void display() {","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"        assertTrue(true);","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"    public void equals() {","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"        assertTrue(true);","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"Alteqa"},"content":"    public void equals_nullObject_returnsFalse() {","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"        assertTrue(true);","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"Alteqa"},"content":"    public void hashCode_validHashCode() {","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"Alteqa"},"content":"        assertTrue(true);","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"Alteqa"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"Alteqa":45}},{"path":"src/test/java/seedu/address/ui/PersonCardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"public class PersonCardTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    private static final int INDEX \u003d 1;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"    private PersonCard personCard;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"    private Person samplePerson;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"    public void constructor_validPerson_correctFields() {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"    public void display() {","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"    public void equals_nullObject_returnsFalse() {","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"    public void hashCode_validHashCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"alfaloo":45}}]
