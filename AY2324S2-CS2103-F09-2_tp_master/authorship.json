[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"[![Java CI](https://github.com/AY2324S2-CS2103-F09-2/tp/actions/workflows/gradle.yml/badge.svg?branch\u003dmaster)](https://github.com/AY2324S2-CS2103-F09-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103-F09-2/tp/graph/badge.svg?token\u003dAX3SGG0FMX)](https://codecov.io/gh/AY2324S2-CS2103-F09-2/tp)\\","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"**PatientSync is a desktop application meticulously crafted for nurses who prioritize the well-being of their patients above all else.**\\","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"It allows you to input intimate details about your patients, such as food preferences and family conditions. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"## User Profile","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"**Target Users:** Nurses in a hospital setting","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"**Key Challenges:**","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"- Managing diverse patient needs and preferences.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"- Providing personalized care while juggling a busy schedule.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"- Ensuring accurate and up-to-date patient information is readily accessible.","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"## Value Proposition","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"**PatientSync** is meticulously crafted for nurses who prioritize the well-being of their patients above all else. It allows nurses to input intimate details about their patients, such as food preferences and family conditions. This personalized approach enables nurses to deliver tailored care that meets the unique needs of each individual.","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"|      Project Links      |                            Description                            |","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"|-------------------------|------------------------------------------------------------------|","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"| [Project Website](https://ay2324s2-cs2103-f09-2.github.io/tp/) | Official website for the PatientSync desktop application.       |","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"| [User Guide](https://ay2324s2-cs2103-f09-2.github.io/tp/UserGuide.html#quick-start)   | Quick Start guide for users interested in using PatientSync.    |","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"| [Developer Guide](https://ay2324s2-cs2103-f09-2.github.io/tp/DeveloperGuide.html)     | Comprehensive guide for developers interested in contributing to PatientSync. |","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"| [About Us](https://ay2324s2-cs2103-f09-2.github.io/tp/AboutUs.html)                              | Learn more about the team behind the PatientSync project.        |","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"**Acknowledgements**\\","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"SherisseTJW":3,"NeoHW":30,"-":2}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"run {","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"ZhiWei1010"},"content":"    archiveFileName \u003d \u0027PatientSync.jar\u0027","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ZhiWei1010":1,"NeoHW":4,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"### Neo Haowei","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"\u003cimg src\u003d\"images/neohw.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"[[github](http://github.com/NeoHW)]","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"[[portfolio](https://ay2324s2-cs2103-f09-2.github.io/tp/)]","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"* Responsibilities: Overall project coordination, code review","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"### Sherisse Tan Jing Wen","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"\u003cimg src\u003d\"images/sherissetjw.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"[[github](http://github.com/SherisseTJW)] [[portfolio](https://ay2324s2-cs2103-f09-2.github.io/tp/)]","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"* Role: Integration","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"* Responsibilities: In charge of versioning of the code, maintaining the code repository,","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"integrating various parts of the software to create a whole.","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"guohuang88"},"content":"### Li Guohuang","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"guohuang88"},"content":"\u003cimg src\u003d\"images/guohuang88.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"guohuang88"},"content":"[[github](http://github.com/guohuang88)]","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"guohuang88"},"content":"[[portfolio](https://ay2324s2-cs2103-f09-2.github.io/tp/)]","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"guohuang88"},"content":"* Role: Testing","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"guohuang88"},"content":"* Responsibilities: Ensure project is tested properly and on time.","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"ZhiWei1010"},"content":"### Tan Zhi Wei","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"ZhiWei1010"},"content":"\u003cimg src\u003d\"images/zhiwei1010.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"ZhiWei1010"},"content":"[[github](http://github.com/ZhiWei1010)]","lastModifiedDate":"2024-03-04"},{"lineNumber":49,"author":{"gitId":"ZhiWei1010"},"content":"[[portfolio](https://ay2324s2-cs2103-f09-2.github.io/tp/)]","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"ZhiWei1010"},"content":"* Role: Deliverables and deadlines","lastModifiedDate":"2024-03-04"},{"lineNumber":52,"author":{"gitId":"ZhiWei1010"},"content":"* Responsibilities: Ensure project deliverables are done on time and in the right format.","lastModifiedDate":"2024-03-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"### Choo Weng Yan","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"\u003cimg src\u003d\"images/choowengyan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"[[github](http://github.com/choowengyan)] ","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"[[portfolio](https://ay2324s2-cs2103-f09-2.github.io/tp/)]","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"* Role: Scheduling and tracking","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"* Responsibilities: Ensure that team\u0027s task is scheduled properly based on each iteration and milestone, ","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"optimizing project timeline, updating task status and providing accurate information.","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"guohuang88":6,"SherisseTJW":6,"ZhiWei1010":6,"choowengyan":7,"NeoHW":5,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"# PatientSync Developer Guide","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"## 1. Introduction","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"### **1.1 Product Overview**","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"PatientSync addresses a crucial gap in the current hospital systems by providing nurses with a comprehensive tool to manage patient information beyond administrative details.","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"In many hospitals, the existing systems typically offer basic administrative information such as patient names and contact details. However, they often lack the capacity to delve into the intimate details of patient care.","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"This app can help with personalised and effective care by:","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"* viewing and managing upcoming checkup and appointment dates for each patient.","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"* Utilising tags to categorize patients into groups based on conditions, treatment plans, or other criteria.","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"### 1.2 Setting up, getting started","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"### 1.3 Acknowledgements","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"PatientSync is a brownfield Java Project based on the AB3 project template created by the SE-EDU initiative.","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"## 2 Design","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"### 2.1 Architecture","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"**2.1.1. Main components of the architecture**","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"**2.1.2. How the architecture components interact with each other**","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"NeoHW"},"content":"### 2.2 UI component","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"NeoHW"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PatientListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2024-03-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"NeoHW"},"content":"* depends on some classes in the `Model` component, as it displays `Patient` object residing in the `Model`.","lastModifiedDate":"2024-03-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"NeoHW"},"content":"### 2.3 Logic component","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"NeoHW"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a patient).\u003cbr\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"NeoHW"},"content":"### 2.4 Model component","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"NeoHW"},"content":"* stores the address book data i.e., all `Patient` objects (which are contained in a `UniquePatientList` object).","lastModifiedDate":"2024-03-09"},{"lineNumber":142,"author":{"gitId":"NeoHW"},"content":"* stores the currently \u0027selected\u0027 `Patient` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPatient\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2024-03-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":148,"author":{"gitId":"NeoHW"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Patient` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Patient` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2024-03-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"NeoHW"},"content":"### 2.5 Storage component","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"NeoHW"},"content":"### 2.6 Common classes","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"NeoHW"},"content":"## 3 Implementation","lastModifiedDate":"2024-03-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"NeoHW"},"content":"### 3.1 Adding a Patient","lastModifiedDate":"2024-03-12"},{"lineNumber":177,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":178,"author":{"gitId":"NeoHW"},"content":"#### Introduction","lastModifiedDate":"2024-03-12"},{"lineNumber":179,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":180,"author":{"gitId":"choowengyan"},"content":"The `AddCommand` class is responsible for adding new patient\u0027s information in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":181,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":182,"author":{"gitId":"NeoHW"},"content":"#### Specifications","lastModifiedDate":"2024-03-12"},{"lineNumber":183,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":184,"author":{"gitId":"choowengyan"},"content":"* AddCommand, as defined by the `AddCommand` class, contain parameters which consists of: ","lastModifiedDate":"2024-03-17"},{"lineNumber":185,"author":{"gitId":"choowengyan"},"content":"  *  `patientHospitalId` integer, ","lastModifiedDate":"2024-03-17"},{"lineNumber":186,"author":{"gitId":"choowengyan"},"content":"  * `name`, `preferredName` String with only alphabets character,","lastModifiedDate":"2024-03-17"},{"lineNumber":187,"author":{"gitId":"choowengyan"},"content":"  *  `foodPreference`, `familyCondition`, `hobby` and `tag` which are alphanumeric.","lastModifiedDate":"2024-03-17"},{"lineNumber":188,"author":{"gitId":"choowengyan"},"content":"* `tag` field is optional in the AddCommand and can be added later on using the `AddTagsCommand`.","lastModifiedDate":"2024-03-17"},{"lineNumber":189,"author":{"gitId":"choowengyan"},"content":"* If any of the fields are repeated during the adding of patient or missing fields, error message will be thrown.","lastModifiedDate":"2024-03-17"},{"lineNumber":190,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":191,"author":{"gitId":"choowengyan"},"content":"The activity diagram below outlines the steps involved when a user initiates a Add command.","lastModifiedDate":"2024-04-04"},{"lineNumber":192,"author":{"gitId":"choowengyan"},"content":"\u003cpuml src\u003d\"diagrams/AddActivityDiagram.puml\" alt\u003d\"AddActivityDiagram\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":193,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":194,"author":{"gitId":"NeoHW"},"content":"#### Example Usage Scenario","lastModifiedDate":"2024-03-12"},{"lineNumber":195,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":196,"author":{"gitId":"choowengyan"},"content":"Given below is an example usage scenario and how the group creation mechanism behaves at each step.","lastModifiedDate":"2024-03-17"},{"lineNumber":197,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":198,"author":{"gitId":"choowengyan"},"content":"Step 1: The user accesses the PatientSync application.","lastModifiedDate":"2024-03-17"},{"lineNumber":199,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":200,"author":{"gitId":"guohuang88"},"content":"Step 2: The user executes the `add id/ 12347 n/ Mary Jane p/ Mary f/ Korean c/ Lives with only daughter h/ Watch Drama`","lastModifiedDate":"2024-03-18"},{"lineNumber":201,"author":{"gitId":"choowengyan"},"content":"command to add a new Patient whose patient hospital ID is `12347`,","lastModifiedDate":"2024-03-17"},{"lineNumber":202,"author":{"gitId":"choowengyan"},"content":"with the name `Mary Jane` and preferred name `Mary`, likes to eat `Korean` food and current family condition is ","lastModifiedDate":"2024-03-17"},{"lineNumber":203,"author":{"gitId":"choowengyan"},"content":"`Lives with only daughter` and likes to `Watch drama`.","lastModifiedDate":"2024-03-17"},{"lineNumber":204,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":205,"author":{"gitId":"choowengyan"},"content":"Step 3: The `AddCommandParser` will be called to validate the input, ensuring that the fields are valid with correct ","lastModifiedDate":"2024-03-17"},{"lineNumber":206,"author":{"gitId":"choowengyan"},"content":"data types and no duplicates of fields.","lastModifiedDate":"2024-03-17"},{"lineNumber":207,"author":{"gitId":"choowengyan"},"content":"* Upon successful validation, it creates a `Patient` instance.","lastModifiedDate":"2024-03-17"},{"lineNumber":208,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":209,"author":{"gitId":"choowengyan"},"content":"Step 4: The newly added Patient will be added to the end of list, shown in the UI. ","lastModifiedDate":"2024-03-17"},{"lineNumber":210,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":211,"author":{"gitId":"choowengyan"},"content":"The following UML sequence diagram illustrates how the `AddCommand` operation works.","lastModifiedDate":"2024-03-19"},{"lineNumber":212,"author":{"gitId":"choowengyan"},"content":"\u003cpuml src\u003d\"diagrams/AddSequenceDiagram.puml\" alt\u003d\"Add Sequence Diagram\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":213,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":214,"author":{"gitId":"SherisseTJW"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":215,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":216,"author":{"gitId":"SherisseTJW"},"content":"**Note:** The lifeline for `AddCommandParser` and `AddCommand` should end at the destroy marker (X) but","lastModifiedDate":"2024-03-30"},{"lineNumber":217,"author":{"gitId":"SherisseTJW"},"content":"due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2024-03-30"},{"lineNumber":218,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":219,"author":{"gitId":"SherisseTJW"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":220,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":221,"author":{"gitId":"choowengyan"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-17"},{"lineNumber":222,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":223,"author":{"gitId":"choowengyan"},"content":"#### Aspect of Handling Duplicated Fields ","lastModifiedDate":"2024-03-17"},{"lineNumber":224,"author":{"gitId":"choowengyan"},"content":"* **Alternative 1 (current choice)**: Returns error message, prompt user to enter the correct format.","lastModifiedDate":"2024-03-17"},{"lineNumber":225,"author":{"gitId":"choowengyan"},"content":"    * Pros: Ensure the consistency of entries of the input command.","lastModifiedDate":"2024-03-17"},{"lineNumber":226,"author":{"gitId":"choowengyan"},"content":"    * Cons: User has to retype the `AddCommand` once again instead of the specific field.","lastModifiedDate":"2024-03-17"},{"lineNumber":227,"author":{"gitId":"choowengyan"},"content":"\u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":228,"author":{"gitId":"choowengyan"},"content":"*  **Alternative 2**: Add patient\u0027s information to the list, for duplicated fields, take the first one.","lastModifiedDate":"2024-03-17"},{"lineNumber":229,"author":{"gitId":"choowengyan"},"content":"    * Pros: User does not have to retype the command.","lastModifiedDate":"2024-03-17"},{"lineNumber":230,"author":{"gitId":"choowengyan"},"content":"    * Cons: Introduce ambiguity, the first repeated field may not be what user wish to enter.","lastModifiedDate":"2024-03-17"},{"lineNumber":231,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":232,"author":{"gitId":"choowengyan"},"content":"#### Aspect of Handling Existing Patient","lastModifiedDate":"2024-03-17"},{"lineNumber":233,"author":{"gitId":"choowengyan"},"content":"* **Alternative 1 (current choice)**: Returns error message upon user adds a new patient with existing `patientHospitalId`","lastModifiedDate":"2024-03-17"},{"lineNumber":234,"author":{"gitId":"choowengyan"},"content":"    * Pros: Ensures that no same patient will be added to PatientSync.","lastModifiedDate":"2024-03-17"},{"lineNumber":235,"author":{"gitId":"choowengyan"},"content":"    * Cons: User has to enter patient\u0027s hospital ID in care to ensure no duplications.","lastModifiedDate":"2024-03-17"},{"lineNumber":236,"author":{"gitId":"choowengyan"},"content":"\u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":237,"author":{"gitId":"choowengyan"},"content":"* **Alternative 2**: Check duplicated patient by patient\u0027s `name`.","lastModifiedDate":"2024-03-17"},{"lineNumber":238,"author":{"gitId":"choowengyan"},"content":"    * Pros: Easier to view as patient\u0027s `name` will be easier to be remembered.","lastModifiedDate":"2024-03-17"},{"lineNumber":239,"author":{"gitId":"choowengyan"},"content":"    * Cons: Patients may have the same name.","lastModifiedDate":"2024-03-17"},{"lineNumber":240,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":241,"author":{"gitId":"choowengyan"},"content":"#### Aspect of Handling Multiple Inputs for Same Field ","lastModifiedDate":"2024-04-03"},{"lineNumber":242,"author":{"gitId":"choowengyan"},"content":"* **Alternative 1 (current choice)**: Allow duplicate prefixes for certain fields","lastModifiedDate":"2024-04-04"},{"lineNumber":243,"author":{"gitId":"choowengyan"},"content":"  * Pros: Easier to view as listings will be shown without commas, provide clearer view to user.","lastModifiedDate":"2024-04-04"},{"lineNumber":244,"author":{"gitId":"choowengyan"},"content":"  * Cons: User may find it confusing if same prefix not being entered repeatedly.","lastModifiedDate":"2024-04-04"},{"lineNumber":245,"author":{"gitId":"choowengyan"},"content":"* **Alternative 2**: Adds `,` to the specific field","lastModifiedDate":"2024-04-04"},{"lineNumber":246,"author":{"gitId":"choowengyan"},"content":"  * Pros: Ensures that there are no duplicate prefixes in the input command.","lastModifiedDate":"2024-04-03"},{"lineNumber":247,"author":{"gitId":"choowengyan"},"content":"  * Cons: Display may be messy if inputs are long with more than 1 comma. ","lastModifiedDate":"2024-04-03"},{"lineNumber":248,"author":{"gitId":"choowengyan"},"content":"    \u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":249,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":250,"author":{"gitId":"NeoHW"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-12"},{"lineNumber":251,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":252,"author":{"gitId":"NeoHW"},"content":"### 3.2 Adding Tags to a Patient","lastModifiedDate":"2024-03-12"},{"lineNumber":253,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":254,"author":{"gitId":"NeoHW"},"content":"#### Introduction","lastModifiedDate":"2024-03-12"},{"lineNumber":255,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":256,"author":{"gitId":"NeoHW"},"content":"The `AddTagsCommand` class is responsible for adding one or more tags to a patient in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":257,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":258,"author":{"gitId":"NeoHW"},"content":"#### Specifications","lastModifiedDate":"2024-03-12"},{"lineNumber":259,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":260,"author":{"gitId":"NeoHW"},"content":"* Tags, as defined by the `Tag` class, are alphanumeric characters with or without spaces, and repeated tags in the command are added as a single tag.","lastModifiedDate":"2024-03-22"},{"lineNumber":261,"author":{"gitId":"NeoHW"},"content":"* The addition of tags is cumulative, and new tags will be added to the existing set of tags for the patient, preserving the previously assigned tags.","lastModifiedDate":"2024-03-12"},{"lineNumber":262,"author":{"gitId":"NeoHW"},"content":"*  If the patient has an existing tag that is provided in the command, it will not be added, and the output would be logged and shown to the user.","lastModifiedDate":"2024-03-22"},{"lineNumber":263,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":264,"author":{"gitId":"NeoHW"},"content":"The activity diagram below outlines the steps involved when a user initiates an Add Tags command.","lastModifiedDate":"2024-03-22"},{"lineNumber":265,"author":{"gitId":"NeoHW"},"content":"\u003cpuml src\u003d\"diagrams/AddTagsActivityDiagram.puml\" alt\u003d\"AddTagsActivityDiagram\" /\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":266,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":267,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":268,"author":{"gitId":"NeoHW"},"content":"#### Example Usage Scenario","lastModifiedDate":"2024-03-12"},{"lineNumber":269,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":270,"author":{"gitId":"NeoHW"},"content":"Given below is an example usage scenario and how the tag addition process behaves at each step:","lastModifiedDate":"2024-03-22"},{"lineNumber":271,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":272,"author":{"gitId":"NeoHW"},"content":"Step 1: The user accesses the PatientSync application.","lastModifiedDate":"2024-03-12"},{"lineNumber":273,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":274,"author":{"gitId":"NeoHW"},"content":"Step 2: The user executes the `addt 1 t/christian t/fall risk` command to add the tags `christian` and `fall risk` to patient 1 in the displayed patient list. The `AddTagsCommandParser` will be called to validate the input, ensuring that the index is valid and at least one tag is provided. Upon successful validation, it creates an `AddTagsCommand` instance.","lastModifiedDate":"2024-03-22"},{"lineNumber":275,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":276,"author":{"gitId":"NeoHW"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":277,"author":{"gitId":"NeoHW"},"content":"\u003cb\u003eNote\u003c/b\u003e: Since multiple inputs are allowed, a set of tags are passed around, each of which is to be added if the above requirements are met.","lastModifiedDate":"2024-03-12"},{"lineNumber":278,"author":{"gitId":"NeoHW"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":279,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":280,"author":{"gitId":"NeoHW"},"content":"The following sequence diagram shows how the Add Tags operation works:","lastModifiedDate":"2024-03-18"},{"lineNumber":281,"author":{"gitId":"NeoHW"},"content":"\u003cpuml src\u003d\"diagrams/AddTagsSequenceDiagram.puml\" alt\u003d\"AddTagsSequenceDiagram\" /\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":282,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":283,"author":{"gitId":"NeoHW"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":284,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":285,"author":{"gitId":"SherisseTJW"},"content":"**Note:** The lifeline for `AddTagsCommandParser` and `AddTagsCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2024-03-30"},{"lineNumber":286,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":287,"author":{"gitId":"NeoHW"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":288,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":289,"author":{"gitId":"NeoHW"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-12"},{"lineNumber":290,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":291,"author":{"gitId":"NeoHW"},"content":"**Aspect: Skip duplicate Tags in command**","lastModifiedDate":"2024-03-22"},{"lineNumber":292,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":293,"author":{"gitId":"NeoHW"},"content":"* **Alternative 1 (current choice)**: Repeated tags in commands are added as a single tag.","lastModifiedDate":"2024-03-22"},{"lineNumber":294,"author":{"gitId":"NeoHW"},"content":"    * Pros: Simplifies tag management, avoids redundancy.","lastModifiedDate":"2024-03-12"},{"lineNumber":295,"author":{"gitId":"NeoHW"},"content":"    * Cons: Requires additional logic to detect and merge repeated tags.","lastModifiedDate":"2024-03-12"},{"lineNumber":296,"author":{"gitId":"NeoHW"},"content":"\u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":297,"author":{"gitId":"NeoHW"},"content":"* **Alternative 2**: Each tag is added individually, including duplicates.","lastModifiedDate":"2024-03-12"},{"lineNumber":298,"author":{"gitId":"NeoHW"},"content":"    * Pros: Explicitly shows every tag provided.","lastModifiedDate":"2024-03-12"},{"lineNumber":299,"author":{"gitId":"NeoHW"},"content":"    * Cons: May clutter patient data with redundant tags.","lastModifiedDate":"2024-03-12"},{"lineNumber":300,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":301,"author":{"gitId":"NeoHW"},"content":"**Aspect: Cumulative Tag Addition**","lastModifiedDate":"2024-03-12"},{"lineNumber":302,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":303,"author":{"gitId":"NeoHW"},"content":"* **Alternative 1 (current choice)**: Cumulative addition of tags to existing set.","lastModifiedDate":"2024-03-12"},{"lineNumber":304,"author":{"gitId":"NeoHW"},"content":"    * Pros: Preserves previous tags, allows for gradual building of patient profile.","lastModifiedDate":"2024-03-12"},{"lineNumber":305,"author":{"gitId":"NeoHW"},"content":"    * Cons: Requires additional memory for storing updated tag sets.","lastModifiedDate":"2024-03-12"},{"lineNumber":306,"author":{"gitId":"NeoHW"},"content":"\u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":307,"author":{"gitId":"NeoHW"},"content":"* **Alternative 2**: Overwrite existing tags with new ones.","lastModifiedDate":"2024-03-12"},{"lineNumber":308,"author":{"gitId":"NeoHW"},"content":"    * Pros: Simplifies data handling, avoids tag duplication.","lastModifiedDate":"2024-03-12"},{"lineNumber":309,"author":{"gitId":"NeoHW"},"content":"    * Cons: Risk of losing previously assigned tags, less flexibility in tag management.","lastModifiedDate":"2024-03-12"},{"lineNumber":310,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":311,"author":{"gitId":"NeoHW"},"content":"**Aspect: Logic handling for pre-existing tags**","lastModifiedDate":"2024-03-22"},{"lineNumber":312,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":313,"author":{"gitId":"NeoHW"},"content":"* **Alternative 1 (current choice)**: Do not add tags already present for the patient.","lastModifiedDate":"2024-03-12"},{"lineNumber":314,"author":{"gitId":"NeoHW"},"content":"    * Pros: Prevents tag redundancy, maintains data integrity. Better user experience, do not need to worry about the intricacies of tag duplication.","lastModifiedDate":"2024-03-12"},{"lineNumber":315,"author":{"gitId":"NeoHW"},"content":"    * Cons: Requires additional logic to detect repeated tags.","lastModifiedDate":"2024-03-22"},{"lineNumber":316,"author":{"gitId":"NeoHW"},"content":"\u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":317,"author":{"gitId":"NeoHW"},"content":"* **Alternative 2**: Return error message for duplicate tags.","lastModifiedDate":"2024-03-12"},{"lineNumber":318,"author":{"gitId":"NeoHW"},"content":"    * Pros: Notifies user about duplicate inputs, ensures data consistency.","lastModifiedDate":"2024-03-12"},{"lineNumber":319,"author":{"gitId":"NeoHW"},"content":"    * Cons: In the case of the addition of multiple existing or duplicate tags, users have to find and remove the duplicated tags from the given command, which would be cumbersome especially when there are many tags listed in the command.","lastModifiedDate":"2024-03-14"},{"lineNumber":320,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":321,"author":{"gitId":"NeoHW"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-14"},{"lineNumber":322,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":323,"author":{"gitId":"NeoHW"},"content":"### 3.3 Deleting Tags From a Patient","lastModifiedDate":"2024-03-18"},{"lineNumber":324,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":325,"author":{"gitId":"NeoHW"},"content":"#### Introduction","lastModifiedDate":"2024-03-18"},{"lineNumber":326,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":327,"author":{"gitId":"NeoHW"},"content":"The `DeleteTagsCommand` class enables the removal of one or more tags from a patient in the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":328,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":329,"author":{"gitId":"NeoHW"},"content":"#### Specifications","lastModifiedDate":"2024-03-18"},{"lineNumber":330,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":331,"author":{"gitId":"NeoHW"},"content":"* Tags, as defined by the `Tag` class, are alphanumeric characters with or without spaces, and repeated tags in the command are added as a single tag.","lastModifiedDate":"2024-03-22"},{"lineNumber":332,"author":{"gitId":"NeoHW"},"content":"* The deletion of tags is performed by specifying the tags to be removed for a particular patient.","lastModifiedDate":"2024-03-18"},{"lineNumber":333,"author":{"gitId":"NeoHW"},"content":"* Tags should match exactly with the existing tags of the patient.","lastModifiedDate":"2024-03-18"},{"lineNumber":334,"author":{"gitId":"NeoHW"},"content":"* If a patient has the tag(s) provided in the command, they will be removed. This operation is counted as a successful deletion.","lastModifiedDate":"2024-03-18"},{"lineNumber":335,"author":{"gitId":"NeoHW"},"content":"* When deleting tags, if a tag is repeated in the command, it will be treated as a single tag to delete. E.g. `t/friend t/friend` will be considered as a single `friend` tag for deletion.","lastModifiedDate":"2024-03-18"},{"lineNumber":336,"author":{"gitId":"NeoHW"},"content":"* If the patient does not have a tag provided in the command, it will be logged and shown to the user as an unsuccessful deletion of that tag.","lastModifiedDate":"2024-03-18"},{"lineNumber":337,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":338,"author":{"gitId":"NeoHW"},"content":"The activity diagram below outlines the steps involved when a user initiates a Delete Tags command.","lastModifiedDate":"2024-03-22"},{"lineNumber":339,"author":{"gitId":"NeoHW"},"content":"\u003cpuml src\u003d\"diagrams/DeleteTagsActivityDiagram.puml\" alt\u003d\"DeleteTagsActivityDiagram\" /\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":340,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":341,"author":{"gitId":"NeoHW"},"content":"#### Example Usage Scenario","lastModifiedDate":"2024-03-18"},{"lineNumber":342,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":343,"author":{"gitId":"NeoHW"},"content":"Below is an example scenario of how the tag deletion process works within the PatientSync application:","lastModifiedDate":"2024-03-18"},{"lineNumber":344,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":345,"author":{"gitId":"NeoHW"},"content":"Step 1: The user accesses the PatientSync application.","lastModifiedDate":"2024-03-18"},{"lineNumber":346,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":347,"author":{"gitId":"NeoHW"},"content":"Step 2: The user executes the `deletet 1 t/fall risk` command to delete the `fall risk` tag from patient 1 in the displayed patient list. The `DeleteTagsCommandParser` validates the input, ensuring that the index is valid and at least one tag is provided. Upon successful validation, an `DeleteTagsCommand` instance is created.","lastModifiedDate":"2024-03-22"},{"lineNumber":348,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":349,"author":{"gitId":"NeoHW"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":350,"author":{"gitId":"NeoHW"},"content":"\u003cb\u003eNote\u003c/b\u003e: Since multiple inputs are allowed, a set of tags to be deleted is passed, each of which will be removed if found associated with the patient.","lastModifiedDate":"2024-03-18"},{"lineNumber":351,"author":{"gitId":"NeoHW"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":352,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":353,"author":{"gitId":"NeoHW"},"content":"The following sequence diagram shows how the Delete Tags operation works:","lastModifiedDate":"2024-03-19"},{"lineNumber":354,"author":{"gitId":"NeoHW"},"content":"\u003cpuml src\u003d\"diagrams/DeleteTagsSequenceDiagram.puml\" alt\u003d\"DeleteTagsSequenceDiagram\" /\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":355,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":356,"author":{"gitId":"NeoHW"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":357,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":358,"author":{"gitId":"SherisseTJW"},"content":"**Note:** The lifeline for `DeleteTagsCommandParser` and `DeleteTagsCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2024-03-30"},{"lineNumber":359,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":360,"author":{"gitId":"NeoHW"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":361,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":362,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":363,"author":{"gitId":"NeoHW"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-18"},{"lineNumber":364,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":365,"author":{"gitId":"NeoHW"},"content":"**Aspect: Bulk Tag Deletion**","lastModifiedDate":"2024-03-18"},{"lineNumber":366,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":367,"author":{"gitId":"NeoHW"},"content":"* **Alternative 1 (current choice)**: Bulk deletion of specified tags.","lastModifiedDate":"2024-03-18"},{"lineNumber":368,"author":{"gitId":"NeoHW"},"content":"    * Pros: Allows removal of multiple tags in one command, preserves existing tags if not specified for deletion.","lastModifiedDate":"2024-03-18"},{"lineNumber":369,"author":{"gitId":"NeoHW"},"content":"    * Cons: Requires additional memory for handling tag sets, potentially slower performance for large tag sets.","lastModifiedDate":"2024-03-18"},{"lineNumber":370,"author":{"gitId":"NeoHW"},"content":"      \u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":371,"author":{"gitId":"NeoHW"},"content":"* **Alternative 2**: Explicitly specify tags to delete, ignoring any non-existent tags.","lastModifiedDate":"2024-03-18"},{"lineNumber":372,"author":{"gitId":"NeoHW"},"content":"    * Pros: Simplifies command execution, faster performance for small tag sets.","lastModifiedDate":"2024-03-18"},{"lineNumber":373,"author":{"gitId":"NeoHW"},"content":"    * Cons: Requires multiple commands for each tag deletion, less flexible in bulk operations.","lastModifiedDate":"2024-03-18"},{"lineNumber":374,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":375,"author":{"gitId":"NeoHW"},"content":"**Aspect: Handling Missing Tags**","lastModifiedDate":"2024-03-18"},{"lineNumber":376,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":377,"author":{"gitId":"NeoHW"},"content":"* **Alternative 1 (current choice)**: Log output for non-existent tags to inform user, proceed with deleting the valid tags.","lastModifiedDate":"2024-03-18"},{"lineNumber":378,"author":{"gitId":"NeoHW"},"content":"    * Pros: Simplifies user interaction, allows bulk deletion without worrying about non-existent tags, users are informed about the tags that are not present, Users do not need to correct the command.","lastModifiedDate":"2024-03-18"},{"lineNumber":379,"author":{"gitId":"NeoHW"},"content":"    * Cons: Adds complexity to the command execution, requiring additional logic to differentiate between existing and non-existing tags.","lastModifiedDate":"2024-03-18"},{"lineNumber":380,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":381,"author":{"gitId":"NeoHW"},"content":"* **Alternative 2**: Return an error message for non-existent tags, ask users to correct the command.","lastModifiedDate":"2024-03-18"},{"lineNumber":382,"author":{"gitId":"NeoHW"},"content":"    * Pros: Ensures user awareness of non-existent tags, avoids accidental deletions, prompts users to provide valid tag inputs.","lastModifiedDate":"2024-03-18"},{"lineNumber":383,"author":{"gitId":"NeoHW"},"content":"    * Cons: Requires users to fix the command before proceeding, potential interruption to workflow, may increase user frustration if multiple tags are missing.","lastModifiedDate":"2024-03-18"},{"lineNumber":384,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":385,"author":{"gitId":"NeoHW"},"content":"**Aspect: Feedback for Deletion Operation**","lastModifiedDate":"2024-03-18"},{"lineNumber":386,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":387,"author":{"gitId":"NeoHW"},"content":"* **Alternative 1 (current choice)**: Provide a success message for each tag successfully deleted.","lastModifiedDate":"2024-03-18"},{"lineNumber":388,"author":{"gitId":"NeoHW"},"content":"    * Pros: Clear indication of which tags were removed, better user understanding of command execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":389,"author":{"gitId":"NeoHW"},"content":"    * Cons: May clutter output for multiple tag deletions.","lastModifiedDate":"2024-03-18"},{"lineNumber":390,"author":{"gitId":"NeoHW"},"content":"      \u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":391,"author":{"gitId":"NeoHW"},"content":"* **Alternative 2**: Return a single success message for all successful tag deletions.","lastModifiedDate":"2024-03-18"},{"lineNumber":392,"author":{"gitId":"NeoHW"},"content":"    * Pros: Cleaner output for multiple deletions, reduces command feedback clutter.","lastModifiedDate":"2024-03-18"},{"lineNumber":393,"author":{"gitId":"NeoHW"},"content":"    * Cons: Users might not have a clear understanding of individual deletions, less granular feedback.","lastModifiedDate":"2024-03-18"},{"lineNumber":394,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":395,"author":{"gitId":"NeoHW"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-18"},{"lineNumber":396,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":397,"author":{"gitId":"NeoHW"},"content":"### 3.4 Adding an Event to a Patient","lastModifiedDate":"2024-03-18"},{"lineNumber":398,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":399,"author":{"gitId":"SherisseTJW"},"content":"#### Introduction","lastModifiedDate":"2024-03-13"},{"lineNumber":400,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":401,"author":{"gitId":"guohuang88"},"content":"The `AddEventCommand` class is responsible for adding an Event to a patient in the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":402,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":403,"author":{"gitId":"SherisseTJW"},"content":"#### Specifications","lastModifiedDate":"2024-03-13"},{"lineNumber":404,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":405,"author":{"gitId":"SherisseTJW"},"content":"* Events, as defined by the `Event` class, contain both the Name of the Event that falls on that date, as well as the Date of the Event and optionally, the Time Period for which the Event is happening.","lastModifiedDate":"2024-03-18"},{"lineNumber":406,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":407,"author":{"gitId":"guohuang88"},"content":"* The addition of Event is cumulative, and new Events will be added to the existing set of Events for the patient, preserving the previously assigned Events.","lastModifiedDate":"2024-03-18"},{"lineNumber":408,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":409,"author":{"gitId":"guohuang88"},"content":"* If the patient already has a particular Event, it will not be added again.","lastModifiedDate":"2024-03-18"},{"lineNumber":410,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":411,"author":{"gitId":"SherisseTJW"},"content":"The activity diagram below outlines the steps involved when a user initiates a Add Event command.","lastModifiedDate":"2024-03-30"},{"lineNumber":412,"author":{"gitId":"SherisseTJW"},"content":"\u003cpuml src\u003d\"diagrams/AddEventActivityDiagram.puml\" alt\u003d\"AddEventActivityDiagram\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":413,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":414,"author":{"gitId":"SherisseTJW"},"content":"#### Example Usage Scenario","lastModifiedDate":"2024-03-13"},{"lineNumber":415,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":416,"author":{"gitId":"SherisseTJW"},"content":"Given below is an example usage scenario and how the group creation mechanism behaves at each step.","lastModifiedDate":"2024-03-13"},{"lineNumber":417,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":418,"author":{"gitId":"SherisseTJW"},"content":"Step 1: The user accesses the PatientSync application.","lastModifiedDate":"2024-03-13"},{"lineNumber":419,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":420,"author":{"gitId":"guohuang88"},"content":"Step 2: The user executes the `adde 1 n/Birthday d/20-01-2022` command to add the Event, Birthday, which falls on the 20th January.","lastModifiedDate":"2024-03-18"},{"lineNumber":421,"author":{"gitId":"SherisseTJW"},"content":"* Upon successful validation, it creates an `AddEventsCommand` instance.","lastModifiedDate":"2024-03-18"},{"lineNumber":422,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":423,"author":{"gitId":"SherisseTJW"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":424,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":425,"author":{"gitId":"SherisseTJW"},"content":"\u003cb\u003eNote\u003c/b\u003e: Only 1 Event can be added at a time per command","lastModifiedDate":"2024-03-19"},{"lineNumber":426,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":427,"author":{"gitId":"SherisseTJW"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":428,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":429,"author":{"gitId":"SherisseTJW"},"content":"\u003cpuml src\u003d\"diagrams/AddEventSequenceDiagram.puml\" alt\u003d\"Add Event Sequence Diagram\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":430,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":431,"author":{"gitId":"SherisseTJW"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":432,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":433,"author":{"gitId":"SherisseTJW"},"content":"\u003cb\u003eNote:\u003c/b\u003e The lifeline for `AddEventCommandParser` and `AddEventCommand` should end at the destroy marker (X) but","lastModifiedDate":"2024-03-30"},{"lineNumber":434,"author":{"gitId":"SherisseTJW"},"content":"due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2024-03-30"},{"lineNumber":435,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":436,"author":{"gitId":"SherisseTJW"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":437,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":438,"author":{"gitId":"SherisseTJW"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-18"},{"lineNumber":439,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":440,"author":{"gitId":"SherisseTJW"},"content":"**Aspect: Handling Repeated Events**","lastModifiedDate":"2024-03-18"},{"lineNumber":441,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":442,"author":{"gitId":"SherisseTJW"},"content":"* **Alternative 1 (current choice)**: Repeated events are added as a single event.","lastModifiedDate":"2024-03-18"},{"lineNumber":443,"author":{"gitId":"SherisseTJW"},"content":"    * Pros: Simplifies event management, avoids redundancy.","lastModifiedDate":"2024-03-18"},{"lineNumber":444,"author":{"gitId":"SherisseTJW"},"content":"    * Cons: Requires additional logic to detect and merge repeated events.","lastModifiedDate":"2024-03-18"},{"lineNumber":445,"author":{"gitId":"SherisseTJW"},"content":"      \u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":446,"author":{"gitId":"SherisseTJW"},"content":"* **Alternative 2**: Each event is added individually, including duplicates.","lastModifiedDate":"2024-03-18"},{"lineNumber":447,"author":{"gitId":"SherisseTJW"},"content":"    * Pros: Explicitly shows every event provided.","lastModifiedDate":"2024-03-18"},{"lineNumber":448,"author":{"gitId":"SherisseTJW"},"content":"    * Cons: May clutter patient data with redundant events.","lastModifiedDate":"2024-03-18"},{"lineNumber":449,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":450,"author":{"gitId":"SherisseTJW"},"content":"**Aspect: Cumulative Event Addition**","lastModifiedDate":"2024-03-18"},{"lineNumber":451,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":452,"author":{"gitId":"SherisseTJW"},"content":"* **Alternative 1 (current choice)**: Cumulative addition of events to existing set.","lastModifiedDate":"2024-03-18"},{"lineNumber":453,"author":{"gitId":"SherisseTJW"},"content":"    * Pros: Preserves previous events, allows for gradual building of patient profile.","lastModifiedDate":"2024-03-18"},{"lineNumber":454,"author":{"gitId":"SherisseTJW"},"content":"    * Cons: Requires additional memory for storing updated events sets.","lastModifiedDate":"2024-03-18"},{"lineNumber":455,"author":{"gitId":"SherisseTJW"},"content":"      \u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":456,"author":{"gitId":"SherisseTJW"},"content":"* **Alternative 2**: Overwrite existing events with new ones.","lastModifiedDate":"2024-03-18"},{"lineNumber":457,"author":{"gitId":"SherisseTJW"},"content":"    * Pros: Simplifies data handling, avoids events duplication.","lastModifiedDate":"2024-03-18"},{"lineNumber":458,"author":{"gitId":"SherisseTJW"},"content":"    * Cons: Risk of losing previously assigned events, less flexibility in event management.","lastModifiedDate":"2024-03-18"},{"lineNumber":459,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":460,"author":{"gitId":"SherisseTJW"},"content":"**Aspect: Error Handling for Duplicate Events**","lastModifiedDate":"2024-03-18"},{"lineNumber":461,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":462,"author":{"gitId":"SherisseTJW"},"content":"* **Alternative 1 (current choice)**: Do not add events already present for the patient.","lastModifiedDate":"2024-03-18"},{"lineNumber":463,"author":{"gitId":"SherisseTJW"},"content":"    * Pros: Prevents event redundancy, maintains data integrity. Better user experience, do not need to worry about the intricacies of event duplication.","lastModifiedDate":"2024-03-18"},{"lineNumber":464,"author":{"gitId":"SherisseTJW"},"content":"    * Cons: Users do not explicitly receive direct feedback about skipped events.","lastModifiedDate":"2024-03-18"},{"lineNumber":465,"author":{"gitId":"SherisseTJW"},"content":"      \u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":466,"author":{"gitId":"SherisseTJW"},"content":"* **Alternative 2**: Return error message for duplicate events.","lastModifiedDate":"2024-03-18"},{"lineNumber":467,"author":{"gitId":"SherisseTJW"},"content":"    * Pros: Notifies user about duplicate inputs, ensures data consistency.","lastModifiedDate":"2024-03-18"},{"lineNumber":468,"author":{"gitId":"SherisseTJW"},"content":"    * Cons: In the case of the addition of multiple existing or duplicate events, users have to find and remove the duplicated events from the given command, which would be cumbersome especially when there are many events listed in the command.","lastModifiedDate":"2024-03-18"},{"lineNumber":469,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":470,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":471,"author":{"gitId":"NeoHW"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-12"},{"lineNumber":472,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":473,"author":{"gitId":"NeoHW"},"content":"### 3.5 Editing a Patient","lastModifiedDate":"2024-03-18"},{"lineNumber":474,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":475,"author":{"gitId":"choowengyan"},"content":"#### Introduction","lastModifiedDate":"2024-03-17"},{"lineNumber":476,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":477,"author":{"gitId":"choowengyan"},"content":"The `EditCommand` class is responsible for editing current patient\u0027s information in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":478,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":479,"author":{"gitId":"choowengyan"},"content":"#### Specifications","lastModifiedDate":"2024-03-17"},{"lineNumber":480,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":481,"author":{"gitId":"choowengyan"},"content":"* EditCommand, as defined by the `EditCommand` class, contain parameters which consists of:","lastModifiedDate":"2024-03-17"},{"lineNumber":482,"author":{"gitId":"choowengyan"},"content":"    *  `INDEX` integer,","lastModifiedDate":"2024-03-17"},{"lineNumber":483,"author":{"gitId":"choowengyan"},"content":"    *  `patientHospitalId` integer,","lastModifiedDate":"2024-03-17"},{"lineNumber":484,"author":{"gitId":"choowengyan"},"content":"    *  `name`, `preferredName` String with only alphabets character,","lastModifiedDate":"2024-03-17"},{"lineNumber":485,"author":{"gitId":"choowengyan"},"content":"    *  `foodPreference`, `familyCondition`, `hobby` and `tag` which are alphanumeric.","lastModifiedDate":"2024-03-17"},{"lineNumber":486,"author":{"gitId":"choowengyan"},"content":"* All fields are optional in the EditCommand except for `INDEX`.","lastModifiedDate":"2024-04-03"},{"lineNumber":487,"author":{"gitId":"choowengyan"},"content":"* Fields such as `foodPreference`, `familyCondition`, `hobby` and `tag` can be repeated for multiple inputs.","lastModifiedDate":"2024-04-03"},{"lineNumber":488,"author":{"gitId":"choowengyan"},"content":"* If the fields for `patientHospitalId`, `name` and `preferredName` are repeated during the editing of patient, error message will be thrown.","lastModifiedDate":"2024-04-03"},{"lineNumber":489,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":490,"author":{"gitId":"choowengyan"},"content":"The activity diagram below outlines the steps involved when a user initiates a Edit command.","lastModifiedDate":"2024-04-04"},{"lineNumber":491,"author":{"gitId":"choowengyan"},"content":"\u003cpuml src\u003d\"diagrams/EditActivityDiagram.puml\" alt\u003d\"EditActivityDiagram\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":492,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":493,"author":{"gitId":"choowengyan"},"content":"#### Example Usage Scenario","lastModifiedDate":"2024-03-17"},{"lineNumber":494,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":495,"author":{"gitId":"choowengyan"},"content":"Given below is an example usage scenario and how the group creation mechanism behaves at each step.","lastModifiedDate":"2024-03-17"},{"lineNumber":496,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":497,"author":{"gitId":"choowengyan"},"content":"Step 1: The user accesses the PatientSync application.","lastModifiedDate":"2024-03-17"},{"lineNumber":498,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":499,"author":{"gitId":"choowengyan"},"content":"Step 2: The user executes the `edit 2 f/Aglio-olio t/depression` command to edit an existing Patient whose index in ","lastModifiedDate":"2024-03-17"},{"lineNumber":500,"author":{"gitId":"choowengyan"},"content":"the PatientSync is `2`, with changes on preferred food to be `Aglio-olio` and added a tag `depression`.","lastModifiedDate":"2024-03-17"},{"lineNumber":501,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":502,"author":{"gitId":"choowengyan"},"content":"Step 3: The `EditCommandParser` will be called to validate the input, ensuring that the fields are valid with correct","lastModifiedDate":"2024-03-17"},{"lineNumber":503,"author":{"gitId":"choowengyan"},"content":"data types and no duplicates of fields.","lastModifiedDate":"2024-03-17"},{"lineNumber":504,"author":{"gitId":"choowengyan"},"content":"* Upon successful validation, it will update the `Patient` instance.","lastModifiedDate":"2024-03-17"},{"lineNumber":505,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":506,"author":{"gitId":"choowengyan"},"content":"Step 4: The Patient with specified index will be updated in the list, shown in the UI.","lastModifiedDate":"2024-03-17"},{"lineNumber":507,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":508,"author":{"gitId":"choowengyan"},"content":"The following UML sequence diagram illustrates how the `EditCommand` operation works.","lastModifiedDate":"2024-03-19"},{"lineNumber":509,"author":{"gitId":"choowengyan"},"content":"\u003cpuml src\u003d\"diagrams/EditSequenceDiagram.puml\" alt\u003d\"Edit Sequence Diagram\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":510,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":511,"author":{"gitId":"SherisseTJW"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":512,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":513,"author":{"gitId":"SherisseTJW"},"content":"\u003cb\u003eNote:\u003c/b\u003e The lifeline for `EditCommandParser` and `EditCommand` should end at the destroy marker (X) but","lastModifiedDate":"2024-03-30"},{"lineNumber":514,"author":{"gitId":"SherisseTJW"},"content":"due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2024-03-30"},{"lineNumber":515,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":516,"author":{"gitId":"SherisseTJW"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":517,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":518,"author":{"gitId":"choowengyan"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-17"},{"lineNumber":519,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":520,"author":{"gitId":"choowengyan"},"content":"#### Aspect of Using Identifier","lastModifiedDate":"2024-03-17"},{"lineNumber":521,"author":{"gitId":"choowengyan"},"content":"* **Alternative 1 (current choice)**: Uses `INDEX` index of the Patient in the PatientSync.","lastModifiedDate":"2024-03-17"},{"lineNumber":522,"author":{"gitId":"choowengyan"},"content":"    * Pros: Ease of use, as user can refer to the index in the PatientSync directly.","lastModifiedDate":"2024-03-17"},{"lineNumber":523,"author":{"gitId":"choowengyan"},"content":"    * Cons: Referring and scrolling the PatientSync may take time to find the patient\u0027s index.","lastModifiedDate":"2024-03-17"},{"lineNumber":524,"author":{"gitId":"choowengyan"},"content":"      \u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":525,"author":{"gitId":"choowengyan"},"content":"*  **Alternative 2**: Uses `patientHospitalId` of a Patient.","lastModifiedDate":"2024-03-17"},{"lineNumber":526,"author":{"gitId":"choowengyan"},"content":"    * Pros: Able to uniquely identified each patient.","lastModifiedDate":"2024-03-17"},{"lineNumber":527,"author":{"gitId":"choowengyan"},"content":"    * Cons: Higher chance in typing the wrong `patientHospitalId`.","lastModifiedDate":"2024-03-17"},{"lineNumber":528,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":529,"author":{"gitId":"choowengyan"},"content":"#### Aspect of Bulk Editing for Certain Field","lastModifiedDate":"2024-04-03"},{"lineNumber":530,"author":{"gitId":"choowengyan"},"content":"* **Alternative 1 (current choice)**: Bulk edit a certain field.","lastModifiedDate":"2024-04-03"},{"lineNumber":531,"author":{"gitId":"choowengyan"},"content":"  * Pros: User able to edit the field easily.","lastModifiedDate":"2024-04-03"},{"lineNumber":532,"author":{"gitId":"choowengyan"},"content":"  * Cons: Input(s) that might be needed/ kept will be replaced by the newly edited ones.","lastModifiedDate":"2024-04-03"},{"lineNumber":533,"author":{"gitId":"choowengyan"},"content":"    \u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":534,"author":{"gitId":"choowengyan"},"content":"*  **Alternative 2**: Edit field by specifying the certain input needed to be changed.","lastModifiedDate":"2024-04-03"},{"lineNumber":535,"author":{"gitId":"choowengyan"},"content":"  * Pros: Able to uniquely identified which specific input needed to be edited.","lastModifiedDate":"2024-04-03"},{"lineNumber":536,"author":{"gitId":"choowengyan"},"content":"  * Cons: More time consuming to input command line as it will be longer. ","lastModifiedDate":"2024-04-03"},{"lineNumber":537,"author":{"gitId":"choowengyan"},"content":"  ","lastModifiedDate":"2024-04-03"},{"lineNumber":538,"author":{"gitId":"choowengyan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-17"},{"lineNumber":539,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":540,"author":{"gitId":"NeoHW"},"content":"### 3.6 Deleting an Event from a Patient","lastModifiedDate":"2024-03-18"},{"lineNumber":541,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":542,"author":{"gitId":"ZhiWei1010"},"content":"#### Introduction","lastModifiedDate":"2024-03-15"},{"lineNumber":543,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":544,"author":{"gitId":"guohuang88"},"content":"The `DeleteEventCommand` class is responsible for deleting an Event from a patient in the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":545,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":546,"author":{"gitId":"ZhiWei1010"},"content":"#### Specifications","lastModifiedDate":"2024-03-15"},{"lineNumber":547,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":548,"author":{"gitId":"SherisseTJW"},"content":"* DeleteEventCommand takes in two parameters: `PATIENT_INDEX` and `EVENT_INDEX` which are Indexes of patients","lastModifiedDate":"2024-03-18"},{"lineNumber":549,"author":{"gitId":"ZhiWei1010"},"content":"shown on the UI after using the `list` or `find` command and Indexes of the specified Patient\u0027s events as defined in","lastModifiedDate":"2024-03-15"},{"lineNumber":550,"author":{"gitId":"ZhiWei1010"},"content":"the `Index` class.","lastModifiedDate":"2024-03-15"},{"lineNumber":551,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":552,"author":{"gitId":"guohuang88"},"content":"* Deletion of Event can only happen for a single patient, and a single event at any given time.","lastModifiedDate":"2024-03-18"},{"lineNumber":553,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":554,"author":{"gitId":"ZhiWei1010"},"content":"The activity diagram below outlines the steps involved when a user initiates a Delete Event command.","lastModifiedDate":"2024-03-28"},{"lineNumber":555,"author":{"gitId":"ZhiWei1010"},"content":"\u003cpuml src\u003d\"diagrams/DeleteEventActivityDiagram.puml\" alt\u003d\"DeleteEventActivityDiagram\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":556,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":557,"author":{"gitId":"ZhiWei1010"},"content":"#### Example Usage Scenario","lastModifiedDate":"2024-03-15"},{"lineNumber":558,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":559,"author":{"gitId":"ZhiWei1010"},"content":"Given below is an example usage scenario and how the group creation mechanism behaves at each step.","lastModifiedDate":"2024-03-15"},{"lineNumber":560,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":561,"author":{"gitId":"ZhiWei1010"},"content":"Step 1: The user accesses the PatientSync application.","lastModifiedDate":"2024-03-15"},{"lineNumber":562,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":563,"author":{"gitId":"guohuang88"},"content":"Step 2: The user executes the `adde 1 n/ Birthday d/ 20-01-2022` command to add the Event, Birthday,","lastModifiedDate":"2024-03-18"},{"lineNumber":564,"author":{"gitId":"ZhiWei1010"},"content":"which falls on the 20th January.","lastModifiedDate":"2024-03-15"},{"lineNumber":565,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":566,"author":{"gitId":"SherisseTJW"},"content":"* Upon successful validation, it creates an `AddEventsCommand` instance.","lastModifiedDate":"2024-03-18"},{"lineNumber":567,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":568,"author":{"gitId":"ZhiWei1010"},"content":"Step 3: The use executes `deletee 1 e/1` to delete the Event as the event is over.","lastModifiedDate":"2024-03-28"},{"lineNumber":569,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":570,"author":{"gitId":"SherisseTJW"},"content":"* Upon successful validation,  an `DeleteEventCommand` instance is created.","lastModifiedDate":"2024-03-18"},{"lineNumber":571,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":572,"author":{"gitId":"ZhiWei1010"},"content":"The following UML sequence diagram illustrates how the Delete Event operation works.","lastModifiedDate":"2024-03-19"},{"lineNumber":573,"author":{"gitId":"ZhiWei1010"},"content":"\u003cpuml src\u003d\"diagrams/DeleteEventSequenceDiagram.puml\" alt\u003d\"Delete Event Sequence Diagram\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":574,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":575,"author":{"gitId":"SherisseTJW"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":576,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":577,"author":{"gitId":"ZhiWei1010"},"content":"**Note:** The lifeline for `DeleteEventCommandParser` and `DeleteEventCommand` should end at the destroy marker (X) but","lastModifiedDate":"2024-03-28"},{"lineNumber":578,"author":{"gitId":"ZhiWei1010"},"content":"due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2024-03-28"},{"lineNumber":579,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":580,"author":{"gitId":"SherisseTJW"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":581,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":582,"author":{"gitId":"ZhiWei1010"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-15"},{"lineNumber":583,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":584,"author":{"gitId":"ZhiWei1010"},"content":"**Aspect: Choice of COMMAND_WORD**","lastModifiedDate":"2024-03-15"},{"lineNumber":585,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":586,"author":{"gitId":"ZhiWei1010"},"content":"* **Alternative 1 (current choice)**: Use `deletee`","lastModifiedDate":"2024-03-15"},{"lineNumber":587,"author":{"gitId":"guohuang88"},"content":"    * Pros: Consistent with `adde` command to add new Event.","lastModifiedDate":"2024-03-18"},{"lineNumber":588,"author":{"gitId":"ZhiWei1010"},"content":"    * Cons: Might be counter-intuitive for user as command is unfamiliar.","lastModifiedDate":"2024-03-15"},{"lineNumber":589,"author":{"gitId":"ZhiWei1010"},"content":"      \u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":590,"author":{"gitId":"ZhiWei1010"},"content":"* **Alternative 2**: Use `deleteID`","lastModifiedDate":"2024-03-28"},{"lineNumber":591,"author":{"gitId":"ZhiWei1010"},"content":"    * Pros: Clearer syntax.","lastModifiedDate":"2024-03-15"},{"lineNumber":592,"author":{"gitId":"ZhiWei1010"},"content":"    * Cons: User might confuse ID as Patient ID and also inconsistency with `adde` command, further confusing user.","lastModifiedDate":"2024-03-15"},{"lineNumber":593,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":594,"author":{"gitId":"ZhiWei1010"},"content":"**Aspect: Syntax to choose event to delete**","lastModifiedDate":"2024-03-19"},{"lineNumber":595,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":596,"author":{"gitId":"ZhiWei1010"},"content":"* **Alternative 1 (current choice)**: Delete event by `[EVENT_INDEX]`. Syntax: prefix `e/` followed by `[EVENT_INDEX]` ","lastModifiedDate":"2024-03-19"},{"lineNumber":597,"author":{"gitId":"ZhiWei1010"},"content":"    * Pros: User do not need to type whole event name, also similar to delete patient where patient index is used to","lastModifiedDate":"2024-03-19"},{"lineNumber":598,"author":{"gitId":"ZhiWei1010"},"content":"  identify patient of interest.","lastModifiedDate":"2024-03-19"},{"lineNumber":599,"author":{"gitId":"ZhiWei1010"},"content":"    * Cons: User need to know the `[EVENT_INDEX]` of the patient.","lastModifiedDate":"2024-03-19"},{"lineNumber":600,"author":{"gitId":"ZhiWei1010"},"content":"      \u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":601,"author":{"gitId":"ZhiWei1010"},"content":"* **Alternative 2**: Delete event by `[EVENT_NAME]`. Syntax: prefix `e/` followed by `[EVENT_NAME]`","lastModifiedDate":"2024-03-19"},{"lineNumber":602,"author":{"gitId":"ZhiWei1010"},"content":"    * Pros: User can delete event quickly if name is short.","lastModifiedDate":"2024-03-19"},{"lineNumber":603,"author":{"gitId":"ZhiWei1010"},"content":"    * Cons: User need to input the whole event name which might be tedious if `[EVENT_NAME]` is very long.","lastModifiedDate":"2024-03-19"},{"lineNumber":604,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":605,"author":{"gitId":"ZhiWei1010"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-15"},{"lineNumber":606,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":607,"author":{"gitId":"NeoHW"},"content":"### 3.7 Editing an Event for a Patient","lastModifiedDate":"2024-03-18"},{"lineNumber":608,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":609,"author":{"gitId":"guohuang88"},"content":"#### Introduction","lastModifiedDate":"2024-03-16"},{"lineNumber":610,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":611,"author":{"gitId":"guohuang88"},"content":"The `EditEventCommand` class is responsible for editing a specific Event for a patient in the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":612,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":613,"author":{"gitId":"guohuang88"},"content":"#### Specifications","lastModifiedDate":"2024-03-16"},{"lineNumber":614,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":615,"author":{"gitId":"guohuang88"},"content":"* EditEventCommand takes in four parameters: `PATIENT_INDEX`, `EVENT_INDEX`, `EVENT_NAME` and `DATE`.","lastModifiedDate":"2024-03-18"},{"lineNumber":616,"author":{"gitId":"guohuang88"},"content":"  All parameters are compulsory. Optionally, you may include `TIME` in the `DATE` parameter.","lastModifiedDate":"2024-03-16"},{"lineNumber":617,"author":{"gitId":"guohuang88"},"content":"* EditEventCommand will edit the selected `EVENT_INDEX` with a new event.","lastModifiedDate":"2024-03-18"},{"lineNumber":618,"author":{"gitId":"guohuang88"},"content":"* Editing of an event can only happen for a single patient, and a single event at any given time.","lastModifiedDate":"2024-03-18"},{"lineNumber":619,"author":{"gitId":"guohuang88"},"content":"* Editing an event to an existing event will not change the patient list as there should not have any duplicate","lastModifiedDate":"2024-03-31"},{"lineNumber":620,"author":{"gitId":"guohuang88"},"content":"  events.","lastModifiedDate":"2024-03-31"},{"lineNumber":621,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":622,"author":{"gitId":"guohuang88"},"content":"#### Example Usage Scenario","lastModifiedDate":"2024-03-16"},{"lineNumber":623,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":624,"author":{"gitId":"guohuang88"},"content":"Given below is an example usage scenario and how the group creation mechanism behaves at each step.","lastModifiedDate":"2024-03-16"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":626,"author":{"gitId":"guohuang88"},"content":"Step 1: The user accesses the PatientSync application.","lastModifiedDate":"2024-03-16"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":628,"author":{"gitId":"guohuang88"},"content":"Step 2: The user executes the `adde 1 n/Birthday d/20-01-2022` command to add the Event, Birthday,","lastModifiedDate":"2024-03-18"},{"lineNumber":629,"author":{"gitId":"guohuang88"},"content":"which falls on the 20th January.","lastModifiedDate":"2024-03-16"},{"lineNumber":630,"author":{"gitId":"guohuang88"},"content":"* Upon successful validation, it creates an `AddEventCommand` instance.","lastModifiedDate":"2024-03-18"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":632,"author":{"gitId":"guohuang88"},"content":"Step 3: The user executes `edite 1 e/1 n/New Birthday d/20-01-2023` to edit the Event.","lastModifiedDate":"2024-03-18"},{"lineNumber":633,"author":{"gitId":"guohuang88"},"content":"* Upon successful validation,  an `EditEventCommand` instance is created.","lastModifiedDate":"2024-03-18"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":635,"author":{"gitId":"ZhiWei1010"},"content":"The following UML sequence diagram illustrates how the Edit Event operations works.","lastModifiedDate":"2024-03-19"},{"lineNumber":636,"author":{"gitId":"ZhiWei1010"},"content":"\u003cpuml src\u003d\"diagrams/EditEventSequenceDiagram.puml\" alt\u003d\"Edit Event Sequence Diagram\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":638,"author":{"gitId":"SherisseTJW"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":639,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":640,"author":{"gitId":"SherisseTJW"},"content":"**Note:** The lifeline for `EditEventCommandParser` and `EditEventCommand` should end at the destroy marker (X) but","lastModifiedDate":"2024-03-30"},{"lineNumber":641,"author":{"gitId":"SherisseTJW"},"content":"due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2024-03-30"},{"lineNumber":642,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":643,"author":{"gitId":"SherisseTJW"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":644,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":645,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":646,"author":{"gitId":"guohuang88"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-16"},{"lineNumber":647,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":648,"author":{"gitId":"guohuang88"},"content":"**Aspect: Choice of COMMAND_WORD**","lastModifiedDate":"2024-03-16"},{"lineNumber":649,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":650,"author":{"gitId":"guohuang88"},"content":"* **Alternative 1 (current choice)**: Use `edite` ","lastModifiedDate":"2024-03-16"},{"lineNumber":651,"author":{"gitId":"guohuang88"},"content":"    * Pros: Consistent with `adde` and `deletee` commands.","lastModifiedDate":"2024-03-16"},{"lineNumber":652,"author":{"gitId":"guohuang88"},"content":"    * Cons: May not be as intuitive for user.","lastModifiedDate":"2024-03-16"},{"lineNumber":653,"author":{"gitId":"guohuang88"},"content":"    \u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":654,"author":{"gitId":"guohuang88"},"content":"* **Alternative 2**: Use `editID`","lastModifiedDate":"2024-03-16"},{"lineNumber":655,"author":{"gitId":"guohuang88"},"content":"    * Pros: Clearer Syntax.","lastModifiedDate":"2024-03-16"},{"lineNumber":656,"author":{"gitId":"guohuang88"},"content":"    * Cons: Inconsistent with `adde` and `deletee` commands.","lastModifiedDate":"2024-03-16"},{"lineNumber":657,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":658,"author":{"gitId":"guohuang88"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-16"},{"lineNumber":659,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":660,"author":{"gitId":"NeoHW"},"content":"### 3.8 Deleting a Patient","lastModifiedDate":"2024-03-18"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":662,"author":{"gitId":"guohuang88"},"content":"#### Introduction","lastModifiedDate":"2024-03-14"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":664,"author":{"gitId":"guohuang88"},"content":"The `DeleteCommand` is responsible for deleting a patient in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":666,"author":{"gitId":"guohuang88"},"content":"#### Specifications","lastModifiedDate":"2024-03-14"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":668,"author":{"gitId":"guohuang88"},"content":"* Delete command is used when the user wants to remove a patient from the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":670,"author":{"gitId":"guohuang88"},"content":"The following UML sequence diagram illustrates how the Delete operation works.","lastModifiedDate":"2024-03-19"},{"lineNumber":671,"author":{"gitId":"guohuang88"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Delete Sequence Diagram\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":673,"author":{"gitId":"guohuang88"},"content":"#### Example Usage Scenario","lastModifiedDate":"2024-03-14"},{"lineNumber":674,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":675,"author":{"gitId":"guohuang88"},"content":"Given below is an example usage scenario and how the group creation mechanism behaves at each step.","lastModifiedDate":"2024-03-16"},{"lineNumber":676,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":677,"author":{"gitId":"guohuang88"},"content":"Step 1: The user accesses the PatientSync application.","lastModifiedDate":"2024-03-14"},{"lineNumber":678,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":679,"author":{"gitId":"guohuang88"},"content":"Step 2: The user see all the patients in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":680,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":681,"author":{"gitId":"guohuang88"},"content":"Step 3: The user decide to remove the first patient in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":682,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":683,"author":{"gitId":"guohuang88"},"content":"Step 4: The user executes the `delete 1` command to remove the first patient in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":685,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":687,"author":{"gitId":"guohuang88"},"content":"**Note:** The lifeline for `DeleteCommandParser` and `DeleteCommand` should end at the destroy marker (X) but","lastModifiedDate":"2024-03-31"},{"lineNumber":688,"author":{"gitId":"SherisseTJW"},"content":"due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2024-03-30"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":690,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":692,"author":{"gitId":"ZhiWei1010"},"content":"### 3.9 Listing all Patients","lastModifiedDate":"2024-03-19"},{"lineNumber":693,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":694,"author":{"gitId":"ZhiWei1010"},"content":"#### Introduction","lastModifiedDate":"2024-03-19"},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":696,"author":{"gitId":"ZhiWei1010"},"content":"The `ListCommand` is responsible for listing all patients in the address book.","lastModifiedDate":"2024-03-19"},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":698,"author":{"gitId":"NeoHW"},"content":"####  Specifications","lastModifiedDate":"2024-04-09"},{"lineNumber":699,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":700,"author":{"gitId":"ZhiWei1010"},"content":"* The ListCommand make use of a `Predicate` that always evaluates to true.","lastModifiedDate":"2024-03-19"},{"lineNumber":701,"author":{"gitId":"ZhiWei1010"},"content":"* Through ListCommand#execute(), the `Predicate` is passed as an argument to Model#updateFilteredPersonList(),","lastModifiedDate":"2024-03-19"},{"lineNumber":702,"author":{"gitId":"ZhiWei1010"},"content":"causing the UI to only show all patients.","lastModifiedDate":"2024-03-19"},{"lineNumber":703,"author":{"gitId":"ZhiWei1010"},"content":"* The UML sequence diagram below shows the interaction between the Logic and Model components after calling `list`","lastModifiedDate":"2024-03-19"},{"lineNumber":704,"author":{"gitId":"ZhiWei1010"},"content":"command.","lastModifiedDate":"2024-03-19"},{"lineNumber":705,"author":{"gitId":"SherisseTJW"},"content":"* For each Patient\u0027s Events, the Events will be displayed in ascending order by date, then start time if date is equal, ","lastModifiedDate":"2024-03-23"},{"lineNumber":706,"author":{"gitId":"SherisseTJW"},"content":"then end time if both date and start time is equal","lastModifiedDate":"2024-03-23"},{"lineNumber":707,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":708,"author":{"gitId":"ZhiWei1010"},"content":"\u003cpuml src\u003d\"diagrams/ListSequenceDiagram.puml\" alt\u003d\"List Sequence Diagram\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":710,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":712,"author":{"gitId":"SherisseTJW"},"content":"**Note:** The lifeline for `ListCommand` should end at the destroy marker (X) but","lastModifiedDate":"2024-03-30"},{"lineNumber":713,"author":{"gitId":"SherisseTJW"},"content":"due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2024-03-30"},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":715,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":717,"author":{"gitId":"guohuang88"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-14"},{"lineNumber":718,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":719,"author":{"gitId":"guohuang88"},"content":"### 3.10 Locating patients by name","lastModifiedDate":"2024-03-22"},{"lineNumber":720,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":721,"author":{"gitId":"guohuang88"},"content":"#### Introduction","lastModifiedDate":"2024-03-22"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":723,"author":{"gitId":"guohuang88"},"content":"The `FindCommand` class is responsible for finding the patients by the name in the patient list","lastModifiedDate":"2024-03-22"},{"lineNumber":724,"author":{"gitId":"guohuang88"},"content":"using keyword(s).","lastModifiedDate":"2024-03-22"},{"lineNumber":725,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":726,"author":{"gitId":"guohuang88"},"content":"#### Specifications","lastModifiedDate":"2024-03-22"},{"lineNumber":727,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":728,"author":{"gitId":"guohuang88"},"content":"* `FindCommand` takes in one or more keywords to find patients in the patient list.","lastModifiedDate":"2024-03-22"},{"lineNumber":729,"author":{"gitId":"guohuang88"},"content":"* `FindCommand` will update the patient list with patients whose name matches the keyword(s).","lastModifiedDate":"2024-03-22"},{"lineNumber":730,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":731,"author":{"gitId":"guohuang88"},"content":"#### Example Usage Scenario","lastModifiedDate":"2024-03-22"},{"lineNumber":732,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":733,"author":{"gitId":"guohuang88"},"content":"Given below is an example usage scenario and how the group creation mechanism behaves at each step.","lastModifiedDate":"2024-03-22"},{"lineNumber":734,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":735,"author":{"gitId":"guohuang88"},"content":"Step 1: The user accesses the PatientSync application.","lastModifiedDate":"2024-03-22"},{"lineNumber":736,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":737,"author":{"gitId":"guohuang88"},"content":"Step 2: The user executes `find Alex` to search for patients whose name is Alex.","lastModifiedDate":"2024-03-22"},{"lineNumber":738,"author":{"gitId":"guohuang88"},"content":"* Upon successful execution, those patients whose name is `Alex` will be listed in the patient list.","lastModifiedDate":"2024-03-22"},{"lineNumber":739,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":740,"author":{"gitId":"guohuang88"},"content":"The following UML sequence diagram illustrates how the Find operations works.","lastModifiedDate":"2024-03-22"},{"lineNumber":741,"author":{"gitId":"guohuang88"},"content":"\u003cpuml src\u003d\"diagrams/FindSequenceDiagram.puml\" alt\u003d\"Find Sequence Diagram\" /\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":743,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":745,"author":{"gitId":"guohuang88"},"content":"**Note:** The lifeline for `FindCommandParser` and `FindCommand` should end at the destroy marker (X) but","lastModifiedDate":"2024-03-31"},{"lineNumber":746,"author":{"gitId":"SherisseTJW"},"content":"due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2024-03-30"},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":748,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":751,"author":{"gitId":"guohuang88"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-22"},{"lineNumber":752,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":753,"author":{"gitId":"guohuang88"},"content":"**Aspect: Choice of keyword**","lastModifiedDate":"2024-03-22"},{"lineNumber":754,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":755,"author":{"gitId":"guohuang88"},"content":"* **Alternative 1 (current choice)**: Search using `PATIENT_NAME` as the keyword","lastModifiedDate":"2024-03-22"},{"lineNumber":756,"author":{"gitId":"guohuang88"},"content":"  * Pros: Easy for user to remember the name.","lastModifiedDate":"2024-03-22"},{"lineNumber":757,"author":{"gitId":"guohuang88"},"content":"  * Cons: There may be many patients whose name contains the same keyword.","lastModifiedDate":"2024-03-22"},{"lineNumber":758,"author":{"gitId":"guohuang88"},"content":"    \u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":759,"author":{"gitId":"guohuang88"},"content":"* **Alternative 2**: Search using `PATIENT_HOSPITAL_ID` as the keyword","lastModifiedDate":"2024-03-22"},{"lineNumber":760,"author":{"gitId":"guohuang88"},"content":"  * Pros: User may obtain the specific patient.","lastModifiedDate":"2024-03-22"},{"lineNumber":761,"author":{"gitId":"guohuang88"},"content":"  * Cons: Hard for user to remember the specific `PATIENT_HOSPITAL_ID`.","lastModifiedDate":"2024-03-22"},{"lineNumber":762,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":763,"author":{"gitId":"guohuang88"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-22"},{"lineNumber":764,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":765,"author":{"gitId":"guohuang88"},"content":"### 3.11 Locating patients by tag","lastModifiedDate":"2024-03-24"},{"lineNumber":766,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":767,"author":{"gitId":"guohuang88"},"content":"#### Introduction","lastModifiedDate":"2024-03-24"},{"lineNumber":768,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":769,"author":{"gitId":"guohuang88"},"content":"The `FindTagsCommand` class is responsible for finding the patients by their tag in the patient list","lastModifiedDate":"2024-03-24"},{"lineNumber":770,"author":{"gitId":"guohuang88"},"content":"using keyword(s).","lastModifiedDate":"2024-03-24"},{"lineNumber":771,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":772,"author":{"gitId":"guohuang88"},"content":"#### Specifications","lastModifiedDate":"2024-03-24"},{"lineNumber":773,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":774,"author":{"gitId":"guohuang88"},"content":"* `FindTagsCommand` takes in one or more keywords to find patients using tag in the patient list.","lastModifiedDate":"2024-03-24"},{"lineNumber":775,"author":{"gitId":"guohuang88"},"content":"* `FindTagsCommand` will update the patient list with patients whose tag(s) matches the keyword(s).","lastModifiedDate":"2024-03-24"},{"lineNumber":776,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":777,"author":{"gitId":"guohuang88"},"content":"#### Example Usage Scenario","lastModifiedDate":"2024-03-24"},{"lineNumber":778,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":779,"author":{"gitId":"guohuang88"},"content":"Given below is an example usage scenario and how the group creation mechanism behaves at each step.","lastModifiedDate":"2024-03-24"},{"lineNumber":780,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":781,"author":{"gitId":"guohuang88"},"content":"Step 1: The user accesses the PatientSync application.","lastModifiedDate":"2024-03-24"},{"lineNumber":782,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":783,"author":{"gitId":"guohuang88"},"content":"Step 2: The user executes `findt depression` to search for patients whose tag is depression.","lastModifiedDate":"2024-03-24"},{"lineNumber":784,"author":{"gitId":"guohuang88"},"content":"* Upon successful execution, those patients whose tag is `depression` will be listed in the patient list.","lastModifiedDate":"2024-03-24"},{"lineNumber":785,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":786,"author":{"gitId":"guohuang88"},"content":"The following UML sequence diagram illustrates how the FindTags operations works.","lastModifiedDate":"2024-03-24"},{"lineNumber":787,"author":{"gitId":"guohuang88"},"content":"\u003cpuml src\u003d\"diagrams/FindTagsSequenceDiagram.puml\" alt\u003d\"Find Tags Sequence Diagram\" /\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":788,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":789,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":790,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":791,"author":{"gitId":"guohuang88"},"content":"**Note:** The lifeline for `FindTagsCommandParser` and `FindTagsCommand` should end at the destroy marker ","lastModifiedDate":"2024-03-31"},{"lineNumber":792,"author":{"gitId":"guohuang88"},"content":"(X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2024-03-31"},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":794,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":796,"author":{"gitId":"guohuang88"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-24"},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":798,"author":{"gitId":"guohuang88"},"content":"**Aspect: Choice of Command Structure**","lastModifiedDate":"2024-03-24"},{"lineNumber":799,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":800,"author":{"gitId":"guohuang88"},"content":"* **Alternative 1 (current choice)**: Use `findt KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2024-03-24"},{"lineNumber":801,"author":{"gitId":"guohuang88"},"content":"  * Pros: Does not need to use tag prefix, and it is similar to `find` command.","lastModifiedDate":"2024-03-24"},{"lineNumber":802,"author":{"gitId":"guohuang88"},"content":"  * Cons: Command structure is different from `addt` and `deletet`.","lastModifiedDate":"2024-03-24"},{"lineNumber":803,"author":{"gitId":"guohuang88"},"content":"    \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":804,"author":{"gitId":"guohuang88"},"content":"* **Alternative 2**: Use `findt t/KEYWORD t/[MORE_KEYWORDS]`","lastModifiedDate":"2024-03-24"},{"lineNumber":805,"author":{"gitId":"guohuang88"},"content":"  * Pros: Command structure is similar to `addt` and `deletet`.","lastModifiedDate":"2024-03-24"},{"lineNumber":806,"author":{"gitId":"guohuang88"},"content":"  * Cons: User need to key in multiple tag prefix if they want to search using more keywords.","lastModifiedDate":"2024-03-24"},{"lineNumber":807,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":808,"author":{"gitId":"guohuang88"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-24"},{"lineNumber":809,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":810,"author":{"gitId":"ZhiWei1010"},"content":"### 3.12 Sorting patients by specified attributes","lastModifiedDate":"2024-04-03"},{"lineNumber":811,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":812,"author":{"gitId":"ZhiWei1010"},"content":"#### Introduction","lastModifiedDate":"2024-04-03"},{"lineNumber":813,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":814,"author":{"gitId":"ZhiWei1010"},"content":"The `SortCommand` class is responsible for sorting the patients by the specified attribute.","lastModifiedDate":"2024-04-03"},{"lineNumber":815,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":816,"author":{"gitId":"ZhiWei1010"},"content":"#### Specifications","lastModifiedDate":"2024-04-03"},{"lineNumber":817,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":818,"author":{"gitId":"ZhiWei1010"},"content":"* `SortCommand` takes in one or zero attributes to sort the patient list.","lastModifiedDate":"2024-04-03"},{"lineNumber":819,"author":{"gitId":"ZhiWei1010"},"content":"* `SortCommand` will update the patient list with the sorted patient list and the display the sorted patient list.","lastModifiedDate":"2024-04-03"},{"lineNumber":820,"author":{"gitId":"ZhiWei1010"},"content":"* If no attribute is specified, the default sorting method is by patient name.","lastModifiedDate":"2024-04-03"},{"lineNumber":821,"author":{"gitId":"ZhiWei1010"},"content":"* SortCommand only can sort by patient\u0027s name or patient\u0027s preferred name.","lastModifiedDate":"2024-04-03"},{"lineNumber":822,"author":{"gitId":"ZhiWei1010"},"content":"* If multiple patients have the same name, the original order (with respect to the affected patients only) will be","lastModifiedDate":"2024-04-03"},{"lineNumber":823,"author":{"gitId":"ZhiWei1010"},"content":"preserved for the affected patients.","lastModifiedDate":"2024-04-03"},{"lineNumber":824,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":825,"author":{"gitId":"ZhiWei1010"},"content":"The activity diagram below outlines the steps involved when a user initiates a Delete Event command.","lastModifiedDate":"2024-04-03"},{"lineNumber":826,"author":{"gitId":"ZhiWei1010"},"content":"\u003cpuml src\u003d\"diagrams/SortActivityDiagram.puml\" alt\u003d\"SortActivityDiagram\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":827,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":828,"author":{"gitId":"ZhiWei1010"},"content":"#### Example Usage Scenario","lastModifiedDate":"2024-04-03"},{"lineNumber":829,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":830,"author":{"gitId":"ZhiWei1010"},"content":"Given below is an example usage scenario and how the group creation mechanism behaves at each step.","lastModifiedDate":"2024-04-03"},{"lineNumber":831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":832,"author":{"gitId":"ZhiWei1010"},"content":"Step 1: The user accesses the PatientSync application.","lastModifiedDate":"2024-04-03"},{"lineNumber":833,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":834,"author":{"gitId":"ZhiWei1010"},"content":"Step 2: The user executes `sort p` to sort patient list by patient\u0027s preferred name.","lastModifiedDate":"2024-04-03"},{"lineNumber":835,"author":{"gitId":"ZhiWei1010"},"content":"* Upon successful execution, the patients will be sorted and the sorted patient list will be displayed.","lastModifiedDate":"2024-04-03"},{"lineNumber":836,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":837,"author":{"gitId":"ZhiWei1010"},"content":"The following UML sequence diagram illustrates how the Sort operations works.","lastModifiedDate":"2024-04-03"},{"lineNumber":838,"author":{"gitId":"ZhiWei1010"},"content":"\u003cpuml src\u003d\"diagrams/SortSequenceDiagram.puml\" alt\u003d\"Sort Sequence Diagram\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":839,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":840,"author":{"gitId":"ZhiWei1010"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":841,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":842,"author":{"gitId":"ZhiWei1010"},"content":"**Note:** The lifeline for `SortCommandParser` and `SortCommand` should end at the destroy marker","lastModifiedDate":"2024-04-03"},{"lineNumber":843,"author":{"gitId":"ZhiWei1010"},"content":"(X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2024-04-03"},{"lineNumber":844,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":845,"author":{"gitId":"ZhiWei1010"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":846,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":847,"author":{"gitId":"ZhiWei1010"},"content":"#### Design Considerations","lastModifiedDate":"2024-04-03"},{"lineNumber":848,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":849,"author":{"gitId":"ZhiWei1010"},"content":"**Aspect: Choice of Command Structure**","lastModifiedDate":"2024-04-03"},{"lineNumber":850,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":851,"author":{"gitId":"ZhiWei1010"},"content":"* **Alternative 1 (current choice)**: Use `sort [ATTRIBUTE]`","lastModifiedDate":"2024-04-03"},{"lineNumber":852,"author":{"gitId":"ZhiWei1010"},"content":"  * Pros: Does not need to use prefix, and is easier and faster to type.","lastModifiedDate":"2024-04-03"},{"lineNumber":853,"author":{"gitId":"ZhiWei1010"},"content":"  * Cons: Command structure is different from other commands that uses prefix.","lastModifiedDate":"2024-04-03"},{"lineNumber":854,"author":{"gitId":"ZhiWei1010"},"content":"    \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":855,"author":{"gitId":"ZhiWei1010"},"content":"* **Alternative 2**: Use `sort [PREFIX]`","lastModifiedDate":"2024-04-03"},{"lineNumber":856,"author":{"gitId":"ZhiWei1010"},"content":"  * Pros: Command structure is similar to other commands that uses prefix.","lastModifiedDate":"2024-04-03"},{"lineNumber":857,"author":{"gitId":"ZhiWei1010"},"content":"  * Cons: Command structure is weird and counter-intuitive.","lastModifiedDate":"2024-04-03"},{"lineNumber":858,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":859,"author":{"gitId":"ZhiWei1010"},"content":"**Aspect: ATTRIBUTE specification**","lastModifiedDate":"2024-04-03"},{"lineNumber":860,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":861,"author":{"gitId":"ZhiWei1010"},"content":"* **Alternative 1 (current choice)**: Can be empty.","lastModifiedDate":"2024-04-03"},{"lineNumber":862,"author":{"gitId":"ZhiWei1010"},"content":"  * Pros: User can sort patient list by patient name quickly.","lastModifiedDate":"2024-04-03"},{"lineNumber":863,"author":{"gitId":"ZhiWei1010"},"content":"  * Cons: Need to conduct more checks in the sort command, and cannot choose default sorting method.","lastModifiedDate":"2024-04-03"},{"lineNumber":864,"author":{"gitId":"ZhiWei1010"},"content":"    \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":865,"author":{"gitId":"ZhiWei1010"},"content":"* **Alternative 2**: Cannot be empty.","lastModifiedDate":"2024-04-03"},{"lineNumber":866,"author":{"gitId":"ZhiWei1010"},"content":"  * Pros: Fewer checks to implement in the sort command.","lastModifiedDate":"2024-04-03"},{"lineNumber":867,"author":{"gitId":"ZhiWei1010"},"content":"  * Cons: User needs to specify an attribute everytime, no default sorting method.","lastModifiedDate":"2024-04-03"},{"lineNumber":868,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":869,"author":{"gitId":"ZhiWei1010"},"content":"**Aspect: Sorting Algorithm**","lastModifiedDate":"2024-04-03"},{"lineNumber":870,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":871,"author":{"gitId":"ZhiWei1010"},"content":"* **Alternative 1 (current choice)**: Use default `Collections.sort` method with custom Comparator","lastModifiedDate":"2024-04-03"},{"lineNumber":872,"author":{"gitId":"ZhiWei1010"},"content":"  * Pros: No need to create complex sorting algorithms.","lastModifiedDate":"2024-04-03"},{"lineNumber":873,"author":{"gitId":"ZhiWei1010"},"content":"  * Cons: Might not be the most efficient sorting algorithm.","lastModifiedDate":"2024-04-03"},{"lineNumber":874,"author":{"gitId":"ZhiWei1010"},"content":"    \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":875,"author":{"gitId":"ZhiWei1010"},"content":"* **Alternative 2**: Create new optimized sorting algorithm","lastModifiedDate":"2024-04-03"},{"lineNumber":876,"author":{"gitId":"ZhiWei1010"},"content":"  * Pros: Possibly more efficient and faster sorting.","lastModifiedDate":"2024-04-03"},{"lineNumber":877,"author":{"gitId":"ZhiWei1010"},"content":"  * Cons: Difficult to create a better sorting algorithm.","lastModifiedDate":"2024-04-03"},{"lineNumber":878,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":879,"author":{"gitId":"ZhiWei1010"},"content":"**Aspect: Method to update the model after sorting**","lastModifiedDate":"2024-04-03"},{"lineNumber":880,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":881,"author":{"gitId":"ZhiWei1010"},"content":"* **Alternative 1 (current choice)**: Create new `updatePatientList` method in Model","lastModifiedDate":"2024-04-03"},{"lineNumber":882,"author":{"gitId":"ZhiWei1010"},"content":"  * Pros: Updates the patient list with little code.","lastModifiedDate":"2024-04-03"},{"lineNumber":883,"author":{"gitId":"ZhiWei1010"},"content":"  * Cons: Need to ensure that the sorted patient list does not add or deletes patients accidentally, else","lastModifiedDate":"2024-04-03"},{"lineNumber":884,"author":{"gitId":"ZhiWei1010"},"content":"there will be extra or missing patients.","lastModifiedDate":"2024-04-03"},{"lineNumber":885,"author":{"gitId":"ZhiWei1010"},"content":"    \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":886,"author":{"gitId":"ZhiWei1010"},"content":"* **Alternative 2**: Sort the patients, deletes all the patients in the patient list, then add the patients back in the","lastModifiedDate":"2024-04-03"},{"lineNumber":887,"author":{"gitId":"ZhiWei1010"},"content":"sorted order.","lastModifiedDate":"2024-04-03"},{"lineNumber":888,"author":{"gitId":"ZhiWei1010"},"content":"  * Pros: Easy and simple.","lastModifiedDate":"2024-04-03"},{"lineNumber":889,"author":{"gitId":"ZhiWei1010"},"content":"  * Cons: Slow and inefficient.","lastModifiedDate":"2024-04-03"},{"lineNumber":890,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":891,"author":{"gitId":"ZhiWei1010"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-03"},{"lineNumber":892,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":893,"author":{"gitId":"NeoHW"},"content":"## 4 Planned Enhancements","lastModifiedDate":"2024-03-12"},{"lineNumber":894,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":895,"author":{"gitId":"NeoHW"},"content":"Team size: 5","lastModifiedDate":"2024-04-09"},{"lineNumber":896,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":897,"author":{"gitId":"NeoHW"},"content":"### 4.1 Input Validation and Error Handling","lastModifiedDate":"2024-04-09"},{"lineNumber":898,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":899,"author":{"gitId":"NeoHW"},"content":"Presently, the handling of potentially invalid inputs and the inability to detect incorrect flags for tags, such as when a user enters `/addtag` instead of the correct `/addt`  or incorrect tag formats (e.g., using `tag/TAG` instead of `t/TAG`) are limited. This can lead to errors and confusion for users, especially for new users.","lastModifiedDate":"2024-04-09"},{"lineNumber":900,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":901,"author":{"gitId":"NeoHW"},"content":"To mitigate this, we are planning enhancements to include robust input validation, warnings for potential errors, and improved error messages. When an invalid input is detected, the system will provide even clearer feedback to the user, indicating the specific issue and suggesting corrective actions. This would include errors arising from missing index, and clearer distinctions between non-negative indexes and out of bounds indexes.","lastModifiedDate":"2024-04-09"},{"lineNumber":902,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":903,"author":{"gitId":"NeoHW"},"content":"Additionally, an interactive command assistance feature will be introduced, offering real-time suggestions. These enhancements aim to improve the user experience, enhance system reliability, and bolster command comprehension within the PatientSync application.","lastModifiedDate":"2024-04-09"},{"lineNumber":904,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":905,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":906,"author":{"gitId":"NeoHW"},"content":"### 4.2 Edit tags feature","lastModifiedDate":"2024-04-08"},{"lineNumber":907,"author":{"gitId":"NeoHW"},"content":"Currently, the process of modifying patient tags in the PatientSync application can be cumbersome, requiring users to delete and re-add tags individually. This can lead to potential errors, especially when handling a large number of tags or making multiple changes. ","lastModifiedDate":"2024-04-09"},{"lineNumber":908,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":909,"author":{"gitId":"NeoHW"},"content":"To address this, we are planning to introduce the EditTagsCommand feature, providing users with a more flexible and efficient way to manage patient tags. The planned EditTagsCommand feature is designed to enhance user productivity, reduce the likelihood of errors, and improve overall usability within PatientSync.","lastModifiedDate":"2024-04-09"},{"lineNumber":910,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":911,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":912,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":913,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":914,"author":{"gitId":"NeoHW"},"content":"## 5 Documentation, logging, testing, configuration, dev-ops","lastModifiedDate":"2024-03-12"},{"lineNumber":915,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":916,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":917,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":918,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":919,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":920,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":921,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":922,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":923,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":924,"author":{"gitId":"NeoHW"},"content":"## 6 Appendix: Requirements","lastModifiedDate":"2024-03-12"},{"lineNumber":925,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":926,"author":{"gitId":"NeoHW"},"content":"### 6.1 Product scope","lastModifiedDate":"2024-03-12"},{"lineNumber":927,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":928,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":929,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":930,"author":{"gitId":"NeoHW"},"content":"- has a need to manage a significant number of patients","lastModifiedDate":"2024-03-06"},{"lineNumber":931,"author":{"gitId":"NeoHW"},"content":"- values comprehensive patient information for tailored treatment","lastModifiedDate":"2024-03-06"},{"lineNumber":932,"author":{"gitId":"NeoHW"},"content":"- prefer desktop apps over other types","lastModifiedDate":"2024-03-06"},{"lineNumber":933,"author":{"gitId":"NeoHW"},"content":"- can type fast","lastModifiedDate":"2024-03-06"},{"lineNumber":934,"author":{"gitId":"NeoHW"},"content":"- prefers typing to mouse interactions","lastModifiedDate":"2024-03-06"},{"lineNumber":935,"author":{"gitId":"NeoHW"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2024-03-06"},{"lineNumber":936,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":937,"author":{"gitId":"NeoHW"},"content":"**Value proposition**:\\","lastModifiedDate":"2024-03-12"},{"lineNumber":938,"author":{"gitId":"NeoHW"},"content":"PatientSync is meticulously crafted for nurses who prioritize the well-being of their patients above all else. It allows nurses to input intimate details about their patients, such as food preferences and family conditions. This personalized approach enables nurses to deliver tailored care that meets the unique needs of each individual.","lastModifiedDate":"2024-03-12"},{"lineNumber":939,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":940,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":941,"author":{"gitId":"NeoHW"},"content":"### 6.2 User stories","lastModifiedDate":"2024-03-12"},{"lineNumber":942,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":943,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":944,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":945,"author":{"gitId":"-"},"content":"| Priority | As a …​ | I want to …​                       | So that I can…​                                                                                                                          |","lastModifiedDate":"2020-05-23"},{"lineNumber":946,"author":{"gitId":"ZhiWei1010"},"content":"|----------|---------|------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-03"},{"lineNumber":947,"author":{"gitId":"NeoHW"},"content":"| `***`    | Nurse   | easily view the user guide         | learn more about the product and how to use whenever I need to                                                                           |","lastModifiedDate":"2024-03-06"},{"lineNumber":948,"author":{"gitId":"NeoHW"},"content":"| `***`    | Nurse   | add patient\u0027s information          | add new patients and easily remember their preferences to make a personalized connection                                                 |","lastModifiedDate":"2024-03-06"},{"lineNumber":949,"author":{"gitId":"NeoHW"},"content":"| `***`    | Nurse   | delete patient\u0027s information       | remove patients who have been discharged                                                                                                 |","lastModifiedDate":"2024-03-06"},{"lineNumber":950,"author":{"gitId":"NeoHW"},"content":"| `***`    | Nurse   | list all patient\u0027s information     | easily find the details of my patients                                                                                                   |","lastModifiedDate":"2024-03-06"},{"lineNumber":951,"author":{"gitId":"SherisseTJW"},"content":"| `***`    | Nurse   | add event for my patients          | keep track of my patients\u0027 appointments and see my overall schedule                                                                      |","lastModifiedDate":"2024-03-23"},{"lineNumber":952,"author":{"gitId":"SherisseTJW"},"content":"| `***`    | Nurse   | delete event for my patients       | delete my patients\u0027 appointments if they are canceled                                                                                    |","lastModifiedDate":"2024-03-23"},{"lineNumber":953,"author":{"gitId":"NeoHW"},"content":"| `***`    | Nurse   | add tags to my patients            | group the patients into categories                                                                                                       |","lastModifiedDate":"2024-03-06"},{"lineNumber":954,"author":{"gitId":"NeoHW"},"content":"| `***`    | Nurse   | find patient with a specific tag   | quickly locate individuals with similar conditions, treatments, or requirements without having to scroll through the entire patient list |","lastModifiedDate":"2024-03-06"},{"lineNumber":955,"author":{"gitId":"NeoHW"},"content":"| `***`    | Nurse   | save all previously added patients | ensure details of the patient would not be lost                                                                                          |","lastModifiedDate":"2024-03-06"},{"lineNumber":956,"author":{"gitId":"NeoHW"},"content":"| `**`     | Nurse   | edit patient\u0027s information         | have the most updated information of my patients at all times                                                                            |","lastModifiedDate":"2024-03-06"},{"lineNumber":957,"author":{"gitId":"SherisseTJW"},"content":"| `**`     | Nurse   | edit event for my patients         | edit my patients\u0027 appointments if they are changed                                                                                       |","lastModifiedDate":"2024-03-23"},{"lineNumber":958,"author":{"gitId":"NeoHW"},"content":"| `**`     | Nurse   | delete tags from my patients       | delete the tag if it no longer applies                                                                                                   |","lastModifiedDate":"2024-03-06"},{"lineNumber":959,"author":{"gitId":"NeoHW"},"content":"| `**`     | Nurse   |** edit tags from my patients         | edit mistyped tags                                                                                                                       |","lastModifiedDate":"2024-04-08"},{"lineNumber":960,"author":{"gitId":"ZhiWei1010"},"content":"| `**`     | Nurse   | sort the patients by patient name  | be flexible in how I want to view my patient list                                                                                        |","lastModifiedDate":"2024-04-03"},{"lineNumber":961,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":962,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":963,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":964,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":965,"author":{"gitId":"NeoHW"},"content":"### 6.3 Use cases","lastModifiedDate":"2024-03-12"},{"lineNumber":966,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":967,"author":{"gitId":"NeoHW"},"content":"(For all use cases below, the **System** is `PatientSync` and the **Actor** is the `nurse`, unless specified otherwise)","lastModifiedDate":"2024-03-12"},{"lineNumber":968,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":969,"author":{"gitId":"guohuang88"},"content":"**Use case: Add a patient**","lastModifiedDate":"2024-03-06"},{"lineNumber":970,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":971,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":972,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":973,"author":{"gitId":"guohuang88"},"content":"1.  Nurse requests to add a patient","lastModifiedDate":"2024-03-06"},{"lineNumber":974,"author":{"gitId":"guohuang88"},"content":"2.  PatientSync adds the patient","lastModifiedDate":"2024-03-06"},{"lineNumber":975,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":976,"author":{"gitId":"guohuang88"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":977,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":978,"author":{"gitId":"guohuang88"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":979,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":980,"author":{"gitId":"guohuang88"},"content":"* 2a. The information key in is wrong.","lastModifiedDate":"2024-03-06"},{"lineNumber":981,"author":{"gitId":"guohuang88"},"content":"    * 2a1. PatientSync shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":982,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":983,"author":{"gitId":"guohuang88"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":984,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":985,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":986,"author":{"gitId":"guohuang88"},"content":"**Use case: Delete a patient**","lastModifiedDate":"2024-03-06"},{"lineNumber":987,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":988,"author":{"gitId":"guohuang88"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":989,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":990,"author":{"gitId":"guohuang88"},"content":"1.  Nurse requests to list patients","lastModifiedDate":"2024-03-06"},{"lineNumber":991,"author":{"gitId":"guohuang88"},"content":"2.  PatientSync shows a list of patients","lastModifiedDate":"2024-03-06"},{"lineNumber":992,"author":{"gitId":"guohuang88"},"content":"3.  Nurse requests to delete a specific patient in the list","lastModifiedDate":"2024-03-06"},{"lineNumber":993,"author":{"gitId":"guohuang88"},"content":"4.  PatientSync deletes the patient","lastModifiedDate":"2024-03-06"},{"lineNumber":994,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":995,"author":{"gitId":"guohuang88"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":996,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":997,"author":{"gitId":"guohuang88"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":998,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":999,"author":{"gitId":"guohuang88"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":1000,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1001,"author":{"gitId":"guohuang88"},"content":"  Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":1002,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1003,"author":{"gitId":"guohuang88"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-03-06"},{"lineNumber":1004,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1005,"author":{"gitId":"guohuang88"},"content":"    * 3a1. PatientSync shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":1006,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1007,"author":{"gitId":"guohuang88"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":1008,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1009,"author":{"gitId":"guohuang88"},"content":"**Use case: List all patients**","lastModifiedDate":"2024-03-06"},{"lineNumber":1010,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1011,"author":{"gitId":"guohuang88"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":1012,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1013,"author":{"gitId":"guohuang88"},"content":"1.  Nurse requests to list patients","lastModifiedDate":"2024-03-06"},{"lineNumber":1014,"author":{"gitId":"guohuang88"},"content":"2.  PatientSync shows a list of patients","lastModifiedDate":"2024-03-06"},{"lineNumber":1015,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1016,"author":{"gitId":"guohuang88"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":1017,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1018,"author":{"gitId":"guohuang88"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":1019,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1020,"author":{"gitId":"guohuang88"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":1021,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1022,"author":{"gitId":"guohuang88"},"content":"  Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":1023,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1024,"author":{"gitId":"SherisseTJW"},"content":"**Use case: Add event for a patient**","lastModifiedDate":"2024-03-23"},{"lineNumber":1025,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1026,"author":{"gitId":"guohuang88"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":1027,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1028,"author":{"gitId":"guohuang88"},"content":"1.  Nurse requests to list patients","lastModifiedDate":"2024-03-06"},{"lineNumber":1029,"author":{"gitId":"guohuang88"},"content":"2.  PatientSync shows a list of patients","lastModifiedDate":"2024-03-06"},{"lineNumber":1030,"author":{"gitId":"SherisseTJW"},"content":"3.  Nurse requests to add an event for a specific patient in the list","lastModifiedDate":"2024-03-23"},{"lineNumber":1031,"author":{"gitId":"SherisseTJW"},"content":"4.  PatientSync adds an event for the patient","lastModifiedDate":"2024-03-23"},{"lineNumber":1032,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1033,"author":{"gitId":"guohuang88"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":1034,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1035,"author":{"gitId":"guohuang88"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":1036,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1037,"author":{"gitId":"guohuang88"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":1038,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1039,"author":{"gitId":"guohuang88"},"content":"  Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":1040,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1041,"author":{"gitId":"guohuang88"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-03-06"},{"lineNumber":1042,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1043,"author":{"gitId":"guohuang88"},"content":"    * 3a1. PatientSync shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1045,"author":{"gitId":"guohuang88"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":1046,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1047,"author":{"gitId":"SherisseTJW"},"content":"**Use case: Delete an event for a patient**","lastModifiedDate":"2024-03-23"},{"lineNumber":1048,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1051,"author":{"gitId":"guohuang88"},"content":"1.  Nurse requests to list patients","lastModifiedDate":"2024-03-06"},{"lineNumber":1052,"author":{"gitId":"guohuang88"},"content":"2.  PatientSync shows a list of patients","lastModifiedDate":"2024-03-06"},{"lineNumber":1053,"author":{"gitId":"SherisseTJW"},"content":"3.  Nurse requests to delete an event for a specific patient in the list","lastModifiedDate":"2024-03-23"},{"lineNumber":1054,"author":{"gitId":"SherisseTJW"},"content":"4.  PatientSync deletes an event the patient","lastModifiedDate":"2024-03-23"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1056,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1062,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-03-06"},{"lineNumber":1065,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1066,"author":{"gitId":"guohuang88"},"content":"    * 3a1. PatientSync shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":1067,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1068,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":1069,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1070,"author":{"gitId":"guohuang88"},"content":"**Use case: Add tag to a patient**","lastModifiedDate":"2024-03-06"},{"lineNumber":1071,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1072,"author":{"gitId":"guohuang88"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":1073,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1074,"author":{"gitId":"guohuang88"},"content":"1.  Nurse requests to list patients","lastModifiedDate":"2024-03-06"},{"lineNumber":1075,"author":{"gitId":"guohuang88"},"content":"2.  PatientSync shows a list of patients","lastModifiedDate":"2024-03-06"},{"lineNumber":1076,"author":{"gitId":"guohuang88"},"content":"3.  Nurse requests to add a tag to a specific patient in the list","lastModifiedDate":"2024-03-06"},{"lineNumber":1077,"author":{"gitId":"guohuang88"},"content":"4.  PatientSync add a tag to the patient","lastModifiedDate":"2024-03-06"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1079,"author":{"gitId":"guohuang88"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1081,"author":{"gitId":"guohuang88"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1083,"author":{"gitId":"guohuang88"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":1084,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1085,"author":{"gitId":"guohuang88"},"content":"  Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":1086,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1087,"author":{"gitId":"guohuang88"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-03-06"},{"lineNumber":1088,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1089,"author":{"gitId":"guohuang88"},"content":"    * 3a1. PatientSync shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":1090,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1091,"author":{"gitId":"guohuang88"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":1092,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1093,"author":{"gitId":"guohuang88"},"content":"**Use case: Delete tag from a patient**","lastModifiedDate":"2024-03-06"},{"lineNumber":1094,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1095,"author":{"gitId":"guohuang88"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":1096,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1097,"author":{"gitId":"guohuang88"},"content":"1.  Nurse requests to list patients","lastModifiedDate":"2024-03-06"},{"lineNumber":1098,"author":{"gitId":"guohuang88"},"content":"2.  PatientSync shows a list of patients","lastModifiedDate":"2024-03-06"},{"lineNumber":1099,"author":{"gitId":"guohuang88"},"content":"3.  Nurse requests to delete a tag from a specific patient in the list","lastModifiedDate":"2024-03-06"},{"lineNumber":1100,"author":{"gitId":"guohuang88"},"content":"4.  PatientSync deletes a tag from the patient","lastModifiedDate":"2024-03-06"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1102,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":1103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1104,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":1105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1106,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":1107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1108,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1112,"author":{"gitId":"guohuang88"},"content":"    * 3a1. PatientSync shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1114,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1116,"author":{"gitId":"guohuang88"},"content":"**Use case: Find patients by a tag**","lastModifiedDate":"2024-03-06"},{"lineNumber":1117,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1118,"author":{"gitId":"guohuang88"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":1119,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1120,"author":{"gitId":"guohuang88"},"content":"1.  Nurse requests to list patients","lastModifiedDate":"2024-03-06"},{"lineNumber":1121,"author":{"gitId":"guohuang88"},"content":"2.  PatientSync shows a list of patients","lastModifiedDate":"2024-03-06"},{"lineNumber":1122,"author":{"gitId":"guohuang88"},"content":"3.  Nurse requests to find patients with a specific tag in the list","lastModifiedDate":"2024-03-06"},{"lineNumber":1123,"author":{"gitId":"guohuang88"},"content":"4.  PatientSync finds patients with the tag","lastModifiedDate":"2024-03-06"},{"lineNumber":1124,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1125,"author":{"gitId":"guohuang88"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":1126,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1127,"author":{"gitId":"guohuang88"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":1128,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1129,"author":{"gitId":"guohuang88"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":1130,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1131,"author":{"gitId":"guohuang88"},"content":"  Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":1132,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1133,"author":{"gitId":"guohuang88"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-03-06"},{"lineNumber":1134,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1135,"author":{"gitId":"guohuang88"},"content":"    * 3a1. PatientSync shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":1136,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1137,"author":{"gitId":"guohuang88"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":1138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1139,"author":{"gitId":"NeoHW"},"content":"### 6.4 Non-Functional Requirements","lastModifiedDate":"2024-03-12"},{"lineNumber":1140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1141,"author":{"gitId":"NeoHW"},"content":"1. Compatibility: Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2024-03-12"},{"lineNumber":1142,"author":{"gitId":"NeoHW"},"content":"2. Performance: Should be able to hold up to 1000 patients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-12"},{"lineNumber":1143,"author":{"gitId":"NeoHW"},"content":"3. Usability: A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-03-12"},{"lineNumber":1144,"author":{"gitId":"NeoHW"},"content":"4. Accessibility: Should operate without the need for internet access to fulfill its core purpose.","lastModifiedDate":"2024-03-12"},{"lineNumber":1145,"author":{"gitId":"NeoHW"},"content":"5. Ease of Use: Should be designed to be usable by a patient new to patient management without extensive training.","lastModifiedDate":"2024-03-12"},{"lineNumber":1146,"author":{"gitId":"NeoHW"},"content":"6. Error Handling: Should provide clear, comprehensive error messages in plain language, guiding users on how to recover from errors due to incorrect inputs.","lastModifiedDate":"2024-03-12"},{"lineNumber":1147,"author":{"gitId":"NeoHW"},"content":"7. User Documentation: Should offer comprehensive, well-organized user documentation that guides users on how to effectively use PatientSync.","lastModifiedDate":"2024-03-12"},{"lineNumber":1148,"author":{"gitId":"NeoHW"},"content":"8. Developer Documentation: Should provide detailed developer documentation for those looking to enhance, customize, or develop extensions.","lastModifiedDate":"2024-03-12"},{"lineNumber":1149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1150,"author":{"gitId":"NeoHW"},"content":"### 6.5 Glossary","lastModifiedDate":"2024-03-12"},{"lineNumber":1151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1152,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":1153,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":1154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":1156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1157,"author":{"gitId":"NeoHW"},"content":"## 7 Appendix: Instructions for manual testing","lastModifiedDate":"2024-03-12"},{"lineNumber":1158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1159,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":1160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1161,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":1162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":1163,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":1164,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":1165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1166,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":1167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1168,"author":{"gitId":"NeoHW"},"content":"### 7.1 Launch and shutdown","lastModifiedDate":"2024-03-12"},{"lineNumber":1169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1170,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":1171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1172,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":1173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1174,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":1175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1176,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":1177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1178,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":1179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1180,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1181,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":1182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1183,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":1184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1185,"author":{"gitId":"NeoHW"},"content":"### 7.2 Deleting a patient","lastModifiedDate":"2024-03-12"},{"lineNumber":1186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1187,"author":{"gitId":"NeoHW"},"content":"1. Deleting a patient while all patients are being shown","lastModifiedDate":"2024-03-08"},{"lineNumber":1188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1189,"author":{"gitId":"NeoHW"},"content":"   1. Prerequisites: List all patients using the `list` command. Multiple patients in the list.","lastModifiedDate":"2024-03-08"},{"lineNumber":1190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1191,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1192,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":1193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1194,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1195,"author":{"gitId":"NeoHW"},"content":"      Expected: No patient is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2024-03-08"},{"lineNumber":1196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1197,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1198,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":1199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1200,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":1201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"guohuang88":260,"SherisseTJW":113,"ZhiWei1010":147,"choowengyan":119,"NeoHW":249,"-":313}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"# PatientSync User Guide","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"PatientSync is a **desktop app made for nurses to manage patient, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, PatientSync allows you to add and view patients intimate details and also manage patient-specific tasks faster than traditional GUI apps.","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"ZhiWei1010"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"ZhiWei1010"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer. ","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"1. Download the latest `PatientSync.jar` from [here](https://github.com/AY2324S2-CS2103-F09-2/tp/releases).","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar PatientSync.jar`","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"ZhiWei1010"},"content":"command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"ZhiWei1010"},"content":"   * `add id/ 12345 n/ John Doe p/ Alex f/ Curry chicken c/ Stable, Has 2 sons visit him regularly h/ Singing karaoke t/ Diabetes` : Adds a patient named `John Doe` to the PatientSync.","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"ZhiWei1010"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"ZhiWei1010"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/diabetes` or as `n/John Doe`.","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend t/family` etc.","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"* Items with `+`​ after them can be used multiple times, but requires at least one usage.\u003cbr\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"    e.g. `[t/TAG]+​` can be used as `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"  e.g. if the command specifies `n/NAME p/PREFERRED_NAME`, `p/PREFERRED_NAME n/NAME` is also acceptable.","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"NeoHW"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"ZhiWei1010"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"ZhiWei1010"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"NeoHW"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"NeoHW"},"content":"### Adding a patient: `add`","lastModifiedDate":"2024-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"NeoHW"},"content":"Adds a patient to the address book.","lastModifiedDate":"2024-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"choowengyan"},"content":"Format: `add id/PATIENT_HOSPITAL_ID n/NAME p/PREFERRED_NAME f/FOOD_PREFERENCE+ c/FAMILY_CONDITION+ h/HOBBY+ [t/TAG]…​`","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"choowengyan"},"content":"**Tip:** ","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"choowengyan"},"content":"* The `add` command accepts parameters which consists of:","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"choowengyan"},"content":"    *  `patientHospitalId` integer,","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"choowengyan"},"content":"    * `name`, `preferredName` String with only alphabets character,","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"choowengyan"},"content":"    *  `foodPreference`, `familyCondition`, `hobby` String and all kinds of characters, ","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"choowengyan"},"content":"    *  `tag` which are alphanumeric.","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"choowengyan"},"content":"* A patient can have any number of tags (including 0).","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"choowengyan"},"content":"* A patient can have more than 1 `f/FOOD_PREFERENCE`, `c/FAMILY_CONDITION` and `h/HOBBY`.","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"choowengyan"},"content":"* Parameters can be in any order.","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"choowengyan"},"content":"* All command keywords, that is `‘add’`, `‘id/’`, `‘n/’`, `‘p/’`, `‘f/’`, `‘c/’` and `‘h/’` are case-sensitive (to standardise keyword arguments).","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"choowengyan"},"content":"* `add id/ 12345 n/ Alex Yeoh Jia Jun p/ Alex f/ Curry chicken c/ Stable c/Has 2 sons visit him regularly h/ Singing karaoke t/ Diabetes`","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"choowengyan"},"content":"* `add id/ 12347 n/ Mary Jane p/ Mary f/ Korean f/Chinese food c/ Lives with only daughter c/ quarrels regularly with daughter h/ Watching Drama`","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"SherisseTJW"},"content":"* `add id/ 54321 n/ John Doe p/ John f/ Curry chicken c/ Stable h/ Singing karaoke t/ amnesia`","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":121,"author":{"gitId":"SherisseTJW"},"content":"![result for \u0027adding patient John Doe\u0027](images/addPatientResult.png)","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":123,"author":{"gitId":"ZhiWei1010"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":124,"author":{"gitId":"ZhiWei1010"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"NeoHW"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"NeoHW"},"content":"### Listing all patients : `list`","lastModifiedDate":"2024-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"NeoHW"},"content":"Shows a list of all patients in the address book.","lastModifiedDate":"2024-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"SherisseTJW"},"content":"![result for \u0027listing all patients\u0027](images/listResult.png)","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":136,"author":{"gitId":"ZhiWei1010"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"ZhiWei1010"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":138,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":139,"author":{"gitId":"NeoHW"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"NeoHW"},"content":"### Editing a patient : `edit`","lastModifiedDate":"2024-03-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"NeoHW"},"content":"Edits an existing patient in the address book.","lastModifiedDate":"2024-03-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"choowengyan"},"content":"Format: `edit INDEX [id/PATIENT_HOSPITAL_ID] [n/NAME] [p/PREFERRED_NAME] [f/FOOD_PREFERENCE]…​ [c/FAMILY_CONDITION]…​","lastModifiedDate":"2024-04-04"},{"lineNumber":146,"author":{"gitId":"choowengyan"},"content":"[h/HOBBY]…​ [t/TAG]…​`","lastModifiedDate":"2024-04-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"NeoHW"},"content":"* Edits the patient at the specified `INDEX`. The index refers to the index number shown in the displayed patient list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"choowengyan"},"content":"* * The `edit` command accepts parameters which consists of:","lastModifiedDate":"2024-04-04"},{"lineNumber":152,"author":{"gitId":"choowengyan"},"content":"    *  `patientHospitalId` integer,","lastModifiedDate":"2024-04-04"},{"lineNumber":153,"author":{"gitId":"choowengyan"},"content":"    * `name`, `preferredName` String with only alphabets character,","lastModifiedDate":"2024-04-04"},{"lineNumber":154,"author":{"gitId":"choowengyan"},"content":"    *  `foodPreference`, `familyCondition`, `hobby` String and all kinds of characters","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"choowengyan"},"content":"    *  `tag` which are alphanumeric.","lastModifiedDate":"2024-04-04"},{"lineNumber":156,"author":{"gitId":"choowengyan"},"content":"* Editing a patient can have repeated fields for `f/FOOD_PREFERENCE`, `c/FAMILY_CONDITION`, `h/HOBBY` and `t/TAG`.","lastModifiedDate":"2024-04-04"},{"lineNumber":157,"author":{"gitId":"NeoHW"},"content":"* When editing tags, the existing tags of the patient will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2024-03-08"},{"lineNumber":158,"author":{"gitId":"choowengyan"},"content":"* You can remove all the patient’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"choowengyan"},"content":"*  `edit 1 p/Alex f/Fried rice` Edits the preferred name and food preference of the 1st patient to be `Alex` and `Fried rice` respectively.","lastModifiedDate":"2024-03-17"},{"lineNumber":162,"author":{"gitId":"SherisseTJW"},"content":"*  `edit 2 c/Children moved away t/` Edits the family condition of the 2nd patient to be `Children moved away` and clears all existing tags.","lastModifiedDate":"2024-03-31"},{"lineNumber":163,"author":{"gitId":"choowengyan"},"content":"*  `edit 3 h/Watch drama h/Plays piano` Edits the hobby of 3rd patient to be `Watch drama` and `Plays piano`.","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":165,"author":{"gitId":"SherisseTJW"},"content":"![result for \u0027edit patient\u0027](images/editPatientResult.png)","lastModifiedDate":"2024-03-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"ZhiWei1010"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":168,"author":{"gitId":"ZhiWei1010"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":169,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":170,"author":{"gitId":"NeoHW"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"NeoHW"},"content":"### Locating patients by name: `find`","lastModifiedDate":"2024-03-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"guohuang88"},"content":"Finds one or more patients whose name exactly match the given keyword(s).","lastModifiedDate":"2024-03-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2024-03-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"guohuang88"},"content":"* The search is case-insensitive e.g. `alex` will match `Alex`","lastModifiedDate":"2024-03-22"},{"lineNumber":179,"author":{"gitId":"guohuang88"},"content":"* The order of the patient name does not matter. e.g. `Becker Alex` will match `Alex Becker`","lastModifiedDate":"2024-03-22"},{"lineNumber":180,"author":{"gitId":"guohuang88"},"content":"* Only the Patient Name is searched.","lastModifiedDate":"2024-03-22"},{"lineNumber":181,"author":{"gitId":"guohuang88"},"content":"* Only full word(s) will be matched.","lastModifiedDate":"2024-03-22"},{"lineNumber":182,"author":{"gitId":"guohuang88"},"content":"e.g. `Alex` will not match `Alexandra`, `Alex` will match `Alex Becker`","lastModifiedDate":"2024-03-22"},{"lineNumber":183,"author":{"gitId":"guohuang88"},"content":"* Patients matching at least one keyword will be returned. ","lastModifiedDate":"2024-03-22"},{"lineNumber":184,"author":{"gitId":"guohuang88"},"content":"e.g. `Alex Becker` will return `Alex Keller` and `Becker Anderson`","lastModifiedDate":"2024-03-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"guohuang88"},"content":"* `find Alex` returns `alex` and `Alex becker`","lastModifiedDate":"2024-04-04"},{"lineNumber":188,"author":{"gitId":"guohuang88"},"content":"* `find alex becker` returns `alex`, `Alex Becker` and `Becker Li`","lastModifiedDate":"2024-04-04"},{"lineNumber":189,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":190,"author":{"gitId":"ZhiWei1010"},"content":"![result for \u0027find patients whose name is alex ali\u0027](images/findPatientAlexAliResult.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"ZhiWei1010"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":193,"author":{"gitId":"ZhiWei1010"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":195,"author":{"gitId":"NeoHW"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-18"},{"lineNumber":196,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":197,"author":{"gitId":"NeoHW"},"content":"### Deleting a patient : `delete`","lastModifiedDate":"2024-03-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"NeoHW"},"content":"Deletes the specified patient from the address book.","lastModifiedDate":"2024-03-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"NeoHW"},"content":"* Deletes the patient at the specified `INDEX`.","lastModifiedDate":"2024-03-08"},{"lineNumber":204,"author":{"gitId":"NeoHW"},"content":"* The index refers to the index number shown in the displayed patient list.","lastModifiedDate":"2024-03-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"NeoHW"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st patient in the results of the `find` command.","lastModifiedDate":"2024-03-08"},{"lineNumber":209,"author":{"gitId":"SherisseTJW"},"content":"* `list` followed by `delete 2` deletes the 2nd patient in the address book.","lastModifiedDate":"2024-03-31"},{"lineNumber":210,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":211,"author":{"gitId":"ZhiWei1010"},"content":"![result for \u0027delete 2\u0027](images/deletePatientResult.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"ZhiWei1010"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":214,"author":{"gitId":"ZhiWei1010"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":215,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":216,"author":{"gitId":"NeoHW"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-18"},{"lineNumber":217,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":218,"author":{"gitId":"NeoHW"},"content":"### Adding Tags to a Patient : `addt`","lastModifiedDate":"2024-03-13"},{"lineNumber":219,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":220,"author":{"gitId":"NeoHW"},"content":"This command allows for the incremental addition of one or more tags to a patient\u0027s tag list. It offers a user-friendly alternative to the `edit` command, eliminating the need to retype all existing tags along with the new ones to be added.","lastModifiedDate":"2024-04-08"},{"lineNumber":221,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":222,"author":{"gitId":"NeoHW"},"content":"Format: `addt INDEX [t/TAG]+`","lastModifiedDate":"2024-03-13"},{"lineNumber":223,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":224,"author":{"gitId":"NeoHW"},"content":"* Adds one or more tags to a patient identified by the index number used in the last patient listing.","lastModifiedDate":"2024-03-22"},{"lineNumber":225,"author":{"gitId":"NeoHW"},"content":"* At least one tag must be provided.","lastModifiedDate":"2024-03-12"},{"lineNumber":226,"author":{"gitId":"NeoHW"},"content":"* Tags can only contain alphanumeric characters or spaces.","lastModifiedDate":"2024-03-22"},{"lineNumber":227,"author":{"gitId":"NeoHW"},"content":"* Tags cannot be blank","lastModifiedDate":"2024-03-22"},{"lineNumber":228,"author":{"gitId":"NeoHW"},"content":"* Tags must be less than 50 characters long.","lastModifiedDate":"2024-03-23"},{"lineNumber":229,"author":{"gitId":"NeoHW"},"content":"* Tags are **case-insensitive**.","lastModifiedDate":"2024-03-22"},{"lineNumber":230,"author":{"gitId":"NeoHW"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-18"},{"lineNumber":231,"author":{"gitId":"NeoHW"},"content":"* When adding tags, if a tag is repeated in the command, it will be added as a single tag.","lastModifiedDate":"2024-03-12"},{"lineNumber":232,"author":{"gitId":"NeoHW"},"content":"  E.g. `t/critical t/critical` will be added as a single `critical` tag.","lastModifiedDate":"2024-04-08"},{"lineNumber":233,"author":{"gitId":"NeoHW"},"content":"* If the patient has an existing tag that is provided in the command, it will be logged and shown to the user.","lastModifiedDate":"2024-03-22"},{"lineNumber":234,"author":{"gitId":"NeoHW"},"content":"* An invalid patient index error message will be shown when the patient index meets the above requirements, but is not found in the patient list.","lastModifiedDate":"2024-04-08"},{"lineNumber":235,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":236,"author":{"gitId":"NeoHW"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":237,"author":{"gitId":"NeoHW"},"content":"    \u003cb\u003eNote:\u003c/b\u003e The addition of tags is cumulative. New tags will be added to the existing set of tags for the patient, preserving the previously assigned tags.","lastModifiedDate":"2024-03-12"},{"lineNumber":238,"author":{"gitId":"NeoHW"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":239,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":240,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":241,"author":{"gitId":"NeoHW"},"content":"Examples:","lastModifiedDate":"2024-03-12"},{"lineNumber":242,"author":{"gitId":"NeoHW"},"content":"* `addt 1 t/critical`","lastModifiedDate":"2024-03-18"},{"lineNumber":243,"author":{"gitId":"NeoHW"},"content":"* `addt 2 t/depression t/diabetes`","lastModifiedDate":"2024-04-08"},{"lineNumber":244,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":245,"author":{"gitId":"SherisseTJW"},"content":"![result for \u0027add tags\u0027](images/addTagsResult.png)","lastModifiedDate":"2024-03-31"},{"lineNumber":246,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":247,"author":{"gitId":"ZhiWei1010"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":248,"author":{"gitId":"ZhiWei1010"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":249,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":250,"author":{"gitId":"NeoHW"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-18"},{"lineNumber":251,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":252,"author":{"gitId":"NeoHW"},"content":"### Deleting Tags from a Patient : `deletet`","lastModifiedDate":"2024-03-18"},{"lineNumber":253,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":254,"author":{"gitId":"NeoHW"},"content":"Removes one or more tags from a patient\u0027s tag list, providing an intuitive way to manage tags without the necessity of retyping all existing tags that are to be retained, as mandated by the `edit` command.","lastModifiedDate":"2024-04-08"},{"lineNumber":255,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":256,"author":{"gitId":"NeoHW"},"content":"Format: `deletet INDEX [t/TAG]+`","lastModifiedDate":"2024-03-18"},{"lineNumber":257,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":258,"author":{"gitId":"NeoHW"},"content":"* Deletes one or more tags from a patient identified by the index number used in the last patient listing.","lastModifiedDate":"2024-03-18"},{"lineNumber":259,"author":{"gitId":"NeoHW"},"content":"* At least one tag must be provided.","lastModifiedDate":"2024-03-18"},{"lineNumber":260,"author":{"gitId":"NeoHW"},"content":"* Tags can only contain alphanumeric characters or spaces.","lastModifiedDate":"2024-03-22"},{"lineNumber":261,"author":{"gitId":"NeoHW"},"content":"* Tags cannot be empty or blank","lastModifiedDate":"2024-03-22"},{"lineNumber":262,"author":{"gitId":"NeoHW"},"content":"* Tags must be less than 50 characters long.","lastModifiedDate":"2024-03-23"},{"lineNumber":263,"author":{"gitId":"NeoHW"},"content":"* Tags are **case-insensitive** when matching tags","lastModifiedDate":"2024-03-22"},{"lineNumber":264,"author":{"gitId":"NeoHW"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-18"},{"lineNumber":265,"author":{"gitId":"NeoHW"},"content":"* Tags provided should match with the existing tags of the patient.","lastModifiedDate":"2024-03-22"},{"lineNumber":266,"author":{"gitId":"NeoHW"},"content":"* When deleting tags, if tags are repeated in the command, it will be treated as a single tag to delete. E.g. `t/friend t/friend` will be considered as a single `friend` tag for deletion.","lastModifiedDate":"2024-03-22"},{"lineNumber":267,"author":{"gitId":"NeoHW"},"content":"* If the patient does not have a tag provided in the command, it will be logged and shown to the user.","lastModifiedDate":"2024-03-22"},{"lineNumber":268,"author":{"gitId":"NeoHW"},"content":"* An invalid patient index error message will be shown when the patient index meets the above requirements, but is not found in the patient list.","lastModifiedDate":"2024-04-08"},{"lineNumber":269,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":270,"author":{"gitId":"NeoHW"},"content":"Examples:","lastModifiedDate":"2024-03-18"},{"lineNumber":271,"author":{"gitId":"NeoHW"},"content":"* `deletet 4 t/diabetes t/skin irritation`","lastModifiedDate":"2024-04-08"},{"lineNumber":272,"author":{"gitId":"NeoHW"},"content":"* `deletet 1 t/diabetes`","lastModifiedDate":"2024-04-08"},{"lineNumber":273,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":274,"author":{"gitId":"SherisseTJW"},"content":"![result for \u0027delete tags\u0027](images/deleteTagsResult.png)","lastModifiedDate":"2024-03-31"},{"lineNumber":275,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":276,"author":{"gitId":"ZhiWei1010"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":277,"author":{"gitId":"ZhiWei1010"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":278,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":279,"author":{"gitId":"NeoHW"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-14"},{"lineNumber":280,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":281,"author":{"gitId":"guohuang88"},"content":"### Locating patients by tag: `findt`","lastModifiedDate":"2024-03-24"},{"lineNumber":282,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":283,"author":{"gitId":"guohuang88"},"content":"Finds one or more patients whose tag exactly match the given keyword(s).","lastModifiedDate":"2024-03-24"},{"lineNumber":284,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":285,"author":{"gitId":"guohuang88"},"content":"Format: `findt KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2024-03-24"},{"lineNumber":286,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":287,"author":{"gitId":"guohuang88"},"content":"* The search is case-insensitive e.g. `depression` will match `Depression`","lastModifiedDate":"2024-03-24"},{"lineNumber":288,"author":{"gitId":"guohuang88"},"content":"* The order of the patient tag does not matter. e.g. `depression diabetes` will match `diabetes depression`","lastModifiedDate":"2024-03-24"},{"lineNumber":289,"author":{"gitId":"guohuang88"},"content":"* Only the tag is searched.","lastModifiedDate":"2024-03-24"},{"lineNumber":290,"author":{"gitId":"guohuang88"},"content":"* Only full word(s) will be matched.","lastModifiedDate":"2024-03-24"},{"lineNumber":291,"author":{"gitId":"guohuang88"},"content":"  e.g. `depress` will not match `depression`, `depress` will match `depress diabetes`","lastModifiedDate":"2024-03-24"},{"lineNumber":292,"author":{"gitId":"guohuang88"},"content":"* Patients matching at least one keyword will be returned.","lastModifiedDate":"2024-03-24"},{"lineNumber":293,"author":{"gitId":"guohuang88"},"content":"  e.g. `depression diabetes` will return `depression wheelchair` and `diabetes tumour`","lastModifiedDate":"2024-03-24"},{"lineNumber":294,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":295,"author":{"gitId":"guohuang88"},"content":"Examples:","lastModifiedDate":"2024-03-24"},{"lineNumber":296,"author":{"gitId":"guohuang88"},"content":"* `findt depression` returns `depression` and `depression diabetes`","lastModifiedDate":"2024-04-04"},{"lineNumber":297,"author":{"gitId":"guohuang88"},"content":"* `findt depression diabetes` returns `depression`, `depression diabetes` and `diabetes wheelchair`","lastModifiedDate":"2024-04-04"},{"lineNumber":298,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":299,"author":{"gitId":"SherisseTJW"},"content":"![result for \u0027find tags\u0027](images/findTagsResult.png)","lastModifiedDate":"2024-03-31"},{"lineNumber":300,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":301,"author":{"gitId":"ZhiWei1010"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":302,"author":{"gitId":"ZhiWei1010"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":303,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":304,"author":{"gitId":"guohuang88"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-24"},{"lineNumber":305,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":306,"author":{"gitId":"guohuang88"},"content":"### Adding an Event to a Patient : `adde`","lastModifiedDate":"2024-03-18"},{"lineNumber":307,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":308,"author":{"gitId":"guohuang88"},"content":"Adds an Event to a patient in the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":309,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":310,"author":{"gitId":"SherisseTJW"},"content":"Format: `adde PATIENT_INDEX n/NAME_OF_EVENT d/DATE_OR_DATETIME_OF_EVENT`","lastModifiedDate":"2024-04-08"},{"lineNumber":311,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":312,"author":{"gitId":"guohuang88"},"content":"* Adds an Event with a Name, as well as the Date and optionally, the Time Period for which the Event is happening on that date to a patient identified by the index number used in the last patient listing.","lastModifiedDate":"2024-03-18"},{"lineNumber":313,"author":{"gitId":"SherisseTJW"},"content":"* `PATIENT_INDEX` **must be a positive, non-zero integer**, i.e., `1, 2, 3`","lastModifiedDate":"2024-04-08"},{"lineNumber":314,"author":{"gitId":"SherisseTJW"},"content":"* Neither `NAME_OF_EVENT` or `DATE_OR_DATETIME_OF_EVENT` can be empty (after trimming whitespaces)","lastModifiedDate":"2024-04-08"},{"lineNumber":315,"author":{"gitId":"SherisseTJW"},"content":"* `NAME_OF_EVENT` must be alphanumerical","lastModifiedDate":"2024-04-08"},{"lineNumber":316,"author":{"gitId":"SherisseTJW"},"content":"* The format of `DATE_OR_DATETIME_OF_EVENT` must be: `DD-MM-YYYY`","lastModifiedDate":"2024-04-08"},{"lineNumber":317,"author":{"gitId":"SherisseTJW"},"content":"* If there is a Time Period, the format of `DATE_OR_DATETIME_OF_EVENT` must be: `DD-MM-YYYY, HH:mm - HH:mm`, where the End Time must be **after or equal** to the Start Time","lastModifiedDate":"2024-04-08"},{"lineNumber":318,"author":{"gitId":"SherisseTJW"},"content":"* The `DATE_OR_DATETIME_OF_EVENT` can occur in the past as well; However, a warning message will be shown","lastModifiedDate":"2024-04-08"},{"lineNumber":319,"author":{"gitId":"SherisseTJW"},"content":"* The `DATE_OR_DATETIME_OF_EVENT` can overlap with that of another Event of the same Patient.","lastModifiedDate":"2024-04-08"},{"lineNumber":320,"author":{"gitId":"SherisseTJW"},"content":"* Note that the `DATE_OR_DATETIME_OF_EVENT` is based on the Local Date / Local DateTime of the User\u0027s Device","lastModifiedDate":"2024-04-08"},{"lineNumber":321,"author":{"gitId":"SherisseTJW"},"content":"* Note that, if multiple prefix and arguments are provided, the last is taken as the \u0027truth\u0027, i.e., if the command provided is `adde 1 n/first event n/another event d/20-01-2023 d/23-12-2024`, the Event added will be the same as if `adde 1 n/another event d/23-12-2024` was the command.","lastModifiedDate":"2024-04-08"},{"lineNumber":322,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":323,"author":{"gitId":"SherisseTJW"},"content":"Examples:","lastModifiedDate":"2024-03-13"},{"lineNumber":324,"author":{"gitId":"SherisseTJW"},"content":"* `adde 3 n/Birthday d/20-01-2022`","lastModifiedDate":"2024-04-08"},{"lineNumber":325,"author":{"gitId":"SherisseTJW"},"content":"* `adde 1 n/Family Visit d/30-09-2024, 12:00 - 15:00`","lastModifiedDate":"2024-04-08"},{"lineNumber":326,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":327,"author":{"gitId":"SherisseTJW"},"content":"![result for \u0027add event\u0027](images/addEventResult.png)","lastModifiedDate":"2024-03-31"},{"lineNumber":328,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":329,"author":{"gitId":"ZhiWei1010"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":330,"author":{"gitId":"ZhiWei1010"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":331,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":332,"author":{"gitId":"NeoHW"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-18"},{"lineNumber":333,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":334,"author":{"gitId":"guohuang88"},"content":"### Deleting an Event from a Patient : `deletee`","lastModifiedDate":"2024-03-18"},{"lineNumber":335,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":336,"author":{"gitId":"guohuang88"},"content":"Deletes an Event from a patient in the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":337,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":338,"author":{"gitId":"guohuang88"},"content":"Format `deletee PATIENT_INDEX e/EVENT_INDEX`","lastModifiedDate":"2024-04-04"},{"lineNumber":339,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":340,"author":{"gitId":"guohuang88"},"content":"* Deletes an Event from a specified Patient using `PATIENT_INDEX` and `EVENT_INDEX`.","lastModifiedDate":"2024-03-18"},{"lineNumber":341,"author":{"gitId":"ZhiWei1010"},"content":"* `PATIENT_INDEX` is the index of the patient shown in the UI after using `list` or `find` command.","lastModifiedDate":"2024-03-15"},{"lineNumber":342,"author":{"gitId":"ZhiWei1010"},"content":"* `EVENT_INDEX` is the index of the event that is saved under a Patient\u0027s data.","lastModifiedDate":"2024-03-15"},{"lineNumber":343,"author":{"gitId":"ZhiWei1010"},"content":"* Both `PATIENT_INDEX` and `EVENT_INDEX` **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2024-03-15"},{"lineNumber":344,"author":{"gitId":"ZhiWei1010"},"content":"* Both `PATIENT_INDEX` and `EVENT_INDEX` **must be of a valid index** (i.e. within the range of total number of","lastModifiedDate":"2024-03-15"},{"lineNumber":345,"author":{"gitId":"ZhiWei1010"},"content":"Patients/Events)","lastModifiedDate":"2024-03-15"},{"lineNumber":346,"author":{"gitId":"ZhiWei1010"},"content":"* Both `PATIENT_INDEX` and `EVENT_INDEX` are compulsory fields (Neither can be **EMPTY**)","lastModifiedDate":"2024-03-15"},{"lineNumber":347,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":348,"author":{"gitId":"ZhiWei1010"},"content":"Examples:","lastModifiedDate":"2024-03-15"},{"lineNumber":349,"author":{"gitId":"SherisseTJW"},"content":"* `deletee 2 e/4`","lastModifiedDate":"2024-03-31"},{"lineNumber":350,"author":{"gitId":"ZhiWei1010"},"content":"* `deletee 1 e/1`","lastModifiedDate":"2024-03-15"},{"lineNumber":351,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":352,"author":{"gitId":"SherisseTJW"},"content":"![result for \u0027delete event\u0027](images/deleteEventResult.png)","lastModifiedDate":"2024-03-31"},{"lineNumber":353,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":354,"author":{"gitId":"ZhiWei1010"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":355,"author":{"gitId":"ZhiWei1010"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":356,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":357,"author":{"gitId":"NeoHW"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-18"},{"lineNumber":358,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":359,"author":{"gitId":"guohuang88"},"content":"### Editing an Event for a Patient: `edite`","lastModifiedDate":"2024-03-18"},{"lineNumber":360,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":361,"author":{"gitId":"guohuang88"},"content":"Edits an Event for a Patient in the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":362,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":363,"author":{"gitId":"SherisseTJW"},"content":"Format `edite PATIENT_INDEX e/EVENT_INDEX n/NAME_OF_EVENT d/DATE_OR_DATETIME_OF_EVENT`","lastModifiedDate":"2024-04-08"},{"lineNumber":364,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":365,"author":{"gitId":"SherisseTJW"},"content":"* Edits an Event for a Patient using `PATIENT_INDEX`, `EVENT_INDEX`, `NAME_OF_EVENT` and","lastModifiedDate":"2024-04-08"},{"lineNumber":366,"author":{"gitId":"SherisseTJW"},"content":"  `DATE_OR_DATETIME_OF_EVENT`.","lastModifiedDate":"2024-04-08"},{"lineNumber":367,"author":{"gitId":"SherisseTJW"},"content":"* `PATIENT_INDEX`, `EVENT_INDEX`, `NAME_OF_EVENT` and `DATE_OR_DATETIME_OF_EVENT` ","lastModifiedDate":"2024-04-08"},{"lineNumber":368,"author":{"gitId":"guohuang88"},"content":"  are compulsory parameters. ","lastModifiedDate":"2024-03-16"},{"lineNumber":369,"author":{"gitId":"SherisseTJW"},"content":"* Note that, it is okay to exclude `TIME` for `DATE_OR_DATETIME_OF_EVENT`","lastModifiedDate":"2024-04-08"},{"lineNumber":370,"author":{"gitId":"SherisseTJW"},"content":"* The format of `DATE_OF_EVENT` must be: DD-MM-YYYY.","lastModifiedDate":"2024-04-08"},{"lineNumber":371,"author":{"gitId":"SherisseTJW"},"content":"* The format of `DATETIME_OF_EVENT` must be: DD-MM-YYYY, HH:mm - HH:mm.","lastModifiedDate":"2024-04-08"},{"lineNumber":372,"author":{"gitId":"SherisseTJW"},"content":"* The Date / Datetime of the Event can occur in the past as well; However, a warning message will be shown","lastModifiedDate":"2024-04-04"},{"lineNumber":373,"author":{"gitId":"guohuang88"},"content":"* Both `PATIENT_INDEX` and `EVENT_INDEX` **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2024-03-16"},{"lineNumber":374,"author":{"gitId":"guohuang88"},"content":"* Both `PATIENT_INDEX` and `EVENT_INDEX` **must be of a valid index** (i.e. within the range of total number of","lastModifiedDate":"2024-03-16"},{"lineNumber":375,"author":{"gitId":"guohuang88"},"content":"  Patients/Events).","lastModifiedDate":"2024-03-16"},{"lineNumber":376,"author":{"gitId":"guohuang88"},"content":"* Editing an event to an existing event will not change the patient list as there should not have any duplicate","lastModifiedDate":"2024-03-31"},{"lineNumber":377,"author":{"gitId":"guohuang88"},"content":"  events.","lastModifiedDate":"2024-03-31"},{"lineNumber":378,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":379,"author":{"gitId":"guohuang88"},"content":"Examples:","lastModifiedDate":"2024-03-16"},{"lineNumber":380,"author":{"gitId":"guohuang88"},"content":"* `edite 1 e/1 n/Papa Birthday d/20-01-2023`","lastModifiedDate":"2024-03-16"},{"lineNumber":381,"author":{"gitId":"guohuang88"},"content":"* `edite 2 e/1 n/Mama Birthday d/21-02-2024`","lastModifiedDate":"2024-03-16"},{"lineNumber":382,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":383,"author":{"gitId":"SherisseTJW"},"content":"![result for \u0027edit event\u0027](images/editEventResult.png)","lastModifiedDate":"2024-03-31"},{"lineNumber":384,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":385,"author":{"gitId":"ZhiWei1010"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":386,"author":{"gitId":"ZhiWei1010"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":387,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":388,"author":{"gitId":"ZhiWei1010"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-03"},{"lineNumber":389,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":390,"author":{"gitId":"ZhiWei1010"},"content":"### Sorting the patient list : `sort`","lastModifiedDate":"2024-04-03"},{"lineNumber":391,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":392,"author":{"gitId":"ZhiWei1010"},"content":"Sorts the patient list in the address book by specified attribute.","lastModifiedDate":"2024-04-03"},{"lineNumber":393,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":394,"author":{"gitId":"ZhiWei1010"},"content":"Format: `sort [ATTRIBUTE]`","lastModifiedDate":"2024-04-03"},{"lineNumber":395,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":396,"author":{"gitId":"ZhiWei1010"},"content":"* Sorts all the added patients in the patient list by specified `ATTRIBUTE`.","lastModifiedDate":"2024-04-03"},{"lineNumber":397,"author":{"gitId":"ZhiWei1010"},"content":"* Supported `ATTRIBUTE`s include `n` for patient name and `p` for patient\u0027s preferred name.","lastModifiedDate":"2024-04-03"},{"lineNumber":398,"author":{"gitId":"ZhiWei1010"},"content":"* There can only be one or zero `ATTRIBUTE`.","lastModifiedDate":"2024-04-03"},{"lineNumber":399,"author":{"gitId":"ZhiWei1010"},"content":"* If no `ATTRIBUTE` is specified, default sorting order would be by patient\u0027s name.","lastModifiedDate":"2024-04-03"},{"lineNumber":400,"author":{"gitId":"ZhiWei1010"},"content":"* `ATTRIBUTES` are **case-insensitive**.","lastModifiedDate":"2024-04-03"},{"lineNumber":401,"author":{"gitId":"ZhiWei1010"},"content":"* The command will not be recognised if invalid `ATTRIBUTE`(s) are entered. e.g. `sort l` or `sort 123` are invalid","lastModifiedDate":"2024-04-03"},{"lineNumber":402,"author":{"gitId":"ZhiWei1010"},"content":"sort commands.","lastModifiedDate":"2024-04-03"},{"lineNumber":403,"author":{"gitId":"ZhiWei1010"},"content":"* If there are multiple patients with the same specified `ATTRIBUTE`, the sort will preserve the original order ","lastModifiedDate":"2024-04-03"},{"lineNumber":404,"author":{"gitId":"ZhiWei1010"},"content":"of the affected patients list.","lastModifiedDate":"2024-04-03"},{"lineNumber":405,"author":{"gitId":"ZhiWei1010"},"content":"    e.g. if the original list contains two patients: patient one name: `alex`, patient two name: `alex`, after sorting,","lastModifiedDate":"2024-04-03"},{"lineNumber":406,"author":{"gitId":"ZhiWei1010"},"content":"    patient one will come before patient two.","lastModifiedDate":"2024-04-03"},{"lineNumber":407,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":408,"author":{"gitId":"ZhiWei1010"},"content":"Examples:","lastModifiedDate":"2024-04-03"},{"lineNumber":409,"author":{"gitId":"ZhiWei1010"},"content":"* `sort`","lastModifiedDate":"2024-04-03"},{"lineNumber":410,"author":{"gitId":"ZhiWei1010"},"content":"* `sort n`","lastModifiedDate":"2024-04-03"},{"lineNumber":411,"author":{"gitId":"ZhiWei1010"},"content":"* `sort p`","lastModifiedDate":"2024-04-03"},{"lineNumber":412,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":413,"author":{"gitId":"ZhiWei1010"},"content":"![result for \u0027sort\u0027](images/sortResult.png)","lastModifiedDate":"2024-04-03"},{"lineNumber":414,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":415,"author":{"gitId":"ZhiWei1010"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":416,"author":{"gitId":"ZhiWei1010"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":417,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":418,"author":{"gitId":"ZhiWei1010"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-03"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":420,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"SherisseTJW"},"content":"![result for \u0027clear\u0027](images/clearResult.png)","lastModifiedDate":"2024-03-31"},{"lineNumber":427,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":428,"author":{"gitId":"ZhiWei1010"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":429,"author":{"gitId":"ZhiWei1010"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":430,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":431,"author":{"gitId":"NeoHW"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-18"},{"lineNumber":432,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":433,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"NeoHW"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-18"},{"lineNumber":440,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":441,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"ZhiWei1010"},"content":"PatientSync data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-03-21"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"NeoHW"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-18"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":447,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":449,"author":{"gitId":"ZhiWei1010"},"content":"PatientSync data are saved automatically as a JSON file `[JAR file location]/data/patientsync.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-03-21"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":451,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":453,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":454,"author":{"gitId":"ZhiWei1010"},"content":"If your changes to the data file makes its format invalid, PatientSync will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":455,"author":{"gitId":"ZhiWei1010"},"content":"Furthermore, certain edits can cause PatientSync to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-03-21"},{"lineNumber":456,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":458,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"ZhiWei1010"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous PatientSync home folder.","lastModifiedDate":"2024-03-21"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":469,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":471,"author":{"gitId":"ZhiWei1010"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":472,"author":{"gitId":"ZhiWei1010"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":473,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":474,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":476,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-12"},{"lineNumber":480,"author":{"gitId":"choowengyan"},"content":"**Add**    | `add id/PATIENT_HOSPITAL_ID n/NAME p/PREFERRED_NAME f/FOOD_PREFERENCE+ c/FAMILY_CONDITION+ h/HOBBY+ [t/TAG]…​` \u003cbr\u003e e.g. `add id/ 12345 n/ Alex Yeoh Jia Jun p/ Alex f/ Curry chicken c/ Stable, Has 2 sons visit him regularly h/ Singing karaoke t/ Diabetes`","lastModifiedDate":"2024-04-04"},{"lineNumber":481,"author":{"gitId":"-"},"content":"**Clear**  | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"NeoHW"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g. `delete 3`","lastModifiedDate":"2024-03-14"},{"lineNumber":483,"author":{"gitId":"choowengyan"},"content":"**Edit**   | `edit INDEX [id/PATIENT_HOSPITAL_ID] [n/NAME] [p/PREFERRED_NAME] [f/FOOD_PREFERENCE]…​ [c/FAMILY_CONDITION]…​ [h/HOBBY]…​ [t/TAG]…​`\u003cbr\u003e e.g.`edit 2 p/James t/HighCholesterol`","lastModifiedDate":"2024-04-04"},{"lineNumber":484,"author":{"gitId":"NeoHW"},"content":"**Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g. `find James Jake`","lastModifiedDate":"2024-03-14"},{"lineNumber":485,"author":{"gitId":"NeoHW"},"content":"**Add Tags**   | `addt INDEX [t/TAG]+`\u003cbr\u003e e.g. `addt 1 t/critical`","lastModifiedDate":"2024-03-18"},{"lineNumber":486,"author":{"gitId":"NeoHW"},"content":"**Delete Tags**   | `deletet INDEX [t/TAG]+`\u003cbr\u003e e.g. `deletet 1 t/critical`","lastModifiedDate":"2024-03-18"},{"lineNumber":487,"author":{"gitId":"guohuang88"},"content":"**Find Tags**   | `findt KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g. `findt depression diabetes`","lastModifiedDate":"2024-03-24"},{"lineNumber":488,"author":{"gitId":"guohuang88"},"content":"**Add Event** | `adde INDEX n/NAME_OF_EVENT_ON_THAT_DATE d/DATE_OR_DATETIME_OF_EVENT_ON_THAT_DATE` \u003cbr\u003e e.g. `adde 1 n/Birthday d/20-01-2022`","lastModifiedDate":"2024-04-04"},{"lineNumber":489,"author":{"gitId":"guohuang88"},"content":"**Delete Event** | `deletee PATIENT_INDEX e/EVENT_INDEX` \u003cbr\u003e e.g. `deletee 1 e/1`","lastModifiedDate":"2024-04-04"},{"lineNumber":490,"author":{"gitId":"guohuang88"},"content":"**Edit Event** | `edite PATIENT_INDEX e/EVENT_INDEX n/NAME_OF_EVENT_ON_THAT_DATE d/DATE_OR_DATETIME_OF_EVENT_ON_THAT_DATE` \u003cbr\u003e e.g. `edite 1 e/1 n/Papa Birthday d/20-01-2023`","lastModifiedDate":"2024-04-04"},{"lineNumber":491,"author":{"gitId":"ZhiWei1010"},"content":"**Sort** | `sort [ATTRIBUTE]` \u003cbr\u003e e.g. `sort p`","lastModifiedDate":"2024-04-03"},{"lineNumber":492,"author":{"gitId":"-"},"content":"**List**   | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"**Help**   | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"guohuang88":56,"SherisseTJW":50,"ZhiWei1010":101,"choowengyan":30,"NeoHW":100,"-":156}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003ePatientSync\u003c/a\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2324S2-CS2103-F09-2/tp\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"NeoHW":1,"-":66}},{"path":"docs/_site/stylesheets/main.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"mark {","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"  background-color: #ff0;","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"  border-radius: 5px;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"  padding-top: 0;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"  padding-bottom: 0;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":".indented {","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"  padding-left: 20px;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":".theme-card img {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"  width: 100%;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"/* Scrollbar */","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":".slim-scroll::-webkit-scrollbar {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"  width: 5px;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":".slim-scroll::-webkit-scrollbar-thumb {","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"  background: #808080;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"  border-radius: 20px;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":".slim-scroll::-webkit-scrollbar-track {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"  background: transparent;","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"  border-radius: 20px;","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":".slim-scroll-blue::-webkit-scrollbar {","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"  width: 5px;","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":".slim-scroll-blue::-webkit-scrollbar-thumb {","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"  background: #00b0ef;","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"  border-radius: 20px;","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":".slim-scroll-blue::-webkit-scrollbar-track {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"  background: transparent;","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"  border-radius: 20px;","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"/* Layout containers */","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"#flex-body {","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"  display: flex;","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"  flex: 1;","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"  align-items: start;","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"#content-wrapper {","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"  flex: 1;","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"  margin: 0 auto;","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"  min-width: 0;","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"  max-width: 1000px;","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"  overflow-x: auto;","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"  padding: 0.8rem 20px 0 20px;","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"  transition: 0.4s;","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"  -webkit-transition: 0.4s;","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"#site-nav,","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"#page-nav {","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"  display: flex;","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"  flex-direction: column;","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"  position: sticky;","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"  top: var(--sticky-header-height);","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"  flex: 0 0 auto;","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"  max-width: 300px;","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"  max-height: calc(100vh - var(--sticky-header-height));","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"  width: 300px;","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"#site-nav {","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"  border-right: 1px solid lightgrey;","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"  padding-bottom: 20px;","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"NeoHW"},"content":"  z-index: 999;","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"NeoHW"},"content":".site-nav-top {","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"NeoHW"},"content":"  margin: 0.8rem 0;","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"NeoHW"},"content":"  padding: 0 12px 12px 12px;","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"NeoHW"},"content":".nav-component {","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"NeoHW"},"content":"  overflow-y: auto;","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"NeoHW"},"content":"#page-nav {","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"NeoHW"},"content":"  border-left: 1px solid lightgrey;","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"NeoHW"},"content":"@media screen and (max-width: 1299.98px) {","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"NeoHW"},"content":"  #page-nav {","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"NeoHW"},"content":"    display: none;","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"NeoHW"},"content":"  }","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"NeoHW"},"content":"/* Bootstrap medium(md) responsive breakpoint */","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"NeoHW"},"content":"@media screen and (max-width: 991.98px) {","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"NeoHW"},"content":"  #site-nav {","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"NeoHW"},"content":"    display: none;","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"NeoHW"},"content":"  }","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"NeoHW"},"content":"/* Bootstrap small(sm) responsive breakpoint */","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"NeoHW"},"content":"@media (max-width: 767.98px) {","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"NeoHW"},"content":"  .indented {","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"NeoHW"},"content":"    padding-left: 10px;","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"NeoHW"},"content":"  }","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"NeoHW"},"content":"  #content-wrapper {","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"NeoHW"},"content":"    padding: 0 10px;","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"NeoHW"},"content":"  }","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"NeoHW"},"content":"/* Bootstrap extra small(xs) responsive breakpoint */","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"NeoHW"},"content":"@media screen and (max-width: 575.98px) {","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"NeoHW"},"content":"  #site-nav {","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"NeoHW"},"content":"    display: none;","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"NeoHW"},"content":"  }","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"NeoHW"},"content":"/* Hide site navigation when printing */","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"NeoHW"},"content":"@media print {","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"NeoHW"},"content":"  #site-nav {","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"NeoHW"},"content":"    display: none;","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"NeoHW"},"content":"  }","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"NeoHW"},"content":"  #page-nav {","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"NeoHW"},"content":"    display: none;","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"NeoHW"},"content":"  }","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"NeoHW"},"content":"  /* Reduce font size when printing */","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"NeoHW"},"content":"  h1 {","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"NeoHW"},"content":"      font-size: 1.2rem !important;","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"NeoHW"},"content":"  }","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"NeoHW"},"content":"  h2 {","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"NeoHW"},"content":"      font-size: 1.0rem !important;","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"NeoHW"},"content":"  }","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"NeoHW"},"content":"  h3 {","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"NeoHW"},"content":"      font-size: 0.9rem !important;","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"NeoHW"},"content":"  }","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"NeoHW"},"content":"  h4 {","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"NeoHW"},"content":"      font-size: 0.8rem !important;","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"NeoHW"},"content":"  }","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"NeoHW"},"content":"  h5 {","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"NeoHW"},"content":"      font-size: 0.7rem !important;","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"NeoHW"},"content":"  }","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"NeoHW"},"content":"  body {","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"NeoHW"},"content":"      font-size: 0.65rem !important;","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"NeoHW"},"content":"  }","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"NeoHW"},"content":"  .btn {","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"NeoHW"},"content":"      font-size: 0.65rem !important;","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"NeoHW"},"content":"  }","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"NeoHW"},"content":"  img {","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"NeoHW"},"content":"      zoom: 0.8;  /* might not work on some browsers */","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"NeoHW"},"content":"  }","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"NeoHW"},"content":"h2,","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"NeoHW"},"content":"h3,","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"NeoHW"},"content":"h4,","lastModifiedDate":"2024-03-18"},{"lineNumber":167,"author":{"gitId":"NeoHW"},"content":"h5,","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"NeoHW"},"content":"h6 {","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"NeoHW"},"content":"  color: #e46c0a;","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"NeoHW":170}},{"path":"docs/diagrams/AddActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"@startuml","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"start","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":":User wants to add a patient;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":":User runs the \"add\" command with id/PATIENT_HOSPITAL_ID n/NAME p/PREFERRED_NAME f/FOOD_PREFERENCE c/FAMILY_CONDITION h/HOBBY;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"if () then ([Required prefixes present])","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"  if () then ([Valid command format])","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"    :PatientSync checks if the input format for the respective prefix is valid;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"    if () then ([Valid input format])","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"      :PatientSync creates Patient object;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"      if () then ([Valid Patient Hospital ID])","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"        :PatientSync adds patient to model;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"        :PatientSync generates success message;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"        :PatientSync returns success message to output;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"      else ([else])","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"        :PatientSync throws command exception;","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"        :PatientSync generates error message;","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"        :PatientSync returns error message;","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"      endif","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"    else ([else])","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"      :PatientSync throws parse exception;","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"      :PatientSync generates error message;","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"      :PatientSync returns error message;","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"    endif","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"  else ([else])","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"    :PatientSync throws parse exception;","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"    :PatientSync generates error message;","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"    :PatientSync returns error message;","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"  endif","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"else ([else])","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"  :PatientSync throws parse exception;","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"  :PatientSync generates error message;","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"  :PatientSync returns error message;","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"endif","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":":PatientSync displays output message on GUI;","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"stop","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"@enduml","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"choowengyan":37}},{"path":"docs/diagrams/AddEventActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"@startuml","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"start","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":":User wants to add an event to a patient;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":":User runs the \"adde\" command with index, event name and date / datetime of the event;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"if () then ([else])","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"    :PatientSync throws an error;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"    :PatientSync adds error message to output;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"else ([Valid command format])","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"    :PatientSync checks if the event details provided are valid;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"    if () then ([else])","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"        :PatientSync throws an error;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"        :PatientSync adds error message to output;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"    else ([Valid event details])","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"        :PatientSync checks if the index provided is valid;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"        if () then ([else])","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"            :PatientSync throws an error;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"            :PatientSync adds error message to output;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"        else ([Valid index])","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"            :PatientSync generates the event to be added;","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"            if () then ([Event already exists in patient\u0027s event set])","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"                :PatientSync adds duplicate event message to output;","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"            else ([else])","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"                :PatientSync adds the event to the set of events for the patient;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"                :PatientSync updates the displayed patient list;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"                :PatientSync adds success message to output;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"            endif","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"        endif","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"    endif","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"endif","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":":PatientSync displays output message on GUI;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"stop","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"@enduml","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"SherisseTJW":32}},{"path":"docs/diagrams/AddEventSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"@startuml","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"!include style.puml","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"participant \":AddEventCommandParser\" as AddEventCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"participant \"a:AddEventCommand\" as AddEventCommand LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"end box","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"end box","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"[-\u003e LogicManager : execute(adde 1 n/Birthday d/20-01-2022)","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"activate LogicManager","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(adde 1 n/Birthday d/20-01-2022)","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"create AddEventCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"AddressBookParser -\u003e AddEventCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"activate AddEventCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"AddEventCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"deactivate AddEventCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"AddressBookParser -\u003e AddEventCommandParser : parse(adde 1 n/Birthday d/20-01-2022)","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"activate AddEventCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"Create AddEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"AddEventCommandParser -\u003e AddEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"activate AddEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"AddEventCommand --\u003e AddEventCommandParser : a","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"deactivate AddEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"AddEventCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"deactivate AddEventCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.\u0027","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"AddEventCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"destroy AddEventCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"SherisseTJW"},"content":"LogicManager -\u003e AddEventCommand : execute()","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"activate AddEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"AddEventCommand -\u003e Model : setPatient(args)","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"SherisseTJW"},"content":"activate Model","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"SherisseTJW"},"content":"Model --\u003e AddEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"SherisseTJW"},"content":"deactivate Model","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"SherisseTJW"},"content":"create CommandResult","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"SherisseTJW"},"content":"AddEventCommand -\u003e CommandResult","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"SherisseTJW"},"content":"activate CommandResult","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"SherisseTJW"},"content":"CommandResult --\u003e AddEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"SherisseTJW"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"SherisseTJW"},"content":"AddEventCommand --\u003e LogicManager : result","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"SherisseTJW"},"content":"deactivate AddEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"SherisseTJW"},"content":"AddEventCommand -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"SherisseTJW"},"content":"destroy AddEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"SherisseTJW"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"SherisseTJW"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"SherisseTJW"},"content":"@enduml","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"SherisseTJW":74}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"@startuml","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"!include style.puml","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"participant \"a:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"end box","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"end box","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"[-\u003e LogicManager : execute(add id/ 12347 n/ Mary Jane p/ Mary f/ Korean c/ Lives with only daughter h/ Watch Drama)","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"activate LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(add id/ 12347 n/ Mary Jane p/ Mary f/ Korean c/ Lives with only daughter h/ Watch Drama)","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"create AddCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"activate AddCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"deactivate AddCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"AddressBookParser -\u003e AddCommandParser : parse(add id/ 12347 n/ Mary Jane p/ Mary f/ Korean c/ Lives with only daughter h/ Watch Drama)","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"activate AddCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"Create AddCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"AddCommandParser -\u003e AddCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"activate AddCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"AddCommand --\u003e AddCommandParser : a","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"deactivate AddCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"AddCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"deactivate AddCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.\u0027","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"AddCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"destroy AddCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"LogicManager -\u003e AddCommand : execute()","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"activate AddCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"AddCommand -\u003e Model : setPatient(args)","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"activate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"deactivate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"create CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"activate CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"CommandResult --\u003e AddCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"AddCommand --\u003e LogicManager : result","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"deactivate AddCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"AddCommand -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"destroy AddCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"@enduml","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"choowengyan":74}},{"path":"docs/diagrams/AddTagsActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"@startuml","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"start","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":":User wants to add tags to a patient;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":":User runs the \"addt\" command with index and tags;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"if () then ([else])","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"    :PatientSync throws an error;","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"else ([Valid command format])","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"    :PatientSync checks if the index is valid;","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"    if () then ([else])","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"        :PatientSync throws an error;","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"    else ([Valid index])","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"        :PatientSync generates the set of tags to be added;","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"        :PatientSync retrieves the patient with the specified index;","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"        :PatientSync retrieves the patient\u0027s current tags;","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"        while () is ([More tags to be processed])","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"            if () then ([Tag already exists in patient\u0027s tag set])","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"                :Add message to output: Tag already exists for the patient;","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"            else ([else])","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"                :Add the tag to the patient\u0027s tag set;","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"                :Add message to output: Tag added successfully for the patient;","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"            endif","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"        endwhile([else])","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"        :PatientSync updates the patient\u0027s details;","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"        :PatientSync updates the displayed patient list;","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"        :PatientSync displays output message;","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"    endif","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"endif","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"stop","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"@enduml","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"NeoHW":29}},{"path":"docs/diagrams/AddTagsSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"@startuml","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"!include style.puml","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"participant \":AddTagsCommandParser\" as AddTagsCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"participant \"a:AddTagsCommand\" as AddTagsCommand LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"end box","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"end box","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"[-\u003e LogicManager : execute(addt 1 t/christian ...)","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"activate LogicManager","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(addt 1 t/christian ...)","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"create AddTagsCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"AddressBookParser -\u003e AddTagsCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"activate AddTagsCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"AddTagsCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"deactivate AddTagsCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"AddressBookParser -\u003e AddTagsCommandParser : parse(addt 1 t/christian ...)","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"activate AddTagsCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"Create AddTagsCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"AddTagsCommandParser -\u003e AddTagsCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"activate AddTagsCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"AddTagsCommand --\u003e AddTagsCommandParser : a","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"deactivate AddTagsCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"AddTagsCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"deactivate AddTagsCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.\u0027","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"AddTagsCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"destroy AddTagsCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"LogicManager -\u003e AddTagsCommand : execute()","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"activate AddTagsCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"AddTagsCommand -\u003e Model : setPatient(args)","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"activate Model","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"Model --\u003e AddTagsCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"deactivate Model","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"AddTagsCommand -\u003e Model : updateFilteredPatientList(predicate)","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"activate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"Model -\u003e AddTagsCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"deactivate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"create CommandResult","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"AddTagsCommand -\u003e CommandResult","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"activate CommandResult","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"CommandResult --\u003e AddTagsCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"AddTagsCommand --\u003e LogicManager : result","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"deactivate AddTagsCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"AddTagsCommand -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"destroy AddTagsCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"NeoHW"},"content":"@enduml","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"NeoHW":80}},{"path":"docs/diagrams/DeleteEventActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZhiWei1010"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"ZhiWei1010"},"content":"start","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"ZhiWei1010"},"content":":User wants to delete event from a patient;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"ZhiWei1010"},"content":":User runs the \"deletee\" command with patient index and event index;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"ZhiWei1010"},"content":"if () then ([else])","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"ZhiWei1010"},"content":"    :PatientSync throws an error;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"ZhiWei1010"},"content":"else ([Valid command format])","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"ZhiWei1010"},"content":"    :PatientSync checks if the patient index is valid;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"ZhiWei1010"},"content":"    if () then ([else])","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"ZhiWei1010"},"content":"        :PatientSync throws an error;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"ZhiWei1010"},"content":"    else ([Valid patient index])","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"ZhiWei1010"},"content":"        :PatientSync retrieves the patient with the specified index;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"ZhiWei1010"},"content":"        :PatientSync retrieves the set of events from the specified patient;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"ZhiWei1010"},"content":"        :PatientSync checks if the event index is valid;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"ZhiWei1010"},"content":"        if () then ([else])","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"ZhiWei1010"},"content":"            :PatientSync throws an error;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"ZhiWei1010"},"content":"        else ([Valid event index])","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"ZhiWei1010"},"content":"            :PatientSync retrieves the event with the specified index;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"ZhiWei1010"},"content":"            :PatientSync deletes the event from the set of events;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"ZhiWei1010"},"content":"            :PatientSync updates the event set for the specified patient;","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"ZhiWei1010"},"content":"            :PatientSync updates the displayed patient list;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"ZhiWei1010"},"content":"        endif","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"ZhiWei1010"},"content":"    endif","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"ZhiWei1010"},"content":"endif","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"ZhiWei1010"},"content":":PatientSync displays output message;","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"ZhiWei1010"},"content":"stop","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"ZhiWei1010"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"ZhiWei1010":27}},{"path":"docs/diagrams/DeleteEventSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZhiWei1010"},"content":"@startuml","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"ZhiWei1010"},"content":"!include style.puml","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"ZhiWei1010"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"ZhiWei1010"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"ZhiWei1010"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"ZhiWei1010"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"ZhiWei1010"},"content":"participant \":DeleteEventCommandParser\" as DeleteEventCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"ZhiWei1010"},"content":"participant \"a:DeleteEventCommand\" as DeleteEventCommand LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"ZhiWei1010"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"ZhiWei1010"},"content":"end box","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"ZhiWei1010"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"ZhiWei1010"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"ZhiWei1010"},"content":"end box","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"ZhiWei1010"},"content":"[-\u003e LogicManager : execute(\"delete 1 e/ 1\")","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"ZhiWei1010"},"content":"activate LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"ZhiWei1010"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1 e/ 1\")","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"ZhiWei1010"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"ZhiWei1010"},"content":"create DeleteEventCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"ZhiWei1010"},"content":"AddressBookParser -\u003e DeleteEventCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"ZhiWei1010"},"content":"activate DeleteEventCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"ZhiWei1010"},"content":"DeleteEventCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"ZhiWei1010"},"content":"deactivate DeleteEventCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"ZhiWei1010"},"content":"AddressBookParser -\u003e DeleteEventCommandParser : parse(\"delete 1 e/ 1\")","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"ZhiWei1010"},"content":"activate DeleteEventCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"ZhiWei1010"},"content":"Create DeleteEventCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"ZhiWei1010"},"content":"DeleteEventCommandParser -\u003e DeleteEventCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"ZhiWei1010"},"content":"activate DeleteEventCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"ZhiWei1010"},"content":"DeleteEventCommand --\u003e DeleteEventCommandParser : a","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"ZhiWei1010"},"content":"deactivate DeleteEventCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"ZhiWei1010"},"content":"DeleteEventCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"ZhiWei1010"},"content":"deactivate DeleteEventCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"ZhiWei1010"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.\u0027","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"ZhiWei1010"},"content":"DeleteEventCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"ZhiWei1010"},"content":"destroy DeleteEventCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"ZhiWei1010"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"ZhiWei1010"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"ZhiWei1010"},"content":"LogicManager -\u003e DeleteEventCommand : execute()","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"ZhiWei1010"},"content":"activate DeleteEventCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"ZhiWei1010"},"content":"DeleteEventCommand -\u003e Model : setPatient(args)","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"ZhiWei1010"},"content":"activate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"ZhiWei1010"},"content":"Model --\u003e DeleteEventCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"ZhiWei1010"},"content":"deactivate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"ZhiWei1010"},"content":"DeleteEventCommand -\u003e Model : updateFilteredPatientList(p)","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"ZhiWei1010"},"content":"activate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"ZhiWei1010"},"content":"Model -\u003e DeleteEventCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"ZhiWei1010"},"content":"deactivate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"ZhiWei1010"},"content":"create CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"ZhiWei1010"},"content":"DeleteEventCommand -\u003e CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"ZhiWei1010"},"content":"activate CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"ZhiWei1010"},"content":"CommandResult --\u003e DeleteEventCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"ZhiWei1010"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"ZhiWei1010"},"content":"DeleteEventCommand --\u003e LogicManager : result","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"ZhiWei1010"},"content":"deactivate DeleteEventCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"ZhiWei1010"},"content":"DeleteEventCommand -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"ZhiWei1010"},"content":"destroy DeleteEventCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"ZhiWei1010"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"ZhiWei1010"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"ZhiWei1010"},"content":"@enduml","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"ZhiWei1010":80}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser :","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute(m)","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"guohuang88"},"content":"DeleteCommand -\u003e Model : deletePatient(1)","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : r","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"guohuang88"},"content":"DeleteCommand -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"guohuang88"},"content":"destroy DeleteCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"guohuang88":4,"-":69}},{"path":"docs/diagrams/DeleteTagsActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"@startuml","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"start","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":":User wants to delete tags from a patient;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":":User runs the \"deletet\" command with index and tags;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"if () then ([else])","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"    :PatientSync throws an error;","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"else ([Valid command format])","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"    :PatientSync checks if the index is valid;","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"    if () then ([else])","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"        :PatientSync throws an error;","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"    else ([Valid index])","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"        :PatientSync generates the set of tags to be deleted;","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"        :PatientSync retrieves the patient with the specified index;","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"        :PatientSync retrieves the patient\u0027s current tags;","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"        while () is ([More tags to be processed])","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"            if () then ([Tag exists in patient\u0027s tag set])","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"                :Remove the tag from the patient\u0027s tag set;","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"                :add message to output: Tag deleted successfully for the patient;","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"            else ([else])","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"                :add message to output: The tag does not exist for the patient;","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"            endif","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"        endwhile ([else])","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"        :PatientSync updates the patient\u0027s details;","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"        :PatientSync updates the displayed patient list;","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"        :PatientSync displays output message;","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"    endif","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"endif","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"stop","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"@enduml","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"NeoHW":29}},{"path":"docs/diagrams/DeleteTagsSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"@startuml","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"!include style.puml","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"participant \":DeleteTagsCommandParser\" as DeleteTagsCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"participant \"a:DeleteTagsCommand\" as DeleteTagsCommand LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"end box","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"end box","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"[-\u003e LogicManager : execute(deletet 1 t/christian ...)","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"activate LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(deletet 1 t/christian ...)","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"create DeleteTagsCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"AddressBookParser -\u003e DeleteTagsCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"activate DeleteTagsCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"DeleteTagsCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"deactivate DeleteTagsCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"AddressBookParser -\u003e DeleteTagsCommandParser : parse(deletet 1 t/christian ...)","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"activate DeleteTagsCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"Create DeleteTagsCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"DeleteTagsCommandParser -\u003e DeleteTagsCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"activate DeleteTagsCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"DeleteTagsCommand --\u003e DeleteTagsCommandParser : a","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"deactivate DeleteTagsCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"DeleteTagsCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"deactivate DeleteTagsCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.\u0027","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"DeleteTagsCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"destroy DeleteTagsCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"LogicManager -\u003e DeleteTagsCommand : execute()","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"activate DeleteTagsCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"DeleteTagsCommand -\u003e Model : setPatient(args)","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"activate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"Model --\u003e DeleteTagsCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"deactivate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"DeleteTagsCommand -\u003e Model : updateFilteredPatientList(predicate)","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"activate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"Model -\u003e DeleteTagsCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"deactivate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"create CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"DeleteTagsCommand -\u003e CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"activate CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"CommandResult --\u003e DeleteTagsCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"DeleteTagsCommand --\u003e LogicManager : result","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"deactivate DeleteTagsCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"DeleteTagsCommand -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"destroy DeleteTagsCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"NeoHW"},"content":"@enduml","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"NeoHW":80}},{"path":"docs/diagrams/EditActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"@startuml","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"start","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":":User wants to edit information (eg. hobby) of a patient;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":":User runs the \"edit\" command with patient index, details of fields (eg. hobby with command h/Reading h/Singing);","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"if () then ([else])","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"    :PatientSync throws an error;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"    :PatientSync adds error message to output;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"else ([Valid command format])","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"    :PatientSync checks if the patient index is valid;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"    if () then ([else])","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"        :PatientSync throws an error;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"        :PatientSync adds error message to output;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"    else ([Valid patient index])","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"        :PatientSync checks if the prefix(s) is valid;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"        if () then ([else])","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"            :PatientSync throws an error;","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"            :PatientSync adds error message to output;","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"        else ([Valid prefix])","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"            :PatientSync checks if the input format for the respective prefix is valid;","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"            if () then ([else])","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"                :PatientSync throws an error;","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"                :PatientSync adds error message to output;","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"            else ([Valid input format])","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"                :PatientSync generates the information to be edited;","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"                :PatientSync edits the specified event;","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"                :PatientSync updates the set of events for the patient;","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"                :PatientSync updates the displayed patient list;","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"                :PatientSync adds success message to output;","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"            endif","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"        endif","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"    endif","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"endif","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":":PatientSync displays output message on GUI;","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"stop","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"@enduml","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"choowengyan":35}},{"path":"docs/diagrams/EditEventActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"guohuang88"},"content":"@startuml","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"guohuang88"},"content":"start","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"guohuang88"},"content":":User wants to edit an event for a patient;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"guohuang88"},"content":":User runs the \"edite\" command with patient index, event index, new event name and new date / datetime of the event;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"guohuang88"},"content":"if () then ([else])","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"guohuang88"},"content":"    :PatientSync throws an error;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"guohuang88"},"content":"    :PatientSync adds error message to output;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"guohuang88"},"content":"else ([Valid command format])","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"guohuang88"},"content":"    :PatientSync checks if the event details provided are valid;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"guohuang88"},"content":"    if () then ([else])","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"guohuang88"},"content":"        :PatientSync throws an error;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"guohuang88"},"content":"        :PatientSync adds error message to output;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"guohuang88"},"content":"    else ([Valid event details])","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"guohuang88"},"content":"        :PatientSync checks if the patient index is valid;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"guohuang88"},"content":"        if () then ([else])","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"guohuang88"},"content":"            :PatientSync throws an error;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"guohuang88"},"content":"            :PatientSync adds error message to output;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"guohuang88"},"content":"        else ([Valid patient index])","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"guohuang88"},"content":"            :PatientSync checks if the event index is valid;","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"guohuang88"},"content":"            if () then ([else])","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"guohuang88"},"content":"                :PatientSync throws an error;","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"guohuang88"},"content":"                :PatientSync adds error message to output;","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"guohuang88"},"content":"            else ([Valid event index])","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"guohuang88"},"content":"                :PatientSync generates the event to be edited;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"guohuang88"},"content":"                if () then ([Event already exist in the current event list])","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"guohuang88"},"content":"                    :PatientSync throws an error;","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"guohuang88"},"content":"                    :PatientSync adds error message to output;","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"guohuang88"},"content":"                else ([else])","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"guohuang88"},"content":"                    :PatientSync edits the specified event;","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"guohuang88"},"content":"                    :PatientSync updates the set of events for the patient;","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"guohuang88"},"content":"                    :PatientSync updates the displayed patient list;","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"guohuang88"},"content":"                    :PatientSync adds success message to output;","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"guohuang88"},"content":"                endif","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"guohuang88"},"content":"            endif","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"guohuang88"},"content":"        endif","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"guohuang88"},"content":"    endif","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"guohuang88"},"content":"endif","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"guohuang88"},"content":":PatientSync displays output message on GUI;","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"guohuang88"},"content":"stop","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"guohuang88"},"content":"@enduml","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"guohuang88":40}},{"path":"docs/diagrams/EditEventSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"guohuang88"},"content":"@startuml","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"guohuang88"},"content":"!include style.puml","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"guohuang88"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"guohuang88"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"guohuang88"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"guohuang88"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"guohuang88"},"content":"participant \":EditEventCommandParser\" as EditEventCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"guohuang88"},"content":"participant \"e:EditEventCommand\" as EditEventCommand LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"guohuang88"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"guohuang88"},"content":"end box","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"guohuang88"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"guohuang88"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"guohuang88"},"content":"end box","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"guohuang88"},"content":"[-\u003e LogicManager : execute(\"edite 1 e/1 n/event d/20-12-2000\")","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"guohuang88"},"content":"activate LogicManager","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"guohuang88"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"edite 1 e/1 n/event d/20-12-2000\")","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"guohuang88"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"guohuang88"},"content":"create EditEventCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"guohuang88"},"content":"AddressBookParser -\u003e EditEventCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"guohuang88"},"content":"activate EditEventCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"guohuang88"},"content":"EditEventCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"guohuang88"},"content":"deactivate EditEventCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"guohuang88"},"content":"AddressBookParser -\u003e EditEventCommandParser : parse(\"1 e/1 n/event d/20-12-2000\")","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"guohuang88"},"content":"activate EditEventCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"guohuang88"},"content":"Create EditEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"guohuang88"},"content":"EditEventCommandParser -\u003e EditEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"guohuang88"},"content":"activate EditEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"guohuang88"},"content":"EditEventCommand --\u003e EditEventCommandParser : e","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"guohuang88"},"content":"deactivate EditEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"guohuang88"},"content":"EditEventCommandParser --\u003e AddressBookParser : e","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"guohuang88"},"content":"deactivate EditEventCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"guohuang88"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.\u0027","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"guohuang88"},"content":"EditEventCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"guohuang88"},"content":"destroy EditEventCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"guohuang88"},"content":"AddressBookParser --\u003e LogicManager : e","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"guohuang88"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"guohuang88"},"content":"LogicManager -\u003e EditEventCommand : execute(m)","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"guohuang88"},"content":"activate EditEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"guohuang88"},"content":"EditEventCommand -\u003e Model : setPatient(args)","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"guohuang88"},"content":"activate Model","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"guohuang88"},"content":"Model --\u003e EditEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"guohuang88"},"content":"deactivate Model","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"guohuang88"},"content":"EditEventCommand -\u003e Model : updateFilteredPatientList(args)","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"guohuang88"},"content":"activate Model","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"guohuang88"},"content":"Model --\u003e EditEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"guohuang88"},"content":"deactivate Model","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"guohuang88"},"content":"create CommandResult","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"guohuang88"},"content":"EditEventCommand -\u003e CommandResult","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"guohuang88"},"content":"activate CommandResult","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"guohuang88"},"content":"CommandResult --\u003e EditEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"guohuang88"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"guohuang88"},"content":"EditEventCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"guohuang88"},"content":"deactivate EditEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"guohuang88"},"content":"EditEventCommand -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"guohuang88"},"content":"destroy EditEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"guohuang88"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"guohuang88"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"guohuang88"},"content":"@enduml","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"guohuang88":80}},{"path":"docs/diagrams/EditSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"@startuml","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"!include style.puml","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"participant \"e:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"end box","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"end box","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"[-\u003e LogicManager : execute(\"edit 2 f/Aglio-olio t/depression\")","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"activate LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"edit 2 f/Aglio-olio t/depression\")","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"create EditCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"AddressBookParser -\u003e EditCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"activate EditCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"EditCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"deactivate EditCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"AddressBookParser -\u003e EditCommandParser : parse(\"edit 2 f/Aglio-olio t/depression\")","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"activate EditCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"Create EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"EditCommandParser -\u003e EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"activate EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"EditCommand --\u003e EditCommandParser : e","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"deactivate EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"EditCommandParser --\u003e AddressBookParser : e","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"deactivate EditCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.\u0027","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"EditCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"destroy EditCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"AddressBookParser --\u003e LogicManager : e","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"LogicManager -\u003e EditCommand : execute(m)","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"activate EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"EditCommand -\u003e Model : setPatient(args)","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"activate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"deactivate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"EditCommand -\u003e Model : updateFilteredPatientList(args)","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"activate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"deactivate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"create CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"EditCommand -\u003e CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"activate CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"CommandResult --\u003e EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"EditCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"deactivate EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"EditCommand -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"choowengyan"},"content":"destroy EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"choowengyan"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"choowengyan"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"choowengyan"},"content":"@enduml","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"choowengyan":80}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"guohuang88"},"content":"@startuml","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"guohuang88"},"content":"!include style.puml","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"guohuang88"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"guohuang88"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"guohuang88"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"guohuang88"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"guohuang88"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"guohuang88"},"content":"participant \"f:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"guohuang88"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"guohuang88"},"content":"end box","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"guohuang88"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"guohuang88"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"guohuang88"},"content":"end box","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"guohuang88"},"content":"[-\u003e LogicManager : execute(\"find Alex\")","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"guohuang88"},"content":"activate LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"guohuang88"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"find Alex\")","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"guohuang88"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"guohuang88"},"content":"create FindCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"guohuang88"},"content":"AddressBookParser -\u003e FindCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"guohuang88"},"content":"activate FindCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"guohuang88"},"content":"FindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"guohuang88"},"content":"deactivate FindCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"guohuang88"},"content":"AddressBookParser -\u003e FindCommandParser : parse(\"Alex\")","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"guohuang88"},"content":"activate FindCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"guohuang88"},"content":"create FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"guohuang88"},"content":"FindCommandParser -\u003e FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"guohuang88"},"content":"activate FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"guohuang88"},"content":"FindCommand --\u003e FindCommandParser :","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"guohuang88"},"content":"deactivate FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"guohuang88"},"content":"FindCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"guohuang88"},"content":"deactivate FindCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"guohuang88"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"guohuang88"},"content":"FindCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"guohuang88"},"content":"destroy FindCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"guohuang88"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"guohuang88"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"guohuang88"},"content":"LogicManager -\u003e FindCommand : execute(m)","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"guohuang88"},"content":"activate FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"guohuang88"},"content":"FindCommand -\u003e Model : updateFilteredPatientList(args)","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"guohuang88"},"content":"activate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"guohuang88"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"guohuang88"},"content":"deactivate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"guohuang88"},"content":"create CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"guohuang88"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"guohuang88"},"content":"activate CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"guohuang88"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"guohuang88"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":65,"author":{"gitId":"guohuang88"},"content":"FindCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"guohuang88"},"content":"deactivate FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":68,"author":{"gitId":"guohuang88"},"content":"FindCommand -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"guohuang88"},"content":"destroy FindCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"guohuang88"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":72,"author":{"gitId":"guohuang88"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":73,"author":{"gitId":"guohuang88"},"content":"@enduml","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"guohuang88":73}},{"path":"docs/diagrams/FindTagsSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"guohuang88"},"content":"@startuml","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"guohuang88"},"content":"!include style.puml","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"guohuang88"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"guohuang88"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"guohuang88"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"guohuang88"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"guohuang88"},"content":"participant \":FindTagsCommandParser\" as FindTagsCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"guohuang88"},"content":"participant \"f:FindTagsCommand\" as FindTagsCommand LOGIC_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"guohuang88"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"guohuang88"},"content":"end box","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"guohuang88"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"guohuang88"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"guohuang88"},"content":"end box","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"guohuang88"},"content":"[-\u003e LogicManager : execute(\"findt depression\")","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"guohuang88"},"content":"activate LogicManager","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"guohuang88"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"findt depression\")","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"guohuang88"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"guohuang88"},"content":"create FindTagsCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"guohuang88"},"content":"AddressBookParser -\u003e FindTagsCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"guohuang88"},"content":"activate FindTagsCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"guohuang88"},"content":"FindTagsCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"guohuang88"},"content":"deactivate FindTagsCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"guohuang88"},"content":"AddressBookParser -\u003e FindTagsCommandParser : parse(\"depression\")","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"guohuang88"},"content":"activate FindTagsCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"guohuang88"},"content":"create FindTagsCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"guohuang88"},"content":"FindTagsCommandParser -\u003e FindTagsCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"guohuang88"},"content":"activate FindTagsCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"guohuang88"},"content":"FindTagsCommand --\u003e FindTagsCommandParser :","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"guohuang88"},"content":"deactivate FindTagsCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"guohuang88"},"content":"FindTagsCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"guohuang88"},"content":"deactivate FindTagsCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"guohuang88"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"guohuang88"},"content":"FindTagsCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"guohuang88"},"content":"destroy FindTagsCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"guohuang88"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"guohuang88"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"guohuang88"},"content":"LogicManager -\u003e FindTagsCommand : execute(m)","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"guohuang88"},"content":"activate FindTagsCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"guohuang88"},"content":"FindTagsCommand -\u003e Model : updateFilteredPatientList(args)","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"guohuang88"},"content":"activate Model","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"guohuang88"},"content":"Model --\u003e FindTagsCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"guohuang88"},"content":"deactivate Model","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"guohuang88"},"content":"create CommandResult","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"guohuang88"},"content":"FindTagsCommand -\u003e CommandResult","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"guohuang88"},"content":"activate CommandResult","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"guohuang88"},"content":"CommandResult --\u003e FindTagsCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"guohuang88"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"guohuang88"},"content":"FindTagsCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"guohuang88"},"content":"deactivate FindTagsCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"guohuang88"},"content":"FindTagsCommand -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"guohuang88"},"content":"destroy FindTagsCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"guohuang88"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"guohuang88"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"guohuang88"},"content":"@enduml","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"guohuang88":73}},{"path":"docs/diagrams/ListSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZhiWei1010"},"content":"@startuml","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"ZhiWei1010"},"content":"!include style.puml","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"ZhiWei1010"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"ZhiWei1010"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"ZhiWei1010"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"ZhiWei1010"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"ZhiWei1010"},"content":"participant \":ListCommand\" as ListCommand LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"ZhiWei1010"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"ZhiWei1010"},"content":"end box","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"ZhiWei1010"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"ZhiWei1010"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"ZhiWei1010"},"content":"end box","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"ZhiWei1010"},"content":"[-\u003e LogicManager : execute( \"list\" )","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"ZhiWei1010"},"content":"activate LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"ZhiWei1010"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"list\")","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"ZhiWei1010"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"ZhiWei1010"},"content":"Create ListCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"ZhiWei1010"},"content":"AddressBookParser -\u003e ListCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"ZhiWei1010"},"content":"activate ListCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"ZhiWei1010"},"content":"ListCommand --\u003e AddressBookParser : a","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"ZhiWei1010"},"content":"deactivate ListCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"ZhiWei1010"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"ZhiWei1010"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"ZhiWei1010"},"content":"LogicManager -\u003e ListCommand : execute()","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"ZhiWei1010"},"content":"activate ListCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"ZhiWei1010"},"content":"ListCommand -\u003e Model : updateFilteredPatientList(p)","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"ZhiWei1010"},"content":"activate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"ZhiWei1010"},"content":"Model --\u003e ListCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"ZhiWei1010"},"content":"deactivate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"ZhiWei1010"},"content":"create CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"ZhiWei1010"},"content":"ListCommand -\u003e CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"ZhiWei1010"},"content":"activate CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"ZhiWei1010"},"content":"CommandResult --\u003e ListCommand :","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"ZhiWei1010"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"ZhiWei1010"},"content":"ListCommand --\u003e LogicManager : result","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"ZhiWei1010"},"content":"deactivate ListCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"ZhiWei1010"},"content":"ListCommand -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"ZhiWei1010"},"content":"destroy ListCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"ZhiWei1010"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"ZhiWei1010"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"ZhiWei1010"},"content":"@enduml","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"ZhiWei1010":57}},{"path":"docs/diagrams/SortActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZhiWei1010"},"content":"@startuml","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"ZhiWei1010"},"content":"start","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"ZhiWei1010"},"content":":User wants to sort patient list;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"ZhiWei1010"},"content":":User runs the \"sort\" command with attribute;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"ZhiWei1010"},"content":"if () then ([else])","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"ZhiWei1010"},"content":"    :PatientSync throws an error;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"ZhiWei1010"},"content":"else ([Valid command format])","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"ZhiWei1010"},"content":"    :PatientSync checks if the attribute is valid;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"ZhiWei1010"},"content":"    if () then ([else])","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"ZhiWei1010"},"content":"        :PatientSync throws an error;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"ZhiWei1010"},"content":"    else ([Valid attribute])","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"ZhiWei1010"},"content":"        :PatientSync retrieves the patient list with all the patients;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"ZhiWei1010"},"content":"        :PatientSync sorts the patient list by specified attribute;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"ZhiWei1010"},"content":"        :PatientSync updates the patient list with the sorted patient list;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"ZhiWei1010"},"content":"        :PatientSync displays the sorted patient list;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"ZhiWei1010"},"content":"        :PatientSync displays output message;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"ZhiWei1010"},"content":"    endif","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"ZhiWei1010"},"content":"endif","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"ZhiWei1010"},"content":"stop","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"ZhiWei1010"},"content":"@enduml","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"ZhiWei1010":20}},{"path":"docs/diagrams/SortSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZhiWei1010"},"content":"@startuml","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"ZhiWei1010"},"content":"!include style.puml","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"ZhiWei1010"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"ZhiWei1010"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"ZhiWei1010"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"ZhiWei1010"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"ZhiWei1010"},"content":"participant \":SortCommandParser\" as SortCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"ZhiWei1010"},"content":"participant \"s:SortCommand\" as SortCommand LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"ZhiWei1010"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"ZhiWei1010"},"content":"end box","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"ZhiWei1010"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"ZhiWei1010"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"ZhiWei1010"},"content":"end box","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"ZhiWei1010"},"content":"[-\u003e LogicManager : execute(\"sort p\")","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"ZhiWei1010"},"content":"activate LogicManager","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"ZhiWei1010"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"sort p\")","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"ZhiWei1010"},"content":"activate AddressBookParser","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"ZhiWei1010"},"content":"create SortCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"ZhiWei1010"},"content":"AddressBookParser -\u003e SortCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"ZhiWei1010"},"content":"activate SortCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"ZhiWei1010"},"content":"SortCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"ZhiWei1010"},"content":"deactivate SortCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"ZhiWei1010"},"content":"AddressBookParser -\u003e SortCommandParser : parse(\"p\")","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"ZhiWei1010"},"content":"activate SortCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"ZhiWei1010"},"content":"SortCommandParser -\u003e SortCommandParser : parseSortAttribute(\"p\")","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"ZhiWei1010"},"content":"activate SortCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"ZhiWei1010"},"content":"SortCommandParser --\u003e SortCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"ZhiWei1010"},"content":"deactivate SortCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"ZhiWei1010"},"content":"create SortCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"ZhiWei1010"},"content":"SortCommandParser -\u003e SortCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"ZhiWei1010"},"content":"activate SortCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"ZhiWei1010"},"content":"SortCommand --\u003e SortCommandParser : s","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"ZhiWei1010"},"content":"deactivate SortCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"ZhiWei1010"},"content":"SortCommandParser --\u003e AddressBookParser : s","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"ZhiWei1010"},"content":"deactivate SortCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"ZhiWei1010"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.\u0027","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"ZhiWei1010"},"content":"SortCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"ZhiWei1010"},"content":"destroy SortCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"ZhiWei1010"},"content":"AddressBookParser --\u003e LogicManager : s","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"ZhiWei1010"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"ZhiWei1010"},"content":"LogicManager -\u003e SortCommand : execute(m)","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"ZhiWei1010"},"content":"activate SortCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"ZhiWei1010"},"content":"SortCommand -\u003e Model : getFullPatientList()","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"ZhiWei1010"},"content":"activate Model","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"ZhiWei1010"},"content":"Model --\u003e SortCommand : fullPatientList","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"ZhiWei1010"},"content":"deactivate Model","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"ZhiWei1010"},"content":"SortCommand -\u003e Model : updatePatientList(sortedPatientList)","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"ZhiWei1010"},"content":"activate Model","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"ZhiWei1010"},"content":"Model --\u003e SortCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"ZhiWei1010"},"content":"deactivate Model","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"ZhiWei1010"},"content":"SortCommand -\u003e Model : updateFilteredPatientList(predicate)","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"ZhiWei1010"},"content":"activate Model","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"ZhiWei1010"},"content":"Model --\u003e SortCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"ZhiWei1010"},"content":"deactivate Model","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"ZhiWei1010"},"content":"create CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"ZhiWei1010"},"content":"SortCommand -\u003e CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"ZhiWei1010"},"content":"activate CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"ZhiWei1010"},"content":"CommandResult --\u003e SortCommand : r","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"ZhiWei1010"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"ZhiWei1010"},"content":"SortCommand --\u003e LogicManager : r","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"ZhiWei1010"},"content":"deactivate SortCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"ZhiWei1010"},"content":"SortCommand -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"ZhiWei1010"},"content":"destroy SortCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"ZhiWei1010"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"ZhiWei1010"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"ZhiWei1010"},"content":"@enduml","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"ZhiWei1010":92}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"ecp -\u003e ec ++: index, editPatientDescriptor","lastModifiedDate":"2024-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"NeoHW":1,"-":21}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"# PatientSync","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"[![Java CI](https://github.com/AY2324S2-CS2103-F09-2/tp/actions/workflows/gradle.yml/badge.svg?branch\u003dmaster)](https://github.com/AY2324S2-CS2103-F09-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103-F09-2/tp/graph/badge.svg?token\u003dAX3SGG0FMX)](https://codecov.io/gh/AY2324S2-CS2103-F09-2/tp)","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"**PatientSync is a desktop application meticulously crafted for nurses who prioritize the well-being of their patients above all else.**\\","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"It allows you to input intimate details about your patients, such as food preferences and family conditions. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"|      Project Links      |                            Description                            |","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"|-------------------------|------------------------------------------------------------------|","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"| [Project Website](https://ay2324s2-cs2103-f09-2.github.io/tp/) | Official website for the PatientSync desktop application.       |","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"| [User Guide](UserGuide.html#quick-start)               | Quick Start guide for users interested in using PatientSync.    |","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"| [Developer Guide](DeveloperGuide.html)                 | Comprehensive guide for developers interested in contributing to PatientSync. |","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"| [About Us](AboutUs.html)                              | Learn more about the team behind the PatientSync project.        |","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"**Acknowledgements**\\","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"NeoHW":13,"-":15}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Adding a command","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":" * Changes the remark of an existing patient in the address book.","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/RemarkClass.puml\" alt\u003d\"The relationship between RemarkCommand and Command\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"            + \": Edits the remark of the patient identified \"","lastModifiedDate":"2024-03-08"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"            + \"by the index number used in the last patient listing. \"","lastModifiedDate":"2024-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"NeoHW"},"content":"     * @param index of the patient in the filtered patient list to edit the remark","lastModifiedDate":"2024-03-08"},{"lineNumber":108,"author":{"gitId":"NeoHW"},"content":"     * @param remark of the patient to be updated to","lastModifiedDate":"2024-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/ParserClass.puml\" alt\u003d\"The relationship between Parser and RemarkCommandParser\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"NeoHW"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of patient data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the patient’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a patient.","lastModifiedDate":"2024-03-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"NeoHW"},"content":"Create a new `Remark` in `seedu.address.model.patient`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2024-03-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":236,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"NeoHW"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each patient.","lastModifiedDate":"2024-03-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"NeoHW"},"content":"Simply add the following to [`seedu.address.ui.PatientCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2024-03-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2023-09-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2023-09-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"NeoHW"},"content":"public PersonCard(Person patient, int displayedIndex) {","lastModifiedDate":"2024-03-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"NeoHW"},"content":"    remark.setText(patient.getRemark().value);","lastModifiedDate":"2024-03-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"NeoHW"},"content":"        Person patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-08"},{"lineNumber":348,"author":{"gitId":"NeoHW"},"content":"        Person editedPatient \u003d new Person(","lastModifiedDate":"2024-03-08"},{"lineNumber":349,"author":{"gitId":"NeoHW"},"content":"                patientToEdit.getName(), patientToEdit.getPhone(), patientToEdit.getEmail(),","lastModifiedDate":"2024-03-08"},{"lineNumber":350,"author":{"gitId":"NeoHW"},"content":"                patientToEdit.getAddress(), remark, patientToEdit.getTags());","lastModifiedDate":"2024-03-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"NeoHW"},"content":"        model.setPerson(patientToEdit, editedPatient);","lastModifiedDate":"2024-03-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"NeoHW"},"content":"        return new CommandResult(generateSuccessMessage(editedPatient));","lastModifiedDate":"2024-03-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":361,"author":{"gitId":"NeoHW"},"content":"     * {@code patientToEdit}.","lastModifiedDate":"2024-03-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"NeoHW"},"content":"    private String generateSuccessMessage(Person patientToEdit) {","lastModifiedDate":"2024-03-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"NeoHW"},"content":"        return String.format(message, patientToEdit);","lastModifiedDate":"2024-03-08"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":379,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"NeoHW":20,"-":382}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Removing Fields","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"success\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.patient.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"NeoHW"},"content":"  \"patients\": [ {","lastModifiedDate":"2024-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"NeoHW":2,"-":113}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Tracing code","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureDiagram.puml\" alt\u003d\"ArchitectureDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ComponentManagers.puml\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"**Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/tracing/LogicSequenceDiagram.puml\" alt\u003d\"Tracing an `edit` command through the Logic component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"NeoHW"},"content":"       Person patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-08"},{"lineNumber":199,"author":{"gitId":"NeoHW"},"content":"       Person editedPatient \u003d createEditedPerson(patientToEdit, editPatientDescriptor);","lastModifiedDate":"2024-03-09"},{"lineNumber":200,"author":{"gitId":"NeoHW"},"content":"       if (!patientToEdit.isSamePerson(editedPatient) \u0026\u0026 model.hasPerson(editedPatient)) {","lastModifiedDate":"2024-03-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"NeoHW"},"content":"       model.setPerson(patientToEdit, editedPatient);","lastModifiedDate":"2024-03-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"NeoHW"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPatient));","lastModifiedDate":"2024-03-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"NeoHW"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the patient data.","lastModifiedDate":"2024-03-08"},{"lineNumber":211,"author":{"gitId":"NeoHW"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ patients.\u003cbr\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":212,"author":{"gitId":"NeoHW"},"content":"     FYI, The \u0027filtered list\u0027 is the list of patients resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the patients so that the user can see the edited patient along with all other patients. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":213,"author":{"gitId":"NeoHW"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of patients is being tracked.","lastModifiedDate":"2024-03-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     \u003cpuml src\u003d\"../diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"1. As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"NeoHW"},"content":"        patients.addAll(","lastModifiedDate":"2024-03-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"NeoHW":10,"-":301}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"ZhiWei1010"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ZhiWei1010":1,"-":185}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"    private static final String LOG_FILE \u003d \"patientsync.log\";","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"     * Creates a logger named \u0027patientSync\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2024-03-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"        baseLogger \u003d Logger.getLogger(\"patientSync\");","lastModifiedDate":"2024-03-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"NeoHW":3,"-":103}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"    /** Returns an unmodifiable view of the filtered list of patients */","lastModifiedDate":"2024-03-09"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"    ObservableList\u003cPatient\u003e getFilteredPatientList();","lastModifiedDate":"2024-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"NeoHW":3,"-":47}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"        logger.info(\"Successfully parsed command; Attempting to execute\");","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"SherisseTJW"},"content":"        logger.info(\"Successfully executed command; Attempting to save changes\");","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2024-03-09"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"        return model.getFilteredPatientList();","lastModifiedDate":"2024-03-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"SherisseTJW":4,"NeoHW":3,"-":85}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"    public static final String MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX \u003d \"The patient index provided is invalid\";","lastModifiedDate":"2024-03-09"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"    public static final String MESSAGE_INVALID_EVENT_DISPLAYED_INDEX \u003d \"The event index provided is invalid\";","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"    public static final String MESSAGE_PATIENT_LISTED_OVERVIEW \u003d \"%1$d patients listed!\";","lastModifiedDate":"2024-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"     * Appends the elements of the given set to the provided StringBuilder with commas between each element.","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"     * @param builder The StringBuilder to which the elements will be appended.","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"     * @param elements The set of elements to be appended to the StringBuilder.","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"     * @param \u003cT\u003e The type of elements in the set.","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"    private static \u003cT\u003e void appendWithCommas(StringBuilder builder, Set\u003cT\u003e elements) {","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"        if (!elements.isEmpty()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"            builder.append(elements.stream()","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"                .map(Object::toString)","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"                .collect(Collectors.joining(\", \")));","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"     * Formats the {@code patient} for display to the user.","lastModifiedDate":"2024-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"    public static String format(Patient patient) {","lastModifiedDate":"2024-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"        builder.append(patient.getName())","lastModifiedDate":"2024-03-08"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"                .append(\"; PreferredName: \")","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"                .append(patient.getPreferredName())","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"                .append(\"; PatientHospitalId: \")","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"                .append(patient.getPatientHospitalId())","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"                .append(\"; FoodPreferences: \");","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"        appendWithCommas(builder, patient.getFoodPreferences());","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"        builder.append(\"; FamilyConditions: \");","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"        appendWithCommas(builder, patient.getFamilyConditions());","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"        builder.append(\"; Hobbies: \");","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"        appendWithCommas(builder, patient.getHobbies());","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"        builder.append(\"; Tags: \");","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"        patient.getTags().forEach(builder::append);","lastModifiedDate":"2024-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SherisseTJW":1,"choowengyan":24,"NeoHW":7,"-":39}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FAMILY_CONDITION;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FOOD_PREFERENCE;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOBBY;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PID;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERRED_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":" * Adds a patient to the address book.","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a patient to the address book. \"","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"            + PREFIX_PID + \"PATIENT_HOSPITAL_ID \"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"            + PREFIX_PREFERRED_NAME + \"PREFERRED_NAME \"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"            + PREFIX_FOOD_PREFERENCE + \"FOOD_PREFERENCE \"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"            + PREFIX_FAMILY_CONDITION + \"FAMILY_CONDITION \"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"            + PREFIX_HOBBY + \"HOBBY \"","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"            + PREFIX_PID + \"12345 \"","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"            + PREFIX_NAME + \"Alex Yeoh Jia Jun \"","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"            + PREFIX_PREFERRED_NAME + \"Alex \"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"            + PREFIX_FOOD_PREFERENCE + \"Curry Chicken \"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"            + PREFIX_FAMILY_CONDITION + \"Stable \"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"            + PREFIX_HOBBY + \"Singing karaoke \"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"            + PREFIX_TAG + \"Diabetes \";","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"    public static final String MESSAGE_SUCCESS \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"        \"Information for patient %1$s with ID %2$s has been successfully added!\";","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"This patient already exists in the address book\";","lastModifiedDate":"2024-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddCommand.class);","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"    private final Patient toAdd;","lastModifiedDate":"2024-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"     * Creates an AddCommand to add the specified {@code Patient}","lastModifiedDate":"2024-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"    public AddCommand(Patient patient) {","lastModifiedDate":"2024-03-08"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"        requireNonNull(patient);","lastModifiedDate":"2024-03-08"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"        toAdd \u003d patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"        logger.log(Level.INFO, \"Attempting to execute AddCommand.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"        if (model.hasPatient(toAdd)) {","lastModifiedDate":"2024-03-09"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2024-03-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"        logger.log(Level.INFO, \"Patient is a new entry.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"        model.addPatient(toAdd);","lastModifiedDate":"2024-03-09"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"        logger.log(Level.INFO, \"Patient details successfully added.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd.getName(), toAdd.getPatientHospitalId()));","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"choowengyan":30,"NeoHW":12,"-":58}},{"path":"src/main/java/seedu/address/logic/commands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.commands.EditCommand.createEditedPatient;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"import java.util.List;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.EditPatientDescriptor;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.Event;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":" * Adds an event to the specified patient (based on index from the last shown patient list)","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"    public static final String COMMAND_WORD \u003d \"adde\";","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"            + \": Adds an event for a Patient. \"","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"            + \"Parameters: INDEX (must be a positive integer matching that of the Patient in the `list` command) \"","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"            + PREFIX_NAME + \" [Name of the Event that falls on this Date] \"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"            + PREFIX_DATETIME + \" [Date / Datetime, in the format DD-MM-YYYY\"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"            + \" / DD-MM-YYYY, HH:mm - HH:mm respectively]\\n\"","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"            + \"Example: \"","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"            + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"            + PREFIX_NAME + \" Father Birthday \"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"            + PREFIX_DATETIME + \"29-09-1789\";","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Event %1$s successfully added for Patient %2$s with ID %3$s for %4$s\";","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"    public static final String MESSAGE_DUPLICATE \u003d \"Event %1$s already exists for Patient %2$s with ID %3$s for %4$s\";","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"    public static final String MESSAGE_PAST_EVENT_WARNING \u003d \"Warning: This Event occurred before the current \"","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"            + \"date / datetime\";","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddEventCommand.class);","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"    private final Index index;","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"    private final Event eventToAdd;","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"    private final EditPatientDescriptor editPatientDescriptor;","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"     * Constructs an AddEventCommand to add the specified {@code event}","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"SherisseTJW"},"content":"     * to the Patient with id {@code index}","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"SherisseTJW"},"content":"     * @param index","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"SherisseTJW"},"content":"     * @param event","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"SherisseTJW"},"content":"    public AddEventCommand(Index index, Event event) {","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"SherisseTJW"},"content":"        requireAllNonNull(index, event);","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"SherisseTJW"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"SherisseTJW"},"content":"        this.eventToAdd \u003d event;","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"SherisseTJW"},"content":"        this.editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"SherisseTJW"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"SherisseTJW"},"content":"        logger.info(\"Attempting to execute AddEventCommand\");","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"SherisseTJW"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"SherisseTJW"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"SherisseTJW"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"SherisseTJW"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"SherisseTJW"},"content":"        Patient patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"SherisseTJW"},"content":"        Set\u003cEvent\u003e newEventsList \u003d new HashSet\u003c\u003e(patientToEdit.getEvents());","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"SherisseTJW"},"content":"        if (newEventsList.contains(this.eventToAdd)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"SherisseTJW"},"content":"            return new CommandResult(String.format(MESSAGE_DUPLICATE, eventToAdd.name, patientToEdit.getName(),","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"SherisseTJW"},"content":"                    index.getOneBased(), eventToAdd.date));","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"SherisseTJW"},"content":"        logger.info(\"All checks passed; Attempting to add event \" + this.eventToAdd","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"SherisseTJW"},"content":"                + \" into the patient\u0027s event set\");","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"SherisseTJW"},"content":"        newEventsList.add(this.eventToAdd);","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"SherisseTJW"},"content":"        assert(newEventsList.size() \u003e 0);","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"SherisseTJW"},"content":"        editPatientDescriptor.setEvents(newEventsList);","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"SherisseTJW"},"content":"        Patient editedPatient \u003d createEditedPatient(patientToEdit, editPatientDescriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"SherisseTJW"},"content":"        model.setPatient(patientToEdit, editedPatient);","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"SherisseTJW"},"content":"        model.updateFilteredPatientList(Model.PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"SherisseTJW"},"content":"        logger.info(\"Event added to patient\u0027s event set\");","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"SherisseTJW"},"content":"        if (this.eventToAdd.isPastEvent()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"SherisseTJW"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, eventToAdd.name,","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"SherisseTJW"},"content":"                    editedPatient.getName(), index.getOneBased(), eventToAdd.date) + \"\\n\" + MESSAGE_PAST_EVENT_WARNING);","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"SherisseTJW"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, eventToAdd.name, editedPatient.getName(),","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"SherisseTJW"},"content":"                index.getOneBased(), eventToAdd.date));","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"SherisseTJW"},"content":"     * Returns true if both AddEventCommands have the same index and important date to add.","lastModifiedDate":"2024-03-23"},{"lineNumber":111,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"SherisseTJW"},"content":"     * @param other Another object to compare to.","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"SherisseTJW"},"content":"     * @return True if the other object is an AddEventCommand with the same index and date / datetime to add.","lastModifiedDate":"2024-03-23"},{"lineNumber":114,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"SherisseTJW"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"SherisseTJW"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"SherisseTJW"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"SherisseTJW"},"content":"        if (!(other instanceof AddEventCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"SherisseTJW"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"SherisseTJW"},"content":"        AddEventCommand otherAddEventCommand \u003d (AddEventCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"SherisseTJW"},"content":"        return index.equals(otherAddEventCommand.index)","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"SherisseTJW"},"content":"                \u0026\u0026 eventToAdd.equals(otherAddEventCommand.eventToAdd);","lastModifiedDate":"2024-03-31"},{"lineNumber":128,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"SherisseTJW"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"SherisseTJW"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"SherisseTJW"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"SherisseTJW"},"content":"                .add(\"event\", eventToAdd)","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"SherisseTJW"},"content":"                .toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"SherisseTJW":137}},{"path":"src/main/java/seedu/address/logic/commands/AddTagsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.commands.EditCommand.createEditedPatient;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"import java.util.List;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.EditPatientDescriptor;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":" * Adds one or more tags to the specified patient.","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":" * Repeated tags in command will be added as a single tag.","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":" * If the patient already has the tag, it will not be added.","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"public class AddTagsCommand extends Command {","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"    public static final String COMMAND_WORD \u003d \"addt\";","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-10"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"            + \": Adds one or more tags to the patient identified \"","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"            + \"by the index number used in the last patient listing. \"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"            + PREFIX_TAG + \"[TAG]+ \\n\"","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-10"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"            + PREFIX_TAG + \"fall risk\";","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"    public static final String MESSAGE_ADD_TAG_SUCCESS \u003d \"Added the tag: %2$s for Patient: %1$s\"","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"            + \" successfully\";","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"    public static final String MESSAGE_DUPLICATE_TAG \u003d \"The tag: %2$s already exists\"","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"            + \" for Patient: %1$s\";","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddTagsCommand.class);","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"    private final Index index;","lastModifiedDate":"2024-03-10"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"    private final Set\u003cTag\u003e tagsToAdd;","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"    private final EditPatientDescriptor editPatientDescriptor;","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"     * @param index of the patient in the filtered patient list to add the tags","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"     * @param tagsToAdd  to be added to the patient","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"    public AddTagsCommand(Index index, Set\u003cTag\u003e tagsToAdd) {","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"        requireAllNonNull(index, tagsToAdd);","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-10"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"        this.tagsToAdd \u003d tagsToAdd;","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"        this.editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"     * Executes the add tag command to add one or more tags to the patient.","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"     * @return A command result message indicating the success of the operation.","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"     * @throws CommandException If there is an error executing the command.","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-10"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"            logger.log(Level.WARNING, \"Invalid patient index for Add Tags Command: \" + index);","lastModifiedDate":"2024-03-22"},{"lineNumber":80,"author":{"gitId":"NeoHW"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"NeoHW"},"content":"        Patient patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"NeoHW"},"content":"        // Create new Hashset to add in new tags as Patient.getTags() return unmodifiableSet","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"NeoHW"},"content":"        Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e(patientToEdit.getTags());","lastModifiedDate":"2024-03-22"},{"lineNumber":87,"author":{"gitId":"NeoHW"},"content":"        Pair\u003cSet\u003cTag\u003e, String\u003e result \u003d addTagsToPatient(patientToEdit, tagSet, tagsToAdd);","lastModifiedDate":"2024-03-22"},{"lineNumber":88,"author":{"gitId":"NeoHW"},"content":"        Set\u003cTag\u003e newTagSet \u003d result.getKey();","lastModifiedDate":"2024-03-22"},{"lineNumber":89,"author":{"gitId":"NeoHW"},"content":"        String commandResultString \u003d result.getValue();","lastModifiedDate":"2024-03-22"},{"lineNumber":90,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"NeoHW"},"content":"        editPatientDescriptor.setTags(newTagSet);","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"NeoHW"},"content":"        Patient editedPatient \u003d createEditedPatient(patientToEdit, editPatientDescriptor);","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"NeoHW"},"content":"        model.setPatient(patientToEdit, editedPatient);","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"NeoHW"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"NeoHW"},"content":"        logger.log(Level.INFO, \"Successfully called AddTagsCommand for patient: \" + editedPatient.getName());","lastModifiedDate":"2024-03-22"},{"lineNumber":99,"author":{"gitId":"NeoHW"},"content":"        return new CommandResult(commandResultString);","lastModifiedDate":"2024-03-22"},{"lineNumber":100,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":101,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":102,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":103,"author":{"gitId":"NeoHW"},"content":"     * Adds the specified tags to a patient\u0027s tag set.","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":105,"author":{"gitId":"NeoHW"},"content":"     * @param patient    The patient whose tags are being modified.","lastModifiedDate":"2024-03-22"},{"lineNumber":106,"author":{"gitId":"NeoHW"},"content":"     * @param tagSet     The current set of tags for the patient.","lastModifiedDate":"2024-03-22"},{"lineNumber":107,"author":{"gitId":"NeoHW"},"content":"     * @param toAddTags  The Tags to be added.","lastModifiedDate":"2024-03-22"},{"lineNumber":108,"author":{"gitId":"NeoHW"},"content":"     * @return A Pair containing the updated tag set and a string describing the outcome of the deletion.","lastModifiedDate":"2024-03-22"},{"lineNumber":109,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":110,"author":{"gitId":"NeoHW"},"content":"    public Pair\u003cSet\u003cTag\u003e, String\u003e addTagsToPatient(Patient patient, Set\u003cTag\u003e tagSet,","lastModifiedDate":"2024-03-22"},{"lineNumber":111,"author":{"gitId":"NeoHW"},"content":"                                                        Set\u003cTag\u003e toAddTags) {","lastModifiedDate":"2024-03-22"},{"lineNumber":112,"author":{"gitId":"NeoHW"},"content":"        requireAllNonNull(tagSet, toAddTags);","lastModifiedDate":"2024-03-22"},{"lineNumber":113,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":114,"author":{"gitId":"NeoHW"},"content":"        StringBuilder commandOutcome \u003d new StringBuilder();","lastModifiedDate":"2024-03-22"},{"lineNumber":115,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":116,"author":{"gitId":"NeoHW"},"content":"        for (Tag tag : toAddTags) {","lastModifiedDate":"2024-03-22"},{"lineNumber":117,"author":{"gitId":"NeoHW"},"content":"            assert tag !\u003d null : \"Tag cannot be null\";","lastModifiedDate":"2024-03-22"},{"lineNumber":118,"author":{"gitId":"NeoHW"},"content":"            if (tagSet.contains(tag)) {","lastModifiedDate":"2024-03-22"},{"lineNumber":119,"author":{"gitId":"NeoHW"},"content":"                commandOutcome.append(String.format(MESSAGE_DUPLICATE_TAG, patient.getName(), tag)).append(\"\\n\");","lastModifiedDate":"2024-03-22"},{"lineNumber":120,"author":{"gitId":"NeoHW"},"content":"            } else {","lastModifiedDate":"2024-03-22"},{"lineNumber":121,"author":{"gitId":"NeoHW"},"content":"                tagSet.add(tag);","lastModifiedDate":"2024-03-22"},{"lineNumber":122,"author":{"gitId":"NeoHW"},"content":"                commandOutcome.append(String.format(MESSAGE_ADD_TAG_SUCCESS, patient.getName(), tag)).append(\"\\n\");","lastModifiedDate":"2024-03-22"},{"lineNumber":123,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-03-22"},{"lineNumber":124,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":125,"author":{"gitId":"NeoHW"},"content":"        return new Pair\u003c\u003e(tagSet, commandOutcome.toString());","lastModifiedDate":"2024-03-22"},{"lineNumber":126,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"NeoHW"},"content":"     * Returns true if both add tag commands have the same index and tags to add.","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"NeoHW"},"content":"     * @param other Another object to compare to.","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"NeoHW"},"content":"     * @return True if the other object is an AddTagsCommand with the same index and tags to add.","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-03-10"},{"lineNumber":135,"author":{"gitId":"NeoHW"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-10"},{"lineNumber":136,"author":{"gitId":"NeoHW"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-10"},{"lineNumber":137,"author":{"gitId":"NeoHW"},"content":"            return true;","lastModifiedDate":"2024-03-10"},{"lineNumber":138,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":139,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":140,"author":{"gitId":"NeoHW"},"content":"        if (!(other instanceof AddTagsCommand)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"NeoHW"},"content":"            return false;","lastModifiedDate":"2024-03-10"},{"lineNumber":142,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":143,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":144,"author":{"gitId":"NeoHW"},"content":"        AddTagsCommand otherTagCommand \u003d (AddTagsCommand) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"NeoHW"},"content":"        return index.equals(otherTagCommand.index)","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"NeoHW"},"content":"                \u0026\u0026 tagsToAdd.equals(otherTagCommand.tagsToAdd);","lastModifiedDate":"2024-03-22"},{"lineNumber":147,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"NeoHW"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"NeoHW"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"NeoHW"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"NeoHW"},"content":"                .add(\"tags\", tagsToAdd)","lastModifiedDate":"2024-03-22"},{"lineNumber":154,"author":{"gitId":"NeoHW"},"content":"                .toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":156,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"NeoHW":156}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"guohuang88"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"guohuang88"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"guohuang88"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":" * Deletes a patient identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"            + \": Deletes the patient identified by the index number used in the displayed patient list.\\n\"","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"    public static final String MESSAGE_DELETE_PATIENT_SUCCESS \u003d \"Patient %1$s with ID %2$s \"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"        + \"has been successfully deleted.\";","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"guohuang88"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(DeleteCommand.class);","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"guohuang88"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"guohuang88"},"content":"     * DeleteCommand Constructor.","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"guohuang88"},"content":"     * @param targetIndex Index of the list in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"guohuang88"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"guohuang88"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"guohuang88"},"content":"     * Returns CommandResult containing success message.","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"guohuang88"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"guohuang88"},"content":"     * @return CommandResult containing success message.","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"guohuang88"},"content":"     * @throws CommandException When the provided index is invalid.","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"guohuang88"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"guohuang88"},"content":"        logger.log(Level.INFO, \"Attempting to execute DeleteCommand.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2024-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"guohuang88"},"content":"        logger.log(Level.INFO, \"Target index is valid.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"        Patient patientToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-08"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"        model.deletePatient(patientToDelete);","lastModifiedDate":"2024-03-09"},{"lineNumber":64,"author":{"gitId":"guohuang88"},"content":"        logger.log(Level.INFO, \"Patient details successfully deleted.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"guohuang88"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"guohuang88"},"content":"                String.format(MESSAGE_DELETE_PATIENT_SUCCESS, patientToDelete.getName(), targetIndex.getOneBased())","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"guohuang88"},"content":"        );","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"guohuang88":21,"choowengyan":2,"NeoHW":7,"-":62}},{"path":"src/main/java/seedu/address/logic/commands/DeleteEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhiWei1010"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ZhiWei1010"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.logic.commands.EditCommand.createEditedPatient;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.List;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.model.patient.EditPatientDescriptor;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.Event;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"ZhiWei1010"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"ZhiWei1010"},"content":" * Deletes a patient identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"ZhiWei1010"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"public class DeleteEventCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"ZhiWei1010"},"content":"    public static final String COMMAND_WORD \u003d \"deletee\";","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"ZhiWei1010"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"            + \": Deletes a specified event for a specific patient identified by index number of patient \"","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"ZhiWei1010"},"content":"            + \" in the displayed patient list as well as the event index.\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"ZhiWei1010"},"content":"            + \"Parameters: INDEX of PATIENT (must be a positive integer matching that of the Patient in the\"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"ZhiWei1010"},"content":"            + \"`list` command) \"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"ZhiWei1010"},"content":"            + \"e/ [Index of the Event] (must be a positive integer matching that of the event of the patient. \\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"ZhiWei1010"},"content":"            + \"Example: \"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"ZhiWei1010"},"content":"            + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"ZhiWei1010"},"content":"            + \"e/ 1 \";","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"ZhiWei1010"},"content":"    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Event %1$s with ID %2$s on %3$s successfully deleted \"","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"ZhiWei1010"},"content":"            + \"for Patient %4$s with ID %5$s\";","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"ZhiWei1010"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(DeleteEventCommand.class);","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"ZhiWei1010"},"content":"    private final Index targetPatientIndex;","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"ZhiWei1010"},"content":"    private final Index targetEventIndex;","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"ZhiWei1010"},"content":"    private final EditPatientDescriptor editPatientDescriptor;","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ZhiWei1010"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"     * Constructs a DeleteEventCommand to delete the specified {@code event} using","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"ZhiWei1010"},"content":"     * {@code targetEventIndex} from the Patient with id {@code targetPatientIndex}","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"ZhiWei1010"},"content":"     * @param targetPatientIndex","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"ZhiWei1010"},"content":"     * @param targetEventIndex","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"ZhiWei1010"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"SherisseTJW"},"content":"    public DeleteEventCommand(Index targetPatientIndex, Index targetEventIndex) {","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"ZhiWei1010"},"content":"        requireAllNonNull(targetPatientIndex, targetEventIndex);","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"ZhiWei1010"},"content":"        this.targetPatientIndex \u003d targetPatientIndex;","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"ZhiWei1010"},"content":"        this.targetEventIndex \u003d targetEventIndex;","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"ZhiWei1010"},"content":"        this.editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"ZhiWei1010"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"ZhiWei1010"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"ZhiWei1010"},"content":"        logger.log(Level.INFO, \"Attempting to execute DeleteEventCommand\");","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"ZhiWei1010"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"ZhiWei1010"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"ZhiWei1010"},"content":"        if (targetPatientIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"ZhiWei1010"},"content":"            logger.log(Level.WARNING, \"Invalid Patient index received! Patient Index: \" + targetPatientIndex);","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"ZhiWei1010"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"ZhiWei1010"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"SherisseTJW"},"content":"        Patient patientToDeleteEvent \u003d lastShownList.get(targetPatientIndex.getZeroBased());","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"SherisseTJW"},"content":"        Set\u003cEvent\u003e eventSet \u003d patientToDeleteEvent.getEvents();","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"SherisseTJW"},"content":"        if (targetEventIndex.getZeroBased() \u003e\u003d eventSet.size()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"ZhiWei1010"},"content":"            logger.log(Level.WARNING, \"Invalid Event index received! Event Index: \" + targetEventIndex);","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"SherisseTJW"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"ZhiWei1010"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"SherisseTJW"},"content":"        Set\u003cEvent\u003e currEventSet \u003d new HashSet\u003c\u003e(patientToDeleteEvent.getEvents());","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"SherisseTJW"},"content":"        List\u003cEvent\u003e currEventList \u003d new ArrayList\u003c\u003e(currEventSet);","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"SherisseTJW"},"content":"        Collections.sort(currEventList);","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"SherisseTJW"},"content":"        Event eventToDelete \u003d currEventList.get(targetEventIndex.getZeroBased());","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"SherisseTJW"},"content":"        currEventList.remove(targetEventIndex.getZeroBased());","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"SherisseTJW"},"content":"        Set\u003cEvent\u003e newEventSet \u003d new HashSet\u003c\u003e(currEventList);","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"ZhiWei1010"},"content":"        logger.log(Level.INFO, \"Target Event deleted from event set. New Event set: \" + newEventSet);","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"SherisseTJW"},"content":"        editPatientDescriptor.setEvents(newEventSet);","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"SherisseTJW"},"content":"        Patient editedPatient \u003d createEditedPatient(patientToDeleteEvent, editPatientDescriptor);","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"SherisseTJW"},"content":"        model.setPatient(patientToDeleteEvent, editedPatient);","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"ZhiWei1010"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"ZhiWei1010"},"content":"        logger.log(Level.INFO, \"Event delete successfully and patient has been updated.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"ZhiWei1010"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EVENT_SUCCESS, eventToDelete.name,","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"ZhiWei1010"},"content":"                targetEventIndex.getOneBased(), eventToDelete.date, patientToDeleteEvent.getName(),","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"ZhiWei1010"},"content":"                targetPatientIndex.getOneBased()));","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"ZhiWei1010"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"ZhiWei1010"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"ZhiWei1010"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"ZhiWei1010"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"ZhiWei1010"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"ZhiWei1010"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"SherisseTJW"},"content":"        if (!(other instanceof DeleteEventCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"ZhiWei1010"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"ZhiWei1010"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"SherisseTJW"},"content":"        DeleteEventCommand otherDeleteEventCommand \u003d (DeleteEventCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"SherisseTJW"},"content":"        return targetPatientIndex.equals(otherDeleteEventCommand.targetPatientIndex)","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"SherisseTJW"},"content":"                \u0026\u0026 targetEventIndex.equals(otherDeleteEventCommand.targetEventIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"ZhiWei1010"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"ZhiWei1010"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"ZhiWei1010"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"ZhiWei1010"},"content":"                .add(\"targetPatientIndex\", targetPatientIndex)","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"ZhiWei1010"},"content":"                .add(\"targetEventIndex\", targetEventIndex)","lastModifiedDate":"2024-03-15"},{"lineNumber":126,"author":{"gitId":"ZhiWei1010"},"content":"                .toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"ZhiWei1010"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"SherisseTJW":26,"ZhiWei1010":102}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTagsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.commands.EditCommand.createEditedPatient;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.EditPatientDescriptor;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":" * Deletes given Tags from a patient identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"public class DeleteTagsCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"    public static final String COMMAND_WORD \u003d \"deletet\";","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"            + \": Deletes the specified tags to the patient identified \"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"            + \"by the index number used in the last patient listing. \"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"            + PREFIX_TAG + \"[TAG]+ \\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"            + PREFIX_TAG + \"fall risk\";","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"    public static final String MESSAGE_DELETE_TAG_SUCCESS \u003d \"Deleted the tag: %2$s for Patient: %1$s\"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"            + \" successfully\";","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"    public static final String MESSAGE_INVALID_TAG \u003d \"The tag: %2$s does not exists\"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"        + \" for Patient: %1$s\";","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(DeleteTagsCommand.class);","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"    private final Index index;","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"    private final Set\u003cTag\u003e tagsToDelete;","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"    private final EditPatientDescriptor editPatientDescriptor;","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"     * Constructs a DeleteTagsCommand to delete the specified {@code Tag} using","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"     * from the Patient with id {@code index}","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"     * @param index of the patient in the filtered patient list to delete the tags","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"     * @param tagsToDelete  to be deleted from the patient","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"    public DeleteTagsCommand(Index index, Set\u003cTag\u003e tagsToDelete) {","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"        requireAllNonNull(index, tagsToDelete);","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"        this.tagsToDelete \u003d tagsToDelete;","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"        this.editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"     * Executes the delete tag command to delete one or more tags to the patient.","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"     * @return A command result message indicating the success of the operation.","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"     * @throws CommandException If there is an error executing the command.","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"            logger.log(Level.WARNING, \"Invalid patient index for Delete Tags Command: \" + index);","lastModifiedDate":"2024-03-22"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"        Patient patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"NeoHW"},"content":"        // Create new Hashset for tags as Patient.getTags() return unmodifiableSet","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"NeoHW"},"content":"        Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e(patientToEdit.getTags());","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"NeoHW"},"content":"        Pair\u003cSet\u003cTag\u003e, String\u003e result \u003d deleteTagsFromPatient(patientToEdit, tagSet, tagsToDelete);","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"NeoHW"},"content":"        Set\u003cTag\u003e newTagSet \u003d result.getKey();","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"NeoHW"},"content":"        String commandResultString \u003d result.getValue();","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"NeoHW"},"content":"        editPatientDescriptor.setTags(newTagSet);","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"NeoHW"},"content":"        Patient editedPatient \u003d createEditedPatient(patientToEdit, editPatientDescriptor);","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"NeoHW"},"content":"        model.setPatient(patientToEdit, editedPatient);","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"NeoHW"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"NeoHW"},"content":"        logger.log(Level.INFO, \"Successfully called delete tags command from patient: \" + editedPatient.getName());","lastModifiedDate":"2024-03-22"},{"lineNumber":98,"author":{"gitId":"NeoHW"},"content":"        return new CommandResult(commandResultString);","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"NeoHW"},"content":"     * Deletes specified tags from a patient\u0027s tag set.","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"NeoHW"},"content":"     * @param patient       The patient whose tags are being modified.","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"NeoHW"},"content":"     * @param tagSet        The current set of tags for the patient.","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"NeoHW"},"content":"     * @param toDeleteTags  The Tags to be deleted.","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"NeoHW"},"content":"     * @return A Pair containing the updated tag set and a string describing the outcome of the deletion.","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"NeoHW"},"content":"    public Pair\u003cSet\u003cTag\u003e, String\u003e deleteTagsFromPatient(Patient patient, Set\u003cTag\u003e tagSet,","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"NeoHW"},"content":"                                                       Set\u003cTag\u003e toDeleteTags) {","lastModifiedDate":"2024-03-22"},{"lineNumber":111,"author":{"gitId":"NeoHW"},"content":"        requireAllNonNull(tagSet, toDeleteTags);","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"NeoHW"},"content":"        StringBuilder commandOutcome \u003d new StringBuilder();","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"NeoHW"},"content":"        for (Tag tag : toDeleteTags) {","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"NeoHW"},"content":"            if (!tagSet.contains(tag)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"NeoHW"},"content":"                commandOutcome.append(String.format(MESSAGE_INVALID_TAG, patient.getName(), tag)).append(\"\\n\");","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"NeoHW"},"content":"            } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"NeoHW"},"content":"                tagSet.remove(tag);","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"NeoHW"},"content":"                commandOutcome.append(String.format(MESSAGE_DELETE_TAG_SUCCESS, patient.getName(), tag)).append(\"\\n\");","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"NeoHW"},"content":"        return new Pair\u003c\u003e(tagSet, commandOutcome.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"NeoHW"},"content":"     * Returns true if both delete tag commands have the same index and tags to delete.","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"NeoHW"},"content":"     * @param other Another object to compare to.","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"NeoHW"},"content":"     * @return True if the other object is an DeleteTagsCommand with the same index and tags to add.","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"NeoHW"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"NeoHW"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"NeoHW"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"NeoHW"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"NeoHW"},"content":"        if (!(other instanceof DeleteTagsCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"NeoHW"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"NeoHW"},"content":"        DeleteTagsCommand otherTagCommand \u003d (DeleteTagsCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"NeoHW"},"content":"        return index.equals(otherTagCommand.index)","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"NeoHW"},"content":"                \u0026\u0026 tagsToDelete.equals(otherTagCommand.tagsToDelete);","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"NeoHW"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"NeoHW"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"NeoHW"},"content":"                .add(\"targetPatientIndex\", index)","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"NeoHW"},"content":"                .add(\"tags\", tagsToDelete)","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"NeoHW"},"content":"                .toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"NeoHW":155}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FAMILY_CONDITION;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FOOD_PREFERENCE;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOBBY;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PID;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERRED_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2024-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.EditPatientDescriptor;","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.Event;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FamilyCondition;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FoodPreference;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.Hobby;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.PatientHospitalId;","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.PreferredName;","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":" * Edits the details of an existing patient in the address book.","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the patient identified \"","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"            + \"by the index number used in the displayed patient list. \"","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"            + \"[\" + PREFIX_PID + \"PATIENT HOSPITAL ID] \"","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"            + \"[\" + PREFIX_PREFERRED_NAME + \"PREFERRED NAME] \"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"            + \"[\" + PREFIX_FOOD_PREFERENCE + \"FOOD PREFERENCE] \"","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"            + \"[\" + PREFIX_FAMILY_CONDITION + \"FAMILY CONDITION] \"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"            + \"[\" + PREFIX_HOBBY + \"HOBBY] \"","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"            + PREFIX_FOOD_PREFERENCE + \"Laksa \"","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"            + PREFIX_FAMILY_CONDITION + \"Sister moved to Indonesia\";","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"    public static final String MESSAGE_EDIT_PATIENT_SUCCESS \u003d \"Edited Patient: %1$s\";","lastModifiedDate":"2024-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"This patient already exists in the address book.\";","lastModifiedDate":"2024-03-09"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(EditCommand.class);","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"    private final EditPatientDescriptor editPatientDescriptor;","lastModifiedDate":"2024-03-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"     * @param index of the patient in the filtered patient list to edit","lastModifiedDate":"2024-03-08"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"     * @param editPatientDescriptor details to edit the patient with","lastModifiedDate":"2024-03-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"    public EditCommand(Index index, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2024-03-09"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"        logger.log(Level.INFO, \"Attempting to execute EditCommand.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"        requireNonNull(editPatientDescriptor);","lastModifiedDate":"2024-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"        this.editPatientDescriptor \u003d new EditPatientDescriptor(editPatientDescriptor);","lastModifiedDate":"2024-03-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2024-03-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"choowengyan"},"content":"            logger.log(Level.WARNING, \"Invalid patient index for EditCommand: \" + index.getOneBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"NeoHW"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"choowengyan"},"content":"        logger.log(Level.INFO, \"Target index is valid.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"NeoHW"},"content":"        Patient patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-08"},{"lineNumber":90,"author":{"gitId":"NeoHW"},"content":"        Patient editedPatient \u003d createEditedPatient(patientToEdit, editPatientDescriptor);","lastModifiedDate":"2024-03-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"NeoHW"},"content":"        if (!patientToEdit.isSamePatient(editedPatient) \u0026\u0026 model.hasPatient(editedPatient)) {","lastModifiedDate":"2024-03-09"},{"lineNumber":93,"author":{"gitId":"NeoHW"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2024-03-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"choowengyan"},"content":"        logger.log(Level.INFO, \"Target patient to edit is valid.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"NeoHW"},"content":"        model.setPatient(patientToEdit, editedPatient);","lastModifiedDate":"2024-03-09"},{"lineNumber":98,"author":{"gitId":"NeoHW"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2024-03-09"},{"lineNumber":99,"author":{"gitId":"choowengyan"},"content":"        logger.log(Level.INFO, \"Patient details successfully updated.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"NeoHW"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PATIENT_SUCCESS, Messages.format(editedPatient)));","lastModifiedDate":"2024-03-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"NeoHW"},"content":"     * Creates and returns a {@code Patient} with the details of {@code patientToEdit}","lastModifiedDate":"2024-03-08"},{"lineNumber":105,"author":{"gitId":"NeoHW"},"content":"     * edited with {@code editPatientDescriptor}.","lastModifiedDate":"2024-03-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"SherisseTJW"},"content":"    static Patient createEditedPatient(Patient patientToEdit, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"NeoHW"},"content":"        assert patientToEdit !\u003d null;","lastModifiedDate":"2024-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"choowengyan"},"content":"        PatientHospitalId originalPatientHospitalId \u003d editPatientDescriptor.getPatientHospitalId()","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"choowengyan"},"content":"            .orElse(patientToEdit.getPatientHospitalId());","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"NeoHW"},"content":"        Name updatedName \u003d editPatientDescriptor.getName().orElse(patientToEdit.getName());","lastModifiedDate":"2024-03-09"},{"lineNumber":113,"author":{"gitId":"choowengyan"},"content":"        PreferredName updatedPreferredName \u003d editPatientDescriptor.getPreferredName()","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"choowengyan"},"content":"            .orElse(patientToEdit.getPreferredName());","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"choowengyan"},"content":"        Set\u003cFoodPreference\u003e updatedFoodPreferences \u003d editPatientDescriptor.getFoodPreferences()","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"choowengyan"},"content":"            .orElse(patientToEdit.getFoodPreferences());","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"choowengyan"},"content":"        Set\u003cFamilyCondition\u003e updatedFamilyConditions \u003d editPatientDescriptor.getFamilyConditions()","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"choowengyan"},"content":"            .orElse(patientToEdit.getFamilyConditions());","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"choowengyan"},"content":"        Set\u003cHobby\u003e updatedHobbies \u003d editPatientDescriptor.getHobbies().orElse(patientToEdit.getHobbies());","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"NeoHW"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPatientDescriptor.getTags().orElse(patientToEdit.getTags());","lastModifiedDate":"2024-03-09"},{"lineNumber":121,"author":{"gitId":"SherisseTJW"},"content":"        Set\u003cEvent\u003e updatedEvents \u003d editPatientDescriptor.getEvents()","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"SherisseTJW"},"content":"                .orElse(patientToEdit.getEvents());","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"choowengyan"},"content":"        logger.log(Level.INFO, \"Attempting to update the information on the patient with the updated fields\");","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"choowengyan"},"content":"        return new Patient(originalPatientHospitalId, updatedName, updatedPreferredName, updatedFoodPreferences,","lastModifiedDate":"2024-04-01"},{"lineNumber":126,"author":{"gitId":"choowengyan"},"content":"            updatedFamilyConditions, updatedHobbies, updatedTags, updatedEvents);","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"NeoHW"},"content":"                \u0026\u0026 editPatientDescriptor.equals(otherEditCommand.editPatientDescriptor);","lastModifiedDate":"2024-03-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"NeoHW"},"content":"                .add(\"editPatientDescriptor\", editPatientDescriptor)","lastModifiedDate":"2024-03-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"SherisseTJW":7,"choowengyan":38,"NeoHW":28,"-":79}},{"path":"src/main/java/seedu/address/logic/commands/EditEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"guohuang88"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.commands.EditCommand.createEditedPatient;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"guohuang88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"guohuang88"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"guohuang88"},"content":"import java.util.List;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"guohuang88"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"guohuang88"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"guohuang88"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"guohuang88"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"guohuang88"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"guohuang88"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"guohuang88"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"guohuang88"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"guohuang88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"guohuang88"},"content":"import seedu.address.model.patient.EditPatientDescriptor;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"guohuang88"},"content":"import seedu.address.model.patient.Event;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"guohuang88"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"guohuang88"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"guohuang88"},"content":" * Edits an event for a patient in the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"guohuang88"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"guohuang88"},"content":"public class EditEventCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"guohuang88"},"content":"    public static final String COMMAND_WORD \u003d \"edite\";","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"guohuang88"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"guohuang88"},"content":"            + \": Edits an event for a specific patient using the patient index\"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"guohuang88"},"content":"            + \" in the patient list and event index.\\n\"","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"guohuang88"},"content":"            + \"Parameters: INDEX (must be a positive integer matching that of the Patient in the `list` command)\"","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"guohuang88"},"content":"            + \" e/ [Index of the updated Event]\"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"guohuang88"},"content":"            + \" n/ [Name of the updated Event]\"","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"guohuang88"},"content":"            + \" d/ [Updated Date / Datetime, in the format DD-MM-YYYY\"","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"guohuang88"},"content":"            + \" / DD-MM-YYYY, HH:mm - HH:mm respectively]\\n\"","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"guohuang88"},"content":"            + \"Example: \"","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"guohuang88"},"content":"            + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"guohuang88"},"content":"            + PREFIX_EVENT + \" 1 \"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"guohuang88"},"content":"            + PREFIX_NAME + \" Updated Event \"","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"guohuang88"},"content":"            + PREFIX_DATETIME + \" 12-10-2024\";","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"guohuang88"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Event %1$s with ID %2$s on %3$s successfully updated \"","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"guohuang88"},"content":"            + \"for Patient %4$s with ID %5$s\";","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"guohuang88"},"content":"    public static final String MESSAGE_DUPLICATE \u003d \"Event %1$s on %2$s already exists for Patient %3$s with ID %4$s\";","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"    public static final String MESSAGE_PAST_EVENT_WARNING \u003d \"Warning: This Event occurred before the current \"","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"            + \"date / datetime\";","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"guohuang88"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(EditEventCommand.class);","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"guohuang88"},"content":"    private final Index patientIndex;","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"guohuang88"},"content":"    private final Index eventIndex;","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"guohuang88"},"content":"    private final Event eventToUpdate;","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"guohuang88"},"content":"    private final EditPatientDescriptor editPatientDescriptor;","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"guohuang88"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"guohuang88"},"content":"     * Constructs an EditEventCommand to edit the specified {@code eventToUpdate}","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"guohuang88"},"content":"     * for {@code eventIndex} to the Patient with id {@code patientIndex}","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"guohuang88"},"content":"     * @param patientIndex The id of the patient.","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"guohuang88"},"content":"     * @param eventIndex The id of the event.","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"guohuang88"},"content":"     * @param eventToUpdate The updated event.","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"guohuang88"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"guohuang88"},"content":"    public EditEventCommand(Index patientIndex, Index eventIndex, Event eventToUpdate) {","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"guohuang88"},"content":"        requireAllNonNull(patientIndex, eventIndex, eventToUpdate);","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"guohuang88"},"content":"        this.patientIndex \u003d patientIndex;","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"guohuang88"},"content":"        this.eventIndex \u003d eventIndex;","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"guohuang88"},"content":"        this.eventToUpdate \u003d eventToUpdate;","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"guohuang88"},"content":"        this.editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"guohuang88"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"guohuang88"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"guohuang88"},"content":"        logger.log(Level.INFO, \"Attempting to execute EditEventCommand.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"guohuang88"},"content":"        requireAllNonNull(model);","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"guohuang88"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"guohuang88"},"content":"        checkPatientIndex(lastShownList);","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"guohuang88"},"content":"        Patient patientToEditEvent \u003d lastShownList.get(patientIndex.getZeroBased());","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"guohuang88"},"content":"        Set\u003cEvent\u003e events \u003d patientToEditEvent.getEvents();","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"guohuang88"},"content":"        checkEventIndex(events);","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"guohuang88"},"content":"        checkDuplicateEvent(events, patientToEditEvent);","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"guohuang88"},"content":"        logger.log(Level.INFO, \"All three checks for invalid patient index, invalid event index \"","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"guohuang88"},"content":"                + \"and duplicate event have been completed.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"guohuang88"},"content":"        List\u003cEvent\u003e eventList \u003d new ArrayList\u003c\u003e(events);","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"guohuang88"},"content":"        editEvent(eventList);","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"guohuang88"},"content":"        logger.log(Level.INFO, \"Event edited successfully.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"guohuang88"},"content":"        Patient updatedPatient \u003d createEditedPatient(patientToEditEvent, editPatientDescriptor);","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"guohuang88"},"content":"        updatePatientList(model, patientToEditEvent, updatedPatient);","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"guohuang88"},"content":"        logger.log(Level.INFO, \"Updated the information on the patient list successfully.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"SherisseTJW"},"content":"        if (this.eventToUpdate.isPastEvent()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"SherisseTJW"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, eventToUpdate.name,","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"SherisseTJW"},"content":"                    eventIndex.getOneBased(), eventToUpdate.date, updatedPatient.getName(), patientIndex.getOneBased())","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"SherisseTJW"},"content":"                    + \"\\n\" + MESSAGE_PAST_EVENT_WARNING);","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"guohuang88"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, eventToUpdate.name, eventIndex.getOneBased(),","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"guohuang88"},"content":"                eventToUpdate.date, updatedPatient.getName(), patientIndex.getOneBased()));","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"guohuang88"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"guohuang88"},"content":"     * Checks whether the patient index is valid.","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"guohuang88"},"content":"     * @param lastShownList The last shown displayed list.","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"guohuang88"},"content":"     * @throws CommandException Throws exception when patient index is invalid.","lastModifiedDate":"2024-03-31"},{"lineNumber":114,"author":{"gitId":"guohuang88"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"guohuang88"},"content":"    public void checkPatientIndex(List\u003cPatient\u003e lastShownList) throws CommandException {","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"guohuang88"},"content":"        if (patientIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"guohuang88"},"content":"            logger.log(Level.WARNING, \"Invalid patient index for EditEventCommand: \"","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"guohuang88"},"content":"                    + patientIndex.getOneBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"guohuang88"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"guohuang88"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"guohuang88"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"guohuang88"},"content":"     * Checks whether the event index is valid.","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"guohuang88"},"content":"     * @param events Set of events of the specified patient.","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"guohuang88"},"content":"     * @throws CommandException Throws exception when event index is invalid.","lastModifiedDate":"2024-03-31"},{"lineNumber":128,"author":{"gitId":"guohuang88"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":129,"author":{"gitId":"guohuang88"},"content":"    public void checkEventIndex(Set\u003cEvent\u003e events) throws CommandException {","lastModifiedDate":"2024-03-31"},{"lineNumber":130,"author":{"gitId":"guohuang88"},"content":"        if (eventIndex.getZeroBased() \u003e\u003d events.size()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"guohuang88"},"content":"            logger.log(Level.WARNING, \"Invalid event index for EditEventCommand: \"","lastModifiedDate":"2024-04-01"},{"lineNumber":132,"author":{"gitId":"guohuang88"},"content":"                    + eventIndex.getOneBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":133,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":134,"author":{"gitId":"guohuang88"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"guohuang88"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":136,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":137,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"guohuang88"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":139,"author":{"gitId":"guohuang88"},"content":"     * Checks if the event to edit is the same as any of the existing events.","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"guohuang88"},"content":"     * @param events Set of events.","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"guohuang88"},"content":"     * @param patientToEditEvent The specified patient to edit event.","lastModifiedDate":"2024-03-31"},{"lineNumber":142,"author":{"gitId":"guohuang88"},"content":"     * @throws CommandException Throws exception when there is a duplicate event.","lastModifiedDate":"2024-03-31"},{"lineNumber":143,"author":{"gitId":"guohuang88"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":144,"author":{"gitId":"guohuang88"},"content":"    public void checkDuplicateEvent(Set\u003cEvent\u003e events, Patient patientToEditEvent) throws CommandException {","lastModifiedDate":"2024-03-31"},{"lineNumber":145,"author":{"gitId":"guohuang88"},"content":"        if (events.contains(eventToUpdate)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":146,"author":{"gitId":"guohuang88"},"content":"            logger.log(Level.WARNING, \"Duplicate event found while executing EditEventCommand: \"","lastModifiedDate":"2024-04-01"},{"lineNumber":147,"author":{"gitId":"guohuang88"},"content":"                    + eventToUpdate.name + \", \" + eventToUpdate.date);","lastModifiedDate":"2024-04-01"},{"lineNumber":148,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":149,"author":{"gitId":"guohuang88"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE, eventToUpdate.name, eventToUpdate.date,","lastModifiedDate":"2024-03-31"},{"lineNumber":150,"author":{"gitId":"guohuang88"},"content":"                    patientToEditEvent.getName(), patientIndex.getOneBased()));","lastModifiedDate":"2024-03-31"},{"lineNumber":151,"author":{"gitId":"guohuang88"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":152,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":153,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":154,"author":{"gitId":"guohuang88"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":155,"author":{"gitId":"guohuang88"},"content":"     * Edits the specified event.","lastModifiedDate":"2024-03-31"},{"lineNumber":156,"author":{"gitId":"guohuang88"},"content":"     * @param eventList List of events of the specified patient.","lastModifiedDate":"2024-03-31"},{"lineNumber":157,"author":{"gitId":"guohuang88"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":158,"author":{"gitId":"guohuang88"},"content":"    public void editEvent(List\u003cEvent\u003e eventList) {","lastModifiedDate":"2024-03-31"},{"lineNumber":159,"author":{"gitId":"guohuang88"},"content":"        logger.log(Level.INFO, \"Attempting to edit event \" + eventIndex.getOneBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":160,"author":{"gitId":"guohuang88"},"content":"        assert(eventList.size() \u003e 0);","lastModifiedDate":"2024-04-01"},{"lineNumber":161,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":162,"author":{"gitId":"SherisseTJW"},"content":"        Collections.sort(eventList);","lastModifiedDate":"2024-03-23"},{"lineNumber":163,"author":{"gitId":"guohuang88"},"content":"        eventList.set(eventIndex.getZeroBased(), eventToUpdate);","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"guohuang88"},"content":"        Set\u003cEvent\u003e updatedEvents \u003d new HashSet\u003c\u003e(eventList);","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"guohuang88"},"content":"        editPatientDescriptor.setEvents(updatedEvents);","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":167,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":168,"author":{"gitId":"guohuang88"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":169,"author":{"gitId":"guohuang88"},"content":"     * Updates the displayed patient list.","lastModifiedDate":"2024-03-31"},{"lineNumber":170,"author":{"gitId":"guohuang88"},"content":"     * @param model It stores current patient objects.","lastModifiedDate":"2024-03-31"},{"lineNumber":171,"author":{"gitId":"guohuang88"},"content":"     * @param patientToEditEvent The specified patient to edit event.","lastModifiedDate":"2024-03-31"},{"lineNumber":172,"author":{"gitId":"guohuang88"},"content":"     * @param updatedPatient The specified patient with updated event.","lastModifiedDate":"2024-03-31"},{"lineNumber":173,"author":{"gitId":"guohuang88"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":174,"author":{"gitId":"guohuang88"},"content":"    public void updatePatientList(Model model, Patient patientToEditEvent, Patient updatedPatient) {","lastModifiedDate":"2024-03-31"},{"lineNumber":175,"author":{"gitId":"guohuang88"},"content":"        logger.log(Level.INFO, \"Attempting to update the information on the patient list \"","lastModifiedDate":"2024-04-01"},{"lineNumber":176,"author":{"gitId":"guohuang88"},"content":"                + \"with the newly edited event\");","lastModifiedDate":"2024-04-01"},{"lineNumber":177,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":178,"author":{"gitId":"guohuang88"},"content":"        model.setPatient(patientToEditEvent, updatedPatient);","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"guohuang88"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":180,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":181,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":182,"author":{"gitId":"guohuang88"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":183,"author":{"gitId":"guohuang88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":184,"author":{"gitId":"guohuang88"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"guohuang88"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":186,"author":{"gitId":"guohuang88"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":187,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":188,"author":{"gitId":"guohuang88"},"content":"        if (!(other instanceof EditEventCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":189,"author":{"gitId":"guohuang88"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":190,"author":{"gitId":"guohuang88"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":191,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":192,"author":{"gitId":"guohuang88"},"content":"        EditEventCommand otherEditEventCommand \u003d (EditEventCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":193,"author":{"gitId":"guohuang88"},"content":"        return patientIndex.equals(otherEditEventCommand.patientIndex)","lastModifiedDate":"2024-03-18"},{"lineNumber":194,"author":{"gitId":"guohuang88"},"content":"                \u0026\u0026 eventIndex.equals(otherEditEventCommand.eventIndex)","lastModifiedDate":"2024-03-18"},{"lineNumber":195,"author":{"gitId":"guohuang88"},"content":"                \u0026\u0026 eventToUpdate.equals(otherEditEventCommand.eventToUpdate);","lastModifiedDate":"2024-03-18"},{"lineNumber":196,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":197,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":198,"author":{"gitId":"guohuang88"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":199,"author":{"gitId":"guohuang88"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":200,"author":{"gitId":"guohuang88"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-16"},{"lineNumber":201,"author":{"gitId":"guohuang88"},"content":"                .add(\"patientIndex\", patientIndex)","lastModifiedDate":"2024-03-16"},{"lineNumber":202,"author":{"gitId":"guohuang88"},"content":"                .add(\"eventIndex\", eventIndex)","lastModifiedDate":"2024-03-16"},{"lineNumber":203,"author":{"gitId":"guohuang88"},"content":"                .add(\"eventToUpdate\", eventToUpdate)","lastModifiedDate":"2024-03-18"},{"lineNumber":204,"author":{"gitId":"guohuang88"},"content":"                .toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":205,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":206,"author":{"gitId":"guohuang88"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"guohuang88":196,"SherisseTJW":10}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":" * Finds and lists all patients in address book whose name contains any of the argument keywords.","lastModifiedDate":"2024-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all patients whose names contain any of \"","lastModifiedDate":"2024-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"        model.updateFilteredPatientList(predicate);","lastModifiedDate":"2024-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"                String.format(Messages.MESSAGE_PATIENT_LISTED_OVERVIEW, model.getFilteredPatientList().size()));","lastModifiedDate":"2024-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"NeoHW":5,"-":53}},{"path":"src/main/java/seedu/address/logic/commands/FindTagsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"guohuang88"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"guohuang88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"guohuang88"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"guohuang88"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"guohuang88"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"guohuang88"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"guohuang88"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"guohuang88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"guohuang88"},"content":"import seedu.address.model.patient.TagContainsKeywordsPredicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"guohuang88"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"guohuang88"},"content":" * Finds and lists all patients in patient list whose tag contains any of the argument keywords.","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"guohuang88"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"guohuang88"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"guohuang88"},"content":"public class FindTagsCommand extends Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"guohuang88"},"content":"    public static final String COMMAND_WORD \u003d \"findt\";","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"guohuang88"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"guohuang88"},"content":"            + \": Finds all patient whose tag contains any of the specified keywords (case-insensitive)\"","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"guohuang88"},"content":"            + \" and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"guohuang88"},"content":"            + \"Parameter: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"guohuang88"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"guohuang88"},"content":"            + \" diabetes wheelchair\";","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"guohuang88"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(FindTagsCommand.class);","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"guohuang88"},"content":"    private final TagContainsKeywordsPredicate predicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"guohuang88"},"content":"    public FindTagsCommand(TagContainsKeywordsPredicate predicate) {","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"guohuang88"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"guohuang88"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"guohuang88"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"guohuang88"},"content":"        logger.log(Level.INFO, \"Attempting to execute EditEventCommand.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"guohuang88"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"guohuang88"},"content":"        model.updateFilteredPatientList(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"guohuang88"},"content":"        logger.log(Level.INFO, \"Successfully updated the patient list.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"guohuang88"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"guohuang88"},"content":"                String.format(Messages.MESSAGE_PATIENT_LISTED_OVERVIEW, model.getFilteredPatientList().size()));","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"guohuang88"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"guohuang88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"guohuang88"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"guohuang88"},"content":"            return true;","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"guohuang88"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"guohuang88"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"guohuang88"},"content":"        if (!(other instanceof FindTagsCommand)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"guohuang88"},"content":"            return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"guohuang88"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"guohuang88"},"content":"        FindTagsCommand otherFindTagsCommand \u003d (FindTagsCommand) other;","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"guohuang88"},"content":"        return predicate.equals(otherFindTagsCommand.predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"guohuang88"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"guohuang88"},"content":"    public String toString() {","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"guohuang88"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"guohuang88"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"guohuang88"},"content":"                .toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"guohuang88"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"guohuang88":71}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2024-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":" * Lists all patients in the address book to the user.","lastModifiedDate":"2024-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all patients\";","lastModifiedDate":"2024-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2024-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"NeoHW":4,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhiWei1010"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"ZhiWei1010"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.model.patient.comparators.NameComparator.NAME_COMPARATOR;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.model.patient.comparators.PreferredNameComparator.PREFERRED_NAME_COMPARATOR;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.Collections;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"ZhiWei1010"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"ZhiWei1010"},"content":" * Sorts (based on specified comparator) and list all patients in the address book to the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"ZhiWei1010"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"ZhiWei1010"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"ZhiWei1010"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"ZhiWei1010"},"content":"    public static final String MESSAGE_SORT_SUCCESS \u003d \"Successfully sorted all patients by %1s\";","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"ZhiWei1010"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sort all persons by the specified attribute \"","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"ZhiWei1010"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"ZhiWei1010"},"content":"            + \"Parameters: [ATTRIBUTE]\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"ZhiWei1010"},"content":"            + \"Example: \" + COMMAND_WORD + \" n\";","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"ZhiWei1010"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(SortCommand.class);","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"ZhiWei1010"},"content":"    private final Comparator\u003cPatient\u003e comparator;","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"ZhiWei1010"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"ZhiWei1010"},"content":"     * Creates a new SortCommand to sort the patients in patient list by the specified {@code comparator}","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"ZhiWei1010"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"ZhiWei1010"},"content":"     * @param comparator the comparator used to compare the patient list","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"ZhiWei1010"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"ZhiWei1010"},"content":"    public SortCommand(Comparator\u003cPatient\u003e comparator) {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"ZhiWei1010"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"ZhiWei1010"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"ZhiWei1010"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"ZhiWei1010"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"ZhiWei1010"},"content":"        logger.log(Level.INFO, \"Attempting to execute SortCommand\");","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"ZhiWei1010"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"ZhiWei1010"},"content":"        String sortAttribute \u003d \"\";","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"ZhiWei1010"},"content":"        if (this.comparator.equals(NAME_COMPARATOR)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"ZhiWei1010"},"content":"            sortAttribute \u003d \"name\";","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"ZhiWei1010"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"ZhiWei1010"},"content":"        if (this.comparator.equals(PREFERRED_NAME_COMPARATOR)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"ZhiWei1010"},"content":"            sortAttribute \u003d \"preferred name\";","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"ZhiWei1010"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"ZhiWei1010"},"content":"        assert (!sortAttribute.isEmpty()) : \"Sort attribute should not be empty\";","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"ZhiWei1010"},"content":"        List\u003cPatient\u003e patientList \u003d model.getFullPatientList();","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"ZhiWei1010"},"content":"        List\u003cPatient\u003e patientArrayList \u003d new ArrayList\u003c\u003e(patientList);","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"ZhiWei1010"},"content":"        Collections.sort(patientArrayList, this.comparator);","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"ZhiWei1010"},"content":"        model.updatePatientList(patientArrayList);","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"ZhiWei1010"},"content":"        model.updateFilteredPatientList(Model.PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"ZhiWei1010"},"content":"        logger.log(Level.INFO, \"Successfully sorted the patient list by \" + sortAttribute);","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"ZhiWei1010"},"content":"        return new CommandResult(String.format(MESSAGE_SORT_SUCCESS, sortAttribute));","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"ZhiWei1010"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"ZhiWei1010"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"ZhiWei1010"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"ZhiWei1010"},"content":"            return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"ZhiWei1010"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"ZhiWei1010"},"content":"        if (!(other instanceof SortCommand)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"ZhiWei1010"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"ZhiWei1010"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"ZhiWei1010"},"content":"        SortCommand otherSortCommand \u003d (SortCommand) other;","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"ZhiWei1010"},"content":"        return this.comparator.equals(otherSortCommand.comparator);","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"ZhiWei1010"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"ZhiWei1010"},"content":"    public String toString() {","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"ZhiWei1010"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"ZhiWei1010"},"content":"                .add(\"comparator\", this.comparator)","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"ZhiWei1010"},"content":"                .toString();","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"ZhiWei1010"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"ZhiWei1010":100}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FAMILY_CONDITION;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FOOD_PREFERENCE;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOBBY;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PID;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERRED_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FamilyCondition;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FoodPreference;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.Hobby;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.PatientHospitalId;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.PreferredName;","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddCommandParser.class);","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"        logger.info(\"Received arguments: \" + args + \" for AddCommand; Attempting to parse..\");","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PID, PREFIX_NAME, PREFIX_PREFERRED_NAME, PREFIX_FOOD_PREFERENCE,","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"                    PREFIX_FAMILY_CONDITION, PREFIX_HOBBY, PREFIX_TAG);","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_PID, PREFIX_NAME, PREFIX_PREFERRED_NAME, PREFIX_FOOD_PREFERENCE,","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"            PREFIX_FAMILY_CONDITION, PREFIX_HOBBY) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"            logger.log(Level.WARNING, \"Required prefix(s) not found in AddCommand\");","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"        logger.info(\"All prefixes required are present.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_PID, PREFIX_NAME, PREFIX_PREFERRED_NAME);","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"        PatientHospitalId patientHospitalId \u003d ParserUtil.parsePatientHospitalId(argMultimap.getValue(PREFIX_PID).get());","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"        PreferredName preferredName \u003d ParserUtil.parsePreferredName(argMultimap.getValue(PREFIX_PREFERRED_NAME).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"        Set\u003cFoodPreference\u003e foodPreferenceList \u003d ParserUtil.parseFoodPreferences(argMultimap","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"            .getAllValues(PREFIX_FOOD_PREFERENCE));","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"        Set\u003cFamilyCondition\u003e familyConditionList \u003d ParserUtil.parseFamilyConditions(argMultimap","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"            .getAllValues(PREFIX_FAMILY_CONDITION));","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"        Set\u003cHobby\u003e hobbyList \u003d ParserUtil.parseHobbies(argMultimap.getAllValues(PREFIX_HOBBY));","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"        Patient patient \u003d new Patient(patientHospitalId, name, preferredName, foodPreferenceList, familyConditionList,","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"            hobbyList, tagList);","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"        logger.info(\"All arguments received are valid\");","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"        return new AddCommand(patient);","lastModifiedDate":"2024-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"choowengyan":33,"NeoHW":3,"-":45}},{"path":"src/main/java/seedu/address/logic/parser/AddEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.parser.ArgumentTokenizer.checkInvalidPrefixesForAddEvent;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.Event;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":" * Parses the user\u0027s input arguments and creates a new AddEvent Command","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"public class AddEventCommandParser implements Parser\u003cAddEventCommand\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddEventCommandParser.class);","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"    public AddEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"        logger.info(\"Received arguments: \" + args + \" for AddEventCommand; Attempting to parse..\");","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"            checkInvalidPrefixesForAddEvent(args);","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"            logger.log(Level.WARNING, \"Invalid Prefixes found in AddEventCommand\");","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"            throw new ParseException(e.getMessage(), e);","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DATETIME);","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_DATETIME) || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"                    AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"        logger.info(\"All prefixes required are present.\");","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"        Index index;","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"SherisseTJW"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"SherisseTJW"},"content":"                    AddEventCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"SherisseTJW"},"content":"        logger.info(\"Patient Index is valid\");","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"SherisseTJW"},"content":"        Event event \u003d ParserUtil.parseEvent(argMultimap.getValue(PREFIX_NAME).get(),","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"SherisseTJW"},"content":"                argMultimap.getValue(PREFIX_DATETIME).get());","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"SherisseTJW"},"content":"        logger.info(\"All arguments received are valid\");","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"SherisseTJW"},"content":"        return new AddEventCommand(index, event);","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"SherisseTJW":63}},{"path":"src/main/java/seedu/address/logic/parser/AddTagsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.parser.ArgumentTokenizer.checkInvalidPrefixesForTags;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"import seedu.address.logic.commands.AddTagsCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":" * Parses input arguments and creates a new AddTagsCommand object","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"public class AddTagsCommandParser implements Parser\u003cAddTagsCommand\u003e {","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddTagsCommandParser.class);","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTagsCommand","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"     * and returns an AddTagsCommand object for execution.","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"    public AddTagsCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"        logger.log(Level.INFO, \"Parsing AddTagsCommand: \" + args);","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"            checkInvalidPrefixesForTags(args);","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"            logger.log(Level.WARNING, \"Invalid prefixes provided in AddTagsCommand: \" + args);","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"            throw new ParseException(pe.getMessage(), pe);","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2024-03-10"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TAG) || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"            logger.log(Level.WARNING, \"Invalid command format for AddTagsCommand: \" + args);","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"                    AddTagsCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"        Index index;","lastModifiedDate":"2024-03-10"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-03-10"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-10"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-10"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"            logger.warning(\"Index is not a non-zero unsigned integer in AddTagsCommand: \" + args);","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTagsCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"        Set\u003cTag\u003e tagList;","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"            tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"            logger.log(Level.WARNING, \"Invalid tags provided in AddTagsCommand: \" + args);","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"            throw new ParseException(pe.getMessage(), pe);","lastModifiedDate":"2024-03-22"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"        logger.log(Level.INFO, \"Successfully parsed AddTagsCommand with index \" + index + \" and tags \" + tagList);","lastModifiedDate":"2024-03-22"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"        return new AddTagsCommand(index, tagList);","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"NeoHW":71}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"import seedu.address.logic.commands.AddTagsCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"import seedu.address.logic.commands.DeleteTagsCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"guohuang88"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"guohuang88"},"content":"import seedu.address.logic.commands.FindTagsCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"SherisseTJW"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"SherisseTJW"},"content":"            return new AddEventCommandParser().parse(arguments);","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":90,"author":{"gitId":"NeoHW"},"content":"        case AddTagsCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"NeoHW"},"content":"            return new AddTagsCommandParser().parse(arguments);","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":93,"author":{"gitId":"NeoHW"},"content":"        case DeleteTagsCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"NeoHW"},"content":"            return new DeleteTagsCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"guohuang88"},"content":"        case FindTagsCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"guohuang88"},"content":"            return new FindTagsCommandParser().parse(arguments);","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"SherisseTJW"},"content":"        case DeleteEventCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"SherisseTJW"},"content":"            return new DeleteEventCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"guohuang88"},"content":"        case EditEventCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"guohuang88"},"content":"            return new EditEventCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"ZhiWei1010"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"ZhiWei1010"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"guohuang88":8,"SherisseTJW":7,"ZhiWei1010":5,"NeoHW":8,"-":86}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"NeoHW":1,"-":78}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LIST;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"    public static final String INVALID_PREFIXES_MESSAGE \u003d \"Invalid command prefixes detected. \"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"            + \"Only %1$s prefixes allowed\";","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"     * @param argsString The arguments string to search for prefixes","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"     * @return a list of PrefixPosition objects representing the positions of prefixes","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString) {","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"        return PREFIX_LIST.stream()","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"     * Finds all zero-based prefix positions in the given arguments string from specified given prefixes.","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":149,"author":{"gitId":"SherisseTJW"},"content":"     * Checks for invalid prefixes other than {@code t/} in the provided arguments string.","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"SherisseTJW"},"content":"     * Throws a ParseException if any prefix other than {@code t/} is found.","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":152,"author":{"gitId":"NeoHW"},"content":"     * @param argsString The arguments string to check for invalid prefixes","lastModifiedDate":"2024-03-31"},{"lineNumber":153,"author":{"gitId":"NeoHW"},"content":"     * @throws ParseException if an invalid prefix is found","lastModifiedDate":"2024-03-31"},{"lineNumber":154,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":155,"author":{"gitId":"NeoHW"},"content":"    public static void checkInvalidPrefixesForTags(String argsString) throws ParseException {","lastModifiedDate":"2024-03-31"},{"lineNumber":156,"author":{"gitId":"NeoHW"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString);","lastModifiedDate":"2024-03-31"},{"lineNumber":157,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":158,"author":{"gitId":"NeoHW"},"content":"        for (PrefixPosition position : positions) {","lastModifiedDate":"2024-03-31"},{"lineNumber":159,"author":{"gitId":"NeoHW"},"content":"            Prefix prefix \u003d position.getPrefix();","lastModifiedDate":"2024-03-31"},{"lineNumber":160,"author":{"gitId":"NeoHW"},"content":"            if (!PREFIX_TAG.equals(prefix)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":161,"author":{"gitId":"SherisseTJW"},"content":"                throw new ParseException(String.format(INVALID_PREFIXES_MESSAGE, PREFIX_TAG));","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"SherisseTJW"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":164,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":165,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":166,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":167,"author":{"gitId":"SherisseTJW"},"content":"     * Checks for invalid prefixes, i.e., prefixes other than {@code n/}  or {@code d/} in the provided arguments","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"SherisseTJW"},"content":"     * string.","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"SherisseTJW"},"content":"     * Throws a ParseException if any prefix other than {@code n/} or {@code d/} is found.","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"SherisseTJW"},"content":"     * @param argsString The arguments string to check for invalid prefixes","lastModifiedDate":"2024-04-02"},{"lineNumber":172,"author":{"gitId":"SherisseTJW"},"content":"     * @throws ParseException If an invalid prefix is found","lastModifiedDate":"2024-04-02"},{"lineNumber":173,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":174,"author":{"gitId":"SherisseTJW"},"content":"    public static void checkInvalidPrefixesForAddEvent(String argsString) throws ParseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":175,"author":{"gitId":"SherisseTJW"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString);","lastModifiedDate":"2024-04-02"},{"lineNumber":176,"author":{"gitId":"SherisseTJW"},"content":"        List\u003cPrefix\u003e validPrefixes \u003d List.of(PREFIX_NAME, PREFIX_DATETIME);","lastModifiedDate":"2024-04-02"},{"lineNumber":177,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":178,"author":{"gitId":"SherisseTJW"},"content":"        for (PrefixPosition position : positions) {","lastModifiedDate":"2024-04-02"},{"lineNumber":179,"author":{"gitId":"SherisseTJW"},"content":"            Prefix prefix \u003d position.getPrefix();","lastModifiedDate":"2024-04-02"},{"lineNumber":180,"author":{"gitId":"SherisseTJW"},"content":"            if (!validPrefixes.contains(prefix)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":181,"author":{"gitId":"SherisseTJW"},"content":"                throw new ParseException(String.format(INVALID_PREFIXES_MESSAGE, validPrefixes));","lastModifiedDate":"2024-04-02"},{"lineNumber":182,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":183,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":184,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":185,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":186,"author":{"gitId":"guohuang88"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"guohuang88"},"content":"     * Checks for invalid prefixes, i.e., prefixes other than {@code e/} or {@code n/}  or {@code d/}","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"guohuang88"},"content":"     * in the provided arguments string.","lastModifiedDate":"2024-04-02"},{"lineNumber":189,"author":{"gitId":"guohuang88"},"content":"     * Throws a ParseException if any prefix other than {@code e/} or {@code n/} or {@code d/} is found.","lastModifiedDate":"2024-04-02"},{"lineNumber":190,"author":{"gitId":"guohuang88"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"guohuang88"},"content":"     * @param argsString The arguments string to check for invalid prefixes.","lastModifiedDate":"2024-04-02"},{"lineNumber":192,"author":{"gitId":"guohuang88"},"content":"     * @throws ParseException If an invalid prefix is found.","lastModifiedDate":"2024-04-02"},{"lineNumber":193,"author":{"gitId":"guohuang88"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":194,"author":{"gitId":"guohuang88"},"content":"    public static void checkInvalidPrefixesForEditEvent(String argsString) throws ParseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":195,"author":{"gitId":"guohuang88"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString);","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"guohuang88"},"content":"        List\u003cPrefix\u003e validPrefixes \u003d List.of(PREFIX_EVENT, PREFIX_NAME, PREFIX_DATETIME);","lastModifiedDate":"2024-04-02"},{"lineNumber":197,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":198,"author":{"gitId":"guohuang88"},"content":"        for (PrefixPosition position : positions) {","lastModifiedDate":"2024-04-02"},{"lineNumber":199,"author":{"gitId":"guohuang88"},"content":"            Prefix prefix \u003d position.getPrefix();","lastModifiedDate":"2024-04-02"},{"lineNumber":200,"author":{"gitId":"guohuang88"},"content":"            if (!validPrefixes.contains(prefix)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"guohuang88"},"content":"                throw new ParseException(String.format(INVALID_PREFIXES_MESSAGE, validPrefixes));","lastModifiedDate":"2024-04-02"},{"lineNumber":202,"author":{"gitId":"guohuang88"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"guohuang88"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":204,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":205,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"guohuang88":21,"SherisseTJW":27,"NeoHW":32,"-":147}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"    public static final Prefix PREFIX_PID \u003d new Prefix(\"id/\");","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"    public static final Prefix PREFIX_PREFERRED_NAME \u003d new Prefix(\"p/\");","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"    public static final Prefix PREFIX_FOOD_PREFERENCE \u003d new Prefix(\"f/\");","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"    public static final Prefix PREFIX_FAMILY_CONDITION \u003d new Prefix(\"c/\");","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"    public static final Prefix PREFIX_HOBBY \u003d new Prefix(\"h/\");","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"    public static final Prefix PREFIX_DATETIME \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"    public static final Prefix PREFIX_EVENT \u003d new Prefix(\"e/\");","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"    public static final Set\u003cPrefix\u003e PREFIX_LIST \u003d Set.of(PREFIX_PID, PREFIX_NAME, PREFIX_PREFERRED_NAME,","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"            PREFIX_FOOD_PREFERENCE, PREFIX_FAMILY_CONDITION, PREFIX_HOBBY, PREFIX_TAG, PREFIX_DATETIME, PREFIX_EVENT);","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"SherisseTJW":2,"choowengyan":5,"NeoHW":4,"-":12}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"guohuang88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"guohuang88"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"guohuang88"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"guohuang88"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"guohuang88"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(DeleteCommandParser.class);","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"guohuang88"},"content":"        logger.log(Level.INFO, \"Received arguments: \" + args + \" for DeleteCommand; Attempting to parse..\");","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"guohuang88"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"guohuang88"},"content":"            logger.log(Level.INFO, \"Index is valid.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"guohuang88":12,"-":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhiWei1010"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ZhiWei1010"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"ZhiWei1010"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":" * Parses the user\u0027s input arguments and creates a new DeleteEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ZhiWei1010"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"public class DeleteEventCommandParser implements Parser\u003cDeleteEventCommand\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(DeleteEventCommandParser.class);","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"ZhiWei1010"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"ZhiWei1010"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"ZhiWei1010"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"    public DeleteEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"ZhiWei1010"},"content":"        logger.info(\"Received arguments: \" + args + \" for DeleteEventCommand; Attempting to parse..\");","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"ZhiWei1010"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_EVENT);","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_EVENT) || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"ZhiWei1010"},"content":"            logger.log(Level.WARNING, \"Invalid command format!\");","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"ZhiWei1010"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"                    DeleteEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"ZhiWei1010"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"ZhiWei1010"},"content":"        Index patientIndex;","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"ZhiWei1010"},"content":"        Index eventIndex;","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"ZhiWei1010"},"content":"        try {","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"ZhiWei1010"},"content":"            patientIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"            eventIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_EVENT).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"ZhiWei1010"},"content":"            logger.log(Level.INFO, \"Patient index and Event Index successfully parsed!\");","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"            return new DeleteEventCommand(patientIndex, eventIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"ZhiWei1010"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"ZhiWei1010"},"content":"            logger.log(Level.WARNING, \"Parsing of patient index or event index failed!\");","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"ZhiWei1010"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"ZhiWei1010"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"ZhiWei1010"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"SherisseTJW":12,"ZhiWei1010":39}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTagsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.parser.ArgumentTokenizer.checkInvalidPrefixesForTags;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"import seedu.address.logic.commands.AddTagsCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"import seedu.address.logic.commands.DeleteTagsCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":" * Parses the user\u0027s input arguments and creates a new DeleteTagsCommand object","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"public class DeleteTagsCommandParser implements Parser\u003cDeleteTagsCommand\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(DeleteTagsCommandParser.class);","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTagsCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"     * and returns an DeleteTagsCommand object for execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"    public DeleteTagsCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"        logger.log(Level.INFO, \"Parsing DeleteTagsCommand: \" + args);","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"            checkInvalidPrefixesForTags(args);","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"            logger.log(Level.WARNING, \"Invalid prefixes provided in DeleteTagsCommand: \" + args);","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"            throw new ParseException(pe.getMessage(), pe);","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TAG) || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"            logger.log(Level.WARNING, \"Invalid command format for DeleteTagsCommand: \" + args);","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"                    DeleteTagsCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"        Index index;","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"            logger.log(Level.WARNING, \"Index is not a non-zero unsigned integer in DeleteTagsCommand: \" + args);","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTagsCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"        Set\u003cTag\u003e tagList;","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"            tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"            logger.log(Level.WARNING, \"Invalid tags provided in DeleteTagsCommand: \" + args);","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"            throw new ParseException(pe.getMessage(), pe);","lastModifiedDate":"2024-03-22"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"        logger.log(Level.INFO, \"Successfully parsed DeleteTagsCommand with index \" + index + \" and tags \" + tagList);","lastModifiedDate":"2024-03-22"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"        return new DeleteTagsCommand(index, tagList);","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"NeoHW":71}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FAMILY_CONDITION;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FOOD_PREFERENCE;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOBBY;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PID;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERRED_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.EditPatientDescriptor;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FamilyCondition;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FoodPreference;","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.Hobby;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(EditCommandParser.class);","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"        logger.log(Level.INFO, \"Received arguments: \" + args + \" for EditCommand; Attempting to parse..\");","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PID, PREFIX_NAME, PREFIX_PREFERRED_NAME, PREFIX_FOOD_PREFERENCE,","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"                    PREFIX_FAMILY_CONDITION, PREFIX_HOBBY, PREFIX_TAG);","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_PID, PREFIX_NAME, PREFIX_PREFERRED_NAME);","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"        logger.log(Level.INFO, \"Patient Index is valid.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"        EditPatientDescriptor editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"        if (argMultimap.getValue(PREFIX_PID).isPresent()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"            editPatientDescriptor.setPatientHospitalId(ParserUtil.parsePatientHospitalId(","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"                argMultimap.getValue(PREFIX_PID).get()));","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"            editPatientDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2024-03-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"        if (argMultimap.getValue(PREFIX_PREFERRED_NAME).isPresent()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"            editPatientDescriptor.setPreferredName(ParserUtil.parsePreferredName(","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"                argMultimap.getValue(PREFIX_PREFERRED_NAME).get()));","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"        parseFoodPreferenceForEdit(argMultimap.getAllValues(PREFIX_FOOD_PREFERENCE)).ifPresent(","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"choowengyan"},"content":"            editPatientDescriptor::setFoodPreferences);","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"choowengyan"},"content":"        parseFamilyConditionForEdit(argMultimap.getAllValues(PREFIX_FAMILY_CONDITION)).ifPresent(","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"choowengyan"},"content":"            editPatientDescriptor::setFamilyConditions);","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"choowengyan"},"content":"        parseHobbyForEdit(argMultimap.getAllValues(PREFIX_HOBBY)).ifPresent(editPatientDescriptor::setHobbies);","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPatientDescriptor::setTags);","lastModifiedDate":"2024-03-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"NeoHW"},"content":"        if (!editPatientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2024-03-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"choowengyan"},"content":"        logger.log(Level.INFO, \"All arguments are valid.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"NeoHW"},"content":"        return new EditCommand(index, editPatientDescriptor);","lastModifiedDate":"2024-03-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"choowengyan"},"content":"     * Parses {@code Collection\u003cString\u003e foodPreferences} into a {@code Set\u003cFoodPreference\u003e} if {@code foodPreferences}","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"choowengyan"},"content":"     * is non-empty.","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"choowengyan"},"content":"     * If {@code foodPreferences} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"choowengyan"},"content":"     * {@code Set\u003cFoodPreference\u003e} containing zero foodPreference.","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"choowengyan"},"content":"    private Optional\u003cSet\u003cFoodPreference\u003e\u003e parseFoodPreferenceForEdit(","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"choowengyan"},"content":"        Collection\u003cString\u003e foodPreferences) throws ParseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"choowengyan"},"content":"        assert foodPreferences !\u003d null;","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"choowengyan"},"content":"        if (foodPreferences.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"choowengyan"},"content":"            return Optional.empty();","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"choowengyan"},"content":"        Collection\u003cString\u003e foodPreferenceSet \u003d foodPreferences.size() \u003d\u003d 1 \u0026\u0026 foodPreferences.contains(\"\")","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"choowengyan"},"content":"            ? Collections.emptySet() : foodPreferences;","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"choowengyan"},"content":"        return Optional.of(ParserUtil.parseFoodPreferences(foodPreferenceSet));","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"choowengyan"},"content":"     * Parses {@code Collection\u003cString\u003e familyConditions} into a {@code Set\u003cFamilyCondition\u003e}","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"choowengyan"},"content":"     * if {@code familyConditions} is non-empty.","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"choowengyan"},"content":"     * If {@code familyConditions} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"choowengyan"},"content":"     * {@code Set\u003cFamilyCondition\u003e} containing zero familyCondition.","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"choowengyan"},"content":"    private Optional\u003cSet\u003cFamilyCondition\u003e\u003e parseFamilyConditionForEdit(","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"choowengyan"},"content":"        Collection\u003cString\u003e familyConditions) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"choowengyan"},"content":"        assert familyConditions !\u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"choowengyan"},"content":"        if (familyConditions.isEmpty()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"choowengyan"},"content":"            return Optional.empty();","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"choowengyan"},"content":"        Collection\u003cString\u003e familyConditionSet \u003d familyConditions.size() \u003d\u003d 1 \u0026\u0026 familyConditions.contains(\"\")","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"choowengyan"},"content":"            ? Collections.emptySet() : familyConditions;","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"choowengyan"},"content":"        return Optional.of(ParserUtil.parseFamilyConditions(familyConditionSet));","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"choowengyan"},"content":"     * Parses {@code Collection\u003cString\u003e hobbies} into a {@code Set\u003cHobby\u003e}","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"choowengyan"},"content":"     * if {@code hobbies} is non-empty.","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"choowengyan"},"content":"     * If {@code hobbies} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"choowengyan"},"content":"     * {@code Set\u003cHobby\u003e} containing zero hobby.","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"choowengyan"},"content":"    private Optional\u003cSet\u003cHobby\u003e\u003e parseHobbyForEdit(Collection\u003cString\u003e hobbies) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"choowengyan"},"content":"        assert hobbies !\u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"choowengyan"},"content":"        if (hobbies.isEmpty()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"choowengyan"},"content":"            return Optional.empty();","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"choowengyan"},"content":"        Collection\u003cString\u003e hobbySet \u003d hobbies.size() \u003d\u003d 1 \u0026\u0026 hobbies.contains(\"\")","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"choowengyan"},"content":"            ? Collections.emptySet() : hobbies;","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"choowengyan"},"content":"        return Optional.of(ParserUtil.parseHobbies(hobbySet));","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"choowengyan":79,"NeoHW":6,"-":72}},{"path":"src/main/java/seedu/address/logic/parser/EditEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"guohuang88"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"guohuang88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.parser.ArgumentTokenizer.checkInvalidPrefixesForEditEvent;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"guohuang88"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"guohuang88"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"guohuang88"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"guohuang88"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"guohuang88"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"guohuang88"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"guohuang88"},"content":"import seedu.address.model.patient.Event;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"guohuang88"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"guohuang88"},"content":" * Parses the user\u0027s input arguments and creates a new EditEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"guohuang88"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"guohuang88"},"content":"public class EditEventCommandParser implements Parser\u003cEditEventCommand\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"guohuang88"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(EditEventCommandParser.class);","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"guohuang88"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"guohuang88"},"content":"     * Returns a new EditEventCommand instance.","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"guohuang88"},"content":"     * @param args User\u0027s input.","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"guohuang88"},"content":"     * @return A new EditEventCommand.","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"guohuang88"},"content":"     * @throws ParseException If the user input does not conform to the expected format.","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"guohuang88"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"guohuang88"},"content":"    public EditEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"guohuang88"},"content":"        logger.log(Level.INFO, \"Received arguments: \" + args + \" for EditEventCommand; Attempting to parse..\");","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"guohuang88"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"guohuang88"},"content":"        checkInvalidPrefixesForEditEvent(args);","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"guohuang88"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_EVENT, PREFIX_NAME, PREFIX_DATETIME);","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"guohuang88"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_EVENT, PREFIX_NAME, PREFIX_DATETIME)","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"guohuang88"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"guohuang88"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"guohuang88"},"content":"                    EditEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"guohuang88"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"guohuang88"},"content":"        logger.log(Level.INFO, \"All prefixes required are present.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"guohuang88"},"content":"        Index patientIndex;","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"guohuang88"},"content":"        Index eventIndex;","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"guohuang88"},"content":"        try {","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"guohuang88"},"content":"            patientIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"guohuang88"},"content":"            eventIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_EVENT).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"guohuang88"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"guohuang88"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"guohuang88"},"content":"                    EditEventCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"guohuang88"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"guohuang88"},"content":"        logger.log(Level.INFO, \"Patient Index and Event Index are valid.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"guohuang88"},"content":"        Event event \u003d ParserUtil.parseEvent(argMultimap.getValue(PREFIX_NAME).get(),","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"guohuang88"},"content":"                argMultimap.getValue(PREFIX_DATETIME).get());","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"guohuang88"},"content":"        logger.log(Level.INFO, \"All arguments are valid.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"guohuang88"},"content":"        return new EditEventCommand(patientIndex, eventIndex, event);","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"guohuang88"},"content":"}","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"guohuang88":63}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"NeoHW":1,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/FindTagsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"guohuang88"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"guohuang88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"guohuang88"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"guohuang88"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"guohuang88"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"guohuang88"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"guohuang88"},"content":"import seedu.address.logic.commands.FindTagsCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"guohuang88"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"guohuang88"},"content":"import seedu.address.model.patient.TagContainsKeywordsPredicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"guohuang88"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"guohuang88"},"content":" * Parses input arguments and creates a new FindTagsCommand object","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"guohuang88"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"guohuang88"},"content":"public class FindTagsCommandParser implements Parser\u003cFindTagsCommand\u003e {","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"guohuang88"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(FindTagsCommandParser.class);","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"guohuang88"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"guohuang88"},"content":"     * Parses the given {@code String} of arguments in the context of the FindTagsCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"guohuang88"},"content":"     * and returns a FindTagsCommand object for execution.","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"guohuang88"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"guohuang88"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"guohuang88"},"content":"    public FindTagsCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"guohuang88"},"content":"        logger.log(Level.INFO, \"Received arguments: \" + args + \" for FindTagsCommand; Attempting to parse..\");","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"guohuang88"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"guohuang88"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"guohuang88"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"guohuang88"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"guohuang88"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTagsCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"guohuang88"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"guohuang88"},"content":"        logger.log(Level.INFO, \"All arguments are valid.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"guohuang88"},"content":"        String[] tagKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"guohuang88"},"content":"        return new FindTagsCommand(new TagContainsKeywordsPredicate(Arrays.asList(tagKeywords)));","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"guohuang88"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"guohuang88":41}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.Event;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FamilyCondition;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FoodPreference;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.Hobby;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.PatientHospitalId;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.PreferredName;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"     * Parses a {@code String patientHospitalId} into a {@code PatientHospitalId}.","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"     * @throws ParseException if the given {@code patientHospitalId} is invalid.","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"    public static PatientHospitalId parsePatientHospitalId(String patientHospitalId) throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"        requireNonNull(patientHospitalId);","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"        String trimmedId \u003d patientHospitalId.trim();","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"        if (!PatientHospitalId.isValidPatientHospitalId(trimmedId)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"            throw new ParseException(PatientHospitalId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"        return new PatientHospitalId(trimmedId);","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"     * Parses a {@code String preferredName} into a {@code PreferredName}.","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"choowengyan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"choowengyan"},"content":"     * @throws ParseException if the given {@code preferredName} is invalid.","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"choowengyan"},"content":"    public static PreferredName parsePreferredName(String preferredName) throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"choowengyan"},"content":"        requireNonNull(preferredName);","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"choowengyan"},"content":"        String trimmedPreferredName \u003d preferredName.trim();","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"choowengyan"},"content":"        if (!PreferredName.isValidPreferredName(trimmedPreferredName)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"choowengyan"},"content":"            throw new ParseException(PreferredName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"choowengyan"},"content":"        return new PreferredName(trimmedPreferredName);","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"choowengyan"},"content":"     * Parses a {@code String food} into a {@code FoodPreference}.","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"choowengyan"},"content":"     * @throws ParseException if the given {@code food} is invalid.","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"choowengyan"},"content":"    public static FoodPreference parseFoodPreference(String food) throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"choowengyan"},"content":"        requireNonNull(food);","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"choowengyan"},"content":"        String trimmedFood \u003d food.trim();","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"choowengyan"},"content":"        if (!FoodPreference.isValidFoodPreference(trimmedFood)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"choowengyan"},"content":"            throw new ParseException(FoodPreference.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"choowengyan"},"content":"        return new FoodPreference(trimmedFood);","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"choowengyan"},"content":"     * Parses {@code Collection\u003cString\u003e foodPreferences} into a {@code Set\u003cFoodPreference\u003e}.","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"choowengyan"},"content":"    public static Set\u003cFoodPreference\u003e parseFoodPreferences(Collection\u003cString\u003e foodPreferences) throws ParseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"choowengyan"},"content":"        requireNonNull(foodPreferences);","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"choowengyan"},"content":"        final Set\u003cFoodPreference\u003e foodPreferenceSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"choowengyan"},"content":"        for (String foodPreferenceName : foodPreferences) {","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"choowengyan"},"content":"            foodPreferenceSet.add(parseFoodPreference(foodPreferenceName));","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"choowengyan"},"content":"        if (foodPreferenceSet.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"choowengyan"},"content":"            throw new ParseException(FoodPreference.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"choowengyan"},"content":"        return foodPreferenceSet;","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"choowengyan"},"content":"     * Parses a {@code String condition} into an {@code FamilyCondition}.","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"choowengyan"},"content":"     * @throws ParseException if the given {@code condition} is invalid.","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"choowengyan"},"content":"    public static FamilyCondition parseFamilyCondition(String condition) throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"choowengyan"},"content":"        requireNonNull(condition);","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"choowengyan"},"content":"        String trimmedFamilyCondition \u003d condition.trim();","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"choowengyan"},"content":"        if (!FamilyCondition.isValidFamilyCondition(trimmedFamilyCondition)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"choowengyan"},"content":"            throw new ParseException(FamilyCondition.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"choowengyan"},"content":"        return new FamilyCondition(trimmedFamilyCondition);","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"choowengyan"},"content":"     * Parses {@code Collection\u003cString\u003e familyConditions} into a {@code Set\u003cFamilyCondition\u003e}.","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"choowengyan"},"content":"    public static Set\u003cFamilyCondition\u003e parseFamilyConditions(Collection\u003cString\u003e familyConditions)","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"choowengyan"},"content":"            throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"choowengyan"},"content":"        requireNonNull(familyConditions);","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"choowengyan"},"content":"        final Set\u003cFamilyCondition\u003e familyConditionSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"choowengyan"},"content":"        for (String familyConditionName : familyConditions) {","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"choowengyan"},"content":"            familyConditionSet.add(parseFamilyCondition(familyConditionName));","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"choowengyan"},"content":"        if (familyConditionSet.isEmpty()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"choowengyan"},"content":"            throw new ParseException(FamilyCondition.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"choowengyan"},"content":"        return familyConditionSet;","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"choowengyan"},"content":"     * Parses a {@code String hobby} into an {@code Hobby}.","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"choowengyan"},"content":"     * @throws ParseException if the given {@code hobby} is invalid.","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"choowengyan"},"content":"    public static Hobby parseHobby(String hobby) throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"choowengyan"},"content":"        requireNonNull(hobby);","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"choowengyan"},"content":"        String trimmedEmail \u003d hobby.trim();","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"choowengyan"},"content":"        if (!Hobby.isValidHobby(trimmedEmail)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"choowengyan"},"content":"            throw new ParseException(Hobby.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"choowengyan"},"content":"        return new Hobby(trimmedEmail);","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"choowengyan"},"content":"     * Parses {@code Collection\u003cString\u003e hobbies} into a {@code Set\u003cHobbies\u003e}.","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"choowengyan"},"content":"    public static Set\u003cHobby\u003e parseHobbies(Collection\u003cString\u003e hobbies) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"choowengyan"},"content":"        requireNonNull(hobbies);","lastModifiedDate":"2024-04-03"},{"lineNumber":171,"author":{"gitId":"choowengyan"},"content":"        final Set\u003cHobby\u003e hobbySet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":172,"author":{"gitId":"choowengyan"},"content":"        for (String hobbyName : hobbies) {","lastModifiedDate":"2024-04-03"},{"lineNumber":173,"author":{"gitId":"choowengyan"},"content":"            hobbySet.add(parseHobby(hobbyName));","lastModifiedDate":"2024-04-03"},{"lineNumber":174,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"choowengyan"},"content":"        if (hobbySet.isEmpty()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":176,"author":{"gitId":"choowengyan"},"content":"            throw new ParseException(Hobby.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":177,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":178,"author":{"gitId":"choowengyan"},"content":"        return hobbySet;","lastModifiedDate":"2024-04-03"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"NeoHW"},"content":"        String parsedTag \u003d removeExtraSpaces(tag.trim().toLowerCase());","lastModifiedDate":"2024-03-22"},{"lineNumber":190,"author":{"gitId":"NeoHW"},"content":"        if (!Tag.isValidTagName(parsedTag)) {","lastModifiedDate":"2024-03-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"NeoHW"},"content":"        if (!Tag.isValidTagLength(parsedTag)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":194,"author":{"gitId":"NeoHW"},"content":"            throw new ParseException(Tag.MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2024-03-23"},{"lineNumber":195,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":196,"author":{"gitId":"NeoHW"},"content":"        return new Tag(parsedTag);","lastModifiedDate":"2024-03-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":210,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":211,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":212,"author":{"gitId":"NeoHW"},"content":"     * Removes extra spaces between words.","lastModifiedDate":"2024-03-22"},{"lineNumber":213,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":214,"author":{"gitId":"NeoHW"},"content":"     * @param toBeProcessed The string to be processed.","lastModifiedDate":"2024-03-22"},{"lineNumber":215,"author":{"gitId":"NeoHW"},"content":"     * @return The string with extra spaces removed.","lastModifiedDate":"2024-03-22"},{"lineNumber":216,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":217,"author":{"gitId":"NeoHW"},"content":"    public static String removeExtraSpaces(String toBeProcessed) {","lastModifiedDate":"2024-03-22"},{"lineNumber":218,"author":{"gitId":"NeoHW"},"content":"        return Arrays.stream(toBeProcessed.split(\"\\\\s+\"))","lastModifiedDate":"2024-03-22"},{"lineNumber":219,"author":{"gitId":"NeoHW"},"content":"                .filter(word -\u003e !word.isEmpty())","lastModifiedDate":"2024-03-22"},{"lineNumber":220,"author":{"gitId":"NeoHW"},"content":"                .collect(Collectors.joining(\" \"));","lastModifiedDate":"2024-03-22"},{"lineNumber":221,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":222,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":223,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":224,"author":{"gitId":"SherisseTJW"},"content":"     * Parses a {@param String event} into a {@code Event}.","lastModifiedDate":"2024-03-18"},{"lineNumber":225,"author":{"gitId":"SherisseTJW"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-13"},{"lineNumber":226,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":227,"author":{"gitId":"SherisseTJW"},"content":"     * @throws ParseException if the given {@code event} is invalid.","lastModifiedDate":"2024-03-18"},{"lineNumber":228,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":229,"author":{"gitId":"SherisseTJW"},"content":"    public static Event parseEvent(String name, String event) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":230,"author":{"gitId":"SherisseTJW"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2024-03-13"},{"lineNumber":231,"author":{"gitId":"SherisseTJW"},"content":"        String trimmedEventDateTimeStr \u003d event.trim();","lastModifiedDate":"2024-03-18"},{"lineNumber":232,"author":{"gitId":"SherisseTJW"},"content":"        requireAllNonNull(name, event);","lastModifiedDate":"2024-03-18"},{"lineNumber":233,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":234,"author":{"gitId":"SherisseTJW"},"content":"        if (!Event.isValidEventName(trimmedName)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":235,"author":{"gitId":"SherisseTJW"},"content":"            throw new ParseException(Event.NAME_MESSAGE_CONSTAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":236,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":237,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":238,"author":{"gitId":"SherisseTJW"},"content":"        if (!Event.isValidEvent(trimmedEventDateTimeStr)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":239,"author":{"gitId":"SherisseTJW"},"content":"            throw new ParseException(Event.DATETIME_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":240,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":241,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":242,"author":{"gitId":"SherisseTJW"},"content":"        return new Event(trimmedName, trimmedEventDateTimeStr);","lastModifiedDate":"2024-03-18"},{"lineNumber":243,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":244,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":245,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":246,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":247,"author":{"gitId":"SherisseTJW"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-13"},{"lineNumber":248,"author":{"gitId":"SherisseTJW"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-13"},{"lineNumber":249,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":250,"author":{"gitId":"SherisseTJW"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-13"},{"lineNumber":251,"author":{"gitId":"SherisseTJW"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-13"},{"lineNumber":252,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"SherisseTJW":32,"ZhiWei1010":1,"choowengyan":98,"NeoHW":22,"-":100}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhiWei1010"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.model.patient.comparators.NameComparator.NAME_COMPARATOR;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.model.patient.comparators.PreferredNameComparator.PREFERRED_NAME_COMPARATOR;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"ZhiWei1010"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"ZhiWei1010"},"content":" * Parses the user\u0027s input argument and creates a new SortCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"ZhiWei1010"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"ZhiWei1010"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"ZhiWei1010"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(SortCommandParser.class);","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"ZhiWei1010"},"content":"    private static final List\u003cString\u003e VALID_SORT_ATTRIBUTES_LIST \u003d new ArrayList\u003c\u003e(Arrays.asList(\"n\", \"p\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"ZhiWei1010"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"ZhiWei1010"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"ZhiWei1010"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"ZhiWei1010"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"ZhiWei1010"},"content":"        logger.log(Level.INFO, \"Received arguments: \" + args + \"for SortCommand\"","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"ZhiWei1010"},"content":"                + \"\\nAttempting to parse sortCommand...\");","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"ZhiWei1010"},"content":"        String sortAttribute \u003d parseSortAttribute(args);","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"ZhiWei1010"},"content":"        switch (sortAttribute) {","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"ZhiWei1010"},"content":"        case \"\":","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"ZhiWei1010"},"content":"            logger.log(Level.INFO, \"Sorting Attribute: not specified, patient \"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"ZhiWei1010"},"content":"                    + sortAttribute","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"ZhiWei1010"},"content":"                    + \" will be used as\"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"ZhiWei1010"},"content":"                    + \" the sorting attribute\");","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"ZhiWei1010"},"content":"            return new SortCommand(NAME_COMPARATOR);","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"ZhiWei1010"},"content":"        case \"n\":","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"ZhiWei1010"},"content":"            logger.log(Level.INFO, \"Sorting Attribute: Patient \" + sortAttribute);","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"ZhiWei1010"},"content":"            return new SortCommand(NAME_COMPARATOR);","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"ZhiWei1010"},"content":"        case \"p\":","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"ZhiWei1010"},"content":"            logger.log(Level.INFO, \"Sorting Attribute: Patient\u0027s \" + sortAttribute);","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"ZhiWei1010"},"content":"            return new SortCommand(PREFERRED_NAME_COMPARATOR);","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"ZhiWei1010"},"content":"        default:","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"ZhiWei1010"},"content":"            throw new AssertionError(\"Code should not reach here\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"ZhiWei1010"},"content":"                    + \"Invalid sort attribute: \"","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"ZhiWei1010"},"content":"                    + sortAttribute);","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"ZhiWei1010"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"ZhiWei1010"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"ZhiWei1010"},"content":"     * Parses the {@code args} to check for valid sort attribute","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"ZhiWei1010"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"ZhiWei1010"},"content":"     * @param args","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"ZhiWei1010"},"content":"     * @return the parsed valid sort attribute","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"ZhiWei1010"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"ZhiWei1010"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"ZhiWei1010"},"content":"    public String parseSortAttribute(String args) throws ParseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"ZhiWei1010"},"content":"        String trimmedSortAttribute \u003d args.trim().toLowerCase();","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"ZhiWei1010"},"content":"        logger.log(Level.INFO, \"trimmed sort attribute: \" + trimmedSortAttribute);","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"ZhiWei1010"},"content":"        if (trimmedSortAttribute.length() \u003e 1) {","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"ZhiWei1010"},"content":"            logger.log(Level.WARNING, \"Invalid sort attribute length (\u003e 1) received.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"ZhiWei1010"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"ZhiWei1010"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"ZhiWei1010"},"content":"        if (!trimmedSortAttribute.isEmpty() \u0026\u0026 !VALID_SORT_ATTRIBUTES_LIST.contains(trimmedSortAttribute)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"ZhiWei1010"},"content":"            logger.log(Level.WARNING, \"Invalid sort attribute received!\");","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"ZhiWei1010"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"ZhiWei1010"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"ZhiWei1010"},"content":"        return trimmedSortAttribute;","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"ZhiWei1010"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"ZhiWei1010":76}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.UniquePatientList;","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":" * Duplicates are not allowed (by .isSamePatient comparison)","lastModifiedDate":"2024-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"    private final UniquePatientList patients;","lastModifiedDate":"2024-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"        patients \u003d new UniquePatientList();","lastModifiedDate":"2024-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"     * Creates an AddressBook using the Patients in the {@code toBeCopied}","lastModifiedDate":"2024-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"     * Replaces the contents of the patient list with {@code patients}.","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"     * {@code patients} must not contain duplicate patients.","lastModifiedDate":"2024-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"    public void setPatients(List\u003cPatient\u003e patients) {","lastModifiedDate":"2024-03-09"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"        this.patients.setPatients(patients);","lastModifiedDate":"2024-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"        setPatients(newData.getPatientList());","lastModifiedDate":"2024-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"    //// patient-level operations","lastModifiedDate":"2024-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the address book.","lastModifiedDate":"2024-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2024-03-09"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"        requireNonNull(patient);","lastModifiedDate":"2024-03-08"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"        return patients.contains(patient);","lastModifiedDate":"2024-03-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"     * Adds a patient to the address book.","lastModifiedDate":"2024-03-08"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"     * The patient must not already exist in the address book.","lastModifiedDate":"2024-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"    public void addPatient(Patient p) {","lastModifiedDate":"2024-03-09"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"        patients.add(p);","lastModifiedDate":"2024-03-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"     * Replaces the given patient {@code target} in the list with {@code editedPatient}.","lastModifiedDate":"2024-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"     * The patient identity of {@code editedPatient} must not be the","lastModifiedDate":"2024-03-08"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"     * same as another existing patient in the address book.","lastModifiedDate":"2024-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"NeoHW"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2024-03-09"},{"lineNumber":85,"author":{"gitId":"NeoHW"},"content":"        requireNonNull(editedPatient);","lastModifiedDate":"2024-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"NeoHW"},"content":"        patients.setPatient(target, editedPatient);","lastModifiedDate":"2024-03-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"NeoHW"},"content":"    public void removePatient(Patient key) {","lastModifiedDate":"2024-03-09"},{"lineNumber":95,"author":{"gitId":"NeoHW"},"content":"        patients.remove(key);","lastModifiedDate":"2024-03-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"NeoHW"},"content":"                .add(\"patients\", patients)","lastModifiedDate":"2024-03-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"NeoHW"},"content":"    public ObservableList\u003cPatient\u003e getPatientList() {","lastModifiedDate":"2024-03-09"},{"lineNumber":109,"author":{"gitId":"NeoHW"},"content":"        return patients.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"NeoHW"},"content":"        return patients.equals(otherAddressBook.patients);","lastModifiedDate":"2024-03-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"NeoHW"},"content":"        return patients.hashCode();","lastModifiedDate":"2024-03-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"NeoHW":33,"-":98}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"    Predicate\u003cPatient\u003e PREDICATE_SHOW_ALL_PATIENTS \u003d unused -\u003e true;","lastModifiedDate":"2024-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the address book.","lastModifiedDate":"2024-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"    boolean hasPatient(Patient patient);","lastModifiedDate":"2024-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"     * Deletes the given patient.","lastModifiedDate":"2024-03-08"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"     * The patient must exist in the address book.","lastModifiedDate":"2024-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"    void deletePatient(Patient target);","lastModifiedDate":"2024-03-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"     * Adds the given patient.","lastModifiedDate":"2024-03-08"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"     * {@code patient} must not already exist in the address book.","lastModifiedDate":"2024-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"    void addPatient(Patient patient);","lastModifiedDate":"2024-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"     * Replaces the given patient {@code target} with {@code editedPatient}.","lastModifiedDate":"2024-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"     * The patient identity of {@code editedPatient} must not be the same as","lastModifiedDate":"2024-03-08"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"     * another existing patient in the address book.","lastModifiedDate":"2024-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"    void setPatient(Patient target, Patient editedPatient);","lastModifiedDate":"2024-03-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"    /** Returns an unmodifiable view of the filtered patient list */","lastModifiedDate":"2024-03-08"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"    ObservableList\u003cPatient\u003e getFilteredPatientList();","lastModifiedDate":"2024-03-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"ZhiWei1010"},"content":"    /** Returns an unmodifiable view of the full patient list */","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"ZhiWei1010"},"content":"    ObservableList\u003cPatient\u003e getFullPatientList();","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"NeoHW"},"content":"     * Updates the filter of the filtered patient list to filter by the given {@code predicate}.","lastModifiedDate":"2024-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"NeoHW"},"content":"    void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate);","lastModifiedDate":"2024-03-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"ZhiWei1010"},"content":"     * Replaces the current patient list with {@code updatedPatientList}.","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"ZhiWei1010"},"content":"    void updatePatientList(List\u003cPatient\u003e updatedPatientList);","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ZhiWei1010":7,"NeoHW":18,"-":74}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"    private final FilteredList\u003cPatient\u003e filteredPatients;","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"        filteredPatients \u003d new FilteredList\u003c\u003e(this.addressBook.getPatientList());","lastModifiedDate":"2024-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"NeoHW"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2024-03-09"},{"lineNumber":93,"author":{"gitId":"NeoHW"},"content":"        requireNonNull(patient);","lastModifiedDate":"2024-03-08"},{"lineNumber":94,"author":{"gitId":"NeoHW"},"content":"        return addressBook.hasPatient(patient);","lastModifiedDate":"2024-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"NeoHW"},"content":"    public void deletePatient(Patient target) {","lastModifiedDate":"2024-03-09"},{"lineNumber":99,"author":{"gitId":"NeoHW"},"content":"        addressBook.removePatient(target);","lastModifiedDate":"2024-03-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"NeoHW"},"content":"    public void addPatient(Patient patient) {","lastModifiedDate":"2024-03-09"},{"lineNumber":104,"author":{"gitId":"NeoHW"},"content":"        addressBook.addPatient(patient);","lastModifiedDate":"2024-03-09"},{"lineNumber":105,"author":{"gitId":"NeoHW"},"content":"        updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2024-03-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"ZhiWei1010"},"content":"    public void updatePatientList(List\u003cPatient\u003e updatedPatientList) {","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"ZhiWei1010"},"content":"        addressBook.setPatients(updatedPatientList);","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"NeoHW"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2024-03-09"},{"lineNumber":115,"author":{"gitId":"NeoHW"},"content":"        requireAllNonNull(target, editedPatient);","lastModifiedDate":"2024-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"NeoHW"},"content":"        addressBook.setPatient(target, editedPatient);","lastModifiedDate":"2024-03-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"ZhiWei1010"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"ZhiWei1010"},"content":"    public ObservableList\u003cPatient\u003e getFullPatientList() {","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"ZhiWei1010"},"content":"        return this.addressBook.getPatientList();","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"ZhiWei1010"},"content":"    };","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"NeoHW"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Patient List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":128,"author":{"gitId":"NeoHW"},"content":"     * Returns an unmodifiable view of the list of {@code Patient} backed by the internal list of","lastModifiedDate":"2024-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"NeoHW"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2024-03-09"},{"lineNumber":133,"author":{"gitId":"NeoHW"},"content":"        return filteredPatients;","lastModifiedDate":"2024-03-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":137,"author":{"gitId":"NeoHW"},"content":"    public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2024-03-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":139,"author":{"gitId":"NeoHW"},"content":"        filteredPatients.setPredicate(predicate);","lastModifiedDate":"2024-03-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":156,"author":{"gitId":"NeoHW"},"content":"                \u0026\u0026 filteredPatients.equals(otherModelManager.filteredPatients);","lastModifiedDate":"2024-03-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ZhiWei1010":10,"NeoHW":21,"-":128}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"     * Returns an unmodifiable view of the patients list.","lastModifiedDate":"2024-03-09"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"     * This list will not contain any duplicate patients.","lastModifiedDate":"2024-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"    ObservableList\u003cPatient\u003e getPatientList();","lastModifiedDate":"2024-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"NeoHW":4,"-":13}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"ZhiWei1010"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"patientsync.json\");","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ZhiWei1010":1,"-":87}},{"path":"src/main/java/seedu/address/model/patient/EditPatientDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":" * Stores the details to edit the patient with. Each non-empty field value will replace the","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":" * corresponding field value of the patient.","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"public class EditPatientDescriptor {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"    private PatientHospitalId patientHospitalId;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"    private Name name;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"    private PreferredName preferredName;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"    private Set\u003cFoodPreference\u003e foodPreferences;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"    private Set\u003cFamilyCondition\u003e familyConditions;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"    private Set\u003cHobby\u003e hobbies;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"    private Set\u003cEvent\u003e events;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"    public EditPatientDescriptor() {","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"     * Copy constructor.","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"     * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"    public EditPatientDescriptor(EditPatientDescriptor toCopy) {","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"        setPatientHospitalId(toCopy.patientHospitalId);","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"        setName(toCopy.name);","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"        setPreferredName(toCopy.preferredName);","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"        setFoodPreferences(toCopy.foodPreferences);","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"        setFamilyConditions(toCopy.familyConditions);","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"        setHobbies(toCopy.hobbies);","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"        setTags(toCopy.tags);","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"        setEvents(toCopy.events);","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"     * Returns true if at least one field is edited.","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"    public boolean isAnyFieldEdited() {","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"        return CollectionUtil.isAnyNonNull(patientHospitalId, name, preferredName, foodPreferences, familyConditions,","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"            hobbies, tags, events);","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"    public void setPatientHospitalId(PatientHospitalId id) {","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"        this.patientHospitalId \u003d id;","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"    public Optional\u003cPatientHospitalId\u003e getPatientHospitalId() {","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"        return Optional.ofNullable(patientHospitalId);","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"SherisseTJW"},"content":"    public void setName(Name name) {","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"SherisseTJW"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"SherisseTJW"},"content":"    public Optional\u003cName\u003e getName() {","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"SherisseTJW"},"content":"        return Optional.ofNullable(name);","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"    public void setPreferredName(PreferredName preferredName) {","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"        this.preferredName \u003d preferredName;","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"choowengyan"},"content":"    public Optional\u003cPreferredName\u003e getPreferredName() {","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"        return Optional.ofNullable(preferredName);","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"choowengyan"},"content":"     * Sets {@code foodPreferences} to this object\u0027s {@code foodPreferences}.","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"choowengyan"},"content":"     * A defensive copy of {@code foodPreferences} is used internally.","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"choowengyan"},"content":"    public void setFoodPreferences(Set\u003cFoodPreference\u003e foodPreferences) {","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"choowengyan"},"content":"        this.foodPreferences \u003d (foodPreferences !\u003d null) ? new HashSet\u003c\u003e(foodPreferences) : null;","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"choowengyan"},"content":"     * Returns an unmodifiable food preference set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"choowengyan"},"content":"     * if modification is attempted.","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"choowengyan"},"content":"     * Returns {@code Optional#empty()} if {@code foodPreferences} is null.","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"choowengyan"},"content":"    public Optional\u003cSet\u003cFoodPreference\u003e\u003e getFoodPreferences() {","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"choowengyan"},"content":"        return (foodPreferences !\u003d null) ? Optional.of(Collections.unmodifiableSet(foodPreferences)) : Optional.empty();","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"choowengyan"},"content":"     * Sets {@code familyConditions} to this object\u0027s {@code familyConditions}.","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"choowengyan"},"content":"     * A defensive copy of {@code familyConditions} is used internally.","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"choowengyan"},"content":"    public void setFamilyConditions(Set\u003cFamilyCondition\u003e familyConditions) {","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"choowengyan"},"content":"        this.familyConditions \u003d (familyConditions !\u003d null) ? new HashSet\u003c\u003e(familyConditions) : null;","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"choowengyan"},"content":"     * Returns an unmodifiable food preference set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"choowengyan"},"content":"     * if modification is attempted.","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"choowengyan"},"content":"     * Returns {@code Optional#empty()} if {@code familyConditions} is null.","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"choowengyan"},"content":"    public Optional\u003cSet\u003cFamilyCondition\u003e\u003e getFamilyConditions() {","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"choowengyan"},"content":"        return (familyConditions !\u003d null)","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"choowengyan"},"content":"            ? Optional.of(Collections.unmodifiableSet(familyConditions))","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"choowengyan"},"content":"            : Optional.empty();","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"choowengyan"},"content":"     * Sets {@code hobbies} to this object\u0027s {@code hobbies}.","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"choowengyan"},"content":"     * A defensive copy of {@code hobbies} is used internally.","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"choowengyan"},"content":"    public void setHobbies(Set\u003cHobby\u003e hobbies) {","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"choowengyan"},"content":"        this.hobbies \u003d (hobbies !\u003d null) ? new HashSet\u003c\u003e(hobbies) : null;","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"choowengyan"},"content":"     * Returns an unmodifiable food preference set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"choowengyan"},"content":"     * if modification is attempted.","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"choowengyan"},"content":"     * Returns {@code Optional#empty()} if {@code hobbies} is null.","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"choowengyan"},"content":"    public Optional\u003cSet\u003cHobby\u003e\u003e getHobbies() {","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"choowengyan"},"content":"        return (hobbies !\u003d null)","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"choowengyan"},"content":"            ? Optional.of(Collections.unmodifiableSet(hobbies))","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"choowengyan"},"content":"            : Optional.empty();","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"SherisseTJW"},"content":"     * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"SherisseTJW"},"content":"     * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"SherisseTJW"},"content":"    public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"SherisseTJW"},"content":"        this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"SherisseTJW"},"content":"     * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"SherisseTJW"},"content":"     * if modification is attempted.","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"SherisseTJW"},"content":"     * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"SherisseTJW"},"content":"    public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"SherisseTJW"},"content":"        return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"SherisseTJW"},"content":"    public Optional\u003cSet\u003cEvent\u003e\u003e getEvents() {","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"SherisseTJW"},"content":"        return events !\u003d null ? Optional.of(Collections.unmodifiableSet(events)) : Optional.empty();","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"SherisseTJW"},"content":"    public void setEvents(Set\u003cEvent\u003e events) {","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"SherisseTJW"},"content":"        this.events \u003d events !\u003d null ? new HashSet\u003c\u003e(events) : null;","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"SherisseTJW"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"SherisseTJW"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"SherisseTJW"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"SherisseTJW"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"SherisseTJW"},"content":"        if (!(other instanceof EditPatientDescriptor)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"SherisseTJW"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"SherisseTJW"},"content":"        EditPatientDescriptor otherEditPatientDescriptor \u003d (EditPatientDescriptor) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"choowengyan"},"content":"        return Objects.equals(patientHospitalId, otherEditPatientDescriptor.patientHospitalId)","lastModifiedDate":"2024-03-17"},{"lineNumber":171,"author":{"gitId":"choowengyan"},"content":"            \u0026\u0026 Objects.equals(name, otherEditPatientDescriptor.name)","lastModifiedDate":"2024-03-17"},{"lineNumber":172,"author":{"gitId":"choowengyan"},"content":"            \u0026\u0026 Objects.equals(preferredName, otherEditPatientDescriptor.preferredName)","lastModifiedDate":"2024-03-17"},{"lineNumber":173,"author":{"gitId":"choowengyan"},"content":"            \u0026\u0026 Objects.equals(foodPreferences, otherEditPatientDescriptor.foodPreferences)","lastModifiedDate":"2024-04-01"},{"lineNumber":174,"author":{"gitId":"choowengyan"},"content":"            \u0026\u0026 Objects.equals(familyConditions, otherEditPatientDescriptor.familyConditions)","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"choowengyan"},"content":"            \u0026\u0026 Objects.equals(hobbies, otherEditPatientDescriptor.hobbies)","lastModifiedDate":"2024-04-03"},{"lineNumber":176,"author":{"gitId":"SherisseTJW"},"content":"            \u0026\u0026 Objects.equals(tags, otherEditPatientDescriptor.tags)","lastModifiedDate":"2024-03-13"},{"lineNumber":177,"author":{"gitId":"SherisseTJW"},"content":"            \u0026\u0026 Objects.equals(events, otherEditPatientDescriptor.events);","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":179,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":180,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":181,"author":{"gitId":"SherisseTJW"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":182,"author":{"gitId":"SherisseTJW"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-12"},{"lineNumber":183,"author":{"gitId":"choowengyan"},"content":"            .add(\"patientHospitalId\", patientHospitalId)","lastModifiedDate":"2024-03-17"},{"lineNumber":184,"author":{"gitId":"SherisseTJW"},"content":"            .add(\"name\", name)","lastModifiedDate":"2024-03-12"},{"lineNumber":185,"author":{"gitId":"choowengyan"},"content":"            .add(\"preferredName\", preferredName)","lastModifiedDate":"2024-03-17"},{"lineNumber":186,"author":{"gitId":"choowengyan"},"content":"            .add(\"foodPreferences\", foodPreferences)","lastModifiedDate":"2024-04-01"},{"lineNumber":187,"author":{"gitId":"choowengyan"},"content":"            .add(\"familyConditions\", familyConditions)","lastModifiedDate":"2024-04-03"},{"lineNumber":188,"author":{"gitId":"choowengyan"},"content":"            .add(\"hobbies\", hobbies)","lastModifiedDate":"2024-04-03"},{"lineNumber":189,"author":{"gitId":"SherisseTJW"},"content":"            .add(\"tags\", tags)","lastModifiedDate":"2024-03-13"},{"lineNumber":190,"author":{"gitId":"SherisseTJW"},"content":"            .add(\"events\", events)","lastModifiedDate":"2024-03-18"},{"lineNumber":191,"author":{"gitId":"SherisseTJW"},"content":"            .toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":192,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":193,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"SherisseTJW":111,"choowengyan":82}},{"path":"src/main/java/seedu/address/model/patient/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":" * Represents Events for a Patient","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"public class Event implements Comparable\u003cEvent\u003e {","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"    public static final String NAME_MESSAGE_CONSTAINTS \u003d \"The Name of the Event should be alphanumerical and non-empty\";","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"    public static final String DATETIME_MESSAGE_CONSTRAINTS \u003d \"Dates should be in the format: DD-MM-YYYY, \"","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"            + \"HH:mm - HH:mm, where the End Time is after the Start Time, \\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"            + \"OR if there is no time period, in the format: DD-MM-YYYY \\n\"","lastModifiedDate":"2024-04-08"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"            + \"Dates and Times should also be valid, i.e., 12-12-2023, 00:00 - 24:00 is not valid due to \u002724:00\u0027\";","lastModifiedDate":"2024-04-08"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"    public static final String NAME_PATTERN \u003d \"^.*[^a-zA-Z0-9 ].*$\";","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"    public static final String DATE_PATTERN \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"    public static final String TIME_PATTERN \u003d \"HH:mm\";","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"    /** The name of the Event */","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"    public final String name;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"    /** The Date of the Event */","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"    public final String date;","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"    /** The Start Time of the Event, null if there is no specific start time */","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"    public final String startTime;","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"    /** The End Time of the Event, null if there is no specific end time */","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"    public final String endTime;","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"     * Constructs a {@Code Event}","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"     * @param event","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"    public Event(String name, String event) {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"        name \u003d name.strip();","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"        requireNonNull(name);","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"        checkArgument(isValidEventName(name), DATETIME_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"        event \u003d event.strip();","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"        requireNonNull(event);","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"        checkArgument(isValidEvent(event), DATETIME_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"        String[] args \u003d extractDateTimeArgs(event);","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"        this.date \u003d args[0];","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"SherisseTJW"},"content":"        this.startTime \u003d args[1];","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"        this.endTime \u003d args[2];","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"SherisseTJW"},"content":"     * Returns true if the given string is a valid Event Name String","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"SherisseTJW"},"content":"     * @param test the given string","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"SherisseTJW"},"content":"     * @return true if the {@param test} is valid","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"SherisseTJW"},"content":"     *         false if the {@param test} is not valid","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"SherisseTJW"},"content":"    public static boolean isValidEventName(String test) {","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"SherisseTJW"},"content":"        if (test.isEmpty() || test.matches(NAME_PATTERN)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"SherisseTJW"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"SherisseTJW"},"content":"        return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"SherisseTJW"},"content":"     * Returns true if the given string is a valid Date / Datetime String","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"SherisseTJW"},"content":"     * @param test the given string","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"SherisseTJW"},"content":"     * @return true if the {@param test} is valid,","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"SherisseTJW"},"content":"     *         false if the {@param test} is not valid","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"SherisseTJW"},"content":"    public static boolean isValidEvent(String test) {","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"SherisseTJW"},"content":"        String[] args \u003d test.split(\",\");","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"SherisseTJW"},"content":"        try {","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"SherisseTJW"},"content":"            LocalDate.parse(args[0].trim(), DateTimeFormatter.ofPattern(DATE_PATTERN));","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"SherisseTJW"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"SherisseTJW"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"SherisseTJW"},"content":"        if (args.length \u003e 1) {","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"SherisseTJW"},"content":"            return isValidDateTimeStr(args[1]);","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"SherisseTJW"},"content":"        return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"SherisseTJW"},"content":"     * Returns true if the given string is a valid time String","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"SherisseTJW"},"content":"     * @param timeStr the given string","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"SherisseTJW"},"content":"     * @return true if the {@param timeStr} is valid,","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"SherisseTJW"},"content":"     *         false if the {@param timeStr} is not valid","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"SherisseTJW"},"content":"    public static boolean isValidDateTimeStr(String timeStr) {","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"SherisseTJW"},"content":"        String[] args \u003d timeStr.split(\"-\");","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"SherisseTJW"},"content":"        if (args.length !\u003d 2) {","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"SherisseTJW"},"content":"            return false;","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"SherisseTJW"},"content":"        try {","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"SherisseTJW"},"content":"            LocalTime start \u003d LocalTime.parse(args[0].trim(), DateTimeFormatter.ofPattern(TIME_PATTERN)); // start time","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"SherisseTJW"},"content":"            LocalTime end \u003d LocalTime.parse(args[1].trim(), DateTimeFormatter.ofPattern(TIME_PATTERN)); // end time","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"SherisseTJW"},"content":"            if (end.isBefore(start)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"SherisseTJW"},"content":"                return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"SherisseTJW"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"SherisseTJW"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"SherisseTJW"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"SherisseTJW"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"SherisseTJW"},"content":"     * Returns True if the Date / DateTime of the Event is before the current Date / Datetime","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":127,"author":{"gitId":"SherisseTJW"},"content":"     * @return True if the Date / DateTime is before the current Date / Datetime","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"SherisseTJW"},"content":"     *         False otherwise","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"SherisseTJW"},"content":"    public boolean isPastEvent() {","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"SherisseTJW"},"content":"        LocalDate eventDate \u003d LocalDate.parse(this.date, DateTimeFormatter.ofPattern(DATE_PATTERN));","lastModifiedDate":"2024-04-04"},{"lineNumber":132,"author":{"gitId":"SherisseTJW"},"content":"        LocalDate curDate \u003d LocalDate.now();","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"SherisseTJW"},"content":"        if (eventDate.isBefore(curDate)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"SherisseTJW"},"content":"            return true;","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"SherisseTJW"},"content":"        } else if (eventDate.equals(curDate) \u0026\u0026 this.endTime !\u003d null) {","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"SherisseTJW"},"content":"            return LocalTime.parse(this.endTime, DateTimeFormatter.ofPattern(TIME_PATTERN)).isBefore(LocalTime.now());","lastModifiedDate":"2024-04-04"},{"lineNumber":138,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":139,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"SherisseTJW"},"content":"        return false;","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":144,"author":{"gitId":"SherisseTJW"},"content":"     * Extracts the date and/or time arguments from the user input","lastModifiedDate":"2024-03-13"},{"lineNumber":145,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":146,"author":{"gitId":"SherisseTJW"},"content":"     * @param userInput","lastModifiedDate":"2024-03-13"},{"lineNumber":147,"author":{"gitId":"SherisseTJW"},"content":"     * @return a String[] of the arguments extracted","lastModifiedDate":"2024-03-13"},{"lineNumber":148,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":149,"author":{"gitId":"SherisseTJW"},"content":"    public static String[] extractDateTimeArgs(String userInput) {","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"SherisseTJW"},"content":"        String[] args \u003d userInput.split(\",\");","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"SherisseTJW"},"content":"        args[0] \u003d args[0].strip();","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"SherisseTJW"},"content":"        String[] temp \u003d new String[2];","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"SherisseTJW"},"content":"        if (args.length \u003e 1) {","lastModifiedDate":"2024-03-12"},{"lineNumber":155,"author":{"gitId":"SherisseTJW"},"content":"            temp \u003d args[1].split(\"-\");","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"SherisseTJW"},"content":"            temp[0] \u003d temp[0].strip();","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"SherisseTJW"},"content":"            temp[1] \u003d temp[1].strip();","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"SherisseTJW"},"content":"        } else {","lastModifiedDate":"2024-03-13"},{"lineNumber":159,"author":{"gitId":"SherisseTJW"},"content":"            temp[0] \u003d null;","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"SherisseTJW"},"content":"            temp[1] \u003d null;","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"SherisseTJW"},"content":"        return new String[] {args[0], temp[0], temp[1]};","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":168,"author":{"gitId":"SherisseTJW"},"content":"    public int compareTo(Event other) {","lastModifiedDate":"2024-03-23"},{"lineNumber":169,"author":{"gitId":"SherisseTJW"},"content":"        if (!this.date.equals(other.date)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":170,"author":{"gitId":"SherisseTJW"},"content":"            return this.date.compareTo(other.date);","lastModifiedDate":"2024-03-23"},{"lineNumber":171,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":172,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":173,"author":{"gitId":"SherisseTJW"},"content":"        if (this.startTime !\u003d null \u0026\u0026 other.startTime !\u003d null) {","lastModifiedDate":"2024-03-23"},{"lineNumber":174,"author":{"gitId":"SherisseTJW"},"content":"            // If both events have time information, sort by start time then end time","lastModifiedDate":"2024-03-23"},{"lineNumber":175,"author":{"gitId":"SherisseTJW"},"content":"            if (!this.startTime.equals(other.startTime)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":176,"author":{"gitId":"SherisseTJW"},"content":"                return this.startTime.compareTo(other.startTime);","lastModifiedDate":"2024-03-23"},{"lineNumber":177,"author":{"gitId":"SherisseTJW"},"content":"            }","lastModifiedDate":"2024-03-23"},{"lineNumber":178,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":179,"author":{"gitId":"SherisseTJW"},"content":"            if (!this.endTime.equals(other.endTime)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":180,"author":{"gitId":"SherisseTJW"},"content":"                return this.endTime.compareTo(other.endTime);","lastModifiedDate":"2024-03-23"},{"lineNumber":181,"author":{"gitId":"SherisseTJW"},"content":"            }","lastModifiedDate":"2024-03-23"},{"lineNumber":182,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":183,"author":{"gitId":"SherisseTJW"},"content":"        // If only 1 event has time information, that event should be sorted behind","lastModifiedDate":"2024-03-23"},{"lineNumber":184,"author":{"gitId":"SherisseTJW"},"content":"        if (this.startTime !\u003d null \u0026\u0026 other.startTime \u003d\u003d null) {","lastModifiedDate":"2024-03-23"},{"lineNumber":185,"author":{"gitId":"SherisseTJW"},"content":"            return 1;","lastModifiedDate":"2024-03-23"},{"lineNumber":186,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":187,"author":{"gitId":"SherisseTJW"},"content":"        if (this.startTime \u003d\u003d null \u0026\u0026 other.startTime !\u003d null) {","lastModifiedDate":"2024-03-23"},{"lineNumber":188,"author":{"gitId":"SherisseTJW"},"content":"            return -1;","lastModifiedDate":"2024-03-23"},{"lineNumber":189,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":190,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":191,"author":{"gitId":"SherisseTJW"},"content":"        // If all date / datetime information is the same, sort by name","lastModifiedDate":"2024-03-23"},{"lineNumber":192,"author":{"gitId":"SherisseTJW"},"content":"        return this.name.compareTo(other.name);","lastModifiedDate":"2024-03-23"},{"lineNumber":193,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":194,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":195,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":196,"author":{"gitId":"SherisseTJW"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":197,"author":{"gitId":"SherisseTJW"},"content":"        // If there is a start time, there must be a end time","lastModifiedDate":"2024-03-12"},{"lineNumber":198,"author":{"gitId":"SherisseTJW"},"content":"        if (this.startTime !\u003d null) {","lastModifiedDate":"2024-03-12"},{"lineNumber":199,"author":{"gitId":"SherisseTJW"},"content":"            return String.format(\"%s (%s, from %s to %s)\", this.name, this.date, this.startTime, this.endTime);","lastModifiedDate":"2024-03-18"},{"lineNumber":200,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":201,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":202,"author":{"gitId":"SherisseTJW"},"content":"        return String.format(\"%s (%s)\", this.name, this.date);","lastModifiedDate":"2024-03-18"},{"lineNumber":203,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":204,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":205,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":206,"author":{"gitId":"SherisseTJW"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":207,"author":{"gitId":"SherisseTJW"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":208,"author":{"gitId":"SherisseTJW"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":209,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":210,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":211,"author":{"gitId":"SherisseTJW"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":212,"author":{"gitId":"SherisseTJW"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":213,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":214,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":215,"author":{"gitId":"SherisseTJW"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":216,"author":{"gitId":"SherisseTJW"},"content":"        if (this.startTime \u003d\u003d null) {","lastModifiedDate":"2024-03-13"},{"lineNumber":217,"author":{"gitId":"SherisseTJW"},"content":"            return this.name.equals(otherEvent.name)","lastModifiedDate":"2024-03-18"},{"lineNumber":218,"author":{"gitId":"SherisseTJW"},"content":"                    \u0026\u0026 this.date.equals(otherEvent.date);","lastModifiedDate":"2024-03-18"},{"lineNumber":219,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":220,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":221,"author":{"gitId":"SherisseTJW"},"content":"        return this.name.equals(otherEvent.name)","lastModifiedDate":"2024-03-18"},{"lineNumber":222,"author":{"gitId":"SherisseTJW"},"content":"                \u0026\u0026 this.date.equals(otherEvent.date)","lastModifiedDate":"2024-03-18"},{"lineNumber":223,"author":{"gitId":"SherisseTJW"},"content":"                \u0026\u0026 this.startTime.equals(otherEvent.startTime)","lastModifiedDate":"2024-03-18"},{"lineNumber":224,"author":{"gitId":"SherisseTJW"},"content":"                \u0026\u0026 this.endTime.equals(otherEvent.endTime);","lastModifiedDate":"2024-03-18"},{"lineNumber":225,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":226,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":227,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":228,"author":{"gitId":"SherisseTJW"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":229,"author":{"gitId":"SherisseTJW"},"content":"        return date.hashCode();","lastModifiedDate":"2024-03-18"},{"lineNumber":230,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":231,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"SherisseTJW":231}},{"path":"src/main/java/seedu/address/model/patient/FamilyCondition.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":" * Represents a Patient\u0027s family condition in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidFamilyCondition(String)}","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"public class FamilyCondition implements Comparable\u003cFamilyCondition\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"            \"Family condition can take any values, and it should not be blank\";","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"    public final String familyCondition;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"     * Constructs a {@code FamilyCondition}.","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"     * @param condition A valid family condition.","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"    public FamilyCondition(String condition) {","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"        requireNonNull(condition);","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"        checkArgument(isValidFamilyCondition(condition), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"        familyCondition \u003d condition;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"     * Returns true if a given string is a valid family condition.","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"    public static boolean isValidFamilyCondition(String test) {","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"        return familyCondition;","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"    public int compareTo(FamilyCondition other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"        // Compare the family condition strings","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"        return this.familyCondition.compareTo(other.familyCondition);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"        if (!(other instanceof FamilyCondition)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"        FamilyCondition otherFamilyCondition \u003d (FamilyCondition) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"        return familyCondition.equals(otherFamilyCondition.familyCondition);","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"        return familyCondition.hashCode();","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"choowengyan":66}},{"path":"src/main/java/seedu/address/model/patient/FoodPreference.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":" * Represents a Patient\u0027s preferred food in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidFoodPreference(String)} (String)}","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"public class FoodPreference implements Comparable\u003cFoodPreference\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Food preferences can take any values, and it should not be blank\";","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"    public final String foodPreference;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"     * Constructs an {@code FoodPreference}.","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"     * @param food A valid food preference.","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"    public FoodPreference(String food) {","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"        requireNonNull(food);","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"        checkArgument(isValidFoodPreference(food), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"        foodPreference \u003d food;","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"     * Returns true if a given string is a valid food details.","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"    public static boolean isValidFoodPreference(String test) {","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"        return foodPreference;","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"    public int compareTo(FoodPreference other) {","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"        // Compare the foodPreference strings","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"        return this.foodPreference.compareTo(other.foodPreference);","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"        if (!(other instanceof FoodPreference)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"        FoodPreference otherFoodPreference \u003d (FoodPreference) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"        return foodPreference.equals(otherFoodPreference.foodPreference);","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"        return foodPreference.hashCode();","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"choowengyan":24,"NeoHW":1,"-":46}},{"path":"src/main/java/seedu/address/model/patient/Hobby.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":" * Represents a Patient\u0027s hobby in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidHobby(String)}","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"public class Hobby implements Comparable\u003cHobby\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Hobby can take any values, and it should not be blank\";","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"    public final String hobby;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"     * Constructs a {@code Hobby}.","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"     * @param description A valid hobby.","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"    public Hobby(String description) {","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"        requireNonNull(description);","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"        checkArgument(isValidHobby(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"        hobby \u003d description;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"     * Returns true if a given string is a valid hobby.","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"    public static boolean isValidHobby(String test) {","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"        return hobby;","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"    public int compareTo(Hobby other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"        // Compare the hobby strings","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"        return this.hobby.compareTo(other.hobby);","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"        if (!(other instanceof Hobby)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"        Hobby otherHobby \u003d (Hobby) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"        return hobby.equals(otherHobby.hobby);","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"        return hobby.hashCode();","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"choowengyan":25,"NeoHW":1,"-":39}},{"path":"src/main/java/seedu/address/model/patient/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":" * Represents a Patient\u0027s name in the address book.","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"NeoHW":2,"-":65}},{"path":"src/main/java/seedu/address/model/patient/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":" * Tests that a {@code Patient}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPatient\u003e {","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"    public boolean test(Patient patient) {","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"guohuang88"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(patient.getName().fullName,","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"                    keyword));","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"guohuang88":1,"choowengyan":1,"NeoHW":4,"-":39}},{"path":"src/main/java/seedu/address/model/patient/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":" * Represents a Patient in the address book.","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"public class Patient {","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"    private final PatientHospitalId patientHospitalId;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"    private final PreferredName preferredName;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"    private final Set\u003cFoodPreference\u003e foodPreferences \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"    private final Set\u003cFamilyCondition\u003e familyConditions \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"    private final Set\u003cHobby\u003e hobbies \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"    private final Set\u003cEvent\u003e events \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"    public Patient(PatientHospitalId patientHospitalId, Name name, PreferredName preferredName,","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"                   Set\u003cFoodPreference\u003e foodPreferences, Set\u003cFamilyCondition\u003e familyConditions, Set\u003cHobby\u003e hobbies,","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"                   Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"        requireAllNonNull(patientHospitalId, name, preferredName, foodPreferences, familyConditions, hobbies, tags);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"        this.patientHospitalId \u003d patientHospitalId;","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"        this.preferredName \u003d preferredName;","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"        this.foodPreferences.addAll(foodPreferences);","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"        this.familyConditions.addAll(familyConditions);","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"        this.hobbies.addAll(hobbies);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"     * Constructs a Patient with {@param patientHospitalId},{@param name}, {@param preferredName},","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"     * {@param foodPreferences}, {@param familyConditions}, {@param hobbies},{@param tags}, {@param events}","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"     * @param patientHospitalId patient\u0027s hospital ID","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"     * @param name patient\u0027s full name","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"     * @param preferredName patient\u0027s preferred name","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"     * @param foodPreferences patient\u0027s preferred food","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"     * @param familyConditions patient\u0027s family condition","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"     * @param hobbies patient\u0027s hobby","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"     * @param tags tag for patient","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"SherisseTJW"},"content":"     * @param events","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"    public Patient(PatientHospitalId patientHospitalId, Name name, PreferredName preferredName,","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"                   Set\u003cFoodPreference\u003e foodPreferences, Set\u003cFamilyCondition\u003e familyConditions, Set\u003cHobby\u003e hobbies,","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"SherisseTJW"},"content":"                   Set\u003cTag\u003e tags, Set\u003cEvent\u003e events) {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"        requireAllNonNull(patientHospitalId, name, preferredName, foodPreferences, familyConditions, hobbies, tags);","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"        this.patientHospitalId \u003d patientHospitalId;","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"        this.preferredName \u003d preferredName;","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"        this.foodPreferences.addAll(foodPreferences);","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"        this.familyConditions.addAll(familyConditions);","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"        this.hobbies.addAll(hobbies);","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"SherisseTJW"},"content":"        this.events.addAll(events);","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"    public PatientHospitalId getPatientHospitalId() {","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"choowengyan"},"content":"        return patientHospitalId;","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"choowengyan"},"content":"    public PreferredName getPreferredName() {","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"choowengyan"},"content":"        return preferredName;","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"choowengyan"},"content":"     * Returns an immutable family condition set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"choowengyan"},"content":"     * if modification is attempted.","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"choowengyan"},"content":"    public Set\u003cFamilyCondition\u003e getFamilyConditions() {","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"choowengyan"},"content":"        return Collections.unmodifiableSet(familyConditions);","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"choowengyan"},"content":"     * Returns an immutable food preference set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"choowengyan"},"content":"     * if modification is attempted.","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"choowengyan"},"content":"    public Set\u003cFoodPreference\u003e getFoodPreferences() {","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"choowengyan"},"content":"        return Collections.unmodifiableSet(foodPreferences);","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"choowengyan"},"content":"     * Returns an immutable hobby set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"choowengyan"},"content":"     * if modification is attempted.","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"choowengyan"},"content":"    public Set\u003cHobby\u003e getHobbies() {","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"choowengyan"},"content":"        return Collections.unmodifiableSet(hobbies);","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"SherisseTJW"},"content":"     * Returns an immutable date set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"SherisseTJW"},"content":"     * if modification is attempted.","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"SherisseTJW"},"content":"    public Set\u003cEvent\u003e getEvents() {","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"SherisseTJW"},"content":"        return Collections.unmodifiableSet(this.events);","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"choowengyan"},"content":"     * Returns true if both patients have the same patientHospitalId.","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"NeoHW"},"content":"     * This defines a weaker notion of equality between two patients.","lastModifiedDate":"2024-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"NeoHW"},"content":"    public boolean isSamePatient(Patient otherPatient) {","lastModifiedDate":"2024-03-08"},{"lineNumber":131,"author":{"gitId":"NeoHW"},"content":"        if (otherPatient \u003d\u003d this) {","lastModifiedDate":"2024-03-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"NeoHW"},"content":"        return otherPatient !\u003d null","lastModifiedDate":"2024-03-08"},{"lineNumber":136,"author":{"gitId":"choowengyan"},"content":"                \u0026\u0026 otherPatient.getPatientHospitalId().equals(getPatientHospitalId());","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"NeoHW"},"content":"     * Returns true if both patients have the same identity and data fields.","lastModifiedDate":"2024-03-08"},{"lineNumber":141,"author":{"gitId":"NeoHW"},"content":"     * This defines a stronger notion of equality between two patients.","lastModifiedDate":"2024-03-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":150,"author":{"gitId":"NeoHW"},"content":"        if (!(other instanceof Patient)) {","lastModifiedDate":"2024-03-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"NeoHW"},"content":"        Patient otherPatient \u003d (Patient) other;","lastModifiedDate":"2024-03-08"},{"lineNumber":155,"author":{"gitId":"choowengyan"},"content":"        return patientHospitalId.equals(otherPatient.patientHospitalId)","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"choowengyan"},"content":"                \u0026\u0026 name.equals(otherPatient.name)","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"choowengyan"},"content":"                \u0026\u0026 preferredName.equals(otherPatient.preferredName)","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"choowengyan"},"content":"                \u0026\u0026 foodPreferences.equals(otherPatient.foodPreferences)","lastModifiedDate":"2024-04-01"},{"lineNumber":159,"author":{"gitId":"choowengyan"},"content":"                \u0026\u0026 familyConditions.equals(otherPatient.familyConditions)","lastModifiedDate":"2024-04-03"},{"lineNumber":160,"author":{"gitId":"choowengyan"},"content":"                \u0026\u0026 hobbies.equals(otherPatient.hobbies)","lastModifiedDate":"2024-04-03"},{"lineNumber":161,"author":{"gitId":"SherisseTJW"},"content":"                \u0026\u0026 tags.equals(otherPatient.tags)","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"SherisseTJW"},"content":"                \u0026\u0026 events.equals(otherPatient.events);","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"choowengyan"},"content":"        return Objects.hash(patientHospitalId, name, preferredName, foodPreferences, familyConditions, hobbies, tags,","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"SherisseTJW"},"content":"            events);","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":175,"author":{"gitId":"choowengyan"},"content":"            .add(\"patientHospitalId\", patientHospitalId)","lastModifiedDate":"2024-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"choowengyan"},"content":"            .add(\"preferredName\", preferredName)","lastModifiedDate":"2024-03-14"},{"lineNumber":178,"author":{"gitId":"choowengyan"},"content":"            .add(\"foodPreferences\", foodPreferences)","lastModifiedDate":"2024-04-01"},{"lineNumber":179,"author":{"gitId":"choowengyan"},"content":"            .add(\"familyConditions\", familyConditions)","lastModifiedDate":"2024-04-03"},{"lineNumber":180,"author":{"gitId":"choowengyan"},"content":"            .add(\"hobbies\", hobbies)","lastModifiedDate":"2024-04-03"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"SherisseTJW"},"content":"            .add(\"events\", this.events)","lastModifiedDate":"2024-03-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SherisseTJW":23,"choowengyan":69,"NeoHW":11,"-":83}},{"path":"src/main/java/seedu/address/model/patient/PatientHospitalId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":" * Represents a Patient ID in hospital in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPatientHospitalId(String)}","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"public class PatientHospitalId {","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"        \"Patient Hospital ID should only contain numeric characters, and it should not be blank\";","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"    /*","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[0-9]+$\";","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"    public final String patientHospitalId;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"     * Constructs a {@code id}.","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"     * @param id A valid patient hospital ID.","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"    public PatientHospitalId(String id) {","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"        requireNonNull(id);","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"        checkArgument(isValidPatientHospitalId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"        patientHospitalId \u003d id;","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"    public static boolean isValidPatientHospitalId(String test) {","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"        return patientHospitalId;","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"        if (!(other instanceof PatientHospitalId)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"        PatientHospitalId otherId \u003d (PatientHospitalId) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"        return patientHospitalId.equals(otherId.patientHospitalId);","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"        return patientHospitalId.hashCode();","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"choowengyan":67}},{"path":"src/main/java/seedu/address/model/patient/PreferredName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":" * Represents a Patient\u0027s name in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPreferredName(String)}","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"public class PreferredName {","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"        \"Preferred name should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"    /*","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"    public final String preferredName;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"     * @param name A valid preferred name.","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"    public PreferredName(String name) {","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"        requireNonNull(name);","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"        checkArgument(isValidPreferredName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"        preferredName \u003d name;","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"    public static boolean isValidPreferredName(String test) {","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"        return preferredName;","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"        if (!(other instanceof PreferredName)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"        PreferredName otherName \u003d (PreferredName) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"        return preferredName.equals(otherName.preferredName);","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"        return preferredName.hashCode();","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"choowengyan":67}},{"path":"src/main/java/seedu/address/model/patient/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"guohuang88"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"guohuang88"},"content":"import java.util.List;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"guohuang88"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"guohuang88"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"guohuang88"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"guohuang88"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"guohuang88"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"guohuang88"},"content":" * Tests that a {@code Patient}\u0027s {@code Tag} matches any of the keywords given.","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"guohuang88"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"guohuang88"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cPatient\u003e {","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"guohuang88"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"guohuang88"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"guohuang88"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"guohuang88"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"guohuang88"},"content":"    public boolean test(Patient patient) {","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"guohuang88"},"content":"        boolean result \u003d false;","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"guohuang88"},"content":"        for (Tag t : patient.getTags()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"guohuang88"},"content":"            result \u003d keywords.stream().anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(t.tagName, keyword));","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"guohuang88"},"content":"            if (result) {","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"guohuang88"},"content":"                break;","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"guohuang88"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"guohuang88"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"guohuang88"},"content":"        return result;","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"guohuang88"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"guohuang88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"guohuang88"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"guohuang88"},"content":"            return true;","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"guohuang88"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"guohuang88"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"guohuang88"},"content":"        if (!(other instanceof TagContainsKeywordsPredicate)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"guohuang88"},"content":"            return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"guohuang88"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"guohuang88"},"content":"        TagContainsKeywordsPredicate otherTagContainsKeywordsPredicate \u003d (TagContainsKeywordsPredicate) other;","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"guohuang88"},"content":"        return keywords.equals(otherTagContainsKeywordsPredicate.keywords);","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"guohuang88"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"guohuang88"},"content":"    public String toString() {","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"guohuang88"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"guohuang88"},"content":"                .add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"guohuang88"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"guohuang88":57}},{"path":"src/main/java/seedu/address/model/patient/UniquePatientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.exceptions.DuplicatePatientException;","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.exceptions.PatientNotFoundException;","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":" * A list of patients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":" * A patient is considered unique by comparing using {@code Patient#isSamePatient(Patient)}.","lastModifiedDate":"2024-03-09"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":" * As such, adding and updating of patients uses Patient#isSamePatient(Patient) for equality so as to ensure","lastModifiedDate":"2024-03-09"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":" * that the patient being added or updated is unique in terms of identity in the UniquePatientList.","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":" * However, the removal of a patient uses Patient#equals(Object) so as to ensure that","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":" * the patient with exactly the same fields will be removed.","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":" * @see Patient#isSamePatient(Patient)","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"public class UniquePatientList implements Iterable\u003cPatient\u003e {","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"    private final ObservableList\u003cPatient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"    private final ObservableList\u003cPatient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"     * Returns true if the list contains an equivalent patient as the given argument.","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"    public boolean contains(Patient toCheck) {","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePatient);","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"     * Adds a patient to the list.","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"     * The patient must not already exist in the list.","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"    public void add(Patient toAdd) {","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"            throw new DuplicatePatientException();","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"     * Replaces the patient {@code target} in the list with {@code editedPatient}.","lastModifiedDate":"2024-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"     * The patient identity of {@code editedPatient} must not be the same as another existing patient in the list.","lastModifiedDate":"2024-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2024-03-08"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"        requireAllNonNull(target, editedPatient);","lastModifiedDate":"2024-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"            throw new PatientNotFoundException();","lastModifiedDate":"2024-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"        if (!target.isSamePatient(editedPatient) \u0026\u0026 contains(editedPatient)) {","lastModifiedDate":"2024-03-08"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"            throw new DuplicatePatientException();","lastModifiedDate":"2024-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"        internalList.set(index, editedPatient);","lastModifiedDate":"2024-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"     * Removes the equivalent patient from the list.","lastModifiedDate":"2024-03-08"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"     * The patient must exist in the list.","lastModifiedDate":"2024-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"    public void remove(Patient toRemove) {","lastModifiedDate":"2024-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"            throw new PatientNotFoundException();","lastModifiedDate":"2024-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"NeoHW"},"content":"    public void setPatients(UniquePatientList replacement) {","lastModifiedDate":"2024-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"NeoHW"},"content":"     * Replaces the contents of this list with {@code patients}.","lastModifiedDate":"2024-03-08"},{"lineNumber":90,"author":{"gitId":"NeoHW"},"content":"     * {@code patients} must not contain duplicate patients.","lastModifiedDate":"2024-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"NeoHW"},"content":"    public void setPatients(List\u003cPatient\u003e patients) {","lastModifiedDate":"2024-03-08"},{"lineNumber":93,"author":{"gitId":"NeoHW"},"content":"        requireAllNonNull(patients);","lastModifiedDate":"2024-03-08"},{"lineNumber":94,"author":{"gitId":"NeoHW"},"content":"        if (!patientsAreUnique(patients)) {","lastModifiedDate":"2024-03-08"},{"lineNumber":95,"author":{"gitId":"NeoHW"},"content":"            throw new DuplicatePatientException();","lastModifiedDate":"2024-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"NeoHW"},"content":"        internalList.setAll(patients);","lastModifiedDate":"2024-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"NeoHW"},"content":"    public ObservableList\u003cPatient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"NeoHW"},"content":"    public Iterator\u003cPatient\u003e iterator() {","lastModifiedDate":"2024-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"NeoHW"},"content":"        if (!(other instanceof UniquePatientList)) {","lastModifiedDate":"2024-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"NeoHW"},"content":"        UniquePatientList otherUniquePatientList \u003d (UniquePatientList) other;","lastModifiedDate":"2024-03-08"},{"lineNumber":125,"author":{"gitId":"NeoHW"},"content":"        return internalList.equals(otherUniquePatientList.internalList);","lastModifiedDate":"2024-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"NeoHW"},"content":"     * Returns true if {@code patients} contains only unique patients.","lastModifiedDate":"2024-03-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"NeoHW"},"content":"    private boolean patientsAreUnique(List\u003cPatient\u003e patients) {","lastModifiedDate":"2024-03-08"},{"lineNumber":142,"author":{"gitId":"NeoHW"},"content":"        for (int i \u003d 0; i \u003c patients.size() - 1; i++) {","lastModifiedDate":"2024-03-08"},{"lineNumber":143,"author":{"gitId":"NeoHW"},"content":"            for (int j \u003d i + 1; j \u003c patients.size(); j++) {","lastModifiedDate":"2024-03-08"},{"lineNumber":144,"author":{"gitId":"NeoHW"},"content":"                if (patients.get(i).isSamePatient(patients.get(j))) {","lastModifiedDate":"2024-03-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"NeoHW":50,"-":101}},{"path":"src/main/java/seedu/address/model/patient/comparators/NameComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhiWei1010"},"content":"package seedu.address.model.patient.comparators;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"ZhiWei1010"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"ZhiWei1010"},"content":" * Comparator for Patient\u0027s name in PatientSync.","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"ZhiWei1010"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"ZhiWei1010"},"content":"public class NameComparator implements Comparator\u003cPatient\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"ZhiWei1010"},"content":"    public static final NameComparator NAME_COMPARATOR \u003d new NameComparator();","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"ZhiWei1010"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(NameComparator.class);","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"ZhiWei1010"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"ZhiWei1010"},"content":"    public int compare(Patient patientOne, Patient patientTwo) {","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"ZhiWei1010"},"content":"        logger.log(Level.INFO, \"Attempting to compare patients by name\");","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"ZhiWei1010"},"content":"        requireAllNonNull(patientOne, patientTwo);","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"ZhiWei1010"},"content":"        // Comparing patients via preferred name","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"ZhiWei1010"},"content":"        return patientOne.getName().toString()","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"ZhiWei1010"},"content":"                .compareToIgnoreCase(patientTwo.getName().toString());","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"ZhiWei1010"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"ZhiWei1010"},"content":"    public String toString() {","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"ZhiWei1010"},"content":"        return \"Comparator for Patients by Patients\u0027 name in alphanumerical order.\";","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"ZhiWei1010"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"ZhiWei1010":35}},{"path":"src/main/java/seedu/address/model/patient/comparators/PreferredNameComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhiWei1010"},"content":"package seedu.address.model.patient.comparators;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"ZhiWei1010"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"ZhiWei1010"},"content":" * Comparator for a Patient\u0027s preferred name in PatientSync.","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"ZhiWei1010"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"ZhiWei1010"},"content":"public class PreferredNameComparator implements Comparator\u003cPatient\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"ZhiWei1010"},"content":"    public static final PreferredNameComparator PREFERRED_NAME_COMPARATOR \u003d new PreferredNameComparator();","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"ZhiWei1010"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(PreferredNameComparator.class);","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"ZhiWei1010"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"ZhiWei1010"},"content":"    public int compare(Patient patientOne, Patient patientTwo) {","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"ZhiWei1010"},"content":"        logger.log(Level.INFO, \"Attempting to compare patients by preferred name\");","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"ZhiWei1010"},"content":"        requireAllNonNull(patientOne, patientTwo);","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"ZhiWei1010"},"content":"        // Comparing patients via preferred name","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"ZhiWei1010"},"content":"        return patientOne.getPreferredName().toString()","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"ZhiWei1010"},"content":"                .compareToIgnoreCase(patientTwo.getPreferredName().toString());","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"ZhiWei1010"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"ZhiWei1010"},"content":"    public String toString() {","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"ZhiWei1010"},"content":"        return \"Comparator for Patients by Patients\u0027 preferred name in alphanumerical order.\";","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"ZhiWei1010"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"ZhiWei1010":35}},{"path":"src/main/java/seedu/address/model/patient/exceptions/DuplicatePatientException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.model.patient.exceptions;","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":" * Signals that the operation will result in duplicate Patients (Patients are considered duplicates","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":" * if they have the same identity).","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"public class DuplicatePatientException extends RuntimeException {","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"    public DuplicatePatientException() {","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"        super(\"Operation would result in duplicate patients\");","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"NeoHW":11}},{"path":"src/main/java/seedu/address/model/patient/exceptions/PatientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.model.patient.exceptions;","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":" * Signals that the operation is unable to find the specified patient.","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"public class PatientNotFoundException extends RuntimeException {}","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"NeoHW":6}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"    public static final int MAX_TAG_LENGTH \u003d 50;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"    public static final String MESSAGE_LENGTH_CONSTRAINTS \u003d \"Tag names must be less than \"","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"            + MAX_TAG_LENGTH + \" characters\";","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tag names must not be empty, be less than \" + MAX_TAG_LENGTH","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"            + \" characters and can only contain alphanumeric characters or spaces\";","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[\\\\p{Alnum}][\\\\p{Alnum} ]*$\";","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"    public Tag(String tagName) throws IllegalArgumentException {","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"        checkArgument(isValidTagLength(tagName), MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2024-04-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"     * Returns true if a given string is of valid tag length.","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"    public static boolean isValidTagLength(String test) {","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"        return test.length() \u003c MAX_TAG_LENGTH;","lastModifiedDate":"2024-04-08"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"NeoHW":15,"-":58}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.Event;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FamilyCondition;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FoodPreference;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.Hobby;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.PatientHospitalId;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.PreferredName;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"    public static Patient[] getSamplePatients() {","lastModifiedDate":"2024-03-09"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"        return new Patient[]{","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"            new Patient(new PatientHospitalId(\"12345\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"                new Name(\"Alex Yeoh Jia Jun\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"                new PreferredName(\"Alex\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"                getFoodPreferenceSet(\"Chicken rice\"),","lastModifiedDate":"2024-04-08"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"                getFamilyConditionSet(\"Stable \", \"Has 2 sons that visits him regularly\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"                getHobbySet(\"Singing karaoke\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"                getTagSet(\"diabetes\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"                getEventSet(new String[]{\"Birthday celebration\"}, new String[]{\"20-12-2024\"})),","lastModifiedDate":"2024-04-08"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"            new Patient(new PatientHospitalId(\"12346\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"                new Name(\"Bernice Yu Sheng Huat\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"                new PreferredName(\"Bern\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"                getFoodPreferenceSet(\"Char Kuay Tiao\", \"Black Carrot Cake\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"                getFamilyConditionSet(\"Lives alone\", \"no family members around\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"                getHobbySet(\"Playing Mahjong\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"                getTagSet(\"high blood pressure\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"                getEventSet(new String[]{\"Family Visit\"}, new String[]{\"30-03-2024, 15:00 - 18:00\"})),","lastModifiedDate":"2024-04-08"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"            new Patient(new PatientHospitalId(\"12347\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"                new Name(\"Mary Jane\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"                new PreferredName(\"Mary\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"                getFoodPreferenceSet(\"Korean\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"                getFamilyConditionSet(\"Lives with only daughter\", \"quarrels regularly with daughter\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"                getHobbySet(\"Watching Drama\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"                getTagSet(\"fall risk\")),","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"            new Patient(new PatientHospitalId(\"12348\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"                new Name(\"David Li\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"                new PreferredName(\"David\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"                getFoodPreferenceSet(\"Bak Kut Teh\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"                getFamilyConditionSet(\"Son visits him every weekend\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"                getHobbySet(\"Plays erhu\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"                getTagSet(\"diabetes\", \"skin irritation\")),","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"            new Patient(new PatientHospitalId(\"12349\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"                new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"                new PreferredName(\"Fan\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"                getFoodPreferenceSet(\"Roti Prata\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"                getFamilyConditionSet(\"Children encountered accident 2 months ago\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"                getHobbySet(\"Plays badminton\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"                getTagSet(\"tumour\")),","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"            new Patient(new PatientHospitalId(\"12350\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"                new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"                new PreferredName(\"Rony\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"                getFoodPreferenceSet(\"Fish Ball Soup\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"                getFamilyConditionSet(\"Financial problem\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"                getHobbySet(\"Jog around park\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"                getTagSet(\"wheelchair\")),","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"        for (Patient samplePatient : getSamplePatients()) {","lastModifiedDate":"2024-03-09"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"            sampleAb.addPatient(samplePatient);","lastModifiedDate":"2024-03-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"choowengyan"},"content":"     * Returns a family condition set containing the list of strings given.","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"choowengyan"},"content":"    public static Set\u003cFamilyCondition\u003e getFamilyConditionSet(String... strings) {","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"choowengyan"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"choowengyan"},"content":"            .map(FamilyCondition::new)","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"choowengyan"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"choowengyan"},"content":"     * Returns a food preference set containing the list of strings given.","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"choowengyan"},"content":"    public static Set\u003cFoodPreference\u003e getFoodPreferenceSet(String... strings) {","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"choowengyan"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"choowengyan"},"content":"            .map(FoodPreference::new)","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"choowengyan"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"choowengyan"},"content":"     * Returns a hobby set containing the list of strings given.","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"choowengyan"},"content":"    public static Set\u003cHobby\u003e getHobbySet(String... strings) {","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"choowengyan"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"choowengyan"},"content":"            .map(Hobby::new)","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"choowengyan"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":116,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":117,"author":{"gitId":"SherisseTJW"},"content":"     * Returns a set of Events containing the list of strings given.","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"SherisseTJW"},"content":"    public static Set\u003cEvent\u003e getEventSet(String[] names, String[] dates) {","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"SherisseTJW"},"content":"        Event[] events \u003d new Event[names.length];","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"SherisseTJW"},"content":"        for (int i \u003d 0; i \u003c names.length; i++) {","lastModifiedDate":"2024-03-13"},{"lineNumber":122,"author":{"gitId":"SherisseTJW"},"content":"            events[i] \u003d new Event(names[i], dates[i]);","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":124,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":125,"author":{"gitId":"SherisseTJW"},"content":"        return Arrays.stream(events).collect(Collectors.toSet());","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":127,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"SherisseTJW":13,"choowengyan":51,"NeoHW":31,"-":33}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.Event;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"public class JsonAdaptedEvent {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"    private final String name;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"    private final String dateTime;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given {@code eventName}, {@code dateTime}","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"name\") String name,","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"                            @JsonProperty(\"dateTime\") String dateTime) {","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"     * Converts a given {@code Event} into this class for Jackson use.","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"        this.name \u003d source.name;","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"        this.dateTime \u003d convertToExpectedDateTimeFormat(source.date, source.startTime, source.endTime);","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Event} object.","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted Event.","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"        if (!Event.isValidEvent(this.dateTime)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"            throw new IllegalValueException(Event.DATETIME_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"        return new Event(this.name, this.dateTime);","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"    private String convertToExpectedDateTimeFormat(String date, String startTime, String endTime) {","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"        if (startTime \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"SherisseTJW"},"content":"            return date;","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"        return String.format(\"%s, %s - %s\", date, startTime, endTime);","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"SherisseTJW":54}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedFamilyCondition.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FamilyCondition;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":" * Jackson-friendly version of {@link FamilyCondition}.","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"class JsonAdaptedFamilyCondition {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"    private final String familyConditionName;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"     * Constructs a {@code JsonAdaptedFamilyCondition} with the given {@code familyConditionName}.","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"    @JsonCreator","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"    public JsonAdaptedFamilyCondition(String familyConditionName) {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"        if (familyConditionName \u003d\u003d null || familyConditionName.isEmpty()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"            throw new IllegalArgumentException(FamilyCondition.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"        this.familyConditionName \u003d familyConditionName;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"     * Converts a given {@code FamilyCondition} into this class for Jackson use.","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"    public JsonAdaptedFamilyCondition(FamilyCondition source) {","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"        familyConditionName \u003d source.familyCondition;","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"    @JsonValue","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"    public String getFamilyConditionName() {","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"        return familyConditionName;","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"     * Converts this Jackson-friendly adapted family condition object into the model\u0027s {@code FamilyCondition} object.","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted family condition.","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"    public FamilyCondition toModelType() throws IllegalValueException {","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"        if (!FamilyCondition.isValidFamilyCondition(familyConditionName)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"            throw new IllegalValueException(FamilyCondition.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"        return new FamilyCondition(familyConditionName);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"choowengyan":51}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedFoodPreference.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FoodPreference;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":" * Jackson-friendly version of {@link FoodPreference}.","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"class JsonAdaptedFoodPreference {","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"    private final String foodPreferenceName;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"     * Constructs a {@code JsonAdaptedFoodPreference} with the given {@code foodPreferenceName}.","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"    @JsonCreator","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"    public JsonAdaptedFoodPreference(String foodPreferenceName) {","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"        if (foodPreferenceName \u003d\u003d null || foodPreferenceName.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"            throw new IllegalArgumentException(FoodPreference.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"        this.foodPreferenceName \u003d foodPreferenceName;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"     * Converts a given {@code FoodPreference} into this class for Jackson use.","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"    public JsonAdaptedFoodPreference(FoodPreference source) {","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"        foodPreferenceName \u003d source.foodPreference;","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"    @JsonValue","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"    public String getFoodPreferenceName() {","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"        return foodPreferenceName;","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code FoodPreference} object.","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"    public FoodPreference toModelType() throws IllegalValueException {","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"        if (!FoodPreference.isValidFoodPreference(foodPreferenceName)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"            throw new IllegalValueException(FoodPreference.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"        return new FoodPreference(foodPreferenceName);","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"choowengyan":51}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedHobby.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.Hobby;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":" * Jackson-friendly version of {@link Hobby}.","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"class JsonAdaptedHobby {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"    private final String hobbyName;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"     * Constructs a {@code JsonAdaptedHobby} with the given {@code hobbyName}.","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"    @JsonCreator","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"    public JsonAdaptedHobby(String hobbyName) {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"        if (hobbyName \u003d\u003d null || hobbyName.isEmpty()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"            throw new IllegalArgumentException(Hobby.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"        this.hobbyName \u003d hobbyName;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"     * Converts a given {@code Hobby} into this class for Jackson use.","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"    public JsonAdaptedHobby(Hobby source) {","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"        hobbyName \u003d source.hobby;","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"    @JsonValue","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"    public String getHobbyName() {","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"        return hobbyName;","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"     * Converts this Jackson-friendly adapted hobby object into the model\u0027s {@code Hobby} object.","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted hobby.","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"    public Hobby toModelType() throws IllegalValueException {","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"        if (!Hobby.isValidHobby(hobbyName)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"            throw new IllegalValueException(Hobby.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"        return new Hobby(hobbyName);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"choowengyan":51}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPatient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.Event;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FamilyCondition;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FoodPreference;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.Hobby;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.PatientHospitalId;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.PreferredName;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":" * Jackson-friendly version of {@link Patient}.","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"class JsonAdaptedPatient {","lastModifiedDate":"2024-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Patient\u0027s %s field is missing!\";","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"    private final String patientHospitalId;","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"    private final String preferredName;","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"    private final List\u003cJsonAdaptedFoodPreference\u003e foodPreferences \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"    private final List\u003cJsonAdaptedFamilyCondition\u003e familyConditions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"    private final List\u003cJsonAdaptedHobby\u003e hobbies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"     * Constructs a {@code JsonAdaptedPatient} with the given patient details.","lastModifiedDate":"2024-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"    public JsonAdaptedPatient(@JsonProperty(\"patientHospitalId\") String patientHospitalId,","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"                              @JsonProperty(\"name\") String name, @JsonProperty(\"preferredName\") String preferredName,","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"                              @JsonProperty(\"foodPreferences\") List\u003cJsonAdaptedFoodPreference\u003e foodPreferences,","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"                              @JsonProperty(\"familyConditions\") List\u003cJsonAdaptedFamilyCondition\u003e familyConditions,","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"                              @JsonProperty(\"hobbies\") List\u003cJsonAdaptedHobby\u003e hobbies,","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"                              @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"SherisseTJW"},"content":"                              @JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"        this.patientHospitalId \u003d patientHospitalId;","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"        this.preferredName \u003d preferredName;","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"        if (foodPreferences !\u003d null) {","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"            this.foodPreferences.addAll(foodPreferences);","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"        if (familyConditions !\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"            this.familyConditions.addAll(familyConditions);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"        if (hobbies !\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"            this.hobbies.addAll(hobbies);","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"SherisseTJW"},"content":"        if (events !\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"SherisseTJW"},"content":"            this.events.addAll(events);","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"     * Converts a given {@code Patient} into this class for Alex use.","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"    public JsonAdaptedPatient(Patient source) {","lastModifiedDate":"2024-03-09"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"        patientHospitalId \u003d source.getPatientHospitalId().patientHospitalId;","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"        preferredName \u003d source.getPreferredName().preferredName;","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"choowengyan"},"content":"        foodPreferences.addAll(source.getFoodPreferences().stream()","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"choowengyan"},"content":"            .map(JsonAdaptedFoodPreference::new)","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"choowengyan"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"choowengyan"},"content":"        familyConditions.addAll(source.getFamilyConditions().stream()","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"choowengyan"},"content":"            .map(JsonAdaptedFamilyCondition::new)","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"choowengyan"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"choowengyan"},"content":"        hobbies.addAll(source.getHobbies().stream()","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"choowengyan"},"content":"            .map(JsonAdaptedHobby::new)","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"choowengyan"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"SherisseTJW"},"content":"        events.addAll(source.getEvents().stream()","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"SherisseTJW"},"content":"            .map(JsonAdaptedEvent::new)","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"SherisseTJW"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"NeoHW"},"content":"     * Converts this Jackson-friendly adapted patient object into the model\u0027s {@code Patient} object.","lastModifiedDate":"2024-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"NeoHW"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted patient.","lastModifiedDate":"2024-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"NeoHW"},"content":"    public Patient toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-08"},{"lineNumber":100,"author":{"gitId":"choowengyan"},"content":"        final List\u003cFoodPreference\u003e patientFoodPreferences \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"choowengyan"},"content":"        for (JsonAdaptedFoodPreference foodPreference : foodPreferences) {","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"choowengyan"},"content":"            patientFoodPreferences.add(foodPreference.toModelType());","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"choowengyan"},"content":"        if (patientFoodPreferences.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"choowengyan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"choowengyan"},"content":"                FoodPreference.class.getSimpleName()));","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"choowengyan"},"content":"        final List\u003cFamilyCondition\u003e patientFamilyConditions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"choowengyan"},"content":"        for (JsonAdaptedFamilyCondition familyCondition : familyConditions) {","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"choowengyan"},"content":"            patientFamilyConditions.add(familyCondition.toModelType());","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"choowengyan"},"content":"        if (patientFamilyConditions.isEmpty()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"choowengyan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"choowengyan"},"content":"                FamilyCondition.class.getSimpleName()));","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"choowengyan"},"content":"        final List\u003cHobby\u003e patientHobbies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"choowengyan"},"content":"        for (JsonAdaptedHobby hobby : hobbies) {","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"choowengyan"},"content":"            patientHobbies.add(hobby.toModelType());","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"choowengyan"},"content":"        if (patientHobbies.isEmpty()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"choowengyan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"choowengyan"},"content":"                Hobby.class.getSimpleName()));","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"NeoHW"},"content":"        final List\u003cTag\u003e patientTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":129,"author":{"gitId":"NeoHW"},"content":"            patientTags.add(tag.toModelType());","lastModifiedDate":"2024-03-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"SherisseTJW"},"content":"        final List\u003cEvent\u003e patientEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"SherisseTJW"},"content":"        for (JsonAdaptedEvent date : events) {","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"SherisseTJW"},"content":"            patientEvents.add(date.toModelType());","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":136,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":137,"author":{"gitId":"choowengyan"},"content":"        if (patientHospitalId \u003d\u003d null) {","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"choowengyan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"choowengyan"},"content":"                PatientHospitalId.class.getSimpleName()));","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"choowengyan"},"content":"        if (!PatientHospitalId.isValidPatientHospitalId(patientHospitalId)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":143,"author":{"gitId":"choowengyan"},"content":"            throw new IllegalValueException(PatientHospitalId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"choowengyan"},"content":"        final PatientHospitalId modelPatientHospitalId \u003d new PatientHospitalId(patientHospitalId);","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"choowengyan"},"content":"        if (preferredName \u003d\u003d null) {","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"choowengyan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"choowengyan"},"content":"                PreferredName.class.getSimpleName()));","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"choowengyan"},"content":"        if (!PreferredName.isValidPreferredName(preferredName)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"choowengyan"},"content":"            throw new IllegalValueException(PreferredName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"choowengyan"},"content":"        final PreferredName modelPreferredName \u003d new PreferredName(preferredName);","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"choowengyan"},"content":"        final Set\u003cFoodPreference\u003e modelFoodPreferences \u003d new HashSet\u003c\u003e(patientFoodPreferences);","lastModifiedDate":"2024-04-01"},{"lineNumber":166,"author":{"gitId":"choowengyan"},"content":"        final Set\u003cFamilyCondition\u003e modelFamilyConditions \u003d new HashSet\u003c\u003e(patientFamilyConditions);","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"choowengyan"},"content":"        final Set\u003cHobby\u003e modelHobbies \u003d new HashSet\u003c\u003e(patientHobbies);","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"NeoHW"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(patientTags);","lastModifiedDate":"2024-03-09"},{"lineNumber":169,"author":{"gitId":"SherisseTJW"},"content":"        final Set\u003cEvent\u003e modelEvents \u003d new HashSet\u003c\u003e(patientEvents);","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":171,"author":{"gitId":"choowengyan"},"content":"        return new Patient(modelPatientHospitalId, modelName, modelPreferredName, modelFoodPreferences,","lastModifiedDate":"2024-04-01"},{"lineNumber":172,"author":{"gitId":"choowengyan"},"content":"            modelFamilyConditions, modelHobbies, modelTags, modelEvents);","lastModifiedDate":"2024-04-03"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"SherisseTJW":19,"choowengyan":90,"NeoHW":11,"-":55}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"Patients list contains duplicate patient(s).\";","lastModifiedDate":"2024-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"    private final List\u003cJsonAdaptedPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given patients.","lastModifiedDate":"2024-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"patients\") List\u003cJsonAdaptedPatient\u003e patients) {","lastModifiedDate":"2024-03-09"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"        this.patients.addAll(patients);","lastModifiedDate":"2024-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"        patients.addAll(source.getPatientList().stream().map(JsonAdaptedPatient::new).collect(Collectors.toList()));","lastModifiedDate":"2024-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"        for (JsonAdaptedPatient jsonAdaptedPatient : patients) {","lastModifiedDate":"2024-03-09"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"            Patient patient \u003d jsonAdaptedPatient.toModelType();","lastModifiedDate":"2024-03-09"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"            if (addressBook.hasPatient(patient)) {","lastModifiedDate":"2024-03-09"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2024-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"            addressBook.addPatient(patient);","lastModifiedDate":"2024-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"NeoHW":12,"-":48}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"    private PatientListPanel patientListPanel;","lastModifiedDate":"2024-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"    private StackPane patientListPanelPlaceholder;","lastModifiedDate":"2024-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"NeoHW"},"content":"        patientListPanel \u003d new PatientListPanel(logic.getFilteredPatientList());","lastModifiedDate":"2024-03-09"},{"lineNumber":114,"author":{"gitId":"NeoHW"},"content":"        patientListPanelPlaceholder.getChildren().add(patientListPanel.getRoot());","lastModifiedDate":"2024-03-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"NeoHW"},"content":"    public PatientListPanel getPatientListPanel() {","lastModifiedDate":"2024-03-09"},{"lineNumber":167,"author":{"gitId":"NeoHW"},"content":"        return patientListPanel;","lastModifiedDate":"2024-03-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"NeoHW":6,"-":190}},{"path":"src/main/java/seedu/address/ui/PatientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.Event;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FamilyCondition;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FoodPreference;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.Hobby;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":" * An UI component that displays information of a {@code Patient}.","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"public class PatientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"    private static final String FXML \u003d \"PatientListCard.fxml\";","lastModifiedDate":"2024-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"    public final Patient patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"    private Label patientHospitalId;","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"    private Label preferredName;","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"    private VBox foodPreferences;","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"    @FXML","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"    private VBox familyConditions;","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"    @FXML","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"    private VBox hobbies;","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"    @FXML","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"SherisseTJW"},"content":"    private VBox events;","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"     * Creates a {@code PatientCode} with the given {@code Patient} and index to display.","lastModifiedDate":"2024-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"    public PatientCard(Patient patient, int displayedIndex) {","lastModifiedDate":"2024-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"        name.setText(patient.getName().fullName);","lastModifiedDate":"2024-03-08"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"        preferredName.setText(patient.getPreferredName().preferredName);","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"        ArrayList\u003cFoodPreference\u003e allFoodPreferences \u003d new ArrayList\u003c\u003e(patient.getFoodPreferences());","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"        Collections.sort(allFoodPreferences);","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"        for (int i \u003d 1; i \u003c\u003d allFoodPreferences.size(); i++) {","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"            Label foodPreferenceLabel \u003d new Label(\"\\u2981 \" + allFoodPreferences.get(i - 1).toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"            foodPreferenceLabel.setWrapText(true);","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"            foodPreferences.getChildren().add(foodPreferenceLabel);","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"choowengyan"},"content":"        ArrayList\u003cFamilyCondition\u003e allFamilyConditions \u003d new ArrayList\u003c\u003e(patient.getFamilyConditions());","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"        Collections.sort(allFamilyConditions);","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"choowengyan"},"content":"        for (int i \u003d 1; i \u003c\u003d allFamilyConditions.size(); i++) {","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"choowengyan"},"content":"            Label familyConditionLabel \u003d new Label(\"\\u2981 \" + allFamilyConditions.get(i - 1).toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"choowengyan"},"content":"            familyConditionLabel.setWrapText(true);","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"choowengyan"},"content":"            familyConditions.getChildren().add(familyConditionLabel);","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"choowengyan"},"content":"        ArrayList\u003cHobby\u003e allHobbies \u003d new ArrayList\u003c\u003e(patient.getHobbies());","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"choowengyan"},"content":"        Collections.sort(allHobbies);","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"choowengyan"},"content":"        for (int i \u003d 1; i \u003c\u003d allHobbies.size(); i++) {","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"choowengyan"},"content":"            Label hobbyLabel \u003d new Label(\"\\u2981 \" + allHobbies.get(i - 1).toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"choowengyan"},"content":"            hobbyLabel.setWrapText(true);","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"choowengyan"},"content":"            hobbies.getChildren().add(hobbyLabel);","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"NeoHW"},"content":"        patient.getTags().stream()","lastModifiedDate":"2024-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":94,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"SherisseTJW"},"content":"        if (patient.getEvents().size() \u003e\u003d 1) {","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"SherisseTJW"},"content":"            events.getChildren().add(new Label(\"Events:\\n\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"SherisseTJW"},"content":"            ArrayList\u003cEvent\u003e allEvents \u003d new ArrayList\u003c\u003e(patient.getEvents());","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"SherisseTJW"},"content":"            Collections.sort(allEvents);","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"SherisseTJW"},"content":"            for (int i \u003d 1; i \u003c\u003d allEvents.size(); i++) {","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"SherisseTJW"},"content":"                events.getChildren().add(new Label((i) + \". \"","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"SherisseTJW"},"content":"                        + allEvents.get(i - 1).toString() + \"\\n\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"SherisseTJW"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"SherisseTJW":17,"choowengyan":36,"NeoHW":10,"-":43}},{"path":"src/main/java/seedu/address/ui/PatientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":" * Panel containing the list of patients.","lastModifiedDate":"2024-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"public class PatientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-09"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"    private static final String FXML \u003d \"PatientListPanel.fxml\";","lastModifiedDate":"2024-03-09"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PatientListPanel.class);","lastModifiedDate":"2024-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"    private ListView\u003cPatient\u003e patientListView;","lastModifiedDate":"2024-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"     * Creates a {@code PatientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"    public PatientListPanel(ObservableList\u003cPatient\u003e patientList) {","lastModifiedDate":"2024-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"        patientListView.setItems(patientList);","lastModifiedDate":"2024-03-09"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"        patientListView.setCellFactory(listView -\u003e new PatientListViewCell());","lastModifiedDate":"2024-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Patient} using a {@code PatientCard}.","lastModifiedDate":"2024-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"    class PatientListViewCell extends ListCell\u003cPatient\u003e {","lastModifiedDate":"2024-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"        protected void updateItem(Patient patient, boolean empty) {","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"            super.updateItem(patient, empty);","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"            if (empty || patient \u003d\u003d null) {","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"                setGraphic(new PatientCard(patient, getIndex() + 1).getRoot());","lastModifiedDate":"2024-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"NeoHW":16,"-":33}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"choowengyan"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":355,"author":{"gitId":"choowengyan"},"content":".vbox-labels .label {","lastModifiedDate":"2024-04-03"},{"lineNumber":356,"author":{"gitId":"choowengyan"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2024-04-03"},{"lineNumber":357,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":358,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":359,"author":{"gitId":"choowengyan"},"content":".hbox-labels {","lastModifiedDate":"2024-04-03"},{"lineNumber":360,"author":{"gitId":"choowengyan"},"content":"    -fx-padding: 6px 0 0 0;","lastModifiedDate":"2024-04-03"},{"lineNumber":361,"author":{"gitId":"choowengyan"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2024-04-03"},{"lineNumber":362,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":363,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":364,"author":{"gitId":"choowengyan"},"content":".bold-label {","lastModifiedDate":"2024-04-03"},{"lineNumber":365,"author":{"gitId":"choowengyan"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2024-04-03"},{"lineNumber":366,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"choowengyan":14,"-":352}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"ZhiWei1010"},"content":"         title\u003d\"PatientSync\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"        \u003cVBox fx:id\u003d\"patientList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"SherisseTJW"},"content":"          \u003cStackPane fx:id\u003d\"patientListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"SherisseTJW":1,"ZhiWei1010":1,"NeoHW":1,"-":57}},{"path":"src/main/resources/view/PatientListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\" styleClass\u003d\"hbox-labels\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"        \u003cLabel fx:id\u003d\"preferredNameLabel\" styleClass\u003d\"cell_small_label\" text\u003d\"Preferred Name:\"/\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"        \u003cLabel fx:id\u003d\"preferredName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$preferredName\"/\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"BASELINE_LEFT\" styleClass\u003d\"hbox-labels\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"        \u003cLabel fx:id\u003d\"foodPreferenceLabel\" style\u003d\"-fx-font-weight: bold;\" styleClass\u003d\"cell_small_label\" text\u003d\"Food Preferences:\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"BASELINE_LEFT\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"        \u003cVBox fx:id\u003d\"foodPreferences\" GridPane.columnIndex\u003d\"1\" alignment\u003d\"CENTER_LEFT\" styleClass\u003d\"vbox-labels\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"BASELINE_LEFT\" styleClass\u003d\"hbox-labels\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"        \u003cLabel fx:id\u003d\"familyConditionLabel\" styleClass\u003d\"cell_small_label\" text\u003d\"Family Conditions:\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"BASELINE_LEFT\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"        \u003cVBox fx:id\u003d\"familyConditions\" GridPane.columnIndex\u003d\"1\" alignment\u003d\"CENTER_LEFT\" styleClass\u003d\"vbox-labels\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"BASELINE_LEFT\" styleClass\u003d\"hbox-labels\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"        \u003cLabel fx:id\u003d\"hobbyLabel\" styleClass\u003d\"cell_small_label\" text\u003d\"Hobbies:\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"BASELINE_LEFT\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"        \u003cVBox fx:id\u003d\"hobbies\" GridPane.columnIndex\u003d\"1\" alignment\u003d\"CENTER_LEFT\" styleClass\u003d\"vbox-labels\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"SherisseTJW"},"content":"    \u003cVBox fx:id\u003d\"events\" GridPane.columnIndex\u003d\"1\" alignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SherisseTJW":3,"choowengyan":23,"-":33}},{"path":"src/main/resources/view/PatientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"  \u003cListView fx:id\u003d\"patientListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SherisseTJW":1,"-":7}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FAMILY_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FOOD_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HOBBY_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREFERRED_NAME_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.AMY;","lastModifiedDate":"2024-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"NeoHW"},"content":"    public void getFilteredPatientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-09"},{"lineNumber":89,"author":{"gitId":"NeoHW"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPatientList().remove(0));","lastModifiedDate":"2024-03-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"choowengyan"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + ID_DESC_AMY + NAME_DESC_AMY + PREFERRED_NAME_DESC_AMY","lastModifiedDate":"2024-03-14"},{"lineNumber":171,"author":{"gitId":"choowengyan"},"content":"                + FOOD_DESC_AMY + FAMILY_DESC_AMY + HOBBY_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":172,"author":{"gitId":"NeoHW"},"content":"        Patient expectedPatient \u003d new PatientBuilder(AMY).withTags().build();","lastModifiedDate":"2024-03-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"NeoHW"},"content":"        expectedModel.addPatient(expectedPatient);","lastModifiedDate":"2024-03-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"choowengyan":7,"NeoHW":9,"-":161}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2024-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"    public void execute_duplicatePatient_throwsCommandException() {","lastModifiedDate":"2024-03-09"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"        Patient patientInList \u003d model.getAddressBook().getPatientList().get(0);","lastModifiedDate":"2024-03-09"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"        assertCommandFailure(new AddCommand(patientInList), model,","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"                AddCommand.MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2024-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"NeoHW":6,"-":27}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2024-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"    public void constructor_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2024-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"    public void execute_duplicatePatient_throwsCommandException() {","lastModifiedDate":"2024-03-09"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"        Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2024-03-09"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"        AddCommand addCommand \u003d new AddCommand(validPatient);","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"        ModelStub modelStub \u003d new ModelStubWithPatient(validPatient);","lastModifiedDate":"2024-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PATIENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2024-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"        Patient alice \u003d new PatientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2024-03-09"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"        Patient bob \u003d new PatientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2024-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2024-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":109,"author":{"gitId":"NeoHW"},"content":"        public void addPatient(Patient patient) {","lastModifiedDate":"2024-03-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"NeoHW"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2024-03-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"NeoHW"},"content":"        public void deletePatient(Patient target) {","lastModifiedDate":"2024-03-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"NeoHW"},"content":"        public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2024-03-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"NeoHW"},"content":"        public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2024-03-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"NeoHW"},"content":"        public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2024-03-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"ZhiWei1010"},"content":"        public void updatePatientList(List\u003cPatient\u003e patientList) {","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"ZhiWei1010"},"content":"        public ObservableList\u003cPatient\u003e getFullPatientList() {","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"NeoHW"},"content":"     * A Model stub that contains a single patient.","lastModifiedDate":"2024-03-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"NeoHW"},"content":"    private class ModelStubWithPatient extends ModelStub {","lastModifiedDate":"2024-03-09"},{"lineNumber":163,"author":{"gitId":"NeoHW"},"content":"        private final Patient patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":165,"author":{"gitId":"NeoHW"},"content":"        ModelStubWithPatient(Patient patient) {","lastModifiedDate":"2024-03-09"},{"lineNumber":166,"author":{"gitId":"NeoHW"},"content":"            requireNonNull(patient);","lastModifiedDate":"2024-03-08"},{"lineNumber":167,"author":{"gitId":"NeoHW"},"content":"            this.patient \u003d patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"NeoHW"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2024-03-09"},{"lineNumber":172,"author":{"gitId":"NeoHW"},"content":"            requireNonNull(patient);","lastModifiedDate":"2024-03-08"},{"lineNumber":173,"author":{"gitId":"NeoHW"},"content":"            return this.patient.isSamePatient(patient);","lastModifiedDate":"2024-03-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"NeoHW"},"content":"     * A Model stub that always accept the patient being added.","lastModifiedDate":"2024-03-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"NeoHW"},"content":"    private class ModelStubAcceptingPatientAdded extends ModelStub {","lastModifiedDate":"2024-03-09"},{"lineNumber":181,"author":{"gitId":"NeoHW"},"content":"        final ArrayList\u003cPatient\u003e patientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"NeoHW"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2024-03-09"},{"lineNumber":185,"author":{"gitId":"NeoHW"},"content":"            requireNonNull(patient);","lastModifiedDate":"2024-03-08"},{"lineNumber":186,"author":{"gitId":"NeoHW"},"content":"            return patientsAdded.stream().anyMatch(patient::isSamePatient);","lastModifiedDate":"2024-03-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"NeoHW"},"content":"        public void addPatient(Patient patient) {","lastModifiedDate":"2024-03-09"},{"lineNumber":191,"author":{"gitId":"NeoHW"},"content":"            requireNonNull(patient);","lastModifiedDate":"2024-03-08"},{"lineNumber":192,"author":{"gitId":"NeoHW"},"content":"            patientsAdded.add(patient);","lastModifiedDate":"2024-03-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"ZhiWei1010":3,"NeoHW":36,"-":162}},{"path":"src/test/java/seedu/address/logic/commands/AddEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.Event;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"public class AddEventCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"    private final Event validDate \u003d new Event(\"Test\", \"20-02-9999\");","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"    private final Event secondValidDate \u003d new Event(\"SomethingElse\", \"20-02-9999\"); // different name","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"    private final Event pastDate \u003d new Event(\"Test\", \"20-12-1999\"); // different date","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddEventCommand(null, validDate));","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"    public void constructor_nullEventDateTimeStr_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"        Index index \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddEventCommand(index, null));","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"    public void constructor_nullIndexAndEventDateTimeStr_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddEventCommand(null, null));","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"SherisseTJW"},"content":"    public void execute_addValidEventToInvalidPatient_throwsCommandException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"        Index invalidIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommand(invalidIndex, validDate);","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"SherisseTJW"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e addEventCommand.execute(model));","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"        assertEquals(MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX, exception.getMessage());","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"SherisseTJW"},"content":"    public void execute_addValidEvent_success() throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"SherisseTJW"},"content":"        Index validIndex \u003d Index.fromZeroBased(1);","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"SherisseTJW"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommand(validIndex, validDate);","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"SherisseTJW"},"content":"        CommandResult result \u003d addEventCommand.execute(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"SherisseTJW"},"content":"        Patient editedPatient \u003d model.getFilteredPatientList().get(validIndex.getZeroBased());","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"SherisseTJW"},"content":"        String expected \u003d String.format(AddEventCommand.MESSAGE_SUCCESS, validDate.name,","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"SherisseTJW"},"content":"                editedPatient.getName(), validIndex.getOneBased(), validDate.date);","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"SherisseTJW"},"content":"        assertEquals(expected, result.getFeedbackToUser());","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"SherisseTJW"},"content":"        Set\u003cEvent\u003e expectedEvents \u003d new HashSet\u003c\u003e(editedPatient.getEvents());","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(editedPatient.getEvents().equals(expectedEvents));","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"SherisseTJW"},"content":"    public void execute_addPastEvent_success() throws CommandException {","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"SherisseTJW"},"content":"        Index validIndex \u003d Index.fromZeroBased(1);","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"SherisseTJW"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommand(validIndex, pastDate);","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"SherisseTJW"},"content":"        CommandResult result \u003d addEventCommand.execute(model);","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"SherisseTJW"},"content":"        Patient editedPatient \u003d model.getFilteredPatientList().get(validIndex.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"SherisseTJW"},"content":"        String expected \u003d String.format(AddEventCommand.MESSAGE_SUCCESS, pastDate.name,","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"SherisseTJW"},"content":"                editedPatient.getName(), validIndex.getOneBased(), pastDate.date","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"SherisseTJW"},"content":"                        + \"\\n\" + AddEventCommand.MESSAGE_PAST_EVENT_WARNING);","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"SherisseTJW"},"content":"        assertEquals(expected, result.getFeedbackToUser());","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"SherisseTJW"},"content":"        Set\u003cEvent\u003e expectedEvents \u003d new HashSet\u003c\u003e(editedPatient.getEvents());","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(editedPatient.getEvents().equals(expectedEvents));","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"SherisseTJW"},"content":"    public void execute_addDuplicateEvent_success() throws CommandException {","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"SherisseTJW"},"content":"        Index validIndex \u003d Index.fromZeroBased(1);","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"SherisseTJW"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommand(validIndex, validDate);","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"SherisseTJW"},"content":"        CommandResult result;","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"SherisseTJW"},"content":"        String expected;","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"SherisseTJW"},"content":"        Patient editedPatient;","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"SherisseTJW"},"content":"        Set\u003cEvent\u003e expectedEvents;","lastModifiedDate":"2024-03-23"},{"lineNumber":97,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"SherisseTJW"},"content":"        // Confirm the basic add works","lastModifiedDate":"2024-03-23"},{"lineNumber":99,"author":{"gitId":"SherisseTJW"},"content":"        result \u003d addEventCommand.execute(model);","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"SherisseTJW"},"content":"        editedPatient \u003d model.getFilteredPatientList().get(validIndex.getZeroBased());","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"SherisseTJW"},"content":"        expected \u003d String.format(AddEventCommand.MESSAGE_SUCCESS, validDate.name,","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"SherisseTJW"},"content":"                editedPatient.getName(), validIndex.getOneBased(), validDate.date);","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"SherisseTJW"},"content":"        assertEquals(expected, result.getFeedbackToUser());","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":105,"author":{"gitId":"SherisseTJW"},"content":"        expectedEvents \u003d new HashSet\u003c\u003e(editedPatient.getEvents());","lastModifiedDate":"2024-03-23"},{"lineNumber":106,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(editedPatient.getEvents().equals(expectedEvents));","lastModifiedDate":"2024-03-23"},{"lineNumber":107,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":108,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":109,"author":{"gitId":"SherisseTJW"},"content":"        // Attempt to insert duplicate","lastModifiedDate":"2024-03-23"},{"lineNumber":110,"author":{"gitId":"SherisseTJW"},"content":"        result \u003d addEventCommand.execute(model);","lastModifiedDate":"2024-03-23"},{"lineNumber":111,"author":{"gitId":"SherisseTJW"},"content":"        editedPatient \u003d model.getFilteredPatientList().get(validIndex.getZeroBased());","lastModifiedDate":"2024-03-23"},{"lineNumber":112,"author":{"gitId":"SherisseTJW"},"content":"        expected \u003d String.format(AddEventCommand.MESSAGE_DUPLICATE, validDate.name,","lastModifiedDate":"2024-03-23"},{"lineNumber":113,"author":{"gitId":"SherisseTJW"},"content":"                editedPatient.getName(), validIndex.getOneBased(), validDate.date);","lastModifiedDate":"2024-03-23"},{"lineNumber":114,"author":{"gitId":"SherisseTJW"},"content":"        assertEquals(expected, result.getFeedbackToUser());","lastModifiedDate":"2024-03-23"},{"lineNumber":115,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":116,"author":{"gitId":"SherisseTJW"},"content":"        expectedEvents \u003d new HashSet\u003c\u003e(editedPatient.getEvents());","lastModifiedDate":"2024-03-23"},{"lineNumber":117,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(editedPatient.getEvents().equals(expectedEvents));","lastModifiedDate":"2024-03-23"},{"lineNumber":118,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":119,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":120,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"SherisseTJW"},"content":"    public void equalsTest() {","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"SherisseTJW"},"content":"        AddEventCommand addEventCommandFirst \u003d new AddEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"SherisseTJW"},"content":"                INDEX_FIRST_PATIENT, validDate);","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"SherisseTJW"},"content":"        AddEventCommand addEventCommandSecond \u003d new AddEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"SherisseTJW"},"content":"                INDEX_SECOND_PATIENT, validDate);","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"SherisseTJW"},"content":"        AddEventCommand addEventCommandThird \u003d new AddEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"SherisseTJW"},"content":"                INDEX_FIRST_PATIENT, secondValidDate);","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"SherisseTJW"},"content":"        AddEventCommand addEventCommandFourth \u003d new AddEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"SherisseTJW"},"content":"                INDEX_FIRST_PATIENT, pastDate);","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(addEventCommandFirst.equals(addEventCommandSecond));","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(addEventCommandFirst.equals(addEventCommandThird));","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(addEventCommandFirst.equals(addEventCommandFourth));","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(addEventCommandFirst.equals(addEventCommandFirst));","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"SherisseTJW"},"content":"    public void toStringTest() {","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"SherisseTJW"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"SherisseTJW"},"content":"                INDEX_FIRST_PATIENT, validDate);","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"SherisseTJW"},"content":"        String expected \u003d AddEventCommand.class.getCanonicalName() + \"{index\u003d\" + INDEX_FIRST_PATIENT","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"SherisseTJW"},"content":"                + \", event\u003d\" + validDate + \"}\";","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(addEventCommand.toString().equals(expected));","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"SherisseTJW":149}},{"path":"src/test/java/seedu/address/logic/commands/AddTagsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DEPRESSION;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DEPRESSION_OUTPUT;","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DIABETES;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DIABETES_OUTPUT;","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"public class AddTagsCommandTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"    public void execute_validTagsUnfilteredList_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"        Index index \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"        Set\u003cTag\u003e tagsToAdd \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"        tagsToAdd.add(new Tag(VALID_TAG_DIABETES));","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"        AddTagsCommand addTagsCommand \u003d new AddTagsCommand(index, tagsToAdd);","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"            CommandResult commandResult \u003d addTagsCommand.execute(model);","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"            Patient editedPatient \u003d model.getFilteredPatientList().get(index.getZeroBased());","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"            String expectedMessage \u003d String.format(AddTagsCommand.MESSAGE_ADD_TAG_SUCCESS,","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"                    editedPatient.getName(), VALID_TAG_DIABETES_OUTPUT) + \"\\n\";","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"            assertEquals(expectedMessage, commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"            Set\u003cTag\u003e expectedTagsSet \u003d new HashSet\u003c\u003e(editedPatient.getTags());","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"            expectedTagsSet.add(new Tag(VALID_TAG_DIABETES));","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"            assertEquals(editedPatient.getTags(), expectedTagsSet);","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"            // The command should not throw an exception in this test","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"    public void execute_addDuplicateTagsUnfilteredList_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"        Index index \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"        Set\u003cTag\u003e tagsToAdd \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"        tagsToAdd.add(new Tag(VALID_TAG_DIABETES));","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"        tagsToAdd.add(new Tag(VALID_TAG_DIABETES)); // Adding a duplicate tag should result in one unique tag","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"        AddTagsCommand addTagsCommand \u003d new AddTagsCommand(index, tagsToAdd);","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"            CommandResult commandResult \u003d addTagsCommand.execute(model);","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"            Patient editedPatient \u003d model.getFilteredPatientList().get(index.getZeroBased());","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"            String expectedMessage \u003d String.format(AddTagsCommand.MESSAGE_ADD_TAG_SUCCESS,","lastModifiedDate":"2024-03-22"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"                    editedPatient.getName(), VALID_TAG_DIABETES_OUTPUT) + \"\\n\";","lastModifiedDate":"2024-03-22"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"            assertEquals(expectedMessage, commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"            Set\u003cTag\u003e expectedTagsSet \u003d new HashSet\u003c\u003e(editedPatient.getTags());","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"choowengyan"},"content":"            expectedTagsSet.add(new Tag(VALID_TAG_DIABETES));","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"            assertEquals(editedPatient.getTags(), expectedTagsSet);","lastModifiedDate":"2024-03-22"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"            // The command should not throw an exception in this test","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"NeoHW"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"NeoHW"},"content":"    public void execute_addPreExistingTagsUnfilteredList_logOutputFailure() {","lastModifiedDate":"2024-03-22"},{"lineNumber":86,"author":{"gitId":"NeoHW"},"content":"        Index index \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"NeoHW"},"content":"        Set\u003cTag\u003e tagsToAdd \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"choowengyan"},"content":"        tagsToAdd.add(new Tag(VALID_TAG_DEPRESSION));","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"NeoHW"},"content":"        AddTagsCommand addTagsCommand \u003d new AddTagsCommand(index, tagsToAdd);","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"NeoHW"},"content":"            CommandResult commandResult \u003d addTagsCommand.execute(model);","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"NeoHW"},"content":"            Patient editedPatient \u003d model.getFilteredPatientList().get(index.getZeroBased());","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"NeoHW"},"content":"            String expectedMessage \u003d String.format(AddTagsCommand.MESSAGE_DUPLICATE_TAG,","lastModifiedDate":"2024-03-22"},{"lineNumber":96,"author":{"gitId":"NeoHW"},"content":"                    editedPatient.getName(), VALID_TAG_DEPRESSION_OUTPUT) + \"\\n\";","lastModifiedDate":"2024-03-22"},{"lineNumber":97,"author":{"gitId":"NeoHW"},"content":"            assertEquals(expectedMessage, commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"NeoHW"},"content":"            Set\u003cTag\u003e expectedTagsSet \u003d new HashSet\u003c\u003e(editedPatient.getTags());","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"NeoHW"},"content":"            assertTrue(editedPatient.getTags().equals(expectedTagsSet));","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"NeoHW"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"NeoHW"},"content":"            // The command should not throw an exception in this test","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"NeoHW"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"NeoHW"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"NeoHW"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"NeoHW"},"content":"        Set\u003cTag\u003e tagsToAdd \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"choowengyan"},"content":"        tagsToAdd.add(new Tag(VALID_TAG_DEPRESSION));","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"NeoHW"},"content":"        AddTagsCommand addTagsCommand \u003d new AddTagsCommand(outOfBoundIndex, tagsToAdd);","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"NeoHW"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e addTagsCommand.execute(model));","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"NeoHW"},"content":"        assertEquals(MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX, exception.getMessage());","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"NeoHW"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"NeoHW"},"content":"        final Index index \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"NeoHW"},"content":"        final Set\u003cTag\u003e firstTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"choowengyan"},"content":"        firstTags.add(new Tag(VALID_TAG_DEPRESSION));","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"NeoHW"},"content":"        final Set\u003cTag\u003e secondTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"choowengyan"},"content":"        secondTags.add(new Tag(VALID_TAG_DEPRESSION));","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"NeoHW"},"content":"        final AddTagsCommand standardCommand \u003d new AddTagsCommand(index, firstTags);","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"NeoHW"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"NeoHW"},"content":"        AddTagsCommand commandWithSameValues \u003d new AddTagsCommand(index, secondTags);","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"NeoHW"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2024-03-22"},{"lineNumber":132,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"NeoHW"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"NeoHW"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2024-03-22"},{"lineNumber":135,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"NeoHW"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"NeoHW"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2024-03-22"},{"lineNumber":138,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"NeoHW"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"NeoHW"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2024-03-22"},{"lineNumber":141,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"NeoHW"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"NeoHW"},"content":"        assertNotEquals(standardCommand, new AddTagsCommand(INDEX_SECOND_PATIENT, firstTags));","lastModifiedDate":"2024-03-22"},{"lineNumber":144,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"NeoHW"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"NeoHW"},"content":"        assertNotEquals(standardCommand, new AddTagsCommand(index, new HashSet\u003c\u003e()));","lastModifiedDate":"2024-03-22"},{"lineNumber":147,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"NeoHW"},"content":"    public void toStringTest() {","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"NeoHW"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"NeoHW"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"choowengyan"},"content":"        tags.add(new Tag(VALID_TAG_DEPRESSION));","lastModifiedDate":"2024-03-17"},{"lineNumber":154,"author":{"gitId":"choowengyan"},"content":"        tags.add(new Tag(VALID_TAG_DIABETES));","lastModifiedDate":"2024-03-17"},{"lineNumber":155,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"NeoHW"},"content":"        AddTagsCommand addTagsCommand \u003d new AddTagsCommand(index, tags);","lastModifiedDate":"2024-03-11"},{"lineNumber":157,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":158,"author":{"gitId":"NeoHW"},"content":"        String expected \u003d AddTagsCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", tags\u003d\"","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"NeoHW"},"content":"                + tags + \"}\";","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expected, addTagsCommand.toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"choowengyan":13,"NeoHW":151}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2024-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"NeoHW":1,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FAMILY_CONDITION;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FOOD_PREFERENCE;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOBBY;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PID;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERRED_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.EditPatientDescriptor;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2024-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"    public static final String VALID_ID_AMY \u003d \"12345\";","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"    public static final String VALID_ID_BOB \u003d \"12234\";","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"    public static final String VALID_EVENT_NAME \u003d \"Birthday\";","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"    public static final String VALID_EVENT_DATE \u003d \"20-02-9999\";","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"    public static final String VALID_EVENT_DATETIME \u003d \"20-02-9999, 12:12 - 15:15\";","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"    public static final String VALID_PREFERRED_NAME_AMY \u003d \"Amy\";","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"    public static final String VALID_PREFERRED_NAME_BOB \u003d \"Bob\";","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"    public static final String VALID_FOOD_AMY \u003d \"Dim sum\";","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"    public static final String VALID_FOOD_BOB \u003d \"Chicken rice\";","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"    public static final String VALID_FAMILY_CONDITION_AMY \u003d \"2 sons migrated to Korea\";","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"    public static final String VALID_FAMILY_CONDITION_BOB \u003d \"Always quarrels with daughter\";","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"    public static final String VALID_HOBBY_AMY \u003d \"Watch Hong Kong Drama\";","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"    public static final String VALID_HOBBY_BOB \u003d \"Interested in calligraphy\";","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"    public static final String VALID_TAG_DIABETES \u003d \"diabetes\";","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"    public static final String VALID_TAG_DEPRESSION \u003d \"depression\";","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"    public static final String VALID_TAG_DIABETES_OUTPUT \u003d \"[diabetes]\";","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"    public static final String VALID_TAG_DEPRESSION_OUTPUT \u003d \"[depression]\";","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"    public static final String ID_DESC_AMY \u003d \" \" + PREFIX_PID + VALID_ID_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"    public static final String ID_DESC_BOB \u003d \" \" + PREFIX_PID + VALID_ID_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"SherisseTJW"},"content":"    public static final String EVENT_DESC_DATE \u003d \" \" + PREFIX_NAME + VALID_EVENT_NAME + \" \"","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"SherisseTJW"},"content":"            + PREFIX_DATETIME + VALID_EVENT_DATE;","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"SherisseTJW"},"content":"    public static final String EVENT_DESC_DATETIME \u003d \" \" + PREFIX_NAME + VALID_EVENT_NAME + \" \"","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"SherisseTJW"},"content":"            + PREFIX_DATETIME + VALID_EVENT_DATETIME;","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"SherisseTJW"},"content":"    public static final String INVALID_EVENT_DESC \u003d \" \" + PREFIX_NAME + VALID_EVENT_NAME","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"SherisseTJW"},"content":"            + PREFIX_DATETIME + \"Invalid\";","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"    public static final String PREFERRED_NAME_DESC_AMY \u003d \" \" + PREFIX_PREFERRED_NAME + VALID_PREFERRED_NAME_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"    public static final String PREFERRED_NAME_DESC_BOB \u003d \" \" + PREFIX_PREFERRED_NAME + VALID_PREFERRED_NAME_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"    public static final String FOOD_DESC_BOB \u003d \" \" + PREFIX_FOOD_PREFERENCE + VALID_FOOD_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"    public static final String FOOD_DESC_AMY \u003d \" \" + PREFIX_FOOD_PREFERENCE + VALID_FOOD_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"    public static final String FAMILY_DESC_AMY \u003d \" \" + PREFIX_FAMILY_CONDITION + VALID_FAMILY_CONDITION_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"    public static final String FAMILY_DESC_BOB \u003d \" \" + PREFIX_FAMILY_CONDITION + VALID_FAMILY_CONDITION_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"    public static final String HOBBY_DESC_AMY \u003d \" \" + PREFIX_HOBBY + VALID_HOBBY_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"    public static final String HOBBY_DESC_BOB \u003d \" \" + PREFIX_HOBBY + VALID_HOBBY_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"    public static final String TAG_DESC_DIABETES \u003d \" \" + PREFIX_TAG + VALID_TAG_DIABETES;","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"    public static final String TAG_DESC_DEPRESSION \u003d \" \" + PREFIX_TAG + VALID_TAG_DEPRESSION;","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"    public static final String INVALID_ID_DESC \u003d \" \" + PREFIX_PID + \"10 a\"; // only digits are allowed in ID","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"choowengyan"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026 Lee Kuang\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"    // \u0027\u0026\u0027 not allowed in preferred name","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"choowengyan"},"content":"    public static final String INVALID_PREFERRED_NAME_DESC \u003d \" \" + PREFIX_PREFERRED_NAME + \"James\u0026\";","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"choowengyan"},"content":"    // empty string not allowed for food description","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"choowengyan"},"content":"    public static final String INVALID_FOOD_DESC \u003d \" \" + PREFIX_FOOD_PREFERENCE;","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"choowengyan"},"content":"    // empty string not allowed for family condition","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"choowengyan"},"content":"    public static final String INVALID_FAMILY_DESC \u003d \" \" + PREFIX_FAMILY_CONDITION;","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"choowengyan"},"content":"    // empty string not allowed for hobby","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"choowengyan"},"content":"    public static final String INVALID_HOBBY_DESC \u003d \" \" + PREFIX_HOBBY;","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"choowengyan"},"content":"    // \u0027*\u0027 and spacing not allowed in tags","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"choowengyan"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hearing loss*\";","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"NeoHW"},"content":"    public static final EditPatientDescriptor DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"NeoHW"},"content":"    public static final EditPatientDescriptor DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"NeoHW"},"content":"        DESC_AMY \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-09"},{"lineNumber":95,"author":{"gitId":"choowengyan"},"content":"                .withPreferredName(VALID_PREFERRED_NAME_AMY).withFoodPreferences(VALID_FOOD_AMY)","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"choowengyan"},"content":"                .withFamilyConditions(VALID_FAMILY_CONDITION_AMY).withHobbies(VALID_HOBBY_AMY)","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"choowengyan"},"content":"                .withTags(VALID_TAG_DIABETES).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"NeoHW"},"content":"        DESC_BOB \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-09"},{"lineNumber":99,"author":{"gitId":"choowengyan"},"content":"                .withPreferredName(VALID_PREFERRED_NAME_BOB).withFoodPreferences(VALID_FOOD_BOB)","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"choowengyan"},"content":"                .withFamilyConditions(VALID_FAMILY_CONDITION_BOB).withHobbies(VALID_HOBBY_BOB)","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"choowengyan"},"content":"                .withTags(VALID_TAG_DEPRESSION, VALID_TAG_DIABETES).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"NeoHW"},"content":"     * - the address book, filtered patient list and selected patient in {@code actualModel} remain unchanged","lastModifiedDate":"2024-03-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"NeoHW"},"content":"        List\u003cPatient\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPatientList());","lastModifiedDate":"2024-03-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPatientList());","lastModifiedDate":"2024-03-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"NeoHW"},"content":"     * Updates {@code model}\u0027s filtered list to show only the patient at the given {@code targetIndex} in the","lastModifiedDate":"2024-03-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":150,"author":{"gitId":"NeoHW"},"content":"    public static void showPatientAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2024-03-09"},{"lineNumber":151,"author":{"gitId":"NeoHW"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPatientList().size());","lastModifiedDate":"2024-03-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":153,"author":{"gitId":"NeoHW"},"content":"        Patient patient \u003d model.getFilteredPatientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-09"},{"lineNumber":154,"author":{"gitId":"NeoHW"},"content":"        final String[] splitName \u003d patient.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2024-03-08"},{"lineNumber":155,"author":{"gitId":"NeoHW"},"content":"        model.updateFilteredPatientList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2024-03-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"NeoHW"},"content":"        assertEquals(1, model.getFilteredPatientList().size());","lastModifiedDate":"2024-03-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"SherisseTJW":10,"choowengyan":47,"NeoHW":20,"-":83}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-09"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2024-03-09"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2024-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"        Patient patientToDelete \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2024-03-09"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2024-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PATIENT_SUCCESS,","lastModifiedDate":"2024-03-09"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"            patientToDelete.getName(), INDEX_FIRST_PATIENT.getOneBased());","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"        expectedModel.deletePatient(patientToDelete);","lastModifiedDate":"2024-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2024-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2024-03-09"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PATIENT);","lastModifiedDate":"2024-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2024-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2024-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"NeoHW"},"content":"    private void showNoPatient(Model model) {","lastModifiedDate":"2024-03-09"},{"lineNumber":85,"author":{"gitId":"NeoHW"},"content":"        model.updateFilteredPatientList(p -\u003e false);","lastModifiedDate":"2024-03-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"NeoHW"},"content":"        assertTrue(model.getFilteredPatientList().isEmpty());","lastModifiedDate":"2024-03-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"choowengyan":1,"NeoHW":17,"-":71}},{"path":"src/test/java/seedu/address/logic/commands/DeleteEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhiWei1010"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"ZhiWei1010"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"ZhiWei1010"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"ZhiWei1010"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"ZhiWei1010"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.commands.DeleteEventCommand.MESSAGE_DELETE_EVENT_SUCCESS;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"ZhiWei1010"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.Event;","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"public class DeleteEventCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"ZhiWei1010"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"ZhiWei1010"},"content":"    public void constructor_nullPatientIndex_throwsNullPointerException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteEventCommand(null,","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"ZhiWei1010"},"content":"                INDEX_FIRST_EVENT));","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"ZhiWei1010"},"content":"    public void constructor_nullEventIndex_throwsNullPointerException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteEventCommand(INDEX_FIRST_PATIENT,","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"ZhiWei1010"},"content":"                null));","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"ZhiWei1010"},"content":"    public void constructor_nullPatientAndEventIndex_throwsNullPointerException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteEventCommand(null,","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"ZhiWei1010"},"content":"                null));","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"    public void execute_deleteEventToInvalidPatient_throwsCommandException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"ZhiWei1010"},"content":"        Index invalidIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(invalidIndex,","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"ZhiWei1010"},"content":"                INDEX_FIRST_EVENT);","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"SherisseTJW"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e deleteEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"ZhiWei1010"},"content":"                .execute(model));","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"ZhiWei1010"},"content":"        assertEquals(MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX, exception.getMessage());","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"SherisseTJW"},"content":"    public void execute_deleteEventWithInvalidEventId_throwsCommandException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"ZhiWei1010"},"content":"        Index invalidIndex \u003d Index.fromOneBased(model.getFilteredPatientList().get(1)","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"SherisseTJW"},"content":"                .getEvents().size() + 1);","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"SherisseTJW"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(INDEX_FIRST_PATIENT,","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"ZhiWei1010"},"content":"                invalidIndex);","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"SherisseTJW"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e deleteEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"ZhiWei1010"},"content":"                .execute(model));","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"SherisseTJW"},"content":"        assertEquals(MESSAGE_INVALID_EVENT_DISPLAYED_INDEX, exception.getMessage());","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"ZhiWei1010"},"content":"    public void execute_deleteValidEventIndexFromValidPatient_success() throws CommandException {","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"ZhiWei1010"},"content":"        Index validIndex \u003d Index.fromZeroBased(1);","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"SherisseTJW"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(validIndex,","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"ZhiWei1010"},"content":"                INDEX_FIRST_EVENT);","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"ZhiWei1010"},"content":"        Patient editedPatient \u003d model.getFilteredPatientList().get(validIndex.getZeroBased());","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"SherisseTJW"},"content":"        List\u003cEvent\u003e currEventList \u003d new ArrayList\u003c\u003e(editedPatient.getEvents());","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"SherisseTJW"},"content":"        Event eventToDelete \u003d currEventList.get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"SherisseTJW"},"content":"        CommandResult result \u003d deleteEventCommand.execute(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"ZhiWei1010"},"content":"        String expected \u003d String.format(String.format(MESSAGE_DELETE_EVENT_SUCCESS, eventToDelete.name,","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"ZhiWei1010"},"content":"                INDEX_FIRST_EVENT.getOneBased(), eventToDelete.date, editedPatient.getName(),","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"ZhiWei1010"},"content":"                validIndex.getOneBased()));","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"ZhiWei1010"},"content":"        assertEquals(expected, result.getFeedbackToUser());","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"SherisseTJW"},"content":"        Set\u003cEvent\u003e expectedEvents \u003d new HashSet\u003c\u003e(editedPatient.getEvents());","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(editedPatient.getEvents().equals(expectedEvents));","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"ZhiWei1010"},"content":"    public void equalsTest() {","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"SherisseTJW"},"content":"        DeleteEventCommand deleteEventCommandFirst \u003d new DeleteEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"ZhiWei1010"},"content":"                INDEX_FIRST_PATIENT, INDEX_FIRST_EVENT);","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"SherisseTJW"},"content":"        DeleteEventCommand deleteEventCommandSecond \u003d new DeleteEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"ZhiWei1010"},"content":"                INDEX_SECOND_PATIENT, INDEX_FIRST_EVENT);","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"SherisseTJW"},"content":"        DeleteEventCommand deleteEventCommandThird \u003d new DeleteEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"ZhiWei1010"},"content":"                INDEX_FIRST_PATIENT, INDEX_SECOND_EVENT);","lastModifiedDate":"2024-03-15"},{"lineNumber":101,"author":{"gitId":"SherisseTJW"},"content":"        DeleteEventCommand deleteEventCommandFourth \u003d new DeleteEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"ZhiWei1010"},"content":"                INDEX_SECOND_PATIENT, INDEX_SECOND_EVENT);","lastModifiedDate":"2024-03-15"},{"lineNumber":103,"author":{"gitId":"ZhiWei1010"},"content":"        ListCommand listCommand \u003d new ListCommand();","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":105,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(deleteEventCommandFirst.equals(deleteEventCommandSecond));","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(deleteEventCommandFirst.equals(deleteEventCommandThird));","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(deleteEventCommandFirst.equals(deleteEventCommandFourth));","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(deleteEventCommandFirst.equals(listCommand));","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":111,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(deleteEventCommandFirst.equals(deleteEventCommandFirst));","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":113,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":114,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"ZhiWei1010"},"content":"    public void toStringTest() {","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"SherisseTJW"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"ZhiWei1010"},"content":"                INDEX_FIRST_PATIENT, INDEX_FIRST_EVENT);","lastModifiedDate":"2024-03-15"},{"lineNumber":119,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":120,"author":{"gitId":"SherisseTJW"},"content":"        String expected \u003d DeleteEventCommand.class.getCanonicalName() + \"{targetPatientIndex\u003d\"","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"ZhiWei1010"},"content":"                + INDEX_FIRST_PATIENT","lastModifiedDate":"2024-03-15"},{"lineNumber":122,"author":{"gitId":"ZhiWei1010"},"content":"                + \", targetEventIndex\u003d\" + INDEX_FIRST_EVENT + \"}\";","lastModifiedDate":"2024-03-15"},{"lineNumber":123,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(deleteEventCommand.toString().equals(expected));","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":126,"author":{"gitId":"ZhiWei1010"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"SherisseTJW":33,"ZhiWei1010":93}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTagsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DEPRESSION;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DEPRESSION_OUTPUT;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DIABETES;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"public class DeleteTagsCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"    private final Set\u003cTag\u003e validTagSet \u003d Set.of(new Tag(\"test\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"    private Model model;","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"    private final UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), userPrefs);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteTagsCommand(null, validTagSet));","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"    public void constructor_nullTagSet_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteTagsCommand(INDEX_FIRST_PATIENT, null));","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"    public void constructor_nullIndexAndNullTagSet_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteTagsCommand(null, null));","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"    public void execute_validIndexAndTags_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"        Index index \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"        tagsToDelete.add(new Tag(VALID_TAG_DEPRESSION));","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"        DeleteTagsCommand deleteTagsCommand \u003d new DeleteTagsCommand(index, tagsToDelete);","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"            CommandResult commandResult \u003d deleteTagsCommand.execute(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"            Patient editedPatient \u003d model.getFilteredPatientList().get(index.getZeroBased());","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"            String expectedMessage \u003d String.format(DeleteTagsCommand.MESSAGE_DELETE_TAG_SUCCESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"                    editedPatient.getName(), VALID_TAG_DEPRESSION_OUTPUT) + \"\\n\";","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"            assertEquals(expectedMessage, commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"            Set\u003cTag\u003e expectedTagsSet \u003d new HashSet\u003c\u003e(editedPatient.getTags());","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"            assertFalse(expectedTagsSet.contains(new Tag(VALID_TAG_DEPRESSION)));","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"            // The command should not throw an exception in this test","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"NeoHW"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"NeoHW"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"NeoHW"},"content":"        tagsToDelete.add(new Tag(VALID_TAG_DEPRESSION));","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"NeoHW"},"content":"        DeleteTagsCommand deleteTagsCommand \u003d new DeleteTagsCommand(outOfBoundIndex, tagsToDelete);","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"NeoHW"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e deleteTagsCommand.execute(model));","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"NeoHW"},"content":"        assertEquals(MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX, exception.getMessage());","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"NeoHW"},"content":"    public void execute_invalidTags_logsOutcome() {","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"NeoHW"},"content":"        Index index \u003d INDEX_SECOND_PATIENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"NeoHW"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"NeoHW"},"content":"        tagsToDelete.add(new Tag(\"nonExistentTag\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"NeoHW"},"content":"        DeleteTagsCommand deleteTagsCommand \u003d new DeleteTagsCommand(index, tagsToDelete);","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"NeoHW"},"content":"            CommandResult commandResult \u003d deleteTagsCommand.execute(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"NeoHW"},"content":"            String expectedMessage \u003d String.format(DeleteTagsCommand.MESSAGE_INVALID_TAG,","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"NeoHW"},"content":"                    model.getFilteredPatientList().get(index.getZeroBased()).getName(), \"[nonExistentTag]\") + \"\\n\";","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"NeoHW"},"content":"            assertEquals(expectedMessage, commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"NeoHW"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"NeoHW"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"NeoHW"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"NeoHW"},"content":"        final Index index \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"NeoHW"},"content":"        final Set\u003cTag\u003e firstTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"NeoHW"},"content":"        firstTags.add(new Tag(VALID_TAG_DEPRESSION));","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"NeoHW"},"content":"        final Set\u003cTag\u003e secondTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"NeoHW"},"content":"        secondTags.add(new Tag(VALID_TAG_DEPRESSION));","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"NeoHW"},"content":"        final DeleteTagsCommand standardCommand \u003d new DeleteTagsCommand(index, firstTags);","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"NeoHW"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"NeoHW"},"content":"        DeleteTagsCommand commandWithSameValues \u003d new DeleteTagsCommand(index, secondTags);","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"NeoHW"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"NeoHW"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"NeoHW"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"NeoHW"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"NeoHW"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"NeoHW"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"NeoHW"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"NeoHW"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"NeoHW"},"content":"        assertFalse(standardCommand.equals(new DeleteTagsCommand(INDEX_SECOND_PATIENT, firstTags)));","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"NeoHW"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"NeoHW"},"content":"        assertFalse(standardCommand.equals(new DeleteTagsCommand(index, new HashSet\u003c\u003e())));","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"NeoHW"},"content":"    public void toStringTest() {","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"NeoHW"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"NeoHW"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"NeoHW"},"content":"        tags.add(new Tag(VALID_TAG_DEPRESSION));","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"NeoHW"},"content":"        tags.add(new Tag(VALID_TAG_DIABETES));","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"NeoHW"},"content":"        DeleteTagsCommand deleteTagsCommand \u003d new DeleteTagsCommand(index, tags);","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"NeoHW"},"content":"        String expected \u003d DeleteTagsCommand.class.getCanonicalName() + \"{targetPatientIndex\u003d\" + index + \", tags\u003d\"","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"NeoHW"},"content":"                + tags + \"}\";","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expected, deleteTagsCommand.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"NeoHW":154}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DEPRESSION;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-09"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2024-03-09"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2024-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.EditPatientDescriptor;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2024-03-09"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"        Patient editedPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2024-03-09"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(editedPatient).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PATIENT, descriptor);","lastModifiedDate":"2024-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-09"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"                EditCommand.MESSAGE_EDIT_PATIENT_SUCCESS, Messages.format(editedPatient));","lastModifiedDate":"2024-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"        expectedModel.setPatient(model.getFilteredPatientList().get(0), editedPatient);","lastModifiedDate":"2024-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"        Index indexLastPatient \u003d Index.fromOneBased(model.getFilteredPatientList().size());","lastModifiedDate":"2024-03-09"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"        Patient lastPatient \u003d model.getFilteredPatientList().get(indexLastPatient.getZeroBased());","lastModifiedDate":"2024-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"        PatientBuilder patientInList \u003d new PatientBuilder(lastPatient);","lastModifiedDate":"2024-03-09"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"        Patient editedPatient \u003d patientInList.withName(VALID_NAME_BOB).withTags(VALID_TAG_DEPRESSION).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"            .withTags(VALID_TAG_DEPRESSION).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPatient, descriptor);","lastModifiedDate":"2024-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-09"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"                EditCommand.MESSAGE_EDIT_PATIENT_SUCCESS, Messages.format(editedPatient));","lastModifiedDate":"2024-03-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"        expectedModel.setPatient(lastPatient, editedPatient);","lastModifiedDate":"2024-03-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PATIENT, new EditPatientDescriptor());","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"        Patient editedPatient \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2024-03-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-09"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"                EditCommand.MESSAGE_EDIT_PATIENT_SUCCESS, Messages.format(editedPatient));","lastModifiedDate":"2024-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"NeoHW"},"content":"    public void execute_duplicatePatientUnfilteredList_failure() {","lastModifiedDate":"2024-03-09"},{"lineNumber":88,"author":{"gitId":"NeoHW"},"content":"        Patient firstPatient \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2024-03-09"},{"lineNumber":89,"author":{"gitId":"NeoHW"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(firstPatient).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"NeoHW"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PATIENT, descriptor);","lastModifiedDate":"2024-03-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"NeoHW"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2024-03-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"NeoHW"},"content":"    public void execute_invalidPatientIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-09"},{"lineNumber":97,"author":{"gitId":"NeoHW"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2024-03-09"},{"lineNumber":98,"author":{"gitId":"NeoHW"},"content":"        EditPatientDescriptor descriptor \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"NeoHW"},"content":"                new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"NeoHW"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"NeoHW"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PATIENT, DESC_AMY);","lastModifiedDate":"2024-03-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"NeoHW"},"content":"        EditPatientDescriptor copyDescriptor \u003d new EditPatientDescriptor(DESC_AMY);","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"NeoHW"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PATIENT, copyDescriptor);","lastModifiedDate":"2024-03-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"NeoHW"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PATIENT, DESC_AMY)));","lastModifiedDate":"2024-03-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"NeoHW"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PATIENT, DESC_BOB)));","lastModifiedDate":"2024-03-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"NeoHW"},"content":"        EditPatientDescriptor editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"NeoHW"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPatientDescriptor);","lastModifiedDate":"2024-03-09"},{"lineNumber":135,"author":{"gitId":"NeoHW"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPatientDescriptor\u003d\"","lastModifiedDate":"2024-03-09"},{"lineNumber":136,"author":{"gitId":"NeoHW"},"content":"                + editPatientDescriptor + \"}\";","lastModifiedDate":"2024-03-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"choowengyan":3,"NeoHW":44,"-":93}},{"path":"src/test/java/seedu/address/logic/commands/EditEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"guohuang88"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"guohuang88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"guohuang88"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"guohuang88"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_EVENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PATIENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"guohuang88"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"guohuang88"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"guohuang88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"guohuang88"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"guohuang88"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"guohuang88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"guohuang88"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"guohuang88"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"guohuang88"},"content":"import seedu.address.model.patient.Event;","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"guohuang88"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"guohuang88"},"content":"public class EditEventCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"guohuang88"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"    private final Event validEvent \u003d new Event(\"Test\", \"20-02-9999\");","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"    private final Event secondValidEvent \u003d new Event(\"SomethingElse\", \"20-02-9999\");","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"    private final Event pastEvent \u003d new Event(\"Test\", \"20-12-1999\");","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"guohuang88"},"content":"    public void constructor_nullPatientIndex_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"guohuang88"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EditEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"guohuang88"},"content":"                null, INDEX_FIRST_EVENT, validEvent));","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"guohuang88"},"content":"    public void constructor_nullEventIndex_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"guohuang88"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EditEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"guohuang88"},"content":"                INDEX_FIRST_PATIENT, null, validEvent));","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"guohuang88"},"content":"    public void constructor_nullDate_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"guohuang88"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EditEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"guohuang88"},"content":"                INDEX_FIRST_PATIENT, INDEX_FIRST_EVENT, null));","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"guohuang88"},"content":"    public void constructor_nullPatientIndexEventIndex_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"guohuang88"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EditEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"guohuang88"},"content":"                null, null, validEvent));","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"guohuang88"},"content":"    public void constructor_nullPatientIndexDate_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"guohuang88"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EditEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"guohuang88"},"content":"                null, INDEX_FIRST_EVENT, null));","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"guohuang88"},"content":"    public void constructor_nullEventIndexDate_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"guohuang88"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EditEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"guohuang88"},"content":"                INDEX_FIRST_PATIENT, null, null));","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"guohuang88"},"content":"    public void constructor_nullPatientIndexEventIndexDate_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"guohuang88"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EditEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"guohuang88"},"content":"                null, null, null));","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"guohuang88"},"content":"    public void execute_editEvent_success() throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"guohuang88"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_SECOND_PATIENT,","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"guohuang88"},"content":"                INDEX_FIRST_EVENT, validEvent);","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"guohuang88"},"content":"        CommandResult result \u003d editEventCommand.execute(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"guohuang88"},"content":"        Patient editedPatient \u003d model.getFilteredPatientList().get(INDEX_SECOND_PATIENT.getZeroBased());","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"guohuang88"},"content":"        String expected \u003d String.format(EditEventCommand.MESSAGE_SUCCESS, validEvent.name,","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"guohuang88"},"content":"                INDEX_FIRST_EVENT.getOneBased(), validEvent.date, editedPatient.getName(),","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"guohuang88"},"content":"                INDEX_SECOND_PATIENT.getOneBased());","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"guohuang88"},"content":"        assertEquals(expected, result.getFeedbackToUser());","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"guohuang88"},"content":"        Set\u003cEvent\u003e expectedEvents \u003d new HashSet\u003c\u003e(editedPatient.getEvents());","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"guohuang88"},"content":"        assertEquals(editedPatient.getEvents(), expectedEvents);","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"SherisseTJW"},"content":"    public void execute_editPastEvent_success() throws CommandException {","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"SherisseTJW"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_SECOND_PATIENT,","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"SherisseTJW"},"content":"                INDEX_FIRST_EVENT, pastEvent);","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"SherisseTJW"},"content":"        CommandResult result \u003d editEventCommand.execute(model);","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"SherisseTJW"},"content":"        Patient editedPatient \u003d model.getFilteredPatientList().get(INDEX_SECOND_PATIENT.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"SherisseTJW"},"content":"        String expected \u003d String.format(EditEventCommand.MESSAGE_SUCCESS, pastEvent.name,","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"SherisseTJW"},"content":"                INDEX_FIRST_EVENT.getOneBased(), pastEvent.date, editedPatient.getName(),","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"SherisseTJW"},"content":"                INDEX_SECOND_PATIENT.getOneBased() + \"\\n\" + EditEventCommand.MESSAGE_PAST_EVENT_WARNING);","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"SherisseTJW"},"content":"        assertEquals(expected, result.getFeedbackToUser());","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"SherisseTJW"},"content":"        Set\u003cEvent\u003e expectedEvents \u003d new HashSet\u003c\u003e(editedPatient.getEvents());","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"SherisseTJW"},"content":"        assertEquals(editedPatient.getEvents(), expectedEvents);","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"guohuang88"},"content":"    public void execute_editEventWithInvalidPatientIndex_throwsCommandException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"guohuang88"},"content":"        Index invalidPatientIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"guohuang88"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"guohuang88"},"content":"                invalidPatientIndex, INDEX_FIRST_EVENT, validEvent);","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"guohuang88"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"guohuang88"},"content":"                editEventCommand.execute(model));","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"guohuang88"},"content":"        assertEquals(MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX, exception.getMessage());","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"guohuang88"},"content":"    public void execute_editEventWithInvalidEventIndex_throwsCommandException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"guohuang88"},"content":"        Index invalidEventIndex \u003d Index.fromOneBased(model.getFilteredPatientList().get(1)","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"guohuang88"},"content":"                .getEvents().size() + 1);","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"guohuang88"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"guohuang88"},"content":"                INDEX_FIRST_PATIENT, invalidEventIndex, validEvent);","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"guohuang88"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"guohuang88"},"content":"                editEventCommand.execute(model));","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"guohuang88"},"content":"        assertEquals(MESSAGE_INVALID_EVENT_DISPLAYED_INDEX, exception.getMessage());","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":137,"author":{"gitId":"guohuang88"},"content":"    public void execute_editEventToAnExistingEvent_throwsCommandException() throws CommandException {","lastModifiedDate":"2024-03-31"},{"lineNumber":138,"author":{"gitId":"guohuang88"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_SECOND_PATIENT,","lastModifiedDate":"2024-03-23"},{"lineNumber":139,"author":{"gitId":"guohuang88"},"content":"                INDEX_FIRST_EVENT, validEvent);","lastModifiedDate":"2024-03-23"},{"lineNumber":140,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":141,"author":{"gitId":"guohuang88"},"content":"        //first edit event command","lastModifiedDate":"2024-03-31"},{"lineNumber":142,"author":{"gitId":"guohuang88"},"content":"        editEventCommand.execute(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":143,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":144,"author":{"gitId":"guohuang88"},"content":"        //Test duplicate event by executing the same edit event command","lastModifiedDate":"2024-03-31"},{"lineNumber":145,"author":{"gitId":"guohuang88"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":146,"author":{"gitId":"guohuang88"},"content":"                editEventCommand.execute(model));","lastModifiedDate":"2024-03-31"},{"lineNumber":147,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":148,"author":{"gitId":"guohuang88"},"content":"        Patient editedPatient \u003d model.getFilteredPatientList().get(INDEX_SECOND_PATIENT.getZeroBased());","lastModifiedDate":"2024-03-31"},{"lineNumber":149,"author":{"gitId":"guohuang88"},"content":"        assertEquals(String.format(EditEventCommand.MESSAGE_DUPLICATE, validEvent.name, validEvent.date,","lastModifiedDate":"2024-03-31"},{"lineNumber":150,"author":{"gitId":"guohuang88"},"content":"                editedPatient.getName(), INDEX_SECOND_PATIENT.getOneBased()), exception.getMessage());","lastModifiedDate":"2024-03-31"},{"lineNumber":151,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":152,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":153,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"guohuang88"},"content":"    public void equals_differentEventIndex_returnFalse() {","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"guohuang88"},"content":"        EditEventCommand editEventCommandFirst \u003d new EditEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"guohuang88"},"content":"                INDEX_FIRST_PATIENT, INDEX_FIRST_EVENT, validEvent);","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"guohuang88"},"content":"        EditEventCommand editEventCommandSecond \u003d new EditEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"guohuang88"},"content":"                INDEX_FIRST_PATIENT, INDEX_SECOND_EVENT, validEvent);","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"guohuang88"},"content":"        // Test same patient index, same event but different event index","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"guohuang88"},"content":"        assertNotEquals(editEventCommandFirst, editEventCommandSecond);","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"guohuang88"},"content":"    public void equals_differentPatientIndex_returnFalse() {","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"guohuang88"},"content":"        EditEventCommand editEventCommandFirst \u003d new EditEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":167,"author":{"gitId":"guohuang88"},"content":"                INDEX_FIRST_PATIENT, INDEX_THIRD_EVENT, validEvent);","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"guohuang88"},"content":"        EditEventCommand editEventCommandSecond \u003d new EditEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"guohuang88"},"content":"                INDEX_SECOND_PATIENT, INDEX_THIRD_EVENT, validEvent);","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"guohuang88"},"content":"        // Test same event index, same event but different patient index","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"guohuang88"},"content":"        assertNotEquals(editEventCommandFirst, editEventCommandSecond);","lastModifiedDate":"2024-03-18"},{"lineNumber":173,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":175,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":176,"author":{"gitId":"guohuang88"},"content":"    public void equals_differentEvent_returnFalse() {","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"guohuang88"},"content":"        EditEventCommand editEventCommandFirst \u003d new EditEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"guohuang88"},"content":"                INDEX_SECOND_PATIENT, INDEX_SECOND_EVENT, validEvent);","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"guohuang88"},"content":"        EditEventCommand editEventCommandSecond \u003d new EditEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":180,"author":{"gitId":"guohuang88"},"content":"                INDEX_SECOND_PATIENT, INDEX_SECOND_EVENT, secondValidEvent);","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"guohuang88"},"content":"        EditEventCommand editEventCommandThird \u003d new EditEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"SherisseTJW"},"content":"                INDEX_SECOND_PATIENT, INDEX_SECOND_EVENT, pastEvent);","lastModifiedDate":"2024-04-04"},{"lineNumber":183,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":184,"author":{"gitId":"guohuang88"},"content":"        // Test same patient index, same event index, same event date but different event name","lastModifiedDate":"2024-03-18"},{"lineNumber":185,"author":{"gitId":"guohuang88"},"content":"        assertNotEquals(editEventCommandFirst, editEventCommandSecond);","lastModifiedDate":"2024-03-18"},{"lineNumber":186,"author":{"gitId":"guohuang88"},"content":"        // Test same patient index, same event index, same event name but different event date","lastModifiedDate":"2024-03-18"},{"lineNumber":187,"author":{"gitId":"guohuang88"},"content":"        assertNotEquals(editEventCommandFirst, editEventCommandThird);","lastModifiedDate":"2024-03-18"},{"lineNumber":188,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":189,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":190,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":191,"author":{"gitId":"guohuang88"},"content":"    public void equals_differentInstance_returnFalse() {","lastModifiedDate":"2024-03-18"},{"lineNumber":192,"author":{"gitId":"guohuang88"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":193,"author":{"gitId":"guohuang88"},"content":"                INDEX_FIRST_PATIENT, INDEX_FIRST_EVENT, validEvent);","lastModifiedDate":"2024-03-18"},{"lineNumber":194,"author":{"gitId":"guohuang88"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":195,"author":{"gitId":"guohuang88"},"content":"                INDEX_FIRST_PATIENT, validEvent);","lastModifiedDate":"2024-03-18"},{"lineNumber":196,"author":{"gitId":"guohuang88"},"content":"        assertNotEquals(editEventCommand, addEventCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":197,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":198,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":199,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":200,"author":{"gitId":"guohuang88"},"content":"    public void equals_sameValues_returnTrue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":201,"author":{"gitId":"guohuang88"},"content":"        EditEventCommand editEventCommandFirst \u003d new EditEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":202,"author":{"gitId":"SherisseTJW"},"content":"                INDEX_THIRD_PATIENT, INDEX_THIRD_EVENT, pastEvent);","lastModifiedDate":"2024-04-04"},{"lineNumber":203,"author":{"gitId":"guohuang88"},"content":"        EditEventCommand editEventCommandSecond \u003d new EditEventCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":204,"author":{"gitId":"SherisseTJW"},"content":"                INDEX_THIRD_PATIENT, INDEX_THIRD_EVENT, pastEvent);","lastModifiedDate":"2024-04-04"},{"lineNumber":205,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":206,"author":{"gitId":"guohuang88"},"content":"        // Test with the same object","lastModifiedDate":"2024-03-18"},{"lineNumber":207,"author":{"gitId":"guohuang88"},"content":"        assertEquals(editEventCommandFirst, editEventCommandFirst);","lastModifiedDate":"2024-03-18"},{"lineNumber":208,"author":{"gitId":"guohuang88"},"content":"        // Test with different object but same values","lastModifiedDate":"2024-03-18"},{"lineNumber":209,"author":{"gitId":"guohuang88"},"content":"        assertEquals(editEventCommandFirst, editEventCommandSecond);","lastModifiedDate":"2024-03-18"},{"lineNumber":210,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":211,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":212,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":213,"author":{"gitId":"guohuang88"},"content":"    public void toStringTest() {","lastModifiedDate":"2024-03-18"},{"lineNumber":214,"author":{"gitId":"guohuang88"},"content":"        EditEventCommand editEventCommand \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":215,"author":{"gitId":"guohuang88"},"content":"                new EditEventCommand(INDEX_FIRST_PATIENT, INDEX_FIRST_EVENT, validEvent);","lastModifiedDate":"2024-03-18"},{"lineNumber":216,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":217,"author":{"gitId":"guohuang88"},"content":"        String expected \u003d EditEventCommand.class.getCanonicalName()","lastModifiedDate":"2024-03-18"},{"lineNumber":218,"author":{"gitId":"guohuang88"},"content":"                + \"{patientIndex\u003d\" + INDEX_FIRST_PATIENT","lastModifiedDate":"2024-03-18"},{"lineNumber":219,"author":{"gitId":"guohuang88"},"content":"                + \", eventIndex\u003d\" + INDEX_FIRST_EVENT","lastModifiedDate":"2024-03-18"},{"lineNumber":220,"author":{"gitId":"guohuang88"},"content":"                + \", eventToUpdate\u003d\" + validEvent + \"}\";","lastModifiedDate":"2024-03-18"},{"lineNumber":221,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":222,"author":{"gitId":"guohuang88"},"content":"        assertEquals(editEventCommand.toString(), expected);","lastModifiedDate":"2024-03-18"},{"lineNumber":223,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":224,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":225,"author":{"gitId":"guohuang88"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"guohuang88":201,"SherisseTJW":24}},{"path":"src/test/java/seedu/address/logic/commands/EditPatientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_DATE;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_DATETIME;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FAMILY_CONDITION_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FOOD_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOBBY_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PREFERRED_NAME_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DEPRESSION;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.EditPatientDescriptor;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2024-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"public class EditPatientDescriptorTest {","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"        EditPatientDescriptor descriptorWithSameValues \u003d new EditPatientDescriptor(DESC_AMY);","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"        EditPatientDescriptor editedAmy \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"                new EditPatientDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"        // different id -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withPatientHospitalId(VALID_ID_BOB).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"        // different preferred name -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withPreferredName(VALID_PREFERRED_NAME_BOB).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"        // different food preference -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withFoodPreferences(VALID_FOOD_BOB).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"        // different family condition -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withFamilyConditions(VALID_FAMILY_CONDITION_BOB).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"        // different hobby -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withHobbies(VALID_HOBBY_BOB).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_DEPRESSION).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"SherisseTJW"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withEvent(VALID_EVENT_NAME,","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"SherisseTJW"},"content":"                VALID_EVENT_DATE).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"SherisseTJW"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withEvent(VALID_EVENT_NAME,","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"SherisseTJW"},"content":"                VALID_EVENT_DATETIME).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"SherisseTJW"},"content":"        EditPatientDescriptor editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"choowengyan"},"content":"        String expected \u003d EditPatientDescriptor.class.getCanonicalName() + \"{patientHospitalId\u003d\"","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"choowengyan"},"content":"                + editPatientDescriptor.getPatientHospitalId().orElse(null) + \", name\u003d\"","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"choowengyan"},"content":"                + editPatientDescriptor.getName().orElse(null) + \", preferredName\u003d\"","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"choowengyan"},"content":"                + editPatientDescriptor.getPreferredName().orElse(null) + \", foodPreferences\u003d\"","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"choowengyan"},"content":"                + editPatientDescriptor.getFoodPreferences().orElse(null) + \", familyConditions\u003d\"","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"choowengyan"},"content":"                + editPatientDescriptor.getFamilyConditions().orElse(null) + \", hobbies\u003d\"","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"choowengyan"},"content":"                + editPatientDescriptor.getHobbies().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"SherisseTJW"},"content":"                + editPatientDescriptor.getTags().orElse(null) + \", events\u003d\"","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"SherisseTJW"},"content":"                + editPatientDescriptor.getEvents().orElse(null) + \"}\";","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expected, editPatientDescriptor.toString());","lastModifiedDate":"2024-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"SherisseTJW":17,"choowengyan":28,"NeoHW":4,"-":47}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.Messages.MESSAGE_PATIENT_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2024-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"    public void execute_zeroKeywords_noPatientFound() {","lastModifiedDate":"2024-03-09"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PATIENT_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"        expectedModel.updateFilteredPatientList(predicate);","lastModifiedDate":"2024-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPatientList());","lastModifiedDate":"2024-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"NeoHW":8,"-":70}},{"path":"src/test/java/seedu/address/logic/commands/FindTagsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"guohuang88"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"guohuang88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"guohuang88"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.Messages.MESSAGE_PATIENT_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.testutil.TypicalPatients.BENSON;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"guohuang88"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"guohuang88"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"guohuang88"},"content":"import java.util.List;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"guohuang88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"guohuang88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"guohuang88"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"guohuang88"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"guohuang88"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"guohuang88"},"content":"import seedu.address.model.patient.TagContainsKeywordsPredicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"guohuang88"},"content":"public class FindTagsCommandTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"guohuang88"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"guohuang88"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"guohuang88"},"content":"    public void execute_zeroKeyword_noPatientFound() {","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"guohuang88"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PATIENT_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"guohuang88"},"content":"        String userInput \u003d \" \";","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"guohuang88"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"guohuang88"},"content":"                Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"guohuang88"},"content":"        FindTagsCommand command \u003d new FindTagsCommand(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"guohuang88"},"content":"        expectedModel.updateFilteredPatientList(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"guohuang88"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"guohuang88"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPatientList());","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"guohuang88"},"content":"    public void execute_oneKeyword_onePatientFound() {","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"guohuang88"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PATIENT_LISTED_OVERVIEW, 1);","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"guohuang88"},"content":"        String userInput \u003d \"depression\";","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"guohuang88"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"guohuang88"},"content":"                Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"guohuang88"},"content":"        FindTagsCommand command \u003d new FindTagsCommand(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"guohuang88"},"content":"        expectedModel.updateFilteredPatientList(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"guohuang88"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"guohuang88"},"content":"        assertEquals(Collections.singletonList(ALICE), model.getFilteredPatientList());","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"guohuang88"},"content":"    public void execute_twoKeywords_twoPatientFound() {","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"guohuang88"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PATIENT_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"guohuang88"},"content":"        String userInput \u003d \"depression diabetes\";","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"guohuang88"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"guohuang88"},"content":"                Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"guohuang88"},"content":"        FindTagsCommand command \u003d new FindTagsCommand(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"guohuang88"},"content":"        expectedModel.updateFilteredPatientList(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"guohuang88"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"guohuang88"},"content":"        assertEquals(List.of(ALICE, BENSON), model.getFilteredPatientList());","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"guohuang88"},"content":"    public void equalsTest() {","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"guohuang88"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"guohuang88"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"guohuang88"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"guohuang88"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"guohuang88"},"content":"        FindTagsCommand findTagsCommandFirst \u003d new FindTagsCommand(firstPredicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"guohuang88"},"content":"        FindTagsCommand findTagsCommandSecond \u003d new FindTagsCommand(secondPredicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"guohuang88"},"content":"        // same object -\u003e equals","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"guohuang88"},"content":"        assertEquals(findTagsCommandFirst, findTagsCommandFirst);","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"guohuang88"},"content":"        // same values -\u003e equals","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"guohuang88"},"content":"        FindTagsCommand findTagsCommandFirstDuplicate \u003d new FindTagsCommand(firstPredicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"guohuang88"},"content":"        assertEquals(findTagsCommandFirst, findTagsCommandFirstDuplicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"guohuang88"},"content":"        // null -\u003e not equals","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"guohuang88"},"content":"        assertNotEquals(null, findTagsCommandFirst);","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"guohuang88"},"content":"        // different tag -\u003e not equals","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"guohuang88"},"content":"        assertNotEquals(findTagsCommandFirst, findTagsCommandSecond);","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"guohuang88"},"content":"        //different instance -\u003e not equals","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"guohuang88"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"guohuang88"},"content":"                Collections.singletonList(\"first\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"guohuang88"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"guohuang88"},"content":"        assertNotEquals(findTagsCommandFirst, findCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"guohuang88"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"guohuang88"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"guohuang88"},"content":"        FindTagsCommand findTagsCommand \u003d new FindTagsCommand(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"guohuang88"},"content":"        String expected \u003d FindTagsCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"guohuang88"},"content":"        assertEquals(expected, findTagsCommand.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"guohuang88"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"guohuang88":104}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2024-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"NeoHW":1,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhiWei1010"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"ZhiWei1010"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"ZhiWei1010"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.model.patient.comparators.NameComparator.NAME_COMPARATOR;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.model.patient.comparators.PreferredNameComparator.PREFERRED_NAME_COMPARATOR;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.Collections;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"ZhiWei1010"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"ZhiWei1010"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"ZhiWei1010"},"content":"public class SortCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"ZhiWei1010"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"ZhiWei1010"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"ZhiWei1010"},"content":"    public void execute_sortCommandWithSortAttributeName_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"ZhiWei1010"},"content":"        SortCommand sortCommand \u003d new SortCommand(NAME_COMPARATOR);","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"ZhiWei1010"},"content":"        List\u003cPatient\u003e patientList \u003d expectedModel.getFullPatientList();","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"ZhiWei1010"},"content":"        List\u003cPatient\u003e patientArrayList \u003d new ArrayList\u003c\u003e(patientList);","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"ZhiWei1010"},"content":"        Collections.sort(patientArrayList, NAME_COMPARATOR);","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"ZhiWei1010"},"content":"        expectedModel.updatePatientList(patientArrayList);","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"ZhiWei1010"},"content":"        expectedModel.updatePatientList(patientArrayList);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"ZhiWei1010"},"content":"        String expectedMessage \u003d String.format(SortCommand.MESSAGE_SORT_SUCCESS, \"name\");","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"ZhiWei1010"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"ZhiWei1010"},"content":"    public void execute_sortCommandWithSortAttributePreferredName_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"ZhiWei1010"},"content":"        String sortAttribute \u003d \"preferred name\";","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"ZhiWei1010"},"content":"        SortCommand sortCommand \u003d new SortCommand(PREFERRED_NAME_COMPARATOR);","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"ZhiWei1010"},"content":"        List\u003cPatient\u003e patientList \u003d expectedModel.getFullPatientList();","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"ZhiWei1010"},"content":"        List\u003cPatient\u003e patientArrayList \u003d new ArrayList\u003c\u003e(patientList);","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"ZhiWei1010"},"content":"        Collections.sort(patientArrayList, PREFERRED_NAME_COMPARATOR);","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"ZhiWei1010"},"content":"        expectedModel.updatePatientList(patientArrayList);","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"ZhiWei1010"},"content":"        expectedModel.updatePatientList(patientArrayList);","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"ZhiWei1010"},"content":"        String expectedMessage \u003d String.format(SortCommand.MESSAGE_SORT_SUCCESS, \"preferred name\");","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"ZhiWei1010"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"ZhiWei1010"},"content":"    public void equals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"ZhiWei1010"},"content":"        String sortAttribute \u003d \"name\";","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"ZhiWei1010"},"content":"        final SortCommand standardCommand \u003d new SortCommand(NAME_COMPARATOR);","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"ZhiWei1010"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"ZhiWei1010"},"content":"        SortCommand commandWithSameValues \u003d new SortCommand(NAME_COMPARATOR);","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"ZhiWei1010"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"ZhiWei1010"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"ZhiWei1010"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"ZhiWei1010"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"ZhiWei1010"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"ZhiWei1010"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"ZhiWei1010"},"content":"        assertNotEquals(standardCommand, new ListCommand());","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"ZhiWei1010"},"content":"        // different comparator -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"ZhiWei1010"},"content":"        assertNotEquals(standardCommand, new SortCommand(PREFERRED_NAME_COMPARATOR));","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"ZhiWei1010"},"content":"    public void toStringTest() {","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"ZhiWei1010"},"content":"        // test case 1","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"ZhiWei1010"},"content":"        SortCommand sortCommand \u003d new SortCommand(NAME_COMPARATOR);","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"ZhiWei1010"},"content":"        String expected \u003d SortCommand.class.getCanonicalName() + \"{comparator\u003d\" + NAME_COMPARATOR + \"}\";","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"ZhiWei1010"},"content":"        assertEquals(expected, sortCommand.toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"ZhiWei1010"},"content":"        // test case 2","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"ZhiWei1010"},"content":"        sortCommand \u003d new SortCommand(PREFERRED_NAME_COMPARATOR);","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"ZhiWei1010"},"content":"        expected \u003d SortCommand.class.getCanonicalName() + \"{comparator\u003d\" + PREFERRED_NAME_COMPARATOR + \"}\";","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"ZhiWei1010"},"content":"        assertEquals(expected, sortCommand.toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"ZhiWei1010"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"ZhiWei1010":99}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FAMILY_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FAMILY_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FOOD_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FOOD_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HOBBY_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HOBBY_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_FAMILY_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_FOOD_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_HOBBY_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ID_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PREFERRED_NAME_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREFERRED_NAME_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREFERRED_NAME_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_DEPRESSION;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_DIABETES;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FAMILY_CONDITION_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FOOD_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOBBY_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PREFERRED_NAME_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DEPRESSION;","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DIABETES;","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PID;","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERRED_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.AMY;","lastModifiedDate":"2024-03-09"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.BOB;","lastModifiedDate":"2024-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FamilyCondition;","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FoodPreference;","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.Hobby;","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.PatientHospitalId;","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.PreferredName;","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"        Patient expectedPatient \u003d new PatientBuilder(BOB).withTags(VALID_TAG_DEPRESSION).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + ID_DESC_BOB + NAME_DESC_BOB + PREFERRED_NAME_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"            + FOOD_DESC_BOB + FAMILY_DESC_BOB + HOBBY_DESC_BOB + TAG_DESC_DEPRESSION, new AddCommand(expectedPatient));","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"        Patient expectedPatientMultipleTags \u003d new PatientBuilder(BOB).withTags(VALID_TAG_DEPRESSION, VALID_TAG_DIABETES)","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"        assertParseSuccess(parser, ID_DESC_BOB + NAME_DESC_BOB + PREFERRED_NAME_DESC_BOB + FOOD_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"choowengyan"},"content":"                + FAMILY_DESC_BOB + HOBBY_DESC_BOB + TAG_DESC_DEPRESSION + TAG_DESC_DIABETES,","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"            new AddCommand(expectedPatientMultipleTags));","lastModifiedDate":"2024-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"choowengyan"},"content":"        String validExpectedPatientString \u003d ID_DESC_BOB + NAME_DESC_BOB + PREFERRED_NAME_DESC_BOB + FOOD_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"choowengyan"},"content":"                + FAMILY_DESC_BOB + HOBBY_DESC_BOB + TAG_DESC_DIABETES;","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"choowengyan"},"content":"        // multiple patient hospital ID","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, ID_DESC_AMY + validExpectedPatientString,","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"choowengyan"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PID));","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"NeoHW"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPatientString,","lastModifiedDate":"2024-03-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"choowengyan"},"content":"        // multiple preferred names","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, PREFERRED_NAME_DESC_AMY + validExpectedPatientString,","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"choowengyan"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PREFERRED_NAME));","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, validExpectedPatientString + ID_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"choowengyan"},"content":"                + PREFERRED_NAME_DESC_AMY + FOOD_DESC_AMY + FAMILY_DESC_AMY + HOBBY_DESC_AMY","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"choowengyan"},"content":"                + validExpectedPatientString, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PID, PREFIX_NAME,","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"choowengyan"},"content":"            PREFIX_PREFERRED_NAME));","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"choowengyan"},"content":"        // invalid patient hospital ID","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, INVALID_ID_DESC + validExpectedPatientString,","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"choowengyan"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PID));","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"NeoHW"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPatientString,","lastModifiedDate":"2024-03-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"choowengyan"},"content":"        // invalid preferred name","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, INVALID_PREFERRED_NAME_DESC + validExpectedPatientString,","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"choowengyan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PREFERRED_NAME));","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"choowengyan"},"content":"        // invalid patient hospital ID","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, validExpectedPatientString + INVALID_ID_DESC,","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"choowengyan"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PID));","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"NeoHW"},"content":"        assertParseFailure(parser, validExpectedPatientString + INVALID_NAME_DESC,","lastModifiedDate":"2024-03-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"choowengyan"},"content":"        // invalid preferred name","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, validExpectedPatientString + INVALID_PREFERRED_NAME_DESC,","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"choowengyan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PREFERRED_NAME));","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"NeoHW"},"content":"        Patient expectedPatient \u003d new PatientBuilder(AMY).withTags().build();","lastModifiedDate":"2024-03-09"},{"lineNumber":133,"author":{"gitId":"choowengyan"},"content":"        assertParseSuccess(parser, ID_DESC_AMY + NAME_DESC_AMY + PREFERRED_NAME_DESC_AMY + FOOD_DESC_AMY","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"choowengyan"},"content":"                + FAMILY_DESC_AMY + HOBBY_DESC_AMY, new AddCommand(expectedPatient));","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"choowengyan"},"content":"        // missing patient hospital ID prefix","lastModifiedDate":"2024-03-14"},{"lineNumber":142,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, VALID_ID_BOB + NAME_DESC_BOB + PREFERRED_NAME_DESC_BOB + FOOD_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"choowengyan"},"content":"                + FAMILY_DESC_BOB + HOBBY_DESC_BOB,","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"choowengyan"},"content":"            expectedMessage);","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, ID_DESC_BOB + VALID_NAME_BOB + PREFERRED_NAME_DESC_BOB + FOOD_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"choowengyan"},"content":"                + FAMILY_DESC_BOB + HOBBY_DESC_BOB,","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":151,"author":{"gitId":"choowengyan"},"content":"        // missing preferred name prefix","lastModifiedDate":"2024-03-14"},{"lineNumber":152,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, ID_DESC_BOB + NAME_DESC_BOB + VALID_PREFERRED_NAME_BOB + FOOD_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":153,"author":{"gitId":"choowengyan"},"content":"                + FAMILY_DESC_BOB + HOBBY_DESC_BOB,","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"choowengyan"},"content":"        // missing food preference prefix","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, ID_DESC_BOB + NAME_DESC_BOB + PREFERRED_NAME_DESC_BOB + VALID_FOOD_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":158,"author":{"gitId":"choowengyan"},"content":"                + FAMILY_DESC_BOB + HOBBY_DESC_BOB,","lastModifiedDate":"2024-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"choowengyan"},"content":"        // missing family condition prefix","lastModifiedDate":"2024-03-14"},{"lineNumber":162,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, ID_DESC_BOB + NAME_DESC_BOB + PREFERRED_NAME_DESC_BOB + FOOD_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":163,"author":{"gitId":"choowengyan"},"content":"                + VALID_FAMILY_CONDITION_BOB + HOBBY_DESC_BOB,","lastModifiedDate":"2024-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"choowengyan"},"content":"        // missing hobby prefix","lastModifiedDate":"2024-03-14"},{"lineNumber":167,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, ID_DESC_BOB + NAME_DESC_BOB + PREFERRED_NAME_DESC_BOB + FOOD_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":168,"author":{"gitId":"choowengyan"},"content":"                + FAMILY_DESC_BOB + VALID_HOBBY_BOB,","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, VALID_ID_BOB + VALID_NAME_BOB + VALID_PREFERRED_NAME_BOB + VALID_FOOD_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":173,"author":{"gitId":"choowengyan"},"content":"                + VALID_FAMILY_CONDITION_BOB + VALID_HOBBY_BOB,","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"choowengyan"},"content":"        // invalid patient hospital ID","lastModifiedDate":"2024-03-14"},{"lineNumber":180,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, INVALID_ID_DESC + NAME_DESC_BOB + PREFERRED_NAME_DESC_BOB + FOOD_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":181,"author":{"gitId":"choowengyan"},"content":"            + FAMILY_DESC_BOB + HOBBY_DESC_BOB + TAG_DESC_DEPRESSION + TAG_DESC_DIABETES,","lastModifiedDate":"2024-03-14"},{"lineNumber":182,"author":{"gitId":"choowengyan"},"content":"            PatientHospitalId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":183,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, ID_DESC_BOB + INVALID_NAME_DESC + PREFERRED_NAME_DESC_BOB + FOOD_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":186,"author":{"gitId":"choowengyan"},"content":"            + FAMILY_DESC_BOB + HOBBY_DESC_BOB + TAG_DESC_DEPRESSION + TAG_DESC_DIABETES, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":187,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":188,"author":{"gitId":"choowengyan"},"content":"        // invalid preferred name","lastModifiedDate":"2024-03-14"},{"lineNumber":189,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, ID_DESC_BOB + NAME_DESC_BOB + INVALID_PREFERRED_NAME_DESC + FOOD_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":190,"author":{"gitId":"choowengyan"},"content":"            + FAMILY_DESC_BOB + HOBBY_DESC_BOB + TAG_DESC_DEPRESSION + TAG_DESC_DIABETES,","lastModifiedDate":"2024-03-14"},{"lineNumber":191,"author":{"gitId":"choowengyan"},"content":"            PreferredName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"choowengyan"},"content":"        // invalid food preference","lastModifiedDate":"2024-03-14"},{"lineNumber":194,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, ID_DESC_BOB + NAME_DESC_BOB + PREFERRED_NAME_DESC_BOB + INVALID_FOOD_DESC","lastModifiedDate":"2024-03-14"},{"lineNumber":195,"author":{"gitId":"choowengyan"},"content":"            + FAMILY_DESC_BOB + HOBBY_DESC_BOB + TAG_DESC_DEPRESSION + TAG_DESC_DIABETES,","lastModifiedDate":"2024-03-14"},{"lineNumber":196,"author":{"gitId":"choowengyan"},"content":"            FoodPreference.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"choowengyan"},"content":"        // invalid family condition","lastModifiedDate":"2024-03-14"},{"lineNumber":199,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, ID_DESC_BOB + NAME_DESC_BOB + PREFERRED_NAME_DESC_BOB + FOOD_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":200,"author":{"gitId":"choowengyan"},"content":"            + INVALID_FAMILY_DESC + HOBBY_DESC_BOB + TAG_DESC_DEPRESSION + TAG_DESC_DIABETES,","lastModifiedDate":"2024-03-14"},{"lineNumber":201,"author":{"gitId":"choowengyan"},"content":"            FamilyCondition.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":203,"author":{"gitId":"choowengyan"},"content":"        // invalid hobby","lastModifiedDate":"2024-03-14"},{"lineNumber":204,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, ID_DESC_BOB + NAME_DESC_BOB + PREFERRED_NAME_DESC_BOB + FOOD_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":205,"author":{"gitId":"choowengyan"},"content":"                + FAMILY_DESC_BOB + INVALID_HOBBY_DESC + TAG_DESC_DEPRESSION + TAG_DESC_DIABETES,","lastModifiedDate":"2024-03-14"},{"lineNumber":206,"author":{"gitId":"choowengyan"},"content":"            Hobby.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, ID_DESC_BOB + NAME_DESC_BOB + PREFERRED_NAME_DESC_BOB + FOOD_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":210,"author":{"gitId":"choowengyan"},"content":"            + FAMILY_DESC_BOB + HOBBY_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_DIABETES, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":213,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, ID_DESC_BOB + INVALID_NAME_DESC + PREFERRED_NAME_DESC_BOB + FOOD_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":214,"author":{"gitId":"choowengyan"},"content":"            + INVALID_FAMILY_DESC + HOBBY_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":217,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + ID_DESC_BOB + NAME_DESC_BOB + PREFERRED_NAME_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":218,"author":{"gitId":"choowengyan"},"content":"                + FOOD_DESC_BOB + FAMILY_DESC_BOB + HOBBY_DESC_BOB + TAG_DESC_DEPRESSION + TAG_DESC_DIABETES,","lastModifiedDate":"2024-03-14"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"choowengyan":116,"NeoHW":10,"-":95}},{"path":"src/test/java/seedu/address/logic/parser/AddEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_DESC_DATE;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_DESC_DATETIME;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EVENT_DESC;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_DATE;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_DATETIME;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.Event;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"public class AddEventCommandParserTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"    private final AddEventCommandParser parser \u003d new AddEventCommandParser();","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"    private final Event validDate \u003d new Event(VALID_EVENT_NAME, VALID_EVENT_DATE);","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"    private final Event validDateTime \u003d new Event(VALID_EVENT_NAME, VALID_EVENT_DATETIME);","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"        // General","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(VALID_EVENT_DATE));","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1\" + INVALID_EVENT_DESC));","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" \" + VALID_EVENT_DATE));","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" \" + VALID_EVENT_DATETIME));","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" \" + INVALID_EVENT_DESC));","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" \" + INVALID_EVENT_DESC));","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"        // Special chars","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1 n/Valid? d/12-12-2024\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1 n/Valid/ d/12-12-2024\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1 n/Vali$$ d/12-12-2024\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"        // Extra invalid prefixes","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1 n/Valid d/12-12-2024 t/Something\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1 n/Valid c/Test d/12-12-2024\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1 p/Another n/Valid d/12-12-2024\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"SherisseTJW"},"content":"    public void parse_validArgs_returnsAddEventCommand() throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"        Index validIndex \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"        String userInput;","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"SherisseTJW"},"content":"        AddEventCommand expected;","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"        AddEventCommand command;","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"SherisseTJW"},"content":"        userInput \u003d validIndex.getOneBased() + EVENT_DESC_DATE;","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"SherisseTJW"},"content":"        expected \u003d new AddEventCommand(validIndex, validDate);","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"SherisseTJW"},"content":"        command \u003d parser.parse(userInput);","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"SherisseTJW"},"content":"        assertEquals(expected, command);","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"SherisseTJW"},"content":"        userInput \u003d validIndex.getOneBased() + EVENT_DESC_DATETIME;","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"SherisseTJW"},"content":"        expected \u003d new AddEventCommand(validIndex, validDateTime);","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"SherisseTJW"},"content":"        command \u003d parser.parse(userInput);","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"SherisseTJW"},"content":"        assertEquals(expected, command);","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"SherisseTJW"},"content":"        String alphanumericName \u003d \"abc123\";","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"SherisseTJW"},"content":"        userInput \u003d validIndex.getOneBased() + \" n/\" + alphanumericName + \" d/\" + VALID_EVENT_DATETIME;","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"SherisseTJW"},"content":"        expected \u003d new AddEventCommand(validIndex, new Event(\"abc123\", VALID_EVENT_DATETIME));","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"SherisseTJW"},"content":"        command \u003d parser.parse(userInput);","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"SherisseTJW"},"content":"        assertEquals(expected, command);","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"SherisseTJW":72}},{"path":"src/test/java/seedu/address/logic/parser/AddTagsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_DEPRESSION;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_DIABETES;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DEPRESSION;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DIABETES;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"import seedu.address.logic.commands.AddTagsCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"public class AddTagsCommandParserTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"    private final AddTagsCommandParser parser \u003d new AddTagsCommandParser();","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"    public void parse_invalidPrefix_throwsParseException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"        // Invalid prefix: \"p/\" instead of \"t/\"","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"        String userInput \u003d \"1 p/tag\";","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"    public void parse_multipleInvalidPrefixes_throwsParseException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"        // Multiple invalid prefixes: \"p/\" instead of \"t/\", \"d/\" instead of \"t/\"","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"        String userInput \u003d \"1 p/tag d/depression\";","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"    public void parse_multipleInvalidAndValidPrefixes_throwsParseException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"        // Multiple invalid prefixes: \"p/\" instead of \"t/\", \"d/\" instead of \"t/\"","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"        String userInput \u003d \"1 t/fall risk p/tag d/depression\";","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"    public void parse_validArgs_returnsAddTagsCommand() throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"        Index targetIndex \u003d INDEX_SECOND_PATIENT;","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_DEPRESSION;","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"        AddTagsCommand expectedCommand \u003d new AddTagsCommand(targetIndex, Set.of(new Tag(VALID_TAG_DEPRESSION)));","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"        AddTagsCommand command \u003d parser.parse(userInput);","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expectedCommand, command);","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"    public void parse_validDifferentCasesArgs_returnsAddTagsCommand() throws ParseException {","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"        Index targetIndex \u003d INDEX_SECOND_PATIENT;","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" t/ fall risk t/ FALL RISK t/ FaLl RiSk\";","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"        AddTagsCommand expectedCommand \u003d new AddTagsCommand(targetIndex, Set.of(new Tag(\"fall risk\")));","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"        AddTagsCommand command \u003d parser.parse(userInput);","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expectedCommand, command);","lastModifiedDate":"2024-03-22"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"    public void parse_validDifferentNumOfSpacesArgs_returnsAddTagsCommand() throws ParseException {","lastModifiedDate":"2024-03-22"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"        Index targetIndex \u003d INDEX_SECOND_PATIENT;","lastModifiedDate":"2024-03-22"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" t/ fall risk t/ fall  risk t/ FaLl   RiSk\";","lastModifiedDate":"2024-03-22"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"        AddTagsCommand expectedCommand \u003d new AddTagsCommand(targetIndex, Set.of(new Tag(\"fall risk\")));","lastModifiedDate":"2024-03-22"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"        AddTagsCommand command \u003d parser.parse(userInput);","lastModifiedDate":"2024-03-22"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expectedCommand, command);","lastModifiedDate":"2024-03-22"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"    public void parse_validArgsMultipleTags_returnsAddTagsCommand() throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"choowengyan"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_DEPRESSION + TAG_DESC_DIABETES;","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"        AddTagsCommand expectedCommand \u003d new AddTagsCommand(targetIndex,","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"choowengyan"},"content":"                Set.of(new Tag(VALID_TAG_DEPRESSION), new Tag(VALID_TAG_DIABETES)));","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"NeoHW"},"content":"        AddTagsCommand command \u003d parser.parse(userInput);","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expectedCommand, command);","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"NeoHW"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"NeoHW"},"content":"        // Empty index","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"NeoHW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"NeoHW"},"content":"        // Invalid tag","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"NeoHW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1\" + INVALID_TAG_DESC));","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"NeoHW"},"content":"        // Missing index","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"choowengyan"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(TAG_DESC_DEPRESSION));","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"NeoHW"},"content":"        // Empty or missing tags","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"NeoHW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"NeoHW"},"content":"        // Only Whitespace tags","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"NeoHW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1  \"));","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"NeoHW"},"content":"        // Mixed invalid and valid tags","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"NeoHW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1\" + INVALID_TAG_DESC","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"choowengyan"},"content":"                + TAG_DESC_DEPRESSION));","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"NeoHW"},"content":"        // Multiple invalid tags","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"NeoHW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1\" + INVALID_TAG_DESC","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"NeoHW"},"content":"                + INVALID_TAG_DESC));","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"NeoHW"},"content":"        // Invalid index","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"choowengyan"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"a\" + TAG_DESC_DEPRESSION));","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"NeoHW"},"content":"        // Invalid index followed by valid tag","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"choowengyan"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"a\" + TAG_DESC_DEPRESSION));","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"choowengyan":12,"NeoHW":107}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.model.patient.comparators.NameComparator.NAME_COMPARATOR;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"import seedu.address.logic.commands.AddTagsCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"guohuang88"},"content":"import seedu.address.logic.commands.FindTagsCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.EditPatientDescriptor;","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.Event;","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"guohuang88"},"content":"import seedu.address.model.patient.TagContainsKeywordsPredicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2024-03-09"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-09"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"import seedu.address.testutil.PatientUtil;","lastModifiedDate":"2024-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2024-03-09"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PatientUtil.getAddCommand(patient));","lastModifiedDate":"2024-03-09"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"        assertEquals(new AddCommand(patient), command);","lastModifiedDate":"2024-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"        // this means that \"clear 123\" also works","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PATIENT.getOneBased());","lastModifiedDate":"2024-03-09"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PATIENT), command);","lastModifiedDate":"2024-03-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2024-03-09"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(patient).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"                + INDEX_FIRST_PATIENT.getOneBased() + \" \" + PatientUtil.getEditPatientDescriptorDetails(descriptor));","lastModifiedDate":"2024-03-09"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PATIENT, descriptor), command);","lastModifiedDate":"2024-03-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"NeoHW"},"content":"    public void parseCommand_addTags() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"NeoHW"},"content":"        String args \u003d \"1 \" + PREFIX_TAG + \"tag1 \" + PREFIX_TAG + \"tag2 \" + PREFIX_TAG + \"tag3\";","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"NeoHW"},"content":"        AddTagsCommand command \u003d (AddTagsCommand) parser.parseCommand(","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"NeoHW"},"content":"                AddTagsCommand.COMMAND_WORD + \" \" + args);","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"NeoHW"},"content":"        Set\u003cTag\u003e expectedTags \u003d new HashSet\u003c\u003e(Arrays.asList(new Tag(\"tag1\"), new Tag(\"tag2\"), new Tag(\"tag3\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"NeoHW"},"content":"        assertEquals(new AddTagsCommand(INDEX_FIRST_PATIENT, expectedTags), command);","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"guohuang88"},"content":"    public void parseCommand_findTags() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"guohuang88"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"diabetes\", \"depression\", \"wheelchair\");","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"guohuang88"},"content":"        FindTagsCommand command \u003d (FindTagsCommand) parser.parseCommand(","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"guohuang88"},"content":"                FindTagsCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords));","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"guohuang88"},"content":"        assertEquals(new FindTagsCommand(new TagContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"SherisseTJW"},"content":"    public void parseCommand_addEvent() throws Exception {","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"SherisseTJW"},"content":"        String name \u003d \"Birthday\";","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"SherisseTJW"},"content":"        String date \u003d \"20-01-9999\";","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"SherisseTJW"},"content":"        String args \u003d \"1 \" + PREFIX_NAME + name + \" \" + PREFIX_DATETIME + date;","lastModifiedDate":"2024-03-13"},{"lineNumber":105,"author":{"gitId":"SherisseTJW"},"content":"        AddEventCommand command \u003d (AddEventCommand) parser.parseCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"SherisseTJW"},"content":"                AddEventCommand.COMMAND_WORD + \" \" + args);","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":108,"author":{"gitId":"SherisseTJW"},"content":"        assertEquals(new AddEventCommand(INDEX_FIRST_PATIENT, new Event(name, date)), command);","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"NeoHW"},"content":"        // this means that \"exit 123\" also works","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"NeoHW"},"content":"        // this means that \"help 123\" also works","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"NeoHW"},"content":"        // this means that \"list 123\" also works","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"ZhiWei1010"},"content":"    public void parseCommand_deleteEvent() throws Exception {","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"ZhiWei1010"},"content":"        String args \u003d \"1 \" + PREFIX_EVENT + \"1\";","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"ZhiWei1010"},"content":"        DeleteEventCommand command \u003d (DeleteEventCommand) parser.parseCommand(","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"ZhiWei1010"},"content":"                DeleteEventCommand.COMMAND_WORD + \" \" + args);","lastModifiedDate":"2024-04-04"},{"lineNumber":145,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":146,"author":{"gitId":"ZhiWei1010"},"content":"        assertEquals(new DeleteEventCommand(INDEX_FIRST_PATIENT, INDEX_FIRST_EVENT), command);","lastModifiedDate":"2024-04-04"},{"lineNumber":147,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":148,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":149,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"ZhiWei1010"},"content":"    public void parseCommand_sort() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"ZhiWei1010"},"content":"        String args \u003d \"n\";","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"ZhiWei1010"},"content":"        SortCommand command \u003d (SortCommand) parser.parseCommand(","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"ZhiWei1010"},"content":"                SortCommand.COMMAND_WORD + \" \" + args);","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"ZhiWei1010"},"content":"        assertEquals(new SortCommand(NAME_COMPARATOR), command);","lastModifiedDate":"2024-04-03"},{"lineNumber":155,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":156,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"guohuang88":10,"SherisseTJW":13,"ZhiWei1010":22,"NeoHW":35,"-":87}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PATIENT));","lastModifiedDate":"2024-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"            DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"choowengyan":2,"NeoHW":2,"-":29}},{"path":"src/test/java/seedu/address/logic/parser/DeleteEventParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhiWei1010"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"ZhiWei1010"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"public class DeleteEventParserTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"    private final DeleteEventCommandParser parser \u003d new DeleteEventCommandParser();","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ZhiWei1010"},"content":"    private final Index validPatientIndex \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"ZhiWei1010"},"content":"    private final Index validEventIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"ZhiWei1010"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1\" + \" \"));","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" \" + \"1\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" \" + \" \"));","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(validPatientIndex + \" \"));","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" \" + validEventIndex));","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"    public void parse_validArgs_returnsDeleteEventCommand() throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"ZhiWei1010"},"content":"        String validUserInput;","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"        DeleteEventCommand expected;","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"ZhiWei1010"},"content":"        validUserInput \u003d validPatientIndex.getOneBased() + \" e/\" + validEventIndex.getOneBased();","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"        expected \u003d new DeleteEventCommand(validPatientIndex, validEventIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"ZhiWei1010"},"content":"        assertParseSuccess(parser, validUserInput, expected);","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"    public void parse_invalidArgs_returnsDeleteEventommand() {","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"ZhiWei1010"},"content":"        String invalidUserInput;","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"ZhiWei1010"},"content":"        invalidUserInput \u003d \"-1\" + \" e/\" + validEventIndex.getZeroBased();","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"        String expected \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"ZhiWei1010"},"content":"        assertParseFailure(parser, invalidUserInput, expected);","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"ZhiWei1010"},"content":"        invalidUserInput \u003d validPatientIndex.getZeroBased() + \"d/\" + validEventIndex.getZeroBased();","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"        expected \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"ZhiWei1010"},"content":"        assertParseFailure(parser, invalidUserInput, expected);","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"ZhiWei1010"},"content":"        invalidUserInput \u003d validPatientIndex.getZeroBased() + \" e/\" + \"-1\";","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"SherisseTJW"},"content":"        expected \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"ZhiWei1010"},"content":"        assertParseFailure(parser, invalidUserInput, expected);","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"ZhiWei1010"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"SherisseTJW":10,"ZhiWei1010":48}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTagsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_DEPRESSION;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_DIABETES;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DEPRESSION;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DIABETES;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"import seedu.address.logic.commands.DeleteTagsCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"public class DeleteTagsCommandParserTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"    private final DeleteTagsCommandParser parser \u003d new DeleteTagsCommandParser();","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"    public void parse_invalidPrefix_throwsParseException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"        // Invalid prefix: \"p/\" instead of \"t/\"","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"        String userInput \u003d \"1 p/tag\";","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"    public void parse_multipleInvalidPrefixes_throwsParseException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"        // Multiple invalid prefixes: \"p/\" instead of \"t/\", \"d/\" instead of \"t/\"","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"        String userInput \u003d \"1 p/tag d/depression\";","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"    public void parse_multipleInvalidAndValidPrefixes_throwsParseException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"        // Multiple invalid prefixes: \"p/\" instead of \"t/\", \"d/\" instead of \"t/\"","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"        String userInput \u003d \"1 t/fall risk p/tag d/depression\";","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"    public void parse_validArgs_returnsDeleteTagsCommand() throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"        Index targetIndex \u003d INDEX_SECOND_PATIENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_DEPRESSION;","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"        DeleteTagsCommand expectedCommand \u003d new DeleteTagsCommand(targetIndex, Set.of(new Tag(VALID_TAG_DEPRESSION)));","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"        DeleteTagsCommand command \u003d parser.parse(userInput);","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expectedCommand, command);","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"    public void parse_validArgsMultipleTags_returnsDeleteTagsCommand() throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_DEPRESSION + TAG_DESC_DIABETES;","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"        DeleteTagsCommand expectedCommand \u003d new DeleteTagsCommand(targetIndex,","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"                Set.of(new Tag(VALID_TAG_DEPRESSION), new Tag(VALID_TAG_DIABETES)));","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"        DeleteTagsCommand command \u003d parser.parse(userInput);","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expectedCommand, command);","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"    public void parse_validArgsMultipleSameTags_returnsDeleteTagsCommand() throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_DEPRESSION + TAG_DESC_DEPRESSION;","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"        DeleteTagsCommand expectedCommand \u003d new DeleteTagsCommand(targetIndex, Set.of(new Tag(VALID_TAG_DEPRESSION)));","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"        DeleteTagsCommand command \u003d parser.parse(userInput);","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expectedCommand, command);","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"NeoHW"},"content":"        // Empty index","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"NeoHW"},"content":"        // Invalid tag","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"NeoHW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1\" + INVALID_TAG_DESC));","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"NeoHW"},"content":"        // Missing index","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"NeoHW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(TAG_DESC_DEPRESSION));","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"NeoHW"},"content":"        // Empty or missing tags","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"NeoHW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"NeoHW"},"content":"        // Only Whitespace tags","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"NeoHW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1  \"));","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"NeoHW"},"content":"        // Mixed invalid and valid tags","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"NeoHW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1\" + INVALID_TAG_DESC","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"NeoHW"},"content":"                + TAG_DESC_DEPRESSION));","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"NeoHW"},"content":"        // Multiple invalid tags","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"NeoHW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1\" + INVALID_TAG_DESC","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"NeoHW"},"content":"                + INVALID_TAG_DESC));","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"NeoHW"},"content":"        // Invalid index","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"NeoHW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"a\" + TAG_DESC_DEPRESSION));","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"NeoHW"},"content":"        // Invalid index followed by valid tag","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"NeoHW"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"a\" + TAG_DESC_DEPRESSION));","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"NeoHW":109}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FAMILY_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FAMILY_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FOOD_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FOOD_DESC_BOB;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HOBBY_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HOBBY_DESC_BOB;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_FAMILY_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_FOOD_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_HOBBY_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ID_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PREFERRED_NAME_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREFERRED_NAME_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREFERRED_NAME_DESC_BOB;","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_DEPRESSION;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_DIABETES;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FAMILY_CONDITION_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FAMILY_CONDITION_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FOOD_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FOOD_BOB;","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOBBY_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOBBY_BOB;","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PREFERRED_NAME_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DEPRESSION;","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DIABETES;","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PID;","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERRED_NAME;","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-09"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2024-03-09"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PATIENT;","lastModifiedDate":"2024-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.EditPatientDescriptor;","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FamilyCondition;","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FoodPreference;","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.Hobby;","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2024-03-08"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.PatientHospitalId;","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.PreferredName;","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2024-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ID_DESC, PatientHospitalId.MESSAGE_CONSTRAINTS); // invalid id","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"choowengyan"},"content":"        // invalid preferred name","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PREFERRED_NAME_DESC, PreferredName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"choowengyan"},"content":"        // invalid food preference","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_FOOD_DESC, FoodPreference.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"choowengyan"},"content":"        // invalid family condition","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_FAMILY_DESC, FamilyCondition.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_HOBBY_DESC, Hobby.MESSAGE_CONSTRAINTS); // invalid hobby","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"NeoHW"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Patient} being edited,","lastModifiedDate":"2024-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_DEPRESSION + TAG_DESC_DIABETES + TAG_EMPTY,","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"choowengyan"},"content":"            Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_DEPRESSION + TAG_EMPTY + TAG_DESC_DIABETES,","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"choowengyan"},"content":"            Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_DEPRESSION + TAG_DESC_DIABETES,","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"choowengyan"},"content":"            Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ID_DESC + INVALID_NAME_DESC + INVALID_PREFERRED_NAME_DESC","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"choowengyan"},"content":"            + VALID_FOOD_AMY + VALID_FAMILY_CONDITION_AMY + VALID_HOBBY_AMY, PatientHospitalId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"NeoHW"},"content":"        Index targetIndex \u003d INDEX_SECOND_PATIENT;","lastModifiedDate":"2024-03-09"},{"lineNumber":127,"author":{"gitId":"choowengyan"},"content":"        String userInput \u003d targetIndex.getOneBased() + ID_DESC_AMY + NAME_DESC_AMY + TAG_DESC_DEPRESSION","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"choowengyan"},"content":"            + PREFERRED_NAME_DESC_AMY + FOOD_DESC_AMY + FAMILY_DESC_AMY + HOBBY_DESC_AMY + TAG_DESC_DIABETES;","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"choowengyan"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder()","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"choowengyan"},"content":"            .withPatientHospitalId(VALID_ID_AMY).withName(VALID_NAME_AMY).withPreferredName(VALID_PREFERRED_NAME_AMY)","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"choowengyan"},"content":"            .withFoodPreferences(VALID_FOOD_AMY).withFamilyConditions(VALID_FAMILY_CONDITION_AMY)","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"choowengyan"},"content":"            .withHobbies(VALID_HOBBY_AMY).withTags(VALID_TAG_DIABETES, VALID_TAG_DEPRESSION).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"NeoHW"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-09"},{"lineNumber":142,"author":{"gitId":"choowengyan"},"content":"        String userInput \u003d targetIndex.getOneBased() + FAMILY_DESC_BOB + HOBBY_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"choowengyan"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder()","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"choowengyan"},"content":"            .withFamilyConditions(VALID_FAMILY_CONDITION_BOB)","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"choowengyan"},"content":"            .withHobbies(VALID_HOBBY_AMY).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"NeoHW"},"content":"        Index targetIndex \u003d INDEX_THIRD_PATIENT;","lastModifiedDate":"2024-03-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"SherisseTJW"},"content":"        EditPatientDescriptor descriptor \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":158,"author":{"gitId":"NeoHW"},"content":"            new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2024-03-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"choowengyan"},"content":"        // preferred name","lastModifiedDate":"2024-03-14"},{"lineNumber":163,"author":{"gitId":"choowengyan"},"content":"        userInput \u003d targetIndex.getOneBased() + PREFERRED_NAME_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":164,"author":{"gitId":"choowengyan"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withPreferredName(VALID_PREFERRED_NAME_AMY).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":165,"author":{"gitId":"choowengyan"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":166,"author":{"gitId":"choowengyan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":167,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":168,"author":{"gitId":"choowengyan"},"content":"        // food preference","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"choowengyan"},"content":"        userInput \u003d targetIndex.getOneBased() + FOOD_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":170,"author":{"gitId":"choowengyan"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withFoodPreferences(VALID_FOOD_AMY).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"choowengyan"},"content":"        // family condition","lastModifiedDate":"2024-03-14"},{"lineNumber":175,"author":{"gitId":"choowengyan"},"content":"        userInput \u003d targetIndex.getOneBased() + FAMILY_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":176,"author":{"gitId":"choowengyan"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withFamilyConditions(VALID_FAMILY_CONDITION_AMY).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"choowengyan"},"content":"        // hobby","lastModifiedDate":"2024-03-14"},{"lineNumber":181,"author":{"gitId":"choowengyan"},"content":"        userInput \u003d targetIndex.getOneBased() + HOBBY_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":182,"author":{"gitId":"choowengyan"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withHobbies(VALID_HOBBY_AMY).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"choowengyan"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_DEPRESSION;","lastModifiedDate":"2024-03-14"},{"lineNumber":188,"author":{"gitId":"choowengyan"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withTags(VALID_TAG_DEPRESSION).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":199,"author":{"gitId":"NeoHW"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-09"},{"lineNumber":200,"author":{"gitId":"choowengyan"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_ID_DESC + ID_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":203,"author":{"gitId":"choowengyan"},"content":"        userInput \u003d targetIndex.getOneBased() + ID_DESC_BOB + INVALID_ID_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":206,"author":{"gitId":"choowengyan"},"content":"        userInput \u003d targetIndex.getOneBased() + ID_DESC_AMY + TAG_DESC_DIABETES + ID_DESC_AMY + TAG_DESC_DIABETES","lastModifiedDate":"2024-03-14"},{"lineNumber":207,"author":{"gitId":"choowengyan"},"content":"            + ID_DESC_BOB + TAG_DESC_DEPRESSION + TAG_DESC_DIABETES;","lastModifiedDate":"2024-03-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":210,"author":{"gitId":"choowengyan"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_ID_DESC + INVALID_ID_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":214,"author":{"gitId":"choowengyan"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2024-04-04"},{"lineNumber":215,"author":{"gitId":"choowengyan"},"content":"        String validExpectedPatientString \u003d ID_DESC_BOB + NAME_DESC_BOB + PREFERRED_NAME_DESC_BOB + FOOD_DESC_BOB","lastModifiedDate":"2024-04-04"},{"lineNumber":216,"author":{"gitId":"choowengyan"},"content":"            + FAMILY_DESC_BOB + HOBBY_DESC_BOB + TAG_DESC_DIABETES;","lastModifiedDate":"2024-04-04"},{"lineNumber":217,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":218,"author":{"gitId":"choowengyan"},"content":"        // multiple patient hospital ID","lastModifiedDate":"2024-04-04"},{"lineNumber":219,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, ID_DESC_AMY + validExpectedPatientString,","lastModifiedDate":"2024-04-04"},{"lineNumber":220,"author":{"gitId":"choowengyan"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PID));","lastModifiedDate":"2024-04-04"},{"lineNumber":221,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":222,"author":{"gitId":"choowengyan"},"content":"        // multiple names","lastModifiedDate":"2024-04-04"},{"lineNumber":223,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPatientString,","lastModifiedDate":"2024-04-04"},{"lineNumber":224,"author":{"gitId":"choowengyan"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-04-04"},{"lineNumber":225,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":226,"author":{"gitId":"choowengyan"},"content":"        // multiple preferred names","lastModifiedDate":"2024-04-04"},{"lineNumber":227,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, PREFERRED_NAME_DESC_AMY + validExpectedPatientString,","lastModifiedDate":"2024-04-04"},{"lineNumber":228,"author":{"gitId":"choowengyan"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PREFERRED_NAME));","lastModifiedDate":"2024-04-04"},{"lineNumber":229,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":230,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":231,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":232,"author":{"gitId":"choowengyan"},"content":"    public void parse_duplicatePrefixes_success() {","lastModifiedDate":"2024-04-04"},{"lineNumber":233,"author":{"gitId":"choowengyan"},"content":"        // Duplicate food preference input","lastModifiedDate":"2024-04-04"},{"lineNumber":234,"author":{"gitId":"choowengyan"},"content":"        String userInput \u003d \"1 \" + FOOD_DESC_AMY + FOOD_DESC_BOB;","lastModifiedDate":"2024-04-04"},{"lineNumber":235,"author":{"gitId":"choowengyan"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder()","lastModifiedDate":"2024-04-04"},{"lineNumber":236,"author":{"gitId":"choowengyan"},"content":"            .withFoodPreferences(VALID_FOOD_AMY, VALID_FOOD_BOB)","lastModifiedDate":"2024-04-04"},{"lineNumber":237,"author":{"gitId":"choowengyan"},"content":"            .build();","lastModifiedDate":"2024-04-04"},{"lineNumber":238,"author":{"gitId":"choowengyan"},"content":"        EditCommand expectedCommand \u003d new EditCommand(INDEX_FIRST_PATIENT, descriptor);","lastModifiedDate":"2024-04-04"},{"lineNumber":239,"author":{"gitId":"choowengyan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":240,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":241,"author":{"gitId":"choowengyan"},"content":"        // Duplicate family condition input","lastModifiedDate":"2024-04-04"},{"lineNumber":242,"author":{"gitId":"choowengyan"},"content":"        userInput \u003d \"1 \" + FAMILY_DESC_AMY + FAMILY_DESC_BOB;","lastModifiedDate":"2024-04-04"},{"lineNumber":243,"author":{"gitId":"choowengyan"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder()","lastModifiedDate":"2024-04-04"},{"lineNumber":244,"author":{"gitId":"choowengyan"},"content":"            .withFamilyConditions(VALID_FAMILY_CONDITION_AMY, VALID_FAMILY_CONDITION_BOB)","lastModifiedDate":"2024-04-04"},{"lineNumber":245,"author":{"gitId":"choowengyan"},"content":"            .build();","lastModifiedDate":"2024-04-04"},{"lineNumber":246,"author":{"gitId":"choowengyan"},"content":"        expectedCommand \u003d new EditCommand(INDEX_FIRST_PATIENT, descriptor);","lastModifiedDate":"2024-04-04"},{"lineNumber":247,"author":{"gitId":"choowengyan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":248,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":249,"author":{"gitId":"choowengyan"},"content":"        // Duplicate hobby input","lastModifiedDate":"2024-04-04"},{"lineNumber":250,"author":{"gitId":"choowengyan"},"content":"        userInput \u003d \"1 \" + HOBBY_DESC_AMY + HOBBY_DESC_BOB;","lastModifiedDate":"2024-04-04"},{"lineNumber":251,"author":{"gitId":"choowengyan"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder()","lastModifiedDate":"2024-04-04"},{"lineNumber":252,"author":{"gitId":"choowengyan"},"content":"            .withHobbies(VALID_HOBBY_AMY, VALID_HOBBY_BOB)","lastModifiedDate":"2024-04-04"},{"lineNumber":253,"author":{"gitId":"choowengyan"},"content":"            .build();","lastModifiedDate":"2024-04-04"},{"lineNumber":254,"author":{"gitId":"choowengyan"},"content":"        expectedCommand \u003d new EditCommand(INDEX_FIRST_PATIENT, descriptor);","lastModifiedDate":"2024-04-04"},{"lineNumber":255,"author":{"gitId":"choowengyan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":256,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":257,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":258,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":259,"author":{"gitId":"choowengyan"},"content":"    public void parse_duplicatePrefixes_failure() {","lastModifiedDate":"2024-04-04"},{"lineNumber":260,"author":{"gitId":"choowengyan"},"content":"        // Duplicate patient hospital ID","lastModifiedDate":"2024-04-04"},{"lineNumber":261,"author":{"gitId":"choowengyan"},"content":"        String userInput \u003d \"1 \" + ID_DESC_AMY + ID_DESC_BOB;","lastModifiedDate":"2024-04-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2024-04-04"},{"lineNumber":263,"author":{"gitId":"choowengyan"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PID));","lastModifiedDate":"2024-04-04"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":265,"author":{"gitId":"choowengyan"},"content":"        // Duplicate names","lastModifiedDate":"2024-04-04"},{"lineNumber":266,"author":{"gitId":"choowengyan"},"content":"        userInput \u003d \"1 \" + NAME_DESC_AMY + NAME_DESC_BOB;","lastModifiedDate":"2024-04-04"},{"lineNumber":267,"author":{"gitId":"choowengyan"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2024-04-04"},{"lineNumber":268,"author":{"gitId":"choowengyan"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-04-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":270,"author":{"gitId":"choowengyan"},"content":"        // Duplicate preferred names","lastModifiedDate":"2024-04-04"},{"lineNumber":271,"author":{"gitId":"choowengyan"},"content":"        userInput \u003d \"1 \" + PREFERRED_NAME_DESC_AMY + PREFERRED_NAME_DESC_BOB;","lastModifiedDate":"2024-04-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2024-04-04"},{"lineNumber":273,"author":{"gitId":"choowengyan"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PREFERRED_NAME));","lastModifiedDate":"2024-04-04"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":276,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":277,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":280,"author":{"gitId":"NeoHW"},"content":"        Index targetIndex \u003d INDEX_THIRD_PATIENT;","lastModifiedDate":"2024-03-09"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":283,"author":{"gitId":"SherisseTJW"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withTags().build();","lastModifiedDate":"2024-03-13"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"SherisseTJW":3,"choowengyan":143,"NeoHW":12,"-":130}},{"path":"src/test/java/seedu/address/logic/parser/EditEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"guohuang88"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_DATE;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"guohuang88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"guohuang88"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"guohuang88"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"guohuang88"},"content":"import seedu.address.model.patient.Event;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"guohuang88"},"content":"public class EditEventCommandParserTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"guohuang88"},"content":"    private final EditEventCommandParser editEventCommandParser \u003d new EditEventCommandParser();","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"guohuang88"},"content":"    private final Event validDate \u003d new Event(VALID_EVENT_NAME, VALID_EVENT_DATE);","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"guohuang88"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"guohuang88"},"content":"        assertThrows(ParseException.class, () -\u003e editEventCommandParser.parse(\"\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"guohuang88"},"content":"        assertThrows(ParseException.class, () -\u003e editEventCommandParser.parse(\"1\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"guohuang88"},"content":"        assertThrows(ParseException.class, () -\u003e editEventCommandParser.parse(VALID_EVENT_NAME));","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"guohuang88"},"content":"        assertThrows(ParseException.class, () -\u003e editEventCommandParser.parse(VALID_EVENT_DATE));","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"guohuang88"},"content":"        assertThrows(ParseException.class, () -\u003e editEventCommandParser.parse(\"1\"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"guohuang88"},"content":"                + PREFIX_EVENT + \"1\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"guohuang88"},"content":"        assertThrows(ParseException.class, () -\u003e editEventCommandParser.parse(\"1 \"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"guohuang88"},"content":"                + PREFIX_EVENT + \" 1 \" + PREFIX_NAME + VALID_EVENT_NAME));","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"guohuang88"},"content":"        assertThrows(ParseException.class, () -\u003e editEventCommandParser.parse(\"-1 \"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"guohuang88"},"content":"                + PREFIX_EVENT + \" 1 \" + PREFIX_NAME + VALID_EVENT_NAME + \" \" + PREFIX_DATETIME","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"guohuang88"},"content":"                + VALID_EVENT_DATE));","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"guohuang88"},"content":"        assertThrows(ParseException.class, () -\u003e editEventCommandParser.parse(\"1 \"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"guohuang88"},"content":"                + PREFIX_EVENT + \" -1 \" + PREFIX_NAME + VALID_EVENT_NAME + \" \" + PREFIX_DATETIME","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"guohuang88"},"content":"                + VALID_EVENT_DATE));","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"guohuang88"},"content":"        assertThrows(ParseException.class, () -\u003e editEventCommandParser.parse(","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"guohuang88"},"content":"                \"1 e/1 n/Valid d/12-12-2024 t/Something\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"guohuang88"},"content":"        assertThrows(ParseException.class, () -\u003e editEventCommandParser.parse(","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"guohuang88"},"content":"                \"1 e/1 n/Valid c/Test d/12-12-2024\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"guohuang88"},"content":"        assertThrows(ParseException.class, () -\u003e editEventCommandParser.parse(","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"guohuang88"},"content":"                \"1 e/1 p/Another n/Valid d/12-12-2024\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"guohuang88"},"content":"        assertThrows(ParseException.class, () -\u003e editEventCommandParser.parse(","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"guohuang88"},"content":"                \"1 p/test e/1 n/Valid d/12-12-2024\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"guohuang88"},"content":"    public void parse_validArgs_returnEditEventCommand() {","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"guohuang88"},"content":"        String userInput;","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"guohuang88"},"content":"        EditEventCommand editEventCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"guohuang88"},"content":"        userInput \u003d INDEX_FIRST_PATIENT.getOneBased() + \" e/\" + INDEX_FIRST_EVENT.getOneBased() + \" n/\"","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"guohuang88"},"content":"                + VALID_EVENT_NAME + \" d/\" + VALID_EVENT_DATE;","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"guohuang88"},"content":"        editEventCommand \u003d new EditEventCommand(INDEX_FIRST_PATIENT, INDEX_FIRST_EVENT, validDate);","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"guohuang88"},"content":"        assertParseSuccess(editEventCommandParser, userInput, editEventCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"guohuang88"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"guohuang88":59}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"NeoHW":1,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/FindTagsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"guohuang88"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"guohuang88"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"guohuang88"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"guohuang88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"guohuang88"},"content":"import seedu.address.logic.commands.FindTagsCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"guohuang88"},"content":"import seedu.address.model.patient.TagContainsKeywordsPredicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"guohuang88"},"content":"public class FindTagsCommandParserTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"guohuang88"},"content":"    private FindTagsCommandParser parser \u003d new FindTagsCommandParser();","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"guohuang88"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"guohuang88"},"content":"        assertParseFailure(parser, \" \",","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"guohuang88"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTagsCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"guohuang88"},"content":"    public void parse_validArgs_returnsFindTagsCommand() {","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"guohuang88"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"guohuang88"},"content":"        FindTagsCommand expectedFindTagsCommand \u003d","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"guohuang88"},"content":"                new FindTagsCommand(new TagContainsKeywordsPredicate(Arrays.asList(\"depression\", \"diabetes\")));","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"guohuang88"},"content":"        assertParseSuccess(parser, \"depression diabetes\", expectedFindTagsCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"guohuang88"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"guohuang88"},"content":"        assertParseSuccess(parser, \" \\n depression \\n \\t diabetes  \\t\", expectedFindTagsCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"guohuang88"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"guohuang88":34}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2024-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FamilyCondition;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FoodPreference;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.Hobby;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.PatientHospitalId;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.PreferredName;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"    private static final String INVALID_ID \u003d \"a3\";","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"    private static final String INVALID_NAME \u003d \"R@chel Lim Zhao\";","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"    private static final String INVALID_PREFERRED_NAME \u003d \"R@chel\";","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"    private static final String INVALID_FOOD_PREFERENCE \u003d \" \";","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"    private static final String INVALID_FAMILY_CONDITION \u003d \" \";","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"    private static final String INVALID_HOBBY \u003d \" \";","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"    private static final String VALID_ID \u003d \"12344\";","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"    private static final String VALID_NAME \u003d \"Rachel Lim Zhao\";","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"    private static final String VALID_PREFERRED_NAME \u003d \"Rachel\";","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"    private static final String VALID_FOOD_PREFERENCE \u003d \"Hor Fun\";","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"    private static final String VALID_FAMILY_CONDITION \u003d \"Facing financial difficulty\";","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"    private static final String VALID_HOBBY \u003d \"Singing\";","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"    private static final String VALID_TAG_1 \u003d \"diabetes\";","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"    private static final String VALID_TAG_2 \u003d \"high cholesterol\";","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"        assertEquals(INDEX_FIRST_PATIENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2024-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"        assertEquals(INDEX_FIRST_PATIENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2024-03-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"    public void parsePatientHospitalId_invalidInput_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"102 a\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"    public void parsePatientHospitalId_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePatientHospitalId((String) null));","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"    public void parsePatientHospitalId_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"choowengyan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePatientHospitalId(INVALID_ID));","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"choowengyan"},"content":"    public void parseHospitalPatientId_validValueWithoutWhitespace_returnsId() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"choowengyan"},"content":"        PatientHospitalId expectedId \u003d new PatientHospitalId(VALID_ID);","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"choowengyan"},"content":"        assertEquals(expectedId, ParserUtil.parsePatientHospitalId(VALID_ID));","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"choowengyan"},"content":"    public void parseHospitalPatientId_validValueWithWhitespace_returnsTrimmedId() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"choowengyan"},"content":"        String idWithWhitespace \u003d WHITESPACE + VALID_ID + WHITESPACE;","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"choowengyan"},"content":"        PatientHospitalId expectedId \u003d new PatientHospitalId(VALID_ID);","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"choowengyan"},"content":"        assertEquals(expectedId, ParserUtil.parsePatientHospitalId(idWithWhitespace));","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"choowengyan"},"content":"    public void parsePreferredName_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"choowengyan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePreferredName((String) null));","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"choowengyan"},"content":"    public void parsePreferredName_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"choowengyan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePreferredName(INVALID_PREFERRED_NAME));","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"choowengyan"},"content":"    public void parsePreferredName_validValueWithoutWhitespace_returnsPreferredName() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"choowengyan"},"content":"        PreferredName expectedPreferredName \u003d new PreferredName(VALID_PREFERRED_NAME);","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"choowengyan"},"content":"        assertEquals(expectedPreferredName, ParserUtil.parsePreferredName(VALID_PREFERRED_NAME));","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"choowengyan"},"content":"    public void parsePreferredName_validValueWithWhitespace_returnsTrimmedPreferredName() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"choowengyan"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_PREFERRED_NAME + WHITESPACE;","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"choowengyan"},"content":"        PreferredName expectedPreferredName \u003d new PreferredName(VALID_PREFERRED_NAME);","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"choowengyan"},"content":"        assertEquals(expectedPreferredName, ParserUtil.parsePreferredName(nameWithWhitespace));","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"choowengyan"},"content":"    public void parseFoodPreference_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"choowengyan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseFoodPreferences(null));","lastModifiedDate":"2024-04-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"choowengyan"},"content":"    public void parseFoodPreference_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"choowengyan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseFoodPreference(INVALID_FOOD_PREFERENCE));","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"choowengyan"},"content":"    public void parseFoodPreference_validValueWithoutWhitespace_returnsFoodPreference() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":151,"author":{"gitId":"choowengyan"},"content":"        FoodPreference expectedFoodPreference \u003d new FoodPreference(VALID_FOOD_PREFERENCE);","lastModifiedDate":"2024-03-14"},{"lineNumber":152,"author":{"gitId":"choowengyan"},"content":"        assertEquals(expectedFoodPreference, ParserUtil.parseFoodPreference(VALID_FOOD_PREFERENCE));","lastModifiedDate":"2024-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"choowengyan"},"content":"    public void parseFoodPreference_validValueWithWhitespace_returnsTrimmedFoodPreference() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"choowengyan"},"content":"        String foodPreferenceWithWhitespace \u003d WHITESPACE + VALID_FOOD_PREFERENCE + WHITESPACE;","lastModifiedDate":"2024-03-14"},{"lineNumber":158,"author":{"gitId":"choowengyan"},"content":"        FoodPreference expectedFoodPreference \u003d new FoodPreference(VALID_FOOD_PREFERENCE);","lastModifiedDate":"2024-03-14"},{"lineNumber":159,"author":{"gitId":"choowengyan"},"content":"        assertEquals(expectedFoodPreference, ParserUtil.parseFoodPreference(foodPreferenceWithWhitespace));","lastModifiedDate":"2024-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"choowengyan"},"content":"    public void parseFamilyCondition_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":164,"author":{"gitId":"choowengyan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseFamilyConditions(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"choowengyan"},"content":"    public void parseFamilyCondition_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"choowengyan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseFamilyCondition(INVALID_FAMILY_CONDITION));","lastModifiedDate":"2024-03-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"choowengyan"},"content":"    public void parseFamilyCondition_validValueWithoutWhitespace_returnsFamilyCondition() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"choowengyan"},"content":"        FamilyCondition expectedFamilyCondition \u003d new FamilyCondition(VALID_FAMILY_CONDITION);","lastModifiedDate":"2024-03-14"},{"lineNumber":175,"author":{"gitId":"choowengyan"},"content":"        assertEquals(expectedFamilyCondition, ParserUtil.parseFamilyCondition(VALID_FAMILY_CONDITION));","lastModifiedDate":"2024-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"choowengyan"},"content":"    public void parseFamilyCondition_validValueWithWhitespace_returnsTrimmedFamilyCondition() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":180,"author":{"gitId":"choowengyan"},"content":"        String familyConditionWithWhitespace \u003d WHITESPACE + VALID_FAMILY_CONDITION + WHITESPACE;","lastModifiedDate":"2024-03-14"},{"lineNumber":181,"author":{"gitId":"choowengyan"},"content":"        FamilyCondition expectedFamilyCondition \u003d new FamilyCondition(VALID_FAMILY_CONDITION);","lastModifiedDate":"2024-03-14"},{"lineNumber":182,"author":{"gitId":"choowengyan"},"content":"        assertEquals(expectedFamilyCondition, ParserUtil.parseFamilyCondition(familyConditionWithWhitespace));","lastModifiedDate":"2024-03-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"choowengyan"},"content":"    public void parseHobby_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":187,"author":{"gitId":"choowengyan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseHobby((String) null));","lastModifiedDate":"2024-03-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"choowengyan"},"content":"    public void parseHobby_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":192,"author":{"gitId":"choowengyan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseHobby(INVALID_HOBBY));","lastModifiedDate":"2024-03-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"choowengyan"},"content":"    public void parseHobby_validValueWithoutWhitespace_returnsHobby() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":197,"author":{"gitId":"choowengyan"},"content":"        Hobby expectedHobby \u003d new Hobby(VALID_HOBBY);","lastModifiedDate":"2024-03-14"},{"lineNumber":198,"author":{"gitId":"choowengyan"},"content":"        assertEquals(expectedHobby, ParserUtil.parseHobby(VALID_HOBBY));","lastModifiedDate":"2024-03-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"choowengyan"},"content":"    public void parseHobby_validValueWithWhitespace_returnsTrimmedHobby() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":203,"author":{"gitId":"choowengyan"},"content":"        String hobbyWithWhitespace \u003d WHITESPACE + VALID_HOBBY + WHITESPACE;","lastModifiedDate":"2024-03-14"},{"lineNumber":204,"author":{"gitId":"choowengyan"},"content":"        Hobby expectedHobby \u003d new Hobby(VALID_HOBBY);","lastModifiedDate":"2024-03-14"},{"lineNumber":205,"author":{"gitId":"choowengyan"},"content":"        assertEquals(expectedHobby, ParserUtil.parseHobby(hobbyWithWhitespace));","lastModifiedDate":"2024-03-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"choowengyan":100,"NeoHW":5,"-":148}},{"path":"src/test/java/seedu/address/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhiWei1010"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"ZhiWei1010"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"ZhiWei1010"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.model.patient.comparators.NameComparator.NAME_COMPARATOR;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"ZhiWei1010"},"content":"import static seedu.address.model.patient.comparators.PreferredNameComparator.PREFERRED_NAME_COMPARATOR;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"ZhiWei1010"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"ZhiWei1010"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"ZhiWei1010"},"content":"public class SortCommandParserTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"ZhiWei1010"},"content":"    private final SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"ZhiWei1010"},"content":"    public void parse_invalidSortAttributeOfLengthOne_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"ZhiWei1010"},"content":"        // Invalid sort attribute: \"c\" instead of \"\", \"n\", \"p\"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"ZhiWei1010"},"content":"        String userInput \u003d \"c\";","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"ZhiWei1010"},"content":"    public void parse_invalidAttributesOfLengthMoreThanOne_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"ZhiWei1010"},"content":"        // Invalid sort attribute: \"cappy\" instead of \"\", \"n\", \"p\"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"ZhiWei1010"},"content":"        String userInput \u003d \"cappy\";","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"ZhiWei1010"},"content":"        // Invalid sort attribute: \"c a\" instead of \"\", \"n\", \"p\"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"ZhiWei1010"},"content":"        String userInputWithSpace \u003d \"c a\";","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInputWithSpace));","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"ZhiWei1010"},"content":"    public void parse_oneInvalidAndOneValidSortAttribute_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"ZhiWei1010"},"content":"        // Invalid sort attribute mixed with valid sort Attribute: \"ns\" instead of \"\", \"n\", \"p\"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"ZhiWei1010"},"content":"        String userInput \u003d \"ns\";","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"ZhiWei1010"},"content":"        // Invalid sort attribute mixed with valid sort Attribute: \"n s\" instead of \"\", \"n\", \"p\"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"ZhiWei1010"},"content":"        String userInputWithSpace \u003d \"n s\";","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInputWithSpace));","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"ZhiWei1010"},"content":"    public void parse_multipleInvalidAndOneValidSortAttribute_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"ZhiWei1010"},"content":"        // Invalid sort attribute mixed with valid sort Attribute: \"nsa\" instead of \"\", \"n\", \"p\"","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"ZhiWei1010"},"content":"        String userInput \u003d \"nsa\";","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"ZhiWei1010"},"content":"        // Invalid sort attribute mixed with valid sort Attribute: \"n sa\" instead of \"\", \"n\", \"p\"","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"ZhiWei1010"},"content":"        String userInputWithSpace \u003d \"n sa\";","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInputWithSpace));","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"ZhiWei1010"},"content":"    public void parse_multipleInvalidAndMultipleValidSortAttribute_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"ZhiWei1010"},"content":"        // Invalid sort attribute mixed with valid sort Attribute: \"nsp\" instead of \"\", \"n\", \"p\"","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"ZhiWei1010"},"content":"        String userInput \u003d \"nsp\";","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"ZhiWei1010"},"content":"        // Invalid sort attribute mixed with valid sort Attribute: \"nsp\" instead of \"\", \"n\", \"p\"","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"ZhiWei1010"},"content":"        String userInputWithSpace \u003d \"n s p\";","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInputWithSpace));","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"ZhiWei1010"},"content":"    public void parse_validArgs_returnsSortCommand() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"ZhiWei1010"},"content":"        // Test for arg: n","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"ZhiWei1010"},"content":"        String userInput \u003d \"n\";","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"ZhiWei1010"},"content":"        SortCommand expectedCommand \u003d new SortCommand(NAME_COMPARATOR);","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"ZhiWei1010"},"content":"        SortCommand command \u003d parser.parse(userInput);","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"ZhiWei1010"},"content":"        assertEquals(expectedCommand, command);","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"ZhiWei1010"},"content":"        // Test for arg: \"\"","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"ZhiWei1010"},"content":"        userInput \u003d \"\";","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"ZhiWei1010"},"content":"        expectedCommand \u003d new SortCommand(NAME_COMPARATOR);","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"ZhiWei1010"},"content":"        command \u003d parser.parse(userInput);","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"ZhiWei1010"},"content":"        assertEquals(expectedCommand, command);","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"ZhiWei1010"},"content":"        // Test for arg: p","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"ZhiWei1010"},"content":"        userInput \u003d \"p\";","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"ZhiWei1010"},"content":"        expectedCommand \u003d new SortCommand(PREFERRED_NAME_COMPARATOR);","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"ZhiWei1010"},"content":"        command \u003d parser.parse(userInput);","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"ZhiWei1010"},"content":"        assertEquals(expectedCommand, command);","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"ZhiWei1010"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"ZhiWei1010"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"ZhiWei1010"},"content":"        // Invalid sort Attribute of length 1","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"ZhiWei1010"},"content":"        // Invalid sort Attribute of length 2","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"as\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"ZhiWei1010"},"content":"        // Invalid sort Attribute of length 1 with space","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1 \"));","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" 1\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1   \"));","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"  1 \"));","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"ZhiWei1010"},"content":"        // Invalid sort Attribute of length more than 1 with spaces","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"asd  \"));","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"a s d  \"));","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"  a sd  \"));","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"ZhiWei1010"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"ZhiWei1010"},"content":"        // Mix of Valid and Invalid sort attributes","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"pn\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"np\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"apn\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"npa\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"ap n \"));","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"n ap\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"ZhiWei1010"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"n a p\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"ZhiWei1010"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"ZhiWei1010"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"ZhiWei1010":121}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DEPRESSION;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2024-03-09"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2024-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.exceptions.DuplicatePatientException;","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPatientList());","lastModifiedDate":"2024-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"    public void resetData_withDuplicatePatient_throwsDuplicatePatientException() {","lastModifiedDate":"2024-03-09"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"        // Two patients with the same identity fields","lastModifiedDate":"2024-03-08"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withPatientHospitalId(VALID_ID_BOB)","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"            .withTags(VALID_TAG_DEPRESSION).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"        List\u003cPatient\u003e newPatients \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2024-03-08"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPatients);","lastModifiedDate":"2024-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"        assertThrows(DuplicatePatientException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2024-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"    public void hasPatient_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2024-03-09"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPatient(null));","lastModifiedDate":"2024-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"        assertFalse(addressBook.hasPatient(ALICE));","lastModifiedDate":"2024-03-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"        addressBook.addPatient(ALICE);","lastModifiedDate":"2024-03-09"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"        assertTrue(addressBook.hasPatient(ALICE));","lastModifiedDate":"2024-03-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"        addressBook.addPatient(ALICE);","lastModifiedDate":"2024-03-09"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withPatientHospitalId(VALID_ID_BOB)","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"choowengyan"},"content":"            .withTags(VALID_TAG_DEPRESSION).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"        assertTrue(addressBook.hasPatient(editedAlice));","lastModifiedDate":"2024-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"NeoHW"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPatientList().remove(0));","lastModifiedDate":"2024-03-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"NeoHW"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{patients\u003d\" + addressBook.getPatientList() + \"}\";","lastModifiedDate":"2024-03-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"NeoHW"},"content":"     * A stub ReadOnlyAddressBook whose patients list can violate interface constraints.","lastModifiedDate":"2024-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"NeoHW"},"content":"        private final ObservableList\u003cPatient\u003e patients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"NeoHW"},"content":"        AddressBookStub(Collection\u003cPatient\u003e patients) {","lastModifiedDate":"2024-03-08"},{"lineNumber":99,"author":{"gitId":"NeoHW"},"content":"            this.patients.setAll(patients);","lastModifiedDate":"2024-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"NeoHW"},"content":"        public ObservableList\u003cPatient\u003e getPatientList() {","lastModifiedDate":"2024-03-09"},{"lineNumber":104,"author":{"gitId":"NeoHW"},"content":"            return patients;","lastModifiedDate":"2024-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"choowengyan":6,"NeoHW":26,"-":76}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2024-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2024-03-09"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.BENSON;","lastModifiedDate":"2024-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"    public void hasPatient_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2024-03-09"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPatient(null));","lastModifiedDate":"2024-03-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"    public void hasPatient_patientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2024-03-09"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"        assertFalse(modelManager.hasPatient(ALICE));","lastModifiedDate":"2024-03-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"NeoHW"},"content":"    public void hasPatient_patientInAddressBook_returnsTrue() {","lastModifiedDate":"2024-03-09"},{"lineNumber":87,"author":{"gitId":"NeoHW"},"content":"        modelManager.addPatient(ALICE);","lastModifiedDate":"2024-03-09"},{"lineNumber":88,"author":{"gitId":"NeoHW"},"content":"        assertTrue(modelManager.hasPatient(ALICE));","lastModifiedDate":"2024-03-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"NeoHW"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPatientList().remove(0));","lastModifiedDate":"2024-03-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"NeoHW"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPatient(ALICE).withPatient(BENSON).build();","lastModifiedDate":"2024-03-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"NeoHW"},"content":"        modelManager.updateFilteredPatientList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2024-03-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"NeoHW"},"content":"        modelManager.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2024-03-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"NeoHW":15,"-":117}},{"path":"src/test/java/seedu/address/model/patient/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"public class EventTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Event(null, null));","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Event(null, \"01-01-2022\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Event(\"Family Visit\", null));","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"    public void constructor_invalidEventName_throwsIllegalArgumentException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(\"\", \"01-01-2022\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(\"              \", \"01-01-2022\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(\"Family Visit\", \"something\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(\"Family Visit\", \"1-1-2022\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(\"Family Visit\", \"01-01-22\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"    public void constructor_invalidTime_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"        String validDate \u003d \"01-01-2022\";","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(\"Family Visit\",","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"                validDate + \", HH:mm - HH:mm\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(\"Family Visit\",","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"                validDate + \"21-02-2022, 99:88 - 99:99\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(\"Family Visit\",","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"                validDate + \"21-02-2022, 0000 - 2359\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(\"Family Visit\",","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"                validDate + \"21-02-2022, 06:00 - 00:00\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(\"Family Visit\",","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"                validDate + \"21-02-2022, 01:00 - 00:59\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(\"Family Visit\",","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"                validDate + \"21-02-2022, 01:00\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(\"Family Visit\",","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"                validDate + \"21-02-2022, 01:00 - 02:00 - 03:00\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(\"Family Visit\",","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"SherisseTJW"},"content":"                validDate + \"21-02-2022, 01:00, 02:00 - 03:00\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"SherisseTJW"},"content":"    public void isValidEvent() {","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(NullPointerException.class, () -\u003e Event.isValidEvent(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(Event.isValidEvent(\"\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(Event.isValidEvent(\"   \"));","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(Event.isValidEvent(\"01-01-2022, HH:mm - HH:mm\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(Event.isValidEvent(\"01-01-2022, 99:99 - 99:99\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(Event.isValidEvent(\"01-01-2022, 12:12 - 99:99\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(Event.isValidEvent(\"01-01-2022, 12:12 to 12:12\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(Event.isValidEvent(\"01-01-2022       \"));","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(Event.isValidEvent(\"       01-01-2022\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(Event.isValidEvent(\"01-01-2022\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(Event.isValidEvent(\"21-02-2022, 01:00 - 19:00\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(Event.isValidEvent(\"21-02-2022, 00:00 - 23:59\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(Event.isValidEvent(\"01-01-2022, 12:12 - 12:12        \"));","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(Event.isValidEvent(\"          01-01-2022, 12:12 - 12:12\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(Event.isValidEvent(\"21-02-2022, 00:00 - 00:00\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"SherisseTJW"},"content":"    public void isPastEvent() {","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(new Event(\"Family Visit\", \"01-01-1999, 12:12 - 19:12\").isPastEvent());","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(new Event(\"Family Visit\", \"01-01-2022, 12:12 - 19:12\").isPastEvent());","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(new Event(\"Family Visit\", \"01-01-2024, 12:12 - 19:12\").isPastEvent());","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(new Event(\"Family Visit\", \"01-01-9999, 12:12 - 19:12\").isPastEvent());","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"SherisseTJW"},"content":"    public void compareTo() {","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"SherisseTJW"},"content":"        Event earlierEvent \u003d new Event(\"Family Visit\", \"01-01-2022, 12:12 - 12:12\");","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"SherisseTJW"},"content":"        Event nullTimeEvent \u003d new Event(\"Family Visit\", \"01-01-2022\");","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"SherisseTJW"},"content":"        Event laterDateEvent \u003d new Event(\"Family Visit\", \"02-01-2022, 12:12 - 12:12\");","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"SherisseTJW"},"content":"        Event laterMonthEvent \u003d new Event(\"Family Visit\", \"01-02-2022, 12:12 - 12:12\");","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"SherisseTJW"},"content":"        Event laterYearEvent \u003d new Event(\"Family Visit\", \"01-01-2023, 12:12 - 12:12\");","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"SherisseTJW"},"content":"        Event laterStartTimeEvent \u003d new Event(\"Family Visit\", \"01-01-2022, 13:12 - 13:12\");","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"SherisseTJW"},"content":"        Event laterEndTimeEvent \u003d new Event(\"Family Visit\", \"01-01-2022, 12:12 - 12:13\");","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"SherisseTJW"},"content":"        Event laterNameEvent \u003d new Event(\"Z\", \"01-01-2022, 12:12 - 12:12\");","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(earlierEvent.compareTo(nullTimeEvent) \u003e 0);","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(nullTimeEvent.compareTo(earlierEvent) \u003c 0);","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(earlierEvent.compareTo(laterDateEvent) \u003c 0);","lastModifiedDate":"2024-03-23"},{"lineNumber":97,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(laterDateEvent.compareTo(earlierEvent) \u003e 0);","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":99,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(earlierEvent.compareTo(laterMonthEvent) \u003c 0);","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(laterMonthEvent.compareTo(earlierEvent) \u003e 0);","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(earlierEvent.compareTo(laterYearEvent) \u003c 0);","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(laterYearEvent.compareTo(earlierEvent) \u003e 0);","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":105,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(earlierEvent.compareTo(laterStartTimeEvent) \u003c 0);","lastModifiedDate":"2024-03-23"},{"lineNumber":106,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(laterStartTimeEvent.compareTo(earlierEvent) \u003e 0);","lastModifiedDate":"2024-03-23"},{"lineNumber":107,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":108,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(earlierEvent.compareTo(laterEndTimeEvent) \u003c 0);","lastModifiedDate":"2024-03-23"},{"lineNumber":109,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(laterEndTimeEvent.compareTo(earlierEvent) \u003e 0);","lastModifiedDate":"2024-03-23"},{"lineNumber":110,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":111,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(earlierEvent.compareTo(laterNameEvent) \u003c 0);","lastModifiedDate":"2024-03-23"},{"lineNumber":112,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(laterNameEvent.compareTo(earlierEvent) \u003e 0);","lastModifiedDate":"2024-03-23"},{"lineNumber":113,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":114,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":115,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"SherisseTJW"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"SherisseTJW"},"content":"        Event date \u003d new Event(\"Family Visit\", \"01-01-2022, 12:12 - 12:12\");","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(date.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(date.equals(\"Something\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(date.equals(10));","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(date.equals(new Event(\"Family Visit\", \"02-01-2022, 12:12 - 12:12\")));","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(date.equals(new Event(\"Family Visit\", \"01-02-2022, 12:12 - 12:12\")));","lastModifiedDate":"2024-04-04"},{"lineNumber":124,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(date.equals(new Event(\"Family Visit\", \"01-02-2023, 12:12 - 12:12\")));","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(date.equals(new Event(\"Family Visit\", \"01-01-2022, 12:11 - 12:12\")));","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"SherisseTJW"},"content":"        assertFalse(date.equals(new Event(\"Family Visit\", \"01-01-2022, 11:12 - 12:12\")));","lastModifiedDate":"2024-04-04"},{"lineNumber":127,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(date.equals(date));","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(date.equals(new Event(\"Family Visit\", \"01-01-2022, 12:12 - 12:12\")));","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"SherisseTJW"},"content":"    public void dateToString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"SherisseTJW"},"content":"        Event date \u003d new Event(\"Family Visit\", \"01-01-2022\");","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(date.toString().equals(\"Family Visit (01-01-2022)\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"SherisseTJW"},"content":"    public void dateTimeToString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"SherisseTJW"},"content":"        Event date \u003d new Event(\"Family Visit\", \"01-01-2022, 12:12 - 12:12\");","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"SherisseTJW"},"content":"        assertTrue(date.toString().equals(\"Family Visit (01-01-2022, from 12:12 to 12:12)\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"SherisseTJW":145}},{"path":"src/test/java/seedu/address/model/patient/FamilyConditionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"public class FamilyConditionTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new FamilyCondition(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"    public void constructor_invalidFamilyCondition_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"        String invalidFamilyCondition \u003d \"\";","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new FamilyCondition(invalidFamilyCondition));","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"    public void isValidFamilyCondition() {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"        // null family condition","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"        assertThrows(NullPointerException.class, () -\u003e FamilyCondition.isValidFamilyCondition(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"        // invalid family condition","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"        assertFalse(FamilyCondition.isValidFamilyCondition(\"\")); // empty string","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"        assertFalse(FamilyCondition.isValidFamilyCondition(\" \")); // spaces only","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"        // valid family condition","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"        assertTrue(FamilyCondition.isValidFamilyCondition(\"Wife not around\")); // with spaces","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"        assertTrue(FamilyCondition.isValidFamilyCondition(\"Overseas\")); // without spaces","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"        assertTrue(FamilyCondition.isValidFamilyCondition(\"Has 2 sons\")); // allow numeric and alphabets","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"    public void compareTo() {","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"        // Test when familyCondition are equal","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"        FamilyCondition familyCondition1 \u003d new FamilyCondition(\"No children\");","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"        FamilyCondition familyCondition2 \u003d new FamilyCondition(\"No children\");","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"        assertEquals(0, familyCondition1.compareTo(familyCondition2));","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"        FamilyCondition familyCondition3 \u003d new FamilyCondition(\"Wife in ward\");","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"        assertTrue(familyCondition1.compareTo(familyCondition3) \u003c 0);","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"        FamilyCondition familyCondition4 \u003d new FamilyCondition(\"Son not in Singapore\");","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"        assertTrue(familyCondition4.compareTo(familyCondition1) \u003e 0);","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"        FamilyCondition familyCondition \u003d new FamilyCondition(\"good relationship\");","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"        assertTrue(familyCondition.equals(new FamilyCondition(\"good relationship\")));","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"        assertTrue(familyCondition.equals(familyCondition));","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"        assertFalse(familyCondition.equals(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"        assertFalse(familyCondition.equals(5.0f));","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"        assertFalse(familyCondition.equals(new FoodPreference(\"son just met accident\")));","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"choowengyan":71}},{"path":"src/test/java/seedu/address/model/patient/FoodPreferenceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"public class FoodPreferenceTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new FoodPreference(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"    public void constructor_invalidFoodPreference_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"        String invalidFoodPreference \u003d \"\";","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new FoodPreference(invalidFoodPreference));","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"    public void isValidFoodPreference() {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"        // null food preference","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"        assertThrows(NullPointerException.class, () -\u003e FoodPreference.isValidFoodPreference(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"        // invalid food preference","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"        assertFalse(FoodPreference.isValidFoodPreference(\"\")); // empty string","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"        assertFalse(FoodPreference.isValidFoodPreference(\" \")); // spaces onl","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"        // valid food preference","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"        assertTrue(FoodPreference.isValidFoodPreference(\"chicken rice\")); // with spaces","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"        assertTrue(FoodPreference.isValidFoodPreference(\"pasta\")); // without spaces","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"    public void compareTo() {","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"        // Test when foodPreference are equal","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"        FoodPreference foodPreference1 \u003d new FoodPreference(\"Nasi Lemak\");","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"        FoodPreference foodPreference2 \u003d new FoodPreference(\"Nasi Lemak\");","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"        assertEquals(0, foodPreference1.compareTo(foodPreference2));","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"        // Test when foodPreference1 is less than foodPreference2","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"        FoodPreference foodPreference3 \u003d new FoodPreference(\"Fried Rice\");","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"        assertTrue(foodPreference1.compareTo(foodPreference3) \u003e 0);","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"        // Test when foodPreference1 is greater than foodPreference2","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"        FoodPreference foodPreference4 \u003d new FoodPreference(\"Dim sum\");","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"        assertTrue(foodPreference4.compareTo(foodPreference1) \u003c 0);","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"        FoodPreference foodPreference \u003d new FoodPreference(\"pasta\");","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"        assertTrue(foodPreference.equals(new FoodPreference(\"pasta\")));","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"        assertTrue(foodPreference.equals(foodPreference));","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"        assertFalse(foodPreference.equals(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"        assertFalse(foodPreference.equals(5.0f));","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"        assertFalse(foodPreference.equals(new FoodPreference(\"spaghetti\")));","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"choowengyan":39,"NeoHW":1,"-":32}},{"path":"src/test/java/seedu/address/model/patient/HobbyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"public class HobbyTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Hobby(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"    public void constructor_invalidHobby_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"        String invalidHobby \u003d \"\";","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Hobby(invalidHobby));","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"    public void isValidHobby() {","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"        // null hobby","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"        assertThrows(NullPointerException.class, () -\u003e Hobby.isValidHobby(null));","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"        // invalid hobby","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"        assertFalse(Hobby.isValidHobby(\"\")); // empty string","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"        assertFalse(Hobby.isValidHobby(\" \")); // spaces only","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"        // valid hobby","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"        assertTrue(Hobby.isValidHobby(\"rock climbing\")); // with spaces","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"        assertTrue(Hobby.isValidHobby(\"hiking\")); // without spaces","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"    public void isValidHobby_caseInsensitive() {","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"        // Test with uppercase hobby","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"        assertTrue(Hobby.isValidHobby(\"Reading\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"        // Test with lowercase hobby","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"        assertTrue(Hobby.isValidHobby(\"reading\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"    public void compareTo() {","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"        // Test when hobbies are equal","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"        Hobby hobby1 \u003d new Hobby(\"Reading\");","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"        Hobby hobby2 \u003d new Hobby(\"Reading\");","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"        assertEquals(0, hobby1.compareTo(hobby2));","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"        Hobby hobby3 \u003d new Hobby(\"Cooking\");","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"        assertTrue(hobby1.compareTo(hobby3) \u003e 0);","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"        Hobby hobby4 \u003d new Hobby(\"Traveling\");","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"        assertTrue(hobby4.compareTo(hobby1) \u003e 0);","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"        Hobby hobby \u003d new Hobby(\"hiking\");","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"        assertTrue(hobby.equals(new Hobby(\"hiking\")));","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"        assertTrue(hobby.equals(hobby));","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"        assertFalse(hobby.equals(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"choowengyan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"        assertFalse(hobby.equals(5.0f));","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"choowengyan"},"content":"        assertFalse(hobby.equals(new Hobby(\"swimming\")));","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"choowengyan":79}},{"path":"src/test/java/seedu/address/model/patient/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2024-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"guohuang88"},"content":"        // Keywords match patient hospital id, preferred name, food preference, family condition, hobby and tag,","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"guohuang88"},"content":"        // but does not match patient name","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"guohuang88"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12344\", \"Carol\", \"Pasta\", \"Daughter\", \"not\",","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"guohuang88"},"content":"            \"in\", \"Singapore\", \"swimming\", \"depression\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"guohuang88"},"content":"        assertFalse(predicate.test(new PatientBuilder().withPatientHospitalId(\"12344\").withName(\"Caroline Li\")","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"            .withPreferredName(\"Carol\").withFoodPreferences(\"Pasta\").withFamilyConditions(\"Daughter not in Singapore\")","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"            .withHobbies(\"swimming\").withTags(\"depression\").build()));","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"guohuang88":5,"choowengyan":2,"NeoHW":5,"-":57}},{"path":"src/test/java/seedu/address/model/patient/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"NeoHW":1,"-":59}},{"path":"src/test/java/seedu/address/model/patient/PatientHospitalIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"public class PatientHospitalIdTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PatientHospitalId(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"    public void constructor_invalidId_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"        String invalidId \u003d \"\";","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PatientHospitalId(invalidId));","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"    public void isValidId() {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"        assertThrows(NullPointerException.class, () -\u003e PatientHospitalId.isValidPatientHospitalId(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"        assertFalse(PatientHospitalId.isValidPatientHospitalId(\"\")); // empty string","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"        assertFalse(PatientHospitalId.isValidPatientHospitalId(\" \")); // spaces only","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"        assertFalse(PatientHospitalId.isValidPatientHospitalId(\"@23\")); // contains non-integer character","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"        assertFalse(PatientHospitalId.isValidPatientHospitalId(\"@!\")); // contains non-integer character","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"        assertFalse(PatientHospitalId.isValidPatientHospitalId(\"abc\")); // contains character","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"        assertFalse(PatientHospitalId.isValidPatientHospitalId(\"123ab\")); // contains character and integer","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"        assertFalse(PatientHospitalId.isValidPatientHospitalId(\"-123\")); // contains negative integer","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"        // valid patient hospital id","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"        assertTrue(PatientHospitalId.isValidPatientHospitalId(\"12345\")); // contains all integers","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"        assertTrue(PatientHospitalId.isValidPatientHospitalId(\"123\")); // contains all integers in different length","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"        PatientHospitalId patientHospitalId \u003d new PatientHospitalId(\"11234\");","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"        assertTrue(patientHospitalId.equals(new PatientHospitalId(\"11234\")));","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"        assertTrue(patientHospitalId.equals(patientHospitalId));","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"        assertFalse(patientHospitalId.equals(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"        assertFalse(patientHospitalId.equals(5.0f));","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"        assertFalse(patientHospitalId.equals(new PatientHospitalId(\"11235\")));","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"choowengyan":24,"NeoHW":1,"-":37}},{"path":"src/test/java/seedu/address/model/patient/PatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FAMILY_CONDITION_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FOOD_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOBBY_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PREFERRED_NAME_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DEPRESSION;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2024-03-09"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.BOB;","lastModifiedDate":"2024-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"public class PatientTest {","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2024-03-09"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e patient.getTags().remove(0));","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"        assertTrue(ALICE.isSamePatient(ALICE));","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"        assertFalse(ALICE.isSamePatient(null));","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"        // same id, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"            .withPreferredName(VALID_PREFERRED_NAME_BOB).withFoodPreferences(VALID_FOOD_BOB)","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"            .withFamilyConditions(VALID_FAMILY_CONDITION_BOB).withHobbies(VALID_HOBBY_BOB)","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"            .withTags(VALID_TAG_DEPRESSION).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"        assertTrue(ALICE.isSamePatient(editedAlice));","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"        // different id, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withPatientHospitalId(VALID_ID_AMY).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"        assertFalse(ALICE.isSamePatient(editedAlice));","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"        Patient aliceCopy \u003d new PatientBuilder(ALICE).build();","lastModifiedDate":"2024-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2024-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"        // different patient hospital id -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"choowengyan"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withPatientHospitalId(VALID_ID_AMY).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"        // different preferred name -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"choowengyan"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withPreferredName(VALID_PREFERRED_NAME_BOB).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"choowengyan"},"content":"        // different food preference -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"choowengyan"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withFoodPreferences(VALID_FOOD_BOB).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"choowengyan"},"content":"        // different family condition -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"choowengyan"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withFamilyConditions(VALID_FAMILY_CONDITION_BOB).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"choowengyan"},"content":"        // different hobby -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"choowengyan"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withHobbies(VALID_HOBBY_BOB).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"choowengyan"},"content":"    void hashCode_equalPatients_sameHashCodes() {","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"choowengyan"},"content":"        Patient patient1 \u003d new PatientBuilder().build();","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"choowengyan"},"content":"        Patient patient2 \u003d new PatientBuilder().build();","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"choowengyan"},"content":"        assertEquals(patient1.hashCode(), patient2.hashCode());","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"choowengyan"},"content":"    void hashCode_differentPatients_differentHashCodes() {","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"choowengyan"},"content":"        Patient patient1 \u003d new PatientBuilder().withPatientHospitalId(\"1\").build();","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"choowengyan"},"content":"        Patient patient2 \u003d new PatientBuilder().withPatientHospitalId(\"2\").build();","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"choowengyan"},"content":"        assertNotEquals(patient1.hashCode(), patient2.hashCode());","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"choowengyan"},"content":"        String expected \u003d Patient.class.getCanonicalName() + \"{patientHospitalId\u003d\" + ALICE.getPatientHospitalId()","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"choowengyan"},"content":"            + \", name\u003d\" + ALICE.getName() + \", preferredName\u003d\" + ALICE.getPreferredName()","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"choowengyan"},"content":"            + \", foodPreferences\u003d\" + ALICE.getFoodPreferences() + \", familyConditions\u003d\" + ALICE.getFamilyConditions()","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"choowengyan"},"content":"            + \", hobbies\u003d\" + ALICE.getHobbies() + \", tags\u003d\" + ALICE.getTags() + \", events\u003d\" + ALICE.getEvents() + \"}\";","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"choowengyan":43,"NeoHW":14,"-":59}},{"path":"src/test/java/seedu/address/model/patient/PreferredNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"public class PreferredNameTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PreferredName(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"    public void constructor_invalidPreferredName_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"        String invalidPreferredName \u003d \"\";","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PreferredName(invalidPreferredName));","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"    public void isValidPreferredName() {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"        assertThrows(NullPointerException.class, () -\u003e PreferredName.isValidPreferredName(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"        // invalid preferred name","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"        assertFalse(PreferredName.isValidPreferredName(\"\")); // empty string","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"        assertFalse(PreferredName.isValidPreferredName(\" \")); // spaces only","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"        // valid preferred name","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"        assertTrue(PreferredName.isValidPreferredName(\"Kenny\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"        assertTrue(PreferredName.isValidPreferredName(\"Ah Ken\")); // with spaces","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"        PreferredName preferredName \u003d new PreferredName(\"Valid Preferred Name\");","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"        assertTrue(preferredName.equals(new PreferredName(\"Valid Preferred Name\")));","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"        assertTrue(preferredName.equals(preferredName));","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"        assertFalse(preferredName.equals(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"        assertFalse(preferredName.equals(5.0f));","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"        assertFalse(preferredName.equals(new PreferredName(\"Other Valid Preferred Name\")));","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"choowengyan":19,"NeoHW":1,"-":35}},{"path":"src/test/java/seedu/address/model/patient/TagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"guohuang88"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"guohuang88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"guohuang88"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"guohuang88"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"guohuang88"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"guohuang88"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"guohuang88"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"guohuang88"},"content":"import java.util.List;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"guohuang88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"guohuang88"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"guohuang88"},"content":"public class TagContainsKeywordsPredicateTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"guohuang88"},"content":"    public void equalsTest() {","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"guohuang88"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"guohuang88"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d List.of(\"first\", \"second\");","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"guohuang88"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"guohuang88"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d new TagContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"guohuang88"},"content":"        // same object -\u003e equals","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"guohuang88"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"guohuang88"},"content":"        // same values -\u003e equals","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"guohuang88"},"content":"        TagContainsKeywordsPredicate firstPredicateDuplicate \u003d new TagContainsKeywordsPredicate(","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"guohuang88"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"guohuang88"},"content":"        assertEquals(firstPredicate, firstPredicateDuplicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"guohuang88"},"content":"        // null -\u003e not equals","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"guohuang88"},"content":"        assertNotEquals(null, firstPredicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"guohuang88"},"content":"        // different predicate -\u003e not equals","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"guohuang88"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"guohuang88"},"content":"    public void test_tagDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"guohuang88"},"content":"        // Zero keyword","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"guohuang88"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"guohuang88"},"content":"        assertFalse(predicate.test(new PatientBuilder().withTags(\"depression\").build()));","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"guohuang88"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"guohuang88"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(List.of(\"diabetes\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"guohuang88"},"content":"        assertFalse(predicate.test(new PatientBuilder().withTags(\"depression\").build()));","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"guohuang88"},"content":"        // Keywords match patient hospital id, name, preferred name, food preference, family condition and hobby,","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"guohuang88"},"content":"        // but does not match tag","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"guohuang88"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"12344\", \"Caroline\", \"Li\", \"Carol\", \"Pasta\",","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"guohuang88"},"content":"                \"Daughter\", \"not\", \"in\", \"Singapore\", \"swimming\", \"diabetes\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"guohuang88"},"content":"        assertFalse(predicate.test(new PatientBuilder().withPatientHospitalId(\"12344\").withName(\"Caroline Li\")","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"                .withPreferredName(\"Carol\").withFoodPreferences(\"Pasta\")","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"                .withFamilyConditions(\"Daughter not in Singapore\").withHobbies(\"swimming\").withTags(\"depression\")","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"            .build()));","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"guohuang88"},"content":"    public void test_tagDoesContainKeywords_returnsTrue() {","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"guohuang88"},"content":"        TagContainsKeywordsPredicate predicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"guohuang88"},"content":"        // Matching keyword","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"guohuang88"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(List.of(\"diabetes\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"guohuang88"},"content":"        assertTrue(predicate.test(new PatientBuilder().withTags(\"diabetes\").build()));","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"guohuang88"},"content":"        // Keywords does not match patient hospital id, name, preferred name, food preference,","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"guohuang88"},"content":"        // family condition and hobby but only match tag","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"guohuang88"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"12345\", \"Carolina\", \"Lee\", \"Caroli\", \"Paste\",","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"guohuang88"},"content":"                \"Son\", \"at\", \"China\", \"dancing\", \"diabetes\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"guohuang88"},"content":"        assertTrue(predicate.test(new PatientBuilder().withPatientHospitalId(\"12344\").withName(\"Caroline Li\")","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"choowengyan"},"content":"                .withPreferredName(\"Carol\").withFoodPreferences(\"Pasta\")","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"                .withFamilyConditions(\"Daughter not in Singapore\").withHobbies(\"swimming\").withTags(\"diabetes\")","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"choowengyan"},"content":"            .build()));","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"guohuang88"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"guohuang88"},"content":"    public void toStringTest() {","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"guohuang88"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"guohuang88"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(keywords);","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"guohuang88"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"guohuang88"},"content":"        String expected \u003d TagContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"guohuang88"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"guohuang88"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"guohuang88"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"guohuang88":80,"choowengyan":6}},{"path":"src/test/java/seedu/address/model/patient/UniquePatientListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DEPRESSION;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2024-03-09"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.testutil.TypicalPatients.AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.BOB;","lastModifiedDate":"2024-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.exceptions.DuplicatePatientException;","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.exceptions.PatientNotFoundException;","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2024-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"public class UniquePatientListTest {","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"    private final UniquePatientList uniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"    public void contains_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2024-03-09"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.contains(null));","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"    public void contains_patientNotInList_returnsFalse() {","lastModifiedDate":"2024-03-09"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"        assertFalse(uniquePatientList.contains(ALICE));","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"    public void contains_patientInList_returnsTrue() {","lastModifiedDate":"2024-03-09"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"        assertTrue(uniquePatientList.contains(ALICE));","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"    public void contains_patientWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2024-03-09"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2024-03-08"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withPatientHospitalId(VALID_ID_BOB)","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"            .withTags(VALID_TAG_DEPRESSION).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"        assertTrue(uniquePatientList.contains(editedAlice));","lastModifiedDate":"2024-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"    public void add_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2024-03-09"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.add(null));","lastModifiedDate":"2024-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"    public void add_duplicatePatient_throwsDuplicatePatientException() {","lastModifiedDate":"2024-03-09"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2024-03-08"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"        assertThrows(DuplicatePatientException.class, () -\u003e uniquePatientList.add(ALICE));","lastModifiedDate":"2024-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"    public void setPatient_nullTargetPatient_throwsNullPointerException() {","lastModifiedDate":"2024-03-09"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setPatient(null, ALICE));","lastModifiedDate":"2024-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"    public void setPatient_nullEditedPatient_throwsNullPointerException() {","lastModifiedDate":"2024-03-09"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setPatient(ALICE, null));","lastModifiedDate":"2024-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"    public void setPatient_targetPatientNotInList_throwsPatientNotFoundException() {","lastModifiedDate":"2024-03-09"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"        assertThrows(PatientNotFoundException.class, () -\u003e uniquePatientList.setPatient(ALICE, ALICE));","lastModifiedDate":"2024-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"    public void setPatient_editedPatientIsSamePatient_success() {","lastModifiedDate":"2024-03-09"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2024-03-08"},{"lineNumber":80,"author":{"gitId":"NeoHW"},"content":"        uniquePatientList.setPatient(ALICE, ALICE);","lastModifiedDate":"2024-03-08"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2024-03-08"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"        expectedUniquePatientList.add(ALICE);","lastModifiedDate":"2024-03-08"},{"lineNumber":83,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2024-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"NeoHW"},"content":"    public void setPatient_editedPatientHasSameIdentity_success() {","lastModifiedDate":"2024-03-09"},{"lineNumber":88,"author":{"gitId":"NeoHW"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2024-03-08"},{"lineNumber":89,"author":{"gitId":"choowengyan"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withPatientHospitalId(VALID_ID_BOB)","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"choowengyan"},"content":"            .withTags(VALID_TAG_DEPRESSION).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"NeoHW"},"content":"        uniquePatientList.setPatient(ALICE, editedAlice);","lastModifiedDate":"2024-03-08"},{"lineNumber":92,"author":{"gitId":"NeoHW"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2024-03-08"},{"lineNumber":93,"author":{"gitId":"NeoHW"},"content":"        expectedUniquePatientList.add(editedAlice);","lastModifiedDate":"2024-03-08"},{"lineNumber":94,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2024-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"NeoHW"},"content":"    public void setPatient_editedPatientHasDifferentIdentity_success() {","lastModifiedDate":"2024-03-09"},{"lineNumber":99,"author":{"gitId":"NeoHW"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2024-03-08"},{"lineNumber":100,"author":{"gitId":"NeoHW"},"content":"        uniquePatientList.setPatient(ALICE, BOB);","lastModifiedDate":"2024-03-08"},{"lineNumber":101,"author":{"gitId":"NeoHW"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2024-03-08"},{"lineNumber":102,"author":{"gitId":"NeoHW"},"content":"        expectedUniquePatientList.add(BOB);","lastModifiedDate":"2024-03-08"},{"lineNumber":103,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2024-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"NeoHW"},"content":"    public void setPatient_editedPatientHasNonUniqueIdentity_throwsDuplicatePatientException() {","lastModifiedDate":"2024-03-09"},{"lineNumber":108,"author":{"gitId":"NeoHW"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2024-03-08"},{"lineNumber":109,"author":{"gitId":"choowengyan"},"content":"        uniquePatientList.add(AMY);","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"choowengyan"},"content":"        assertThrows(DuplicatePatientException.class, () -\u003e uniquePatientList.setPatient(ALICE, AMY));","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"NeoHW"},"content":"    public void remove_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2024-03-09"},{"lineNumber":115,"author":{"gitId":"NeoHW"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.remove(null));","lastModifiedDate":"2024-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"NeoHW"},"content":"    public void remove_patientDoesNotExist_throwsPatientNotFoundException() {","lastModifiedDate":"2024-03-09"},{"lineNumber":120,"author":{"gitId":"NeoHW"},"content":"        assertThrows(PatientNotFoundException.class, () -\u003e uniquePatientList.remove(ALICE));","lastModifiedDate":"2024-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"NeoHW"},"content":"    public void remove_existingPatient_removesPatient() {","lastModifiedDate":"2024-03-09"},{"lineNumber":125,"author":{"gitId":"NeoHW"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2024-03-08"},{"lineNumber":126,"author":{"gitId":"NeoHW"},"content":"        uniquePatientList.remove(ALICE);","lastModifiedDate":"2024-03-08"},{"lineNumber":127,"author":{"gitId":"NeoHW"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2024-03-08"},{"lineNumber":128,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2024-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"NeoHW"},"content":"    public void setPatients_nullUniquePatientList_throwsNullPointerException() {","lastModifiedDate":"2024-03-09"},{"lineNumber":133,"author":{"gitId":"NeoHW"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setPatients((UniquePatientList) null));","lastModifiedDate":"2024-03-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"NeoHW"},"content":"    public void setPatients_uniquePatientList_replacesOwnListWithProvidedUniquePatientList() {","lastModifiedDate":"2024-03-09"},{"lineNumber":138,"author":{"gitId":"NeoHW"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2024-03-08"},{"lineNumber":139,"author":{"gitId":"NeoHW"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2024-03-08"},{"lineNumber":140,"author":{"gitId":"NeoHW"},"content":"        expectedUniquePatientList.add(BOB);","lastModifiedDate":"2024-03-08"},{"lineNumber":141,"author":{"gitId":"NeoHW"},"content":"        uniquePatientList.setPatients(expectedUniquePatientList);","lastModifiedDate":"2024-03-08"},{"lineNumber":142,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2024-03-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"NeoHW"},"content":"    public void setPatients_nullList_throwsNullPointerException() {","lastModifiedDate":"2024-03-09"},{"lineNumber":147,"author":{"gitId":"NeoHW"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setPatients((List\u003cPatient\u003e) null));","lastModifiedDate":"2024-03-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"NeoHW"},"content":"    public void setPatients_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2024-03-09"},{"lineNumber":152,"author":{"gitId":"NeoHW"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2024-03-08"},{"lineNumber":153,"author":{"gitId":"NeoHW"},"content":"        List\u003cPatient\u003e patientList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2024-03-08"},{"lineNumber":154,"author":{"gitId":"NeoHW"},"content":"        uniquePatientList.setPatients(patientList);","lastModifiedDate":"2024-03-08"},{"lineNumber":155,"author":{"gitId":"NeoHW"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2024-03-08"},{"lineNumber":156,"author":{"gitId":"NeoHW"},"content":"        expectedUniquePatientList.add(BOB);","lastModifiedDate":"2024-03-08"},{"lineNumber":157,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2024-03-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"NeoHW"},"content":"    public void setPatients_listWithDuplicatePatients_throwsDuplicatePatientException() {","lastModifiedDate":"2024-03-09"},{"lineNumber":162,"author":{"gitId":"NeoHW"},"content":"        List\u003cPatient\u003e listWithDuplicatePatients \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2024-03-08"},{"lineNumber":163,"author":{"gitId":"NeoHW"},"content":"        assertThrows(DuplicatePatientException.class, () -\u003e uniquePatientList.setPatients(listWithDuplicatePatients));","lastModifiedDate":"2024-03-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"NeoHW"},"content":"            -\u003e uniquePatientList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2024-03-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"NeoHW"},"content":"        assertEquals(uniquePatientList.asUnmodifiableObservableList().toString(), uniquePatientList.toString());","lastModifiedDate":"2024-03-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"choowengyan":9,"NeoHW":80,"-":87}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.storage.JsonAdaptedPatient.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.BENSON;","lastModifiedDate":"2024-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FamilyCondition;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FoodPreference;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.Hobby;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.PatientHospitalId;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.PreferredName;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"public class JsonAdaptedPatientTest {","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"    private static final String INVALID_ID \u003d \"-1\";","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"    private static final String INVALID_NAME \u003d \"R@chel Lim\";","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"    private static final String INVALID_PREFERRED_NAME \u003d \"R@chel\";","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"    private static final String INVALID_FOOD_PREFERENCE \u003d \" \";","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"    private static final String INVALID_HOBBY \u003d \" \";","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"    private static final String INVALID_TAG \u003d \"#Diabetes\";","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"    private static final String INVALID_EVENT_DATETIME_STR \u003d \"Something\";","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"    private static final String VALID_PATIENT_HOSPITAL_ID \u003d BENSON.getPatientHospitalId().patientHospitalId;","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"    private static final String VALID_PREFERRED_NAME \u003d BENSON.getPreferredName().toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"    private static final List\u003cJsonAdaptedFoodPreference\u003e VALID_FOOD_PREFERENCES \u003d BENSON.getFoodPreferences().stream()","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"        .map(JsonAdaptedFoodPreference::new)","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"    private static final List\u003cJsonAdaptedFamilyCondition\u003e VALID_FAMILY_CONDITIONS \u003d BENSON.getFamilyConditions()","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"        .stream()","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"        .map(JsonAdaptedFamilyCondition::new)","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"    private static final String VALID_HOBBY \u003d \"Reading\";","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"    private static final List\u003cJsonAdaptedHobby\u003e VALID_HOBBIES \u003d BENSON.getHobbies()","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"        .stream()","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"        .map(JsonAdaptedHobby::new)","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"    private static final String VALID_EVENT_NAME \u003d \"Birthday\";","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"    private static final List\u003cJsonAdaptedEvent\u003e VALID_EVENTS \u003d BENSON.getEvents().stream()","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"SherisseTJW"},"content":"            .map(JsonAdaptedEvent::new)","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"        JsonAdaptedPatient person \u003d new JsonAdaptedPatient(BENSON);","lastModifiedDate":"2024-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"    public void toModelType_invalidPatientHospitalId_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"        JsonAdaptedPatient person \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"            new JsonAdaptedPatient(INVALID_ID, VALID_NAME, VALID_PREFERRED_NAME,","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"                VALID_FOOD_PREFERENCES, VALID_FAMILY_CONDITIONS, VALID_HOBBIES, VALID_TAGS, VALID_EVENTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"        String expectedMessage \u003d PatientHospitalId.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"    public void toModelType_nullPatientHospitalId_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"choowengyan"},"content":"        JsonAdaptedPatient person \u003d new JsonAdaptedPatient(null, VALID_NAME, VALID_PREFERRED_NAME,","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"            VALID_FOOD_PREFERENCES, VALID_FAMILY_CONDITIONS, VALID_HOBBIES, VALID_TAGS, VALID_EVENTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"choowengyan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, PatientHospitalId.class.getSimpleName());","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"        JsonAdaptedPatient person \u003d","lastModifiedDate":"2024-03-09"},{"lineNumber":82,"author":{"gitId":"choowengyan"},"content":"                new JsonAdaptedPatient(VALID_PATIENT_HOSPITAL_ID, INVALID_NAME, VALID_PREFERRED_NAME,","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"choowengyan"},"content":"                    VALID_FOOD_PREFERENCES, VALID_FAMILY_CONDITIONS, VALID_HOBBIES, VALID_TAGS, VALID_EVENTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"choowengyan"},"content":"        JsonAdaptedPatient person \u003d new JsonAdaptedPatient(VALID_PATIENT_HOSPITAL_ID, null, VALID_PREFERRED_NAME,","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"choowengyan"},"content":"            VALID_FOOD_PREFERENCES, VALID_FAMILY_CONDITIONS, VALID_HOBBIES, VALID_TAGS, VALID_EVENTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"choowengyan"},"content":"    public void toModelType_invalidPreferredName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"choowengyan"},"content":"        JsonAdaptedPatient person \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"choowengyan"},"content":"                new JsonAdaptedPatient(VALID_PATIENT_HOSPITAL_ID, VALID_NAME, INVALID_PREFERRED_NAME,","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"choowengyan"},"content":"                    VALID_FOOD_PREFERENCES, VALID_FAMILY_CONDITIONS, VALID_HOBBIES, VALID_TAGS, VALID_EVENTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"choowengyan"},"content":"        String expectedMessage \u003d PreferredName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"choowengyan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"choowengyan"},"content":"    public void toModelType_nullPreferredName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"choowengyan"},"content":"        JsonAdaptedPatient person \u003d new JsonAdaptedPatient(VALID_PATIENT_HOSPITAL_ID, VALID_NAME, null,","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"choowengyan"},"content":"            VALID_FOOD_PREFERENCES, VALID_FAMILY_CONDITIONS, VALID_HOBBIES, VALID_TAGS, VALID_EVENTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"choowengyan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, PreferredName.class.getSimpleName());","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"choowengyan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"choowengyan"},"content":"    public void toModelType_invalidFoodPreference_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"choowengyan"},"content":"        List\u003cJsonAdaptedFoodPreference\u003e invalidFoodPreferences \u003d new ArrayList\u003c\u003e(VALID_FOOD_PREFERENCES);","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"choowengyan"},"content":"        invalidFoodPreferences.add(new JsonAdaptedFoodPreference(INVALID_FOOD_PREFERENCE));","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"NeoHW"},"content":"        JsonAdaptedPatient person \u003d","lastModifiedDate":"2024-03-09"},{"lineNumber":118,"author":{"gitId":"choowengyan"},"content":"                new JsonAdaptedPatient(VALID_PATIENT_HOSPITAL_ID, VALID_NAME, VALID_PREFERRED_NAME,","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"choowengyan"},"content":"                    invalidFoodPreferences, VALID_FAMILY_CONDITIONS, VALID_HOBBIES, VALID_TAGS, VALID_EVENTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"choowengyan"},"content":"        String expectedMessage \u003d FoodPreference.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"choowengyan"},"content":"    public void toModelType_nullFoodPreference_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"choowengyan"},"content":"        JsonAdaptedPatient person \u003d new JsonAdaptedPatient(VALID_PATIENT_HOSPITAL_ID, VALID_NAME, VALID_PREFERRED_NAME,","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"choowengyan"},"content":"            null, VALID_FAMILY_CONDITIONS, VALID_HOBBIES, VALID_TAGS, VALID_EVENTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"choowengyan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, FoodPreference.class.getSimpleName());","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"choowengyan"},"content":"    public void constructor_nullFoodPreference_throwsIllegalArgumentException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"choowengyan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new JsonAdaptedFoodPreference((String) null));","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":138,"author":{"gitId":"choowengyan"},"content":"    public void constructor_emptyFoodPreference_throwsIllegalArgumentException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":139,"author":{"gitId":"choowengyan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new JsonAdaptedFoodPreference(\"\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"choowengyan"},"content":"    public void toModelType_invalidFamilyCondition_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"choowengyan"},"content":"        List\u003cJsonAdaptedFamilyCondition\u003e invalidFamilyConditions \u003d new ArrayList\u003c\u003e(VALID_FAMILY_CONDITIONS);","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"choowengyan"},"content":"        invalidFamilyConditions.add(new JsonAdaptedFamilyCondition(INVALID_FOOD_PREFERENCE));","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"NeoHW"},"content":"        JsonAdaptedPatient person \u003d","lastModifiedDate":"2024-03-09"},{"lineNumber":147,"author":{"gitId":"choowengyan"},"content":"                new JsonAdaptedPatient(VALID_PATIENT_HOSPITAL_ID, VALID_NAME, VALID_PREFERRED_NAME,","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"choowengyan"},"content":"                    VALID_FOOD_PREFERENCES, invalidFamilyConditions, VALID_HOBBIES, VALID_TAGS, VALID_EVENTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"choowengyan"},"content":"        String expectedMessage \u003d FamilyCondition.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"choowengyan"},"content":"    public void toModelType_nullFamilyCondition_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":155,"author":{"gitId":"choowengyan"},"content":"        JsonAdaptedPatient person \u003d new JsonAdaptedPatient(VALID_PATIENT_HOSPITAL_ID, VALID_NAME, VALID_PREFERRED_NAME,","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"choowengyan"},"content":"            VALID_FOOD_PREFERENCES, null, VALID_HOBBIES, VALID_TAGS, VALID_EVENTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"choowengyan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, FamilyCondition.class.getSimpleName());","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":162,"author":{"gitId":"choowengyan"},"content":"    public void constructor_nullFamilyCondition_throwsIllegalArgumentException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":163,"author":{"gitId":"choowengyan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new JsonAdaptedFamilyCondition((String) null));","lastModifiedDate":"2024-04-04"},{"lineNumber":164,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":165,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":167,"author":{"gitId":"choowengyan"},"content":"    public void constructor_emptyFamilyCondition_throwsIllegalArgumentException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":168,"author":{"gitId":"choowengyan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new JsonAdaptedFamilyCondition(\"\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":169,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":170,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":172,"author":{"gitId":"choowengyan"},"content":"    public void toModelType_invalidHobby_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":173,"author":{"gitId":"choowengyan"},"content":"        List\u003cJsonAdaptedHobby\u003e invalidHobbies \u003d new ArrayList\u003c\u003e(VALID_HOBBIES);","lastModifiedDate":"2024-04-03"},{"lineNumber":174,"author":{"gitId":"choowengyan"},"content":"        invalidHobbies.add(new JsonAdaptedHobby(INVALID_HOBBY));","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"NeoHW"},"content":"        JsonAdaptedPatient person \u003d","lastModifiedDate":"2024-03-09"},{"lineNumber":176,"author":{"gitId":"choowengyan"},"content":"            new JsonAdaptedPatient(VALID_PATIENT_HOSPITAL_ID, VALID_NAME, VALID_PREFERRED_NAME,","lastModifiedDate":"2024-03-12"},{"lineNumber":177,"author":{"gitId":"choowengyan"},"content":"                VALID_FOOD_PREFERENCES, VALID_FAMILY_CONDITIONS, invalidHobbies, VALID_TAGS, VALID_EVENTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":178,"author":{"gitId":"choowengyan"},"content":"        String expectedMessage \u003d Hobby.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":183,"author":{"gitId":"choowengyan"},"content":"    public void toModelType_nullHobby_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":184,"author":{"gitId":"choowengyan"},"content":"        JsonAdaptedPatient person \u003d new JsonAdaptedPatient(VALID_PATIENT_HOSPITAL_ID, VALID_NAME, VALID_PREFERRED_NAME,","lastModifiedDate":"2024-03-12"},{"lineNumber":185,"author":{"gitId":"choowengyan"},"content":"            VALID_FOOD_PREFERENCES, VALID_FAMILY_CONDITIONS, null, VALID_TAGS, VALID_EVENTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":186,"author":{"gitId":"choowengyan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Hobby.class.getSimpleName());","lastModifiedDate":"2024-03-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":190,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":191,"author":{"gitId":"choowengyan"},"content":"    public void toModelType_invalidHobbyName_throwsIllegalValueException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":192,"author":{"gitId":"choowengyan"},"content":"        JsonAdaptedHobby adaptedHobby \u003d new JsonAdaptedHobby(INVALID_HOBBY);","lastModifiedDate":"2024-04-04"},{"lineNumber":193,"author":{"gitId":"choowengyan"},"content":"        assertThrows(IllegalValueException.class, adaptedHobby::toModelType);","lastModifiedDate":"2024-04-04"},{"lineNumber":194,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":195,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":196,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":197,"author":{"gitId":"choowengyan"},"content":"    public void constructor_nullHobbyName_throwsIllegalArgumentException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":198,"author":{"gitId":"choowengyan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new JsonAdaptedHobby((String) null));","lastModifiedDate":"2024-04-04"},{"lineNumber":199,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":200,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":201,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":202,"author":{"gitId":"choowengyan"},"content":"    public void constructor_emptyHobbyName_throwsIllegalArgumentException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":203,"author":{"gitId":"choowengyan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new JsonAdaptedHobby(\"\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":204,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":205,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":210,"author":{"gitId":"NeoHW"},"content":"        JsonAdaptedPatient person \u003d","lastModifiedDate":"2024-03-09"},{"lineNumber":211,"author":{"gitId":"choowengyan"},"content":"                new JsonAdaptedPatient(VALID_PATIENT_HOSPITAL_ID, VALID_NAME, VALID_PREFERRED_NAME,","lastModifiedDate":"2024-03-12"},{"lineNumber":212,"author":{"gitId":"choowengyan"},"content":"                    VALID_FOOD_PREFERENCES, VALID_FAMILY_CONDITIONS, VALID_HOBBIES, invalidTags, VALID_EVENTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":216,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":217,"author":{"gitId":"SherisseTJW"},"content":"    public void toModelType_invalidDateTime_throwsIllegalValueException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":218,"author":{"gitId":"SherisseTJW"},"content":"        List\u003cJsonAdaptedEvent\u003e invalidImportantDates \u003d new ArrayList\u003c\u003e(VALID_EVENTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":219,"author":{"gitId":"SherisseTJW"},"content":"        invalidImportantDates.add(new JsonAdaptedEvent(VALID_EVENT_NAME,","lastModifiedDate":"2024-03-18"},{"lineNumber":220,"author":{"gitId":"SherisseTJW"},"content":"            INVALID_EVENT_DATETIME_STR));","lastModifiedDate":"2024-03-18"},{"lineNumber":221,"author":{"gitId":"SherisseTJW"},"content":"        JsonAdaptedPatient person \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":222,"author":{"gitId":"choowengyan"},"content":"            new JsonAdaptedPatient(VALID_PATIENT_HOSPITAL_ID, VALID_NAME, VALID_PREFERRED_NAME,","lastModifiedDate":"2024-03-17"},{"lineNumber":223,"author":{"gitId":"choowengyan"},"content":"                VALID_FOOD_PREFERENCES, VALID_FAMILY_CONDITIONS, VALID_HOBBIES, VALID_TAGS, invalidImportantDates);","lastModifiedDate":"2024-04-03"},{"lineNumber":224,"author":{"gitId":"SherisseTJW"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2024-03-15"},{"lineNumber":225,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"SherisseTJW":14,"choowengyan":135,"NeoHW":9,"-":68}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2024-03-09"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.HOON;","lastModifiedDate":"2024-03-09"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.IDA;","lastModifiedDate":"2024-03-09"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2024-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"    public void readAddressBook_invalidPatientAddressBook_throwDataLoadingException() {","lastModifiedDate":"2024-03-09"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPatientAddressBook.json\"));","lastModifiedDate":"2024-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"    public void readAddressBook_invalidAndValidPatientAddressBook_throwDataLoadingException() {","lastModifiedDate":"2024-03-09"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPatientAddressBook.json\"));","lastModifiedDate":"2024-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"        original.addPatient(HOON);","lastModifiedDate":"2024-03-09"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"        original.removePatient(ALICE);","lastModifiedDate":"2024-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"        original.addPatient(IDA);","lastModifiedDate":"2024-03-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"NeoHW":11,"-":99}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"import seedu.address.testutil.TypicalPatients;","lastModifiedDate":"2024-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPatientAddressBook.json\");","lastModifiedDate":"2024-03-09"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPatientAddressBook.json\");","lastModifiedDate":"2024-03-09"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePatientAddressBook.json\");","lastModifiedDate":"2024-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPatients.getTypicalAddressBook();","lastModifiedDate":"2024-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PATIENT,","lastModifiedDate":"2024-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"NeoHW":6,"-":41}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2024-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"NeoHW":1,"-":67}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPatient(\"John\", \"Doe\").build();}","lastModifiedDate":"2024-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"     * Adds a new {@code Patient} to the {@code AddressBook} that we are building.","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"    public AddressBookBuilder withPatient(Patient patient) {","lastModifiedDate":"2024-03-09"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"        addressBook.addPatient(patient);","lastModifiedDate":"2024-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"NeoHW":5,"-":29}},{"path":"src/test/java/seedu/address/testutil/EditPatientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-09"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-09"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-09"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-09"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.EditPatientDescriptor;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.Event;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FamilyCondition;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FoodPreference;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.Hobby;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2024-03-09"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-09"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.PatientHospitalId;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.PreferredName;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-09"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-03-09"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":" * A utility class to help with building EditPatientDescriptor objects.","lastModifiedDate":"2024-03-09"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-03-09"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"public class EditPatientDescriptorBuilder {","lastModifiedDate":"2024-03-09"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"    private EditPatientDescriptor descriptor;","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"    public EditPatientDescriptorBuilder() {","lastModifiedDate":"2024-03-09"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"        descriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"    public EditPatientDescriptorBuilder(EditPatientDescriptor descriptor) {","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"        this.descriptor \u003d new EditPatientDescriptor(descriptor);","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"     * Returns an {@code EditPatientDescriptor} with fields containing {@code patient}\u0027s details","lastModifiedDate":"2024-03-09"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"    public EditPatientDescriptorBuilder(Patient patient) {","lastModifiedDate":"2024-03-09"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"        descriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"        descriptor.setPatientHospitalId(patient.getPatientHospitalId());","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"        descriptor.setName(patient.getName());","lastModifiedDate":"2024-03-09"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"        descriptor.setPreferredName(patient.getPreferredName());","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"        descriptor.setFoodPreferences(patient.getFoodPreferences());","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"        descriptor.setFamilyConditions(patient.getFamilyConditions());","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"        descriptor.setHobbies(patient.getHobbies());","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"        descriptor.setTags(patient.getTags());","lastModifiedDate":"2024-03-09"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"     * Sets the {@code PatientHospitalId} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"    public EditPatientDescriptorBuilder withPatientHospitalId(String id) {","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"        descriptor.setPatientHospitalId(new PatientHospitalId(id));","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"        return this;","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"     * Sets the {@code Name} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2024-03-09"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"    public EditPatientDescriptorBuilder withName(String name) {","lastModifiedDate":"2024-03-09"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2024-03-09"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"        return this;","lastModifiedDate":"2024-03-09"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"     * Sets the {@code PreferredName} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"    public EditPatientDescriptorBuilder withPreferredName(String preferredName) {","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"        descriptor.setPreferredName(new PreferredName(preferredName));","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"        return this;","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"choowengyan"},"content":"     * Parses the {@code foodPreferences} into a {@code Set\u003cFoodPreference\u003e}","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"     * and set it to the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"    public EditPatientDescriptorBuilder withFoodPreferences(String... foodPreferences) {","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"choowengyan"},"content":"        Set\u003cFoodPreference\u003e foodPreferenceSet \u003d Stream.of(foodPreferences).map(FoodPreference::new)","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"choowengyan"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"choowengyan"},"content":"        descriptor.setFoodPreferences(foodPreferenceSet);","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"NeoHW"},"content":"        return this;","lastModifiedDate":"2024-03-09"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":83,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":84,"author":{"gitId":"choowengyan"},"content":"     * Sets the {@code familyConditions} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":86,"author":{"gitId":"choowengyan"},"content":"    public EditPatientDescriptorBuilder withFamilyConditions(String... familyConditions) {","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"choowengyan"},"content":"        Set\u003cFamilyCondition\u003e familyConditionSet \u003d Stream.of(familyConditions).map(FamilyCondition::new)","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"choowengyan"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"choowengyan"},"content":"        descriptor.setFamilyConditions(familyConditionSet);","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"NeoHW"},"content":"        return this;","lastModifiedDate":"2024-03-09"},{"lineNumber":91,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":92,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":93,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":94,"author":{"gitId":"choowengyan"},"content":"     * Sets the {@code hobbies} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":96,"author":{"gitId":"choowengyan"},"content":"    public EditPatientDescriptorBuilder withHobbies(String... hobbies) {","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"choowengyan"},"content":"        Set\u003cHobby\u003e hobbySet \u003d Stream.of(hobbies).map(Hobby::new)","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"choowengyan"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"choowengyan"},"content":"        descriptor.setHobbies(hobbySet);","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"NeoHW"},"content":"        return this;","lastModifiedDate":"2024-03-09"},{"lineNumber":101,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":102,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":103,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":104,"author":{"gitId":"NeoHW"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPatientDescriptor}","lastModifiedDate":"2024-03-09"},{"lineNumber":105,"author":{"gitId":"NeoHW"},"content":"     * that we are building.","lastModifiedDate":"2024-03-09"},{"lineNumber":106,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":107,"author":{"gitId":"NeoHW"},"content":"    public EditPatientDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2024-03-09"},{"lineNumber":108,"author":{"gitId":"NeoHW"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2024-03-09"},{"lineNumber":109,"author":{"gitId":"NeoHW"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2024-03-09"},{"lineNumber":110,"author":{"gitId":"NeoHW"},"content":"        return this;","lastModifiedDate":"2024-03-09"},{"lineNumber":111,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":112,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":113,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"SherisseTJW"},"content":"     * Parses the name and dateTimeStr into a {@code Set\u003cEvent\u003e} and set it to the","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"SherisseTJW"},"content":"     * {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2024-03-13"},{"lineNumber":116,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":117,"author":{"gitId":"SherisseTJW"},"content":"    public EditPatientDescriptorBuilder withEvent(String name, String dateTimeStr) {","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"SherisseTJW"},"content":"        Set\u003cEvent\u003e events \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"SherisseTJW"},"content":"        events.add(new Event(name, dateTimeStr));","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"SherisseTJW"},"content":"        descriptor.setEvents(events);","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"SherisseTJW"},"content":"        return this;","lastModifiedDate":"2024-03-13"},{"lineNumber":122,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":123,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":124,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":125,"author":{"gitId":"SherisseTJW"},"content":"    public EditPatientDescriptor build() {","lastModifiedDate":"2024-03-13"},{"lineNumber":126,"author":{"gitId":"NeoHW"},"content":"        return descriptor;","lastModifiedDate":"2024-03-09"},{"lineNumber":127,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":128,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-03-09"}],"authorContributionMap":{"SherisseTJW":21,"choowengyan":42,"NeoHW":65}},{"path":"src/test/java/seedu/address/testutil/PatientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"import seedu.address.model.patient.Event;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FamilyCondition;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.FoodPreference;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.Hobby;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.PatientHospitalId;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"import seedu.address.model.patient.PreferredName;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":" * A utility class to help with building Patient objects.","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"public class PatientBuilder {","lastModifiedDate":"2024-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"    public static final String DEFAULT_ID \u003d \"12334\";","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee Kian Ling\";","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"    public static final String DEFAULT_PREFERRED_NAME \u003d \"Amy\";","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"    public static final String DEFAULT_FOOD_PREFERENCE \u003d \"Hor Fun\";","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"    public static final String DEFAULT_FAMILY_CONDITION \u003d \"Financially unstable\";","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"    public static final String DEFAULT_HOBBY \u003d \"Singing karaoke\";","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"    private PatientHospitalId patientHospitalId;","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"    private PreferredName preferredName;","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"    private Set\u003cFoodPreference\u003e foodPreferences;","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"    private Set\u003cFamilyCondition\u003e familyConditions;","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"    private Set\u003cHobby\u003e hobbies;","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"    private Set\u003cEvent\u003e events;","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"     * Creates a {@code PatientBuilder} with the default details.","lastModifiedDate":"2024-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"    public PatientBuilder() {","lastModifiedDate":"2024-03-09"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"        patientHospitalId \u003d new PatientHospitalId(DEFAULT_ID);","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"        preferredName \u003d new PreferredName(DEFAULT_PREFERRED_NAME);","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"        // Include the default food preference, family condition, hobby","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"        foodPreferences \u003d SampleDataUtil.getFoodPreferenceSet(DEFAULT_FOOD_PREFERENCE);","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"        familyConditions \u003d SampleDataUtil.getFamilyConditionSet(DEFAULT_FAMILY_CONDITION);","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"        hobbies \u003d SampleDataUtil.getHobbySet(DEFAULT_HOBBY);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"        events \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"     * Initializes the PatientBuilder with the data of {@code patientToCopy}.","lastModifiedDate":"2024-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"    public PatientBuilder(Patient patientToCopy) {","lastModifiedDate":"2024-03-09"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"        patientHospitalId \u003d patientToCopy.getPatientHospitalId();","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"        name \u003d patientToCopy.getName();","lastModifiedDate":"2024-03-08"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"        preferredName \u003d patientToCopy.getPreferredName();","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"        foodPreferences \u003d new HashSet\u003c\u003e(patientToCopy.getFoodPreferences());","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"        familyConditions \u003d new HashSet\u003c\u003e(patientToCopy.getFamilyConditions());","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"        hobbies \u003d new HashSet\u003c\u003e(patientToCopy.getHobbies());","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"        tags \u003d new HashSet\u003c\u003e(patientToCopy.getTags());","lastModifiedDate":"2024-03-08"},{"lineNumber":64,"author":{"gitId":"SherisseTJW"},"content":"        events \u003d new HashSet\u003c\u003e(patientToCopy.getEvents());","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"     * Sets the {@code PatientHospitalId} of the {@code Patient} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"    public PatientBuilder withPatientHospitalId(String id) {","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"        this.patientHospitalId \u003d new PatientHospitalId(id);","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"        return this;","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"     * Sets the {@code Name} of the {@code Patient} that we are building.","lastModifiedDate":"2024-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"    public PatientBuilder withName(String name) {","lastModifiedDate":"2024-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"choowengyan"},"content":"     * Sets the {@code PreferredName} of the {@code Patient} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"choowengyan"},"content":"    public PatientBuilder withPreferredName(String preferredName) {","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"choowengyan"},"content":"        this.preferredName \u003d new PreferredName(preferredName);","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"choowengyan"},"content":"        return this;","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"NeoHW"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Patient} that we are building.","lastModifiedDate":"2024-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"NeoHW"},"content":"    public PatientBuilder withTags(String ... tags) {","lastModifiedDate":"2024-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"choowengyan"},"content":"     * Sets the FoodPreference of the {@code Patient} that we are building.","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"choowengyan"},"content":"     * @param foodPreferences array of string of preferred food","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"choowengyan"},"content":"     * @return return PatientBuilder withFoodPreferences","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"choowengyan"},"content":"    public PatientBuilder withFoodPreferences(String ... foodPreferences) {","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"choowengyan"},"content":"        this.foodPreferences \u003d SampleDataUtil.getFoodPreferenceSet(foodPreferences);","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"choowengyan"},"content":"     * Sets the FamilyCondition of the {@code Patient} that we are building.","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"choowengyan"},"content":"     * @param familyConditions array of string of preferred food","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"choowengyan"},"content":"     * @return return PatientBuilder withFamilyConditions","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":114,"author":{"gitId":"choowengyan"},"content":"    public PatientBuilder withFamilyConditions(String ... familyConditions) {","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"choowengyan"},"content":"        this.familyConditions \u003d SampleDataUtil.getFamilyConditionSet(familyConditions);","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":120,"author":{"gitId":"choowengyan"},"content":"     * Sets the {@code Hobby} of the {@code Patient} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":122,"author":{"gitId":"choowengyan"},"content":"    public PatientBuilder withHobbies(String ... hobbies) {","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"choowengyan"},"content":"        this.hobbies \u003d SampleDataUtil.getHobbySet(hobbies);","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":127,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"SherisseTJW"},"content":"     * Sets the Event of the {@code Patient} that we are building,","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"SherisseTJW"},"content":"     * with the name and date/datetime of the event","lastModifiedDate":"2024-03-13"},{"lineNumber":130,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":131,"author":{"gitId":"SherisseTJW"},"content":"     * @param names description of events","lastModifiedDate":"2024-03-23"},{"lineNumber":132,"author":{"gitId":"SherisseTJW"},"content":"     * @param events array of string of dates","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"choowengyan"},"content":"     * @return return PatientBuilder withImportantDates","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":135,"author":{"gitId":"SherisseTJW"},"content":"    public PatientBuilder withEvents(String[] names, String[] events) {","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"SherisseTJW"},"content":"        this.events \u003d SampleDataUtil.getEventSet(names, events);","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"SherisseTJW"},"content":"        return this;","lastModifiedDate":"2024-03-13"},{"lineNumber":138,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":139,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":140,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"choowengyan"},"content":"     * Builds {@code Patient} with new Patient.","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"NeoHW"},"content":"    public Patient build() {","lastModifiedDate":"2024-03-08"},{"lineNumber":144,"author":{"gitId":"choowengyan"},"content":"        return new Patient(patientHospitalId, name, preferredName, this.foodPreferences, familyConditions, hobbies,","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"choowengyan"},"content":"            tags, events);","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"SherisseTJW":16,"choowengyan":62,"NeoHW":15,"-":55}},{"path":"src/test/java/seedu/address/testutil/PatientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FAMILY_CONDITION;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FOOD_PREFERENCE;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOBBY;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PID;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERRED_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.EditPatientDescriptor;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":" * A utility class for Patient.","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"public class PatientUtil {","lastModifiedDate":"2024-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"     * Returns an add command string for adding the {@code patient}.","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"    public static String getAddCommand(Patient patient) {","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPatientDetails(patient);","lastModifiedDate":"2024-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"     * Returns the part of command string for the given {@code patient}\u0027s details.","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"    public static String getPatientDetails(Patient patient) {","lastModifiedDate":"2024-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"        sb.append(PREFIX_PID + patient.getPatientHospitalId().patientHospitalId + \" \");","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"        sb.append(PREFIX_NAME + patient.getName().fullName + \" \");","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"        sb.append(PREFIX_PREFERRED_NAME + patient.getPreferredName().preferredName + \" \");","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"        patient.getFoodPreferences().stream().forEach(","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"            s -\u003e sb.append(PREFIX_FOOD_PREFERENCE + s.foodPreference + \" \")","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"        );","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"        patient.getFamilyConditions().stream().forEach(","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"            s -\u003e sb.append(PREFIX_FAMILY_CONDITION + s.familyCondition + \" \")","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"        );","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"        patient.getHobbies().stream().forEach(","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"            s -\u003e sb.append(PREFIX_HOBBY + s.hobby + \" \")","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"        );","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"        patient.getTags().stream().forEach(","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"     * Returns the part of command string for the given {@code EditPatientDescriptor}\u0027s details.","lastModifiedDate":"2024-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"    public static String getEditPatientDescriptorDetails(EditPatientDescriptor descriptor) {","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"        descriptor.getPatientHospitalId().ifPresent(patientHospitalId -\u003e sb.append(PREFIX_PID)","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"            .append(patientHospitalId.patientHospitalId).append(\" \"));","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"        descriptor.getPreferredName().ifPresent(preferredName -\u003e sb.append(PREFIX_PREFERRED_NAME)","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"            .append(preferredName.preferredName).append(\" \"));","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"        descriptor.getFoodPreferences().ifPresent(foodPreferences -\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"            if (!foodPreferences.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"                foodPreferences.forEach(food -\u003e sb.append(PREFIX_FOOD_PREFERENCE)","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"                    .append(food.foodPreference).append(\" \"));","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"        });","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"        descriptor.getFamilyConditions().ifPresent(familyConditions -\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"            if (!familyConditions.isEmpty()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"choowengyan"},"content":"                familyConditions.forEach(familyCondition -\u003e sb.append(PREFIX_FAMILY_CONDITION)","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"                    .append(familyCondition.familyCondition).append(\" \"));","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"choowengyan"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"        });","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"choowengyan"},"content":"        descriptor.getHobbies().ifPresent(hobbies -\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"choowengyan"},"content":"            if (!hobbies.isEmpty()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"choowengyan"},"content":"                hobbies.forEach(hobby -\u003e sb.append(PREFIX_HOBBY)","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"choowengyan"},"content":"                    .append(hobby.hobby).append(\" \"));","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"choowengyan"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"choowengyan"},"content":"        });","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"choowengyan":42,"NeoHW":13,"-":40}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"     * Returns the middle index of the patient in the {@code model}\u0027s patient list.","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"        return Index.fromOneBased(model.getFilteredPatientList().size() / 2);","lastModifiedDate":"2024-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"     * Returns the last index of the patient in the {@code model}\u0027s patient list.","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"        return Index.fromOneBased(model.getFilteredPatientList().size());","lastModifiedDate":"2024-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"     * Returns the patient in the {@code model}\u0027s patient list at {@code index}.","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"    public static Patient getPatient(Model model, Index index) {","lastModifiedDate":"2024-03-09"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"        return model.getFilteredPatientList().get(index.getZeroBased());","lastModifiedDate":"2024-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"NeoHW":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"    public static final Index INDEX_FIRST_PATIENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-09"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"    public static final Index INDEX_SECOND_PATIENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2024-03-09"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"    public static final Index INDEX_THIRD_PATIENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2024-03-09"},{"lineNumber":12,"author":{"gitId":"ZhiWei1010"},"content":"    public static final Index INDEX_FIRST_EVENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"ZhiWei1010"},"content":"    public static final Index INDEX_SECOND_EVENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"ZhiWei1010"},"content":"    public static final Index INDEX_THIRD_EVENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"ZhiWei1010":3,"NeoHW":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalPatients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_DATE;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_DATETIME;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FAMILY_CONDITION_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FAMILY_CONDITION_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FOOD_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FOOD_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOBBY_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOBBY_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PREFERRED_NAME_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PREFERRED_NAME_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DEPRESSION;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DIABETES;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":" * A utility class containing a list of {@code Patient} objects to be used in tests.","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"public class TypicalPatients {","lastModifiedDate":"2024-03-09"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"    public static final Patient ALICE \u003d new PatientBuilder().withPatientHospitalId(\"12234\").withName(\"Alice Pauline\")","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"        .withPreferredName(\"Alice\").withFoodPreferences(\"Duck rice\", \"Ban Mian\")","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"        .withFamilyConditions(\"Have 2 daughters working overseas\").withHobbies(\"Watching Hong Kong drama\")","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"        .withTags(\"depression\").build();","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"    public static final Patient BENSON \u003d new PatientBuilder().withPatientHospitalId(\"12235\").withName(\"Benson Meier\")","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"        .withPreferredName(\"Benson\").withFoodPreferences(\"Kampung Fried Rice\")","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"        .withFamilyConditions(\"Wife in ICU\", \"No children\").withHobbies(\"Listen to Coldplay songs\")","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"        .withTags(\"diabetes\", \"cholesterol\").withEvents(","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"            new String[] { VALID_EVENT_NAME, VALID_EVENT_NAME },","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"            new String[] { VALID_EVENT_DATE, VALID_EVENT_DATETIME }).build();;","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"    public static final Patient CARL \u003d new PatientBuilder().withPatientHospitalId(\"12236\").withName(\"Carl Kurz\")","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"        .withPreferredName(\"Ah Carl\").withFoodPreferences(\"Sambal fish\").withFamilyConditions(\"Has no children\")","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"        .withHobbies(\"Likes to play mahjong\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"    public static final Patient DANIEL \u003d new PatientBuilder().withPatientHospitalId(\"12237\").withName(\"Daniel Meier\")","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"        .withPreferredName(\"Ah Da\").withFoodPreferences(\"Steak\").withFamilyConditions(\"Nieces not around Singapore\")","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"        .withHobbies(\"Cycling\").withTags(\"eczema\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"    public static final Patient ELLE \u003d new PatientBuilder().withPatientHospitalId(\"12238\").withName(\"Elle Meyer\")","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"        .withPreferredName(\"Elle\").withFoodPreferences(\"Maggie Goreng\").withFamilyConditions(\"Husband working overseas\")","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"        .withHobbies(\"Dancing\", \"Singing\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"    public static final Patient FIONA \u003d new PatientBuilder().withPatientHospitalId(\"12239\").withName(\"Fiona Kunz\")","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"        .withPreferredName(\"Ms Fi\").withFoodPreferences(\"Fish soup without milk\")","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"        .withFamilyConditions(\"Daughter fights with her every week\").withHobbies(\"dancing\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"    public static final Patient GEORGE \u003d new PatientBuilder().withPatientHospitalId(\"12240\").withName(\"George Best\")","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"        .withPreferredName(\"George\").withFoodPreferences(\"Salmon with lemon\").withFamilyConditions(\"no children\")","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"        .withHobbies(\"reading books\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"    public static final Patient HOON \u003d new PatientBuilder().withPatientHospitalId(\"12241\").withName(\"Hoon Meier\")","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"        .withPreferredName(\"Ah Hoon\").withFoodPreferences(\"Char Kuey Teow\")","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"        .withFamilyConditions(\"Husband unable to walk\").withHobbies(\"Reads novel\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"    public static final Patient IDA \u003d new PatientBuilder().withPatientHospitalId(\"12242\").withName(\"Ida Mueller\")","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"        .withPreferredName(\"Puan Ida\").withFoodPreferences(\"Nasi Kandang\")","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"        .withFamilyConditions(\"Children abandoned her\").withHobbies(\"Plays congkak\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"    // Manually added - Patient\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2024-03-08"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"    public static final Patient AMY \u003d new PatientBuilder().withPatientHospitalId(VALID_ID_AMY).withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"        .withPreferredName(VALID_PREFERRED_NAME_AMY).withFoodPreferences(VALID_FOOD_AMY)","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"        .withFamilyConditions(VALID_FAMILY_CONDITION_AMY).withHobbies(VALID_HOBBY_AMY)","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"        .withTags(VALID_TAG_DIABETES).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"    public static final Patient BOB \u003d new PatientBuilder().withPatientHospitalId(VALID_ID_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"        .withPreferredName(VALID_PREFERRED_NAME_BOB).withFoodPreferences(VALID_FOOD_BOB)","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"choowengyan"},"content":"        .withFamilyConditions(VALID_FAMILY_CONDITION_BOB).withHobbies(VALID_HOBBY_BOB)","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"        .withTags(VALID_TAG_DEPRESSION, VALID_TAG_DIABETES).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"    private TypicalPatients() {} // prevents instantiation","lastModifiedDate":"2024-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"     * Returns an {@code AddressBook} with all the typical patients.","lastModifiedDate":"2024-03-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"NeoHW"},"content":"        for (Patient patient : getTypicalPatients()) {","lastModifiedDate":"2024-03-09"},{"lineNumber":86,"author":{"gitId":"NeoHW"},"content":"            ab.addPatient(patient);","lastModifiedDate":"2024-03-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":91,"author":{"gitId":"NeoHW"},"content":"    public static List\u003cPatient\u003e getTypicalPatients() {","lastModifiedDate":"2024-03-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"SherisseTJW":8,"choowengyan":49,"NeoHW":9,"-":28}}]
