[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T08-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T08-1/tp/actions)","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"* **ImmuniMate** is a JavaFX application with a GUI, aimed at helping General Practitioners and Healthcare Professionals better keep track of Patient Information.\u003cbr\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"  Main Features:","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"  * Easily add and update patient information to Immunimate","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"  * Keep track of infected patients and clusters of information","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"  * Search for patients and patient history with a breeze","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* It is named `AddressBook Level 3` (`AB3` for short) because it was initially created as a part of a series of `AddressBook` projects (`Level 1`, `Level 2`, `Level 3` ...).","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"* For the detailed documentation and information on ImmuniMate, please visit our  **[website](https://ay2324s2-cs2103t-t08-1.github.io/tp/)**.","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"* This project is currently being developed by a student team in NUS. Our Source code for the project can be found **[here on github.](https://github.com/AY2324S2-CS2103T-T08-1/tp)**","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"jovantanyk":8,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"NatLeong"},"content":"    archiveFileName \u003d \u0027immuniMate.jar\u0027","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"jovantanyk"},"content":"run {","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"jovantanyk"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jovantanyk":3,"-":71,"NatLeong":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"We are a NUS based software development team.","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"You can contact us individually through our portfolios","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"## ImmuniMate Project Team","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"### Alex Setyawan","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"alex-setyawan"},"content":"\u003cimg src\u003d\"images/alex-setyawan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"alex-setyawan"},"content":"[[github](https://github.com/alex-setyawan)]","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"* Responsibilities: Project Manager, Back-end","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"### Tan Jovan","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"\u003cimg src\u003d\"images/jovantanyk.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"[[homepage](http:/jovantanyk.dev)]","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"[[github](https://github.com/jovantanyk)]","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"[[portfolio](team/jovantanyk.md)]","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"* Responsibilities: Back-end, Documentation","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"laney0808"},"content":"### Zhang Lanyu","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"\u003cimg src\u003d\"images/laney0808.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"laney0808"},"content":"[[github](http://github.com/laney0808)] [[portfolio](team/laney0808.md)]","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"* Responsibilities: Front-end, Documentation, UI Designer","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"### Natalie Leong","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"NatLeong"},"content":"\u003cimg src\u003d\"images/natleong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"NatLeong"},"content":"[[github](http://github.com/NatLeong)]","lastModifiedDate":"2024-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"* Responsibilities: Front-end, Documentation","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"alex-setyawan":2,"jovantanyk":15,"laney0808":2,"-":31,"NatLeong":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"alex-setyawan"},"content":"### Create new patient","lastModifiedDate":"2024-03-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"laney0808"},"content":"Create new patient feature allows the healthcare workers to add a new patient to ImmuniMate.","lastModifiedDate":"2024-03-24"},{"lineNumber":245,"author":{"gitId":"laney0808"},"content":"The healthcare worker must specify the patient\u0027s name, NRIC, phone, address, date of birth, sex, and status.","lastModifiedDate":"2024-03-24"},{"lineNumber":246,"author":{"gitId":"laney0808"},"content":"The process of creating a new patient in Model is as follows:","lastModifiedDate":"2024-03-24"},{"lineNumber":247,"author":{"gitId":"laney0808"},"content":"![CreateState1](images/CreateCommand.png)","lastModifiedDate":"2024-03-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"alex-setyawan"},"content":"### Update patient fields","lastModifiedDate":"2024-03-29"},{"lineNumber":250,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":251,"author":{"gitId":"alex-setyawan"},"content":"#### Proposed Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":252,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":253,"author":{"gitId":"alex-setyawan"},"content":"[to change below]","lastModifiedDate":"2024-03-29"},{"lineNumber":254,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":255,"author":{"gitId":"alex-setyawan"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2024-03-29"},{"lineNumber":256,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":257,"author":{"gitId":"alex-setyawan"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2024-03-29"},{"lineNumber":258,"author":{"gitId":"alex-setyawan"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2024-03-29"},{"lineNumber":259,"author":{"gitId":"alex-setyawan"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2024-03-29"},{"lineNumber":260,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":261,"author":{"gitId":"alex-setyawan"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2024-03-29"},{"lineNumber":262,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":263,"author":{"gitId":"alex-setyawan"},"content":"[to change above]","lastModifiedDate":"2024-03-29"},{"lineNumber":264,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":265,"author":{"gitId":"alex-setyawan"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2024-03-29"},{"lineNumber":266,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":267,"author":{"gitId":"alex-setyawan"},"content":"Step 1. The user launches the application for the first time.","lastModifiedDate":"2024-03-29"},{"lineNumber":268,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":269,"author":{"gitId":"alex-setyawan"},"content":"Step 2. The user types `update T0123456A a/35 Bishan Road, #10-40 con/myopia` command to update the address and condition fields in the profile of the person with `Nric` T0123456A in the address book. This calls `immuniMateParser.parseCommand()`, which separates the user input into the command `update` and the rest of the arguments.","lastModifiedDate":"2024-03-29"},{"lineNumber":270,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":271,"author":{"gitId":"alex-setyawan"},"content":"Step 3. As the command `update` matches `UpdateCommand.COMMAND_WORD`, `UpdateCommandParser().parse()` is called, taking in the rest of the arguments. Here, the arguments are checked if they are null values, then passed into `ArgumentTokenizer.tokenize()`, where they are separated into `Nric` and other provided fields by finding their respective prefixes, and stored in an `ArgumentMultimap`.","lastModifiedDate":"2024-03-29"},{"lineNumber":272,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":273,"author":{"gitId":"alex-setyawan"},"content":"Step 4. Still in `UpdateCommandParser().parse()`, checks are then done to verify the validity of the `Nric` and that no duplicate prefixes are found. A new `UpdatePersonDescriptor` object is then created to store the fields present in `ArgumentMultimap`.","lastModifiedDate":"2024-03-29"},{"lineNumber":274,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":275,"author":{"gitId":"alex-setyawan"},"content":"Step 5. At the end of `UpdateCommandParser().parse()`, a new `UpdateCommand` instance is created with the `Nric` and `UpdatePersonDescriptor` as arguments. `UpdateCommand.execute()` is then called, taking in the ImmuniMate `model` as an argument.","lastModifiedDate":"2024-03-29"},{"lineNumber":276,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":277,"author":{"gitId":"alex-setyawan"},"content":"Step 6. `model.getFilteredPersonsList()` retrieves the list of `Person`s stored, and a check is done to see if ImmuniMate has a `Person` with the given `Nric`.  This `Person` is then retrieved from the list, while a new `Person`  object is instantiated, with the `Person` and `UpdatePersonDescriptor` as arguments, representing the retrieved `Person` object with fields updated.","lastModifiedDate":"2024-03-29"},{"lineNumber":278,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":279,"author":{"gitId":"alex-setyawan"},"content":"Step 7. `model.setPerson()` then replaces the retrieved `Person` object with the new `Person` object with fields updated, taking in both `Person` objects as arguments. The `model` is then saved into `storage`.","lastModifiedDate":"2024-03-29"},{"lineNumber":280,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":281,"author":{"gitId":"alex-setyawan"},"content":"#### Design considerations:","lastModifiedDate":"2024-03-29"},{"lineNumber":282,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":283,"author":{"gitId":"alex-setyawan"},"content":"* **Alternative 1 (current choice):** Identify patient by `Nric`.","lastModifiedDate":"2024-03-29"},{"lineNumber":284,"author":{"gitId":"alex-setyawan"},"content":"  * Pros: More user convenience, as user just needs to type NRIC patients provide","lastModifiedDate":"2024-03-29"},{"lineNumber":285,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":286,"author":{"gitId":"alex-setyawan"},"content":"* **Alternative 2:** Identify patient by given `Index`.","lastModifiedDate":"2024-03-29"},{"lineNumber":287,"author":{"gitId":"alex-setyawan"},"content":"  * Pros: Easier to implement.","lastModifiedDate":"2024-03-29"},{"lineNumber":288,"author":{"gitId":"alex-setyawan"},"content":"  * Cons: Less user convenience, as user has to first know patient `Index` to find patient.","lastModifiedDate":"2024-03-29"},{"lineNumber":289,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":290,"author":{"gitId":"alex-setyawan"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2024-03-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":297,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":298,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"laney0808"},"content":"* has a need to manage a significant number of patient information","lastModifiedDate":"2024-03-17"},{"lineNumber":311,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":314,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"laney0808"},"content":"**Value proposition**: As the number of patients a General Practitioner grows, information management might prove complex, especially so for personal data. ImmuniMate offers a way to record comprehensive information about every patient, while ensuring timely updates and avoiding duplications/contradictions. It also seeks to establish links between patient for contact tracing and finding potential infectious clusters.","lastModifiedDate":"2024-03-17"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"| Priority | As a …​                          | I want to …​                                    | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"laney0808"},"content":"|----------|----------------------------------|-------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2024-03-17"},{"lineNumber":324,"author":{"gitId":"laney0808"},"content":"| `* * *`  | New user                         | see usage instructions                          | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2024-03-17"},{"lineNumber":325,"author":{"gitId":"laney0808"},"content":"| `* * *`  | Healthcare Worker                | add a new patient                               |                                                                        |","lastModifiedDate":"2024-03-17"},{"lineNumber":326,"author":{"gitId":"laney0808"},"content":"| `* * *`  | Healthcare Worker                | delete a patient                                | emove wrong or obselete information of a patient from the database     |","lastModifiedDate":"2024-03-17"},{"lineNumber":327,"author":{"gitId":"laney0808"},"content":"| `* * *`  | Healthcare Worker                | find a person by NRIC                           | locate details of persons without having to go through the entire list |","lastModifiedDate":"2024-03-17"},{"lineNumber":328,"author":{"gitId":"laney0808"},"content":"| `* * *`  | Healthcare Worker                | update a person\u0027s details                       | keep the details up to date                                            |","lastModifiedDate":"2024-03-17"},{"lineNumber":329,"author":{"gitId":"laney0808"},"content":"| `* * *`  | Healthcare Worker                | find a patient by matching criteria             | Find a list of patients who I need                                     |","lastModifiedDate":"2024-03-17"},{"lineNumber":330,"author":{"gitId":"laney0808"},"content":"| `* * *`  | Healthcare Worker                | Delete patient\u0027s information                    | remove patient information that is no longer correct                   |","lastModifiedDate":"2024-03-17"},{"lineNumber":331,"author":{"gitId":"laney0808"},"content":"| `* *`    | Healthcare Worker                | hide private contact details                    | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2024-03-17"},{"lineNumber":332,"author":{"gitId":"laney0808"},"content":"| `* *`    | Healthcare Worker                | highlight contradicting information and entries | minimize the mistakes in entries                                       |","lastModifiedDate":"2024-03-17"},{"lineNumber":333,"author":{"gitId":"laney0808"},"content":"| `* *`    | Healthcare Worker                | be able to resolve duplicate information        | correct wrong inputs                                                   |","lastModifiedDate":"2024-03-17"},{"lineNumber":334,"author":{"gitId":"laney0808"},"content":"| `* *`    | Healthcare Worker                | see the history of changes made to a patient    | understand the changes made to a patient                               |","lastModifiedDate":"2024-03-17"},{"lineNumber":335,"author":{"gitId":"laney0808"},"content":"| `* *`    | Healthcare Worker                | be able to tap different contact methods        | make sure important information is sent                                |","lastModifiedDate":"2024-03-17"},{"lineNumber":336,"author":{"gitId":"laney0808"},"content":"| `* *`    | Healthcare Worker                | see the close contacts of a patient             | see the links between infected patients                                |","lastModifiedDate":"2024-03-17"},{"lineNumber":337,"author":{"gitId":"laney0808"},"content":"| `* *`    | Healthcare Worker                | status of infection of a patient                | take follow-up actions                                                 |","lastModifiedDate":"2024-03-17"},{"lineNumber":338,"author":{"gitId":"laney0808"},"content":"| `* *`    | Healthcare Worker                | see clusters of infected patients               | understand which areas are at high risk of infection                   |","lastModifiedDate":"2024-03-17"},{"lineNumber":339,"author":{"gitId":"laney0808"},"content":"| `*`      | Healthcare Worker                | find the person who first spread the disease    | better understand the disease                                          |","lastModifiedDate":"2024-03-17"},{"lineNumber":340,"author":{"gitId":"laney0808"},"content":"| `*`      | Healthcare Worker                | sort persons by name                            | locate a person easily                                                 |","lastModifiedDate":"2024-03-17"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"laney0808"},"content":"**Use Case: UC01 - Create Patient Record**","lastModifiedDate":"2024-03-17"},{"lineNumber":347,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":348,"author":{"gitId":"laney0808"},"content":"- **Actor:** Healthcare Worker","lastModifiedDate":"2024-03-17"},{"lineNumber":349,"author":{"gitId":"laney0808"},"content":"- **Description:** Healthcare worker creates a new patient record in the ImmuniMate Address Book System.","lastModifiedDate":"2024-03-17"},{"lineNumber":350,"author":{"gitId":"laney0808"},"content":"- **Preconditions:** Healthcare worker has logged into the system.","lastModifiedDate":"2024-03-17"},{"lineNumber":351,"author":{"gitId":"laney0808"},"content":"- **Guarantees:** New patient record is successfully created in the ImmuniMate Address Book System.","lastModifiedDate":"2024-03-17"},{"lineNumber":352,"author":{"gitId":"laney0808"},"content":"- **MSS:**","lastModifiedDate":"2024-03-17"},{"lineNumber":353,"author":{"gitId":"laney0808"},"content":"    1. Healthcare worker choose to create a new patient record.","lastModifiedDate":"2024-03-17"},{"lineNumber":354,"author":{"gitId":"laney0808"},"content":"    2. IABS requests the necessary details for the new patient record (name, NRIC, date of birth, sex, phone number, address, email, country of nationality, date of admission, blood type, allergies).","lastModifiedDate":"2024-03-17"},{"lineNumber":355,"author":{"gitId":"laney0808"},"content":"    3. Healthcare worker enters the patient\u0027s details.","lastModifiedDate":"2024-03-17"},{"lineNumber":356,"author":{"gitId":"laney0808"},"content":"    4. IABS validates the entered data.","lastModifiedDate":"2024-03-17"},{"lineNumber":357,"author":{"gitId":"laney0808"},"content":"    5. IABS adds the new patient record to the database.","lastModifiedDate":"2024-03-17"},{"lineNumber":358,"author":{"gitId":"laney0808"},"content":"- **Extensions:**","lastModifiedDate":"2024-03-17"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":360,"author":{"gitId":"laney0808"},"content":"  3a. IABS detects a conflict in the entered data (user existing).","lastModifiedDate":"2024-03-17"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":362,"author":{"gitId":"laney0808"},"content":"  3a1. IABS shows the conflicting existing entry","lastModifiedDate":"2024-03-17"},{"lineNumber":363,"author":{"gitId":"laney0808"},"content":"  3a2. IABS requests for the correct data.","lastModifiedDate":"2024-03-17"},{"lineNumber":364,"author":{"gitId":"laney0808"},"content":"  3a3. Healthcare Worker enters new data.","lastModifiedDate":"2024-03-17"},{"lineNumber":365,"author":{"gitId":"laney0808"},"content":"  Steps 3a1-3a3 are repeated until the data entered are correct, or the user cancels the action.","lastModifiedDate":"2024-03-17"},{"lineNumber":366,"author":{"gitId":"laney0808"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2024-03-17"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":368,"author":{"gitId":"laney0808"},"content":"  3b. IABS detects an error in the entered data.","lastModifiedDate":"2024-03-17"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":370,"author":{"gitId":"laney0808"},"content":"  3b1. IABS requests for the correct data.","lastModifiedDate":"2024-03-17"},{"lineNumber":371,"author":{"gitId":"laney0808"},"content":"  3b2. Healthcare Worker enters new data.","lastModifiedDate":"2024-03-17"},{"lineNumber":372,"author":{"gitId":"laney0808"},"content":"  Steps 3b1-3b2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-17"},{"lineNumber":373,"author":{"gitId":"laney0808"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2024-03-17"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":375,"author":{"gitId":"laney0808"},"content":"  *a. At any time, Healthcare Worker chooses to cancel creating the patient record.","lastModifiedDate":"2024-03-17"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":377,"author":{"gitId":"laney0808"},"content":"  *a1. IABS requests confirmation to cancel.","lastModifiedDate":"2024-03-17"},{"lineNumber":378,"author":{"gitId":"laney0808"},"content":"  *a2. Healthcare Worker confirms the cancellation.","lastModifiedDate":"2024-03-17"},{"lineNumber":379,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2024-03-17"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":382,"author":{"gitId":"laney0808"},"content":"---","lastModifiedDate":"2024-03-17"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":384,"author":{"gitId":"laney0808"},"content":"### **Use Case: UC02 - Find Patient Information**","lastModifiedDate":"2024-03-17"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":386,"author":{"gitId":"laney0808"},"content":"- **Actor:** Healthcare Worker","lastModifiedDate":"2024-03-17"},{"lineNumber":387,"author":{"gitId":"laney0808"},"content":"- **Description:** Healthcare worker searches for specific patient information in the ImmuniMate Address Book System.","lastModifiedDate":"2024-03-17"},{"lineNumber":388,"author":{"gitId":"laney0808"},"content":"- **Preconditions:** Healthcare worker has logged into the system.","lastModifiedDate":"2024-03-17"},{"lineNumber":389,"author":{"gitId":"laney0808"},"content":"- **Guarantees:** Relevant patient information is displayed for the healthcare worker to view.","lastModifiedDate":"2024-03-17"},{"lineNumber":390,"author":{"gitId":"laney0808"},"content":"- **Basic Flow:**","lastModifiedDate":"2024-03-17"},{"lineNumber":391,"author":{"gitId":"laney0808"},"content":"    1. Healthcare worker chooses to find patient information meeting specified criteria.","lastModifiedDate":"2024-03-17"},{"lineNumber":392,"author":{"gitId":"laney0808"},"content":"    2. IABS searches for and displays the relevant patients.","lastModifiedDate":"2024-03-17"},{"lineNumber":393,"author":{"gitId":"laney0808"},"content":"- **Extensions:**","lastModifiedDate":"2024-03-17"},{"lineNumber":394,"author":{"gitId":"laney0808"},"content":"  2a. IABS detects an error in the entered data.","lastModifiedDate":"2024-03-17"},{"lineNumber":395,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":396,"author":{"gitId":"laney0808"},"content":"  - 2a1. IABS requests for the correct data.","lastModifiedDate":"2024-03-17"},{"lineNumber":397,"author":{"gitId":"laney0808"},"content":"  - 2a2. Healthcare Worker enters new data.","lastModifiedDate":"2024-03-17"},{"lineNumber":398,"author":{"gitId":"laney0808"},"content":"  - Steps 2a1-2a2 are repeated until the data entered are correct. Use case resumes from step 3.","lastModifiedDate":"2024-03-17"},{"lineNumber":399,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":400,"author":{"gitId":"laney0808"},"content":"---","lastModifiedDate":"2024-03-17"},{"lineNumber":401,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":402,"author":{"gitId":"laney0808"},"content":"**Use Case: UC03 - Update Patient Information**","lastModifiedDate":"2024-03-17"},{"lineNumber":403,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":404,"author":{"gitId":"laney0808"},"content":"- **Actor:** Healthcare Worker","lastModifiedDate":"2024-03-17"},{"lineNumber":405,"author":{"gitId":"laney0808"},"content":"- **Description:** Healthcare worker updates a patient\u0027s information in the ImmuniMate Address Book System.","lastModifiedDate":"2024-03-17"},{"lineNumber":406,"author":{"gitId":"laney0808"},"content":"- **Preconditions:** Healthcare worker has logged into the system and has selected the patient whose information needs to be updated.","lastModifiedDate":"2024-03-17"},{"lineNumber":407,"author":{"gitId":"laney0808"},"content":"- **Guarantees:** Patient\u0027s information is successfully updated in the ImmuniMate Address Book System.","lastModifiedDate":"2024-03-17"},{"lineNumber":408,"author":{"gitId":"laney0808"},"content":"- **Basic Flow:**","lastModifiedDate":"2024-03-17"},{"lineNumber":409,"author":{"gitId":"laney0808"},"content":"    1. Healthcare worker chooses to update a certain patient’s certain information.","lastModifiedDate":"2024-03-17"},{"lineNumber":410,"author":{"gitId":"laney0808"},"content":"    2. IABS validates the new content.","lastModifiedDate":"2024-03-17"},{"lineNumber":411,"author":{"gitId":"laney0808"},"content":"    3. IABS updates the patient\u0027s information in the database.","lastModifiedDate":"2024-03-17"},{"lineNumber":412,"author":{"gitId":"laney0808"},"content":"- **Extensions:**","lastModifiedDate":"2024-03-17"},{"lineNumber":413,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":414,"author":{"gitId":"laney0808"},"content":"  2a. IABS detects an error in the entered data.","lastModifiedDate":"2024-03-17"},{"lineNumber":415,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":416,"author":{"gitId":"laney0808"},"content":"  2a1. IABS requests for the correct data.","lastModifiedDate":"2024-03-17"},{"lineNumber":417,"author":{"gitId":"laney0808"},"content":"  2a2. Healthcare Worker enters new data.","lastModifiedDate":"2024-03-17"},{"lineNumber":418,"author":{"gitId":"laney0808"},"content":"  Steps 2a1-2a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-17"},{"lineNumber":419,"author":{"gitId":"laney0808"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2024-03-17"},{"lineNumber":420,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":421,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":422,"author":{"gitId":"laney0808"},"content":"---","lastModifiedDate":"2024-03-17"},{"lineNumber":423,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":424,"author":{"gitId":"laney0808"},"content":"**Use Case: UC04 - Delete Patient Record**","lastModifiedDate":"2024-03-17"},{"lineNumber":425,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":426,"author":{"gitId":"laney0808"},"content":"- **Actor:** Healthcare worker","lastModifiedDate":"2024-03-17"},{"lineNumber":427,"author":{"gitId":"laney0808"},"content":"- **Description:** Healthcare worker deletes a patient\u0027s record from the ImmuniMate Address Book System.","lastModifiedDate":"2024-03-17"},{"lineNumber":428,"author":{"gitId":"alex-setyawan"},"content":"- **Preconditions:** Healthcare worker has opened the app and has selected the patient whose record needs to be deleted.","lastModifiedDate":"2024-03-16"},{"lineNumber":429,"author":{"gitId":"laney0808"},"content":"- **Guarantees:** Patient\u0027s record is successfully deleted from the ImmuniMate Address Book System.","lastModifiedDate":"2024-03-17"},{"lineNumber":430,"author":{"gitId":"alex-setyawan"},"content":"- **MSS:**","lastModifiedDate":"2024-03-16"},{"lineNumber":431,"author":{"gitId":"laney0808"},"content":"    1. Healthcare worker choose to delete a specified patient’s record.","lastModifiedDate":"2024-03-17"},{"lineNumber":432,"author":{"gitId":"alex-setyawan"},"content":"    2. IABS validates the NRIC and deletes the patient\u0027s record from the database.","lastModifiedDate":"2024-03-16"},{"lineNumber":433,"author":{"gitId":"laney0808"},"content":"- **Extensions:**","lastModifiedDate":"2024-03-17"},{"lineNumber":434,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":435,"author":{"gitId":"laney0808"},"content":"  2a. IABS cannot find the patient specified.","lastModifiedDate":"2024-03-17"},{"lineNumber":436,"author":{"gitId":"alex-setyawan"},"content":"  - 2a1. IABS requests for the correct NRIC.","lastModifiedDate":"2024-03-16"},{"lineNumber":437,"author":{"gitId":"alex-setyawan"},"content":"  - 2a2. Healthcare worker enters new NRIC.","lastModifiedDate":"2024-03-16"},{"lineNumber":438,"author":{"gitId":"alex-setyawan"},"content":"  - Steps 2a1-2a2 are repeated until the data entered are correct or Healthcare worker cancels the action. Use case resumes from step 3.","lastModifiedDate":"2024-03-16"},{"lineNumber":439,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":440,"author":{"gitId":"laney0808"},"content":"**Use Case: UC05 - Delete Patient Information**","lastModifiedDate":"2024-03-17"},{"lineNumber":441,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":442,"author":{"gitId":"laney0808"},"content":"- **Actor:** Healthcare Worker","lastModifiedDate":"2024-03-17"},{"lineNumber":443,"author":{"gitId":"laney0808"},"content":"- **Description:** Healthcare worker deletes specific information from a patient\u0027s record in the ImmuniMate Address Book System.","lastModifiedDate":"2024-03-17"},{"lineNumber":444,"author":{"gitId":"laney0808"},"content":"- **Preconditions:** Healthcare worker has logged into the system and has selected the patient whose information needs to be deleted.","lastModifiedDate":"2024-03-17"},{"lineNumber":445,"author":{"gitId":"laney0808"},"content":"- **Guarantees:** Specified information is successfully deleted from the patient\u0027s record in the ImmuniMate Address Book System.","lastModifiedDate":"2024-03-17"},{"lineNumber":446,"author":{"gitId":"alex-setyawan"},"content":"- **MSS:**","lastModifiedDate":"2024-03-16"},{"lineNumber":447,"author":{"gitId":"alex-setyawan"},"content":"    1. Healthcare worker chooses to delete certain fields of a certain patient\u0027s profile.","lastModifiedDate":"2024-03-16"},{"lineNumber":448,"author":{"gitId":"alex-setyawan"},"content":"    2. IABS validates the information to be deleted and deletes the specified information from the patient\u0027s record in the database.","lastModifiedDate":"2024-03-16"},{"lineNumber":449,"author":{"gitId":"laney0808"},"content":"- **Extensions:**","lastModifiedDate":"2024-03-17"},{"lineNumber":450,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":451,"author":{"gitId":"laney0808"},"content":"  2a. IABS cannot find the patient specified.","lastModifiedDate":"2024-03-17"},{"lineNumber":452,"author":{"gitId":"alex-setyawan"},"content":"  - 2a1. IABS requests for the correct NRIC.","lastModifiedDate":"2024-03-16"},{"lineNumber":453,"author":{"gitId":"alex-setyawan"},"content":"  - 2a2. Healthcare worker enters new NRIC.","lastModifiedDate":"2024-03-16"},{"lineNumber":454,"author":{"gitId":"alex-setyawan"},"content":"  - Steps 2a1-2a2 are repeated until the data entered are correct or Healthcare worker cancels the action. Use case resumes from step 3.","lastModifiedDate":"2024-03-16"},{"lineNumber":455,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":456,"author":{"gitId":"laney0808"},"content":"  2b. IABS cannot find the specified information.","lastModifiedDate":"2024-03-17"},{"lineNumber":457,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":458,"author":{"gitId":"alex-setyawan"},"content":"  - 2b1. IABS alerts healthcare worker that the specified information is not found.","lastModifiedDate":"2024-03-16"},{"lineNumber":459,"author":{"gitId":"alex-setyawan"},"content":"  - 2b2. Healthcare worker enters new field.","lastModifiedDate":"2024-03-16"},{"lineNumber":460,"author":{"gitId":"alex-setyawan"},"content":"  - Steps 2b1-2b2 are repeated until the data entered are correct or Healthcare worker cancels the action. Use case resumes from step 3.","lastModifiedDate":"2024-03-16"},{"lineNumber":461,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":462,"author":{"gitId":"laney0808"},"content":"  2c. Healthcare worker chooses to delete a mandatory field.","lastModifiedDate":"2024-03-17"},{"lineNumber":463,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":464,"author":{"gitId":"alex-setyawan"},"content":"  - 2c1. IABS alerts healthcare worker that mandatory field cannot be deleted.","lastModifiedDate":"2024-03-16"},{"lineNumber":465,"author":{"gitId":"alex-setyawan"},"content":"  - 2c2. Healthcare worker enters new field.","lastModifiedDate":"2024-03-16"},{"lineNumber":466,"author":{"gitId":"alex-setyawan"},"content":"  - Steps 2c1-2c2 are repeated until the data entered are correct or Healthcare worker cancels the action. Use case resumes from step 3.","lastModifiedDate":"2024-03-16"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"alex-setyawan"},"content":"Data Requirements:","lastModifiedDate":"2024-03-16"},{"lineNumber":475,"author":{"gitId":"alex-setyawan"},"content":"* the app should have high data persistency","lastModifiedDate":"2024-03-16"},{"lineNumber":476,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":477,"author":{"gitId":"alex-setyawan"},"content":"Environment Requirements:","lastModifiedDate":"2024-03-16"},{"lineNumber":478,"author":{"gitId":"alex-setyawan"},"content":"* the app should work on both 32-bit and 64-bit environments","lastModifiedDate":"2024-03-16"},{"lineNumber":479,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":480,"author":{"gitId":"alex-setyawan"},"content":"Accessibility:","lastModifiedDate":"2024-03-16"},{"lineNumber":481,"author":{"gitId":"alex-setyawan"},"content":"* the app should be easily downloaded from websites/app stores, and need no prior setup","lastModifiedDate":"2024-03-16"},{"lineNumber":482,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":483,"author":{"gitId":"alex-setyawan"},"content":"Capacity:","lastModifiedDate":"2024-03-16"},{"lineNumber":484,"author":{"gitId":"alex-setyawan"},"content":"* the app should be able to store 10000 profiles ","lastModifiedDate":"2024-03-16"},{"lineNumber":485,"author":{"gitId":"alex-setyawan"},"content":"* the app should not exceed 10GB in storage space","lastModifiedDate":"2024-03-16"},{"lineNumber":486,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":487,"author":{"gitId":"alex-setyawan"},"content":"Compliance with regulations:","lastModifiedDate":"2024-03-16"},{"lineNumber":488,"author":{"gitId":"alex-setyawan"},"content":"* personal data collection on the app should adhere to the Personal Data Protection Act (PDPA)","lastModifiedDate":"2024-03-16"},{"lineNumber":489,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":490,"author":{"gitId":"alex-setyawan"},"content":"Extensibility:","lastModifiedDate":"2024-03-16"},{"lineNumber":491,"author":{"gitId":"alex-setyawan"},"content":"* the app should enable new profile fields to be added easily","lastModifiedDate":"2024-03-16"},{"lineNumber":492,"author":{"gitId":"alex-setyawan"},"content":"* the app should be convenient to expand its capacity when needed","lastModifiedDate":"2024-03-16"},{"lineNumber":493,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":494,"author":{"gitId":"alex-setyawan"},"content":"Interoperability:","lastModifiedDate":"2024-03-16"},{"lineNumber":495,"author":{"gitId":"alex-setyawan"},"content":"* the app should be compatible with Windows, MacOS, Linux platforms","lastModifiedDate":"2024-03-16"},{"lineNumber":496,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":497,"author":{"gitId":"alex-setyawan"},"content":"Maintainability:","lastModifiedDate":"2024-03-16"},{"lineNumber":498,"author":{"gitId":"alex-setyawan"},"content":"* the app should use automated testing","lastModifiedDate":"2024-03-16"},{"lineNumber":499,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":500,"author":{"gitId":"alex-setyawan"},"content":"Performance requirements:","lastModifiedDate":"2024-03-16"},{"lineNumber":501,"author":{"gitId":"alex-setyawan"},"content":"* the app should respond to queries within 1 second","lastModifiedDate":"2024-03-16"},{"lineNumber":502,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":503,"author":{"gitId":"alex-setyawan"},"content":"Process requirements:","lastModifiedDate":"2024-03-16"},{"lineNumber":504,"author":{"gitId":"alex-setyawan"},"content":"* the project should adhere to a schedule to deliver new features fortnightly","lastModifiedDate":"2024-03-16"},{"lineNumber":505,"author":{"gitId":"alex-setyawan"},"content":"* the project should aim to solve bugs found in one version by the next version","lastModifiedDate":"2024-03-16"},{"lineNumber":506,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":507,"author":{"gitId":"alex-setyawan"},"content":"Quality requirements:","lastModifiedDate":"2024-03-16"},{"lineNumber":508,"author":{"gitId":"alex-setyawan"},"content":"* the app should be usable by doctors/nurses/receptionists with limited guidance","lastModifiedDate":"2024-03-16"},{"lineNumber":509,"author":{"gitId":"alex-setyawan"},"content":"* the app should be faster to use by typing queries than using the mouse","lastModifiedDate":"2024-03-16"},{"lineNumber":510,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":511,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"alex-setyawan"},"content":"1. **Patient Name**: The name of the patient. Case insensitive alphabetical characters with spaces, capped at 30 characters.","lastModifiedDate":"2024-03-16"},{"lineNumber":514,"author":{"gitId":"alex-setyawan"},"content":"2. **NRIC**: National Registration Identity Card number, follows Singapore NRIC format.","lastModifiedDate":"2024-03-16"},{"lineNumber":515,"author":{"gitId":"alex-setyawan"},"content":"3. **Date of Birth (DOB)**: The patient\u0027s date of birth, in the format `yyyy-MM-dd`.","lastModifiedDate":"2024-03-16"},{"lineNumber":516,"author":{"gitId":"alex-setyawan"},"content":"4. **Sex**: The biological sex of the patient, limited to Male/Female.","lastModifiedDate":"2024-03-16"},{"lineNumber":517,"author":{"gitId":"alex-setyawan"},"content":"5. **Phone Number**: The contact number of the patient, numbers with a plus sign.","lastModifiedDate":"2024-03-16"},{"lineNumber":518,"author":{"gitId":"alex-setyawan"},"content":"6. **Address**: The home address of the patient, alphanumerical characters with spaces.","lastModifiedDate":"2024-03-16"},{"lineNumber":519,"author":{"gitId":"alex-setyawan"},"content":"7. **Email**: The email address of the patient, follows a valid format: `\u003ca-zA-Z0-9\u003e@\u003ca-zA-Z0-9\u003e.com`.","lastModifiedDate":"2024-03-16"},{"lineNumber":520,"author":{"gitId":"alex-setyawan"},"content":"8. **Country of Nationality**: The country name of the patient\u0027s nationality, alphabetical characters with spaces.","lastModifiedDate":"2024-03-16"},{"lineNumber":521,"author":{"gitId":"alex-setyawan"},"content":"9. **Date of Admission (DOA)**: The date when the patient was admitted for the current visit, in the format `yyyy-MM-dd`.","lastModifiedDate":"2024-03-16"},{"lineNumber":522,"author":{"gitId":"alex-setyawan"},"content":"10. **Blood Type**: The blood type of the patient, accepts A/B/AB/O (+ or -).","lastModifiedDate":"2024-03-16"},{"lineNumber":523,"author":{"gitId":"alex-setyawan"},"content":"11. **Allergies**: Any allergies the patient may have, alphanumerical characters with spaces.","lastModifiedDate":"2024-03-16"},{"lineNumber":524,"author":{"gitId":"alex-setyawan"},"content":"12. **Conditions**: Any prior medical conditions of the patient.","lastModifiedDate":"2024-03-16"},{"lineNumber":525,"author":{"gitId":"alex-setyawan"},"content":"13. **Symptoms**: The latest symptoms experienced by the patient.","lastModifiedDate":"2024-03-16"},{"lineNumber":526,"author":{"gitId":"alex-setyawan"},"content":"14. **Diagnosis**: The latest diagnosis of the patient\u0027s condition.","lastModifiedDate":"2024-03-16"},{"lineNumber":527,"author":{"gitId":"alex-setyawan"},"content":"15. **Status**: The current infectious status of the patient, can be healthy (green), at risk (yellow), or infected (red).","lastModifiedDate":"2024-03-16"},{"lineNumber":528,"author":{"gitId":"alex-setyawan"},"content":"16. **Location**: A specific area or zone, which can be a neighbourhood or an institution (school).","lastModifiedDate":"2024-03-16"},{"lineNumber":529,"author":{"gitId":"alex-setyawan"},"content":"17. **Cluster ID**: Unique identifier for a cluster of related cases.","lastModifiedDate":"2024-03-16"},{"lineNumber":530,"author":{"gitId":"alex-setyawan"},"content":"18. **Fields**: The fields of the patient\u0027s information, such as name, status, contact.","lastModifiedDate":"2024-03-16"},{"lineNumber":531,"author":{"gitId":"alex-setyawan"},"content":"19. **Infection Source**: The source of infection if known.","lastModifiedDate":"2024-03-16"},{"lineNumber":532,"author":{"gitId":"alex-setyawan"},"content":"20. **Cluster Members**: Patients who are part of the cluster.","lastModifiedDate":"2024-03-16"},{"lineNumber":533,"author":{"gitId":"alex-setyawan"},"content":"21. **Cluster Location**: Location associated with the cluster.","lastModifiedDate":"2024-03-16"},{"lineNumber":534,"author":{"gitId":"alex-setyawan"},"content":"22. **Date of First Infection**: The date when the first infection within the cluster occurred.","lastModifiedDate":"2024-03-16"},{"lineNumber":535,"author":{"gitId":"alex-setyawan"},"content":"23. **Cluster Status**: The current status of the cluster, such as active, under observation, resolved, etc.","lastModifiedDate":"2024-03-16"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"alex-setyawan":121,"laney0808":117,"-":351}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"## Introduction","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"As government databases grow, information management might prove complex for civil servants, especially so for personal data. **ImmuniMate** offers a way to record comprehensive information about every contact, while ensuring timely updates and avoiding duplications/contradictions. It also seeks to establish links between contacts for speedier information retrieval.","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Download the latest `addressbook.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar addressbook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-01-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"jovantanyk"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"AddressBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause the AddressBook to behave in unexpected ways (e.g., if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-02-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jovantanyk":3,"-":195}},{"path":"docs/diagrams/CreateCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"laney0808"},"content":"@startuml","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"laney0808"},"content":"!include style.puml","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"laney0808"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"laney0808"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"laney0808"},"content":"participant \":CreateCommand\" as CreateCommand MODEL_COLOR","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"laney0808"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"laney0808"},"content":"participant \":ImmuniMate\" as ImmuniMate MODEL_COLOR","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"laney0808"},"content":"participant \":UniquePersonList\" as UniquePersonList MODEL_COLOR","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"laney0808"},"content":"participant \"internalList: ObservableList\u003cPerson\u003e\" as internalList MODEL_COLOR","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"laney0808"},"content":"participant \"p:Person\" as p MODEL_COLOR","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"laney0808"},"content":"end box","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"laney0808"},"content":"[-\u003e CreateCommand : execute()","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"laney0808"},"content":"activate CreateCommand","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"laney0808"},"content":"CreateCommand -\u003e ModelManager : hasPerson(p)","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"laney0808"},"content":"activate ModelManager","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"laney0808"},"content":"ModelManager -\u003e ImmuniMate: hasPerson(p)","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"laney0808"},"content":"activate ImmuniMate","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"laney0808"},"content":"ImmuniMate --\u003e UniquePersonList : contains(p)","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"laney0808"},"content":"activate UniquePersonList","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"laney0808"},"content":"UniquePersonList -\u003e internalList : stream().anyMatch(p::isSamePerson)","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"laney0808"},"content":"activate internalList","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"laney0808"},"content":"internalList -\u003e p : isSamePerson(p)","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"laney0808"},"content":"activate p","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"laney0808"},"content":"p --\u003e internalList","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"laney0808"},"content":"deactivate p","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"laney0808"},"content":"internalList --\u003e UniquePersonList","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"laney0808"},"content":"deactivate internalList","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"laney0808"},"content":"UniquePersonList --\u003e ImmuniMate","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"laney0808"},"content":"deactivate UniquePersonList","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"laney0808"},"content":"ImmuniMate --\u003e ModelManager","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"laney0808"},"content":"deactivate ImmuniMate","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"laney0808"},"content":"ModelManager --\u003e CreateCommand","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"laney0808"},"content":"deactivate ModelManager","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"laney0808"},"content":"[\u003c--CreateCommand","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"laney0808"},"content":"@enduml","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"laney0808":49}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"Person *--\u003e \"1\" Nric","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"Person *--\u003e \"1\" Address","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"Person *--\u003e \"1\" DateOfBirth","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"Person *--\u003e \"1\" Sex","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"Person *--\u003e \"1\" Status","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"Person *--\u003e \"0..*\" Tags","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"Person *--\u003e \"0..1\" Email","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"Person *--\u003e \"0..1\" Country","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"Person *--\u003e \"0..1\" Allergies","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"Person *--\u003e \"0..1\" BloodType","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"Person *--\u003e \"0..1\" Condition","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"jovantanyk"},"content":"Person *--\u003e \"0..1\" DateOfAdmission","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"jovantanyk"},"content":"Person *--\u003e \"0..1\" Diagnosis","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"jovantanyk"},"content":"Person *--\u003e \"0..1\" Symptom","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jovantanyk":16,"-":49}},{"path":"docs/diagrams/ReadCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NatLeong"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"NatLeong"},"content":"!include style.puml","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"NatLeong"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"NatLeong"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"NatLeong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"NatLeong"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"NatLeong"},"content":"participant \":ReadCommandParser\" as ReadCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"NatLeong"},"content":"participant \"r:ReadCommand\" as ReadCommand LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"NatLeong"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"NatLeong"},"content":"end box","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"NatLeong"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"NatLeong"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"NatLeong"},"content":"end box","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"NatLeong"},"content":"[-\u003e LogicManager : execute(\"read T0123456A\")","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"NatLeong"},"content":"activate LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"NatLeong"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"read T0123456A\")","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"NatLeong"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"NatLeong"},"content":"create ReadCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"NatLeong"},"content":"AddressBookParser -\u003e ReadCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"NatLeong"},"content":"activate ReadCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"NatLeong"},"content":"ReadCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"NatLeong"},"content":"deactivate ReadCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"NatLeong"},"content":"AddressBookParser -\u003e ReadCommandParser : parse(\"T0123456A\")","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"NatLeong"},"content":"activate ReadCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"NatLeong"},"content":"create ReadCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"NatLeong"},"content":"ReadCommandParser -\u003e ReadCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"NatLeong"},"content":"activate ReadCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"NatLeong"},"content":"ReadCommand --\u003e ReadCommandParser :","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"NatLeong"},"content":"deactivate ReadCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"NatLeong"},"content":"ReadCommandParser --\u003e AddressBookParser : r","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"NatLeong"},"content":"deactivate ReadCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"NatLeong"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"NatLeong"},"content":"ReadCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"NatLeong"},"content":"destroy ReadCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"NatLeong"},"content":"AddressBookParser --\u003e LogicManager : r","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"NatLeong"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"NatLeong"},"content":"LogicManager -\u003e ReadCommand : execute(m)","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"NatLeong"},"content":"activate ReadCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"NatLeong"},"content":"ReadCommand -\u003e Model","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"NatLeong"},"content":"activate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"NatLeong"},"content":"Model --\u003e ReadCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"NatLeong"},"content":"deactivate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"NatLeong"},"content":"create CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"NatLeong"},"content":"ReadCommand -\u003e CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"NatLeong"},"content":"activate CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"NatLeong"},"content":"CommandResult --\u003e ReadCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"NatLeong"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"NatLeong"},"content":"ReadCommand --\u003e LogicManager :","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"NatLeong"},"content":"deactivate ReadCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"NatLeong"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"NatLeong"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"NatLeong"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"NatLeong":70}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"title: ImmuniMate","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"**ImmuniMate is a desktop application aimed at General Practitioners and Healthcare Professionals**. The application intends to assist users in managing patient information, and tracking potential infectious.","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jovantanyk":2,"-":17}},{"path":"docs/team/jovantanyk.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"layout: page","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"title: Jovan Tan\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"* **Project management**:","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"  * User Guide:","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"  * Developer Guide:","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"* **Community**:","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"* **Tools**:","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"jovantanyk":46}},{"path":"docs/team/laney0808.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"laney0808"},"content":"---","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"laney0808"},"content":"layout: page","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"laney0808"},"content":"title: Zhang Lanyu\u0027s Project Portfolio Page","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"laney0808"},"content":"---","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"laney0808"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"laney0808"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"laney0808"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"laney0808"},"content":"* **New Feature**: Added the ability to update patient\u0027s information in feature list.","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"laney0808"},"content":"  * What it does: Allows user to update any field of any specified patient.","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"laney0808"},"content":"  * Justification: This feature allows the user to update the patient\u0027s health condition and keep track of their contact information in a timely manner.","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"laney0808"},"content":"  * Highlights: This feature enhances the convenience of usage as the user no longer need to delete the old record and key in new record with most of the information to be repeated.","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"laney0808"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"laney0808"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"laney0808"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"laney0808"},"content":"* **Project management**:","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"laney0808"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"laney0808"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"laney0808"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"laney0808"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"laney0808"},"content":"* **Documentation**:","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"laney0808"},"content":"  * User Guide:","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"laney0808"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"laney0808"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"laney0808"},"content":"  * Developer Guide:","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"laney0808"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"laney0808"},"content":"* **Community**:","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"laney0808"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"laney0808"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"laney0808"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"laney0808"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"laney0808"},"content":"* **Tools**:","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"laney0808"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"laney0808"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"laney0808"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"laney0808":46}},{"path":"docs/team/natleong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NatLeong"},"content":"---","lastModifiedDate":"2024-03-09"},{"lineNumber":2,"author":{"gitId":"NatLeong"},"content":"layout: page","lastModifiedDate":"2024-03-09"},{"lineNumber":3,"author":{"gitId":"NatLeong"},"content":"title: Natalie Leong\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-09"},{"lineNumber":4,"author":{"gitId":"NatLeong"},"content":"---","lastModifiedDate":"2024-03-09"},{"lineNumber":5,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":6,"author":{"gitId":"NatLeong"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-03-09"},{"lineNumber":7,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":8,"author":{"gitId":"NatLeong"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-09"},{"lineNumber":9,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":10,"author":{"gitId":"NatLeong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-09"},{"lineNumber":11,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":12,"author":{"gitId":"NatLeong"},"content":"* **New Feature**: Added the ability to update patient\u0027s information in feature list.","lastModifiedDate":"2024-03-09"},{"lineNumber":13,"author":{"gitId":"NatLeong"},"content":"    * What it does: Allows user to update any field of any specified patient.","lastModifiedDate":"2024-03-09"},{"lineNumber":14,"author":{"gitId":"NatLeong"},"content":"    * Justification: This feature allows the user to update the patient\u0027s health condition and keep track of their contact information in a timely manner.","lastModifiedDate":"2024-03-09"},{"lineNumber":15,"author":{"gitId":"NatLeong"},"content":"    * Highlights: This feature enhances the convenience of usage as the user no longer need to delete the old record and key in new record with most of the information to be repeated.","lastModifiedDate":"2024-03-09"},{"lineNumber":16,"author":{"gitId":"NatLeong"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-09"},{"lineNumber":17,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":18,"author":{"gitId":"NatLeong"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-09"},{"lineNumber":19,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":20,"author":{"gitId":"NatLeong"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-09"},{"lineNumber":21,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":22,"author":{"gitId":"NatLeong"},"content":"* **Project management**:","lastModifiedDate":"2024-03-09"},{"lineNumber":23,"author":{"gitId":"NatLeong"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-09"},{"lineNumber":24,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":25,"author":{"gitId":"NatLeong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-09"},{"lineNumber":26,"author":{"gitId":"NatLeong"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-09"},{"lineNumber":27,"author":{"gitId":"NatLeong"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-09"},{"lineNumber":28,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":29,"author":{"gitId":"NatLeong"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-09"},{"lineNumber":30,"author":{"gitId":"NatLeong"},"content":"    * User Guide:","lastModifiedDate":"2024-03-09"},{"lineNumber":31,"author":{"gitId":"NatLeong"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-09"},{"lineNumber":32,"author":{"gitId":"NatLeong"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-09"},{"lineNumber":33,"author":{"gitId":"NatLeong"},"content":"    * Developer Guide:","lastModifiedDate":"2024-03-09"},{"lineNumber":34,"author":{"gitId":"NatLeong"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-09"},{"lineNumber":35,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":36,"author":{"gitId":"NatLeong"},"content":"* **Community**:","lastModifiedDate":"2024-03-09"},{"lineNumber":37,"author":{"gitId":"NatLeong"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-09"},{"lineNumber":38,"author":{"gitId":"NatLeong"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-09"},{"lineNumber":39,"author":{"gitId":"NatLeong"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-09"},{"lineNumber":40,"author":{"gitId":"NatLeong"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-09"},{"lineNumber":41,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":42,"author":{"gitId":"NatLeong"},"content":"* **Tools**:","lastModifiedDate":"2024-03-09"},{"lineNumber":43,"author":{"gitId":"NatLeong"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-09"},{"lineNumber":44,"author":{"gitId":"NatLeong"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-09"},{"lineNumber":45,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":46,"author":{"gitId":"NatLeong"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-03-09"}],"authorContributionMap":{"NatLeong":46}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ReadOnlyImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"laney0808"},"content":"        Optional\u003cReadOnlyImmuniMate\u003e addressBookOptional;","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"laney0808"},"content":"        ReadOnlyImmuniMate initialData;","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"laney0808"},"content":"            initialData \u003d new ImmuniMate();","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"laney0808":5,"-":181}},{"path":"src/main/java/seedu/address/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class))","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"                    .addSerializer(new OptionalSerializer()));","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jovantanyk":2,"-":143}},{"path":"src/main/java/seedu/address/commons/util/OptionalSerializer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"import com.fasterxml.jackson.core.JsonGenerator;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"import com.fasterxml.jackson.databind.JsonSerializer;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"import com.fasterxml.jackson.databind.SerializerProvider;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":" * A Serializer for handling Optional values and converting them into","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":" * proper JSON strings with correct null formatting.","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"public class OptionalSerializer extends JsonSerializer\u003cOptional\u003c?\u003e\u003e {","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"    public void serialize(Optional\u003c?\u003e optional, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"            throws IOException {","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"        if (optional.isPresent()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"            jsonGenerator.writeObject(optional.get());","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"        } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"            jsonGenerator.writeNull();","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"     * Avoids directly specifying Optional.class with generics","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"    public Class\u003cOptional\u003c?\u003e\u003e handledType() {","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"        return (Class\u003cOptional\u003c?\u003e\u003e) (Class\u003c?\u003e) Optional.class;","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"jovantanyk":30}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"alex-setyawan"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"alex-setyawan"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"alex-setyawan"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"alex-setyawan"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"alex-setyawan"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"alex-setyawan"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"alex-setyawan"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"alex-setyawan"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"alex-setyawan"},"content":"     * @param phrase cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"alex-setyawan"},"content":"    public static boolean containsPhraseIgnoreCase(String sentence, String phrase) {","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"alex-setyawan"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"alex-setyawan"},"content":"        requireNonNull(phrase);","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"alex-setyawan"},"content":"        String preppedPhrase \u003d phrase.trim();","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"alex-setyawan"},"content":"        checkArgument(!preppedPhrase.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"alex-setyawan"},"content":"        return sentence.toLowerCase().contains(phrase.toLowerCase());","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"alex-setyawan":21,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ReadOnlyImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"laney0808"},"content":"     * @see seedu.address.model.Model#getImmuniMate()","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"laney0808"},"content":"    ReadOnlyImmuniMate getAddressBook();","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"laney0808":3,"-":47}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"laney0808"},"content":"import seedu.address.logic.parser.ImmuniMateParser;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ReadOnlyImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"laney0808"},"content":"    private final ImmuniMateParser immuniMateParser;","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"laney0808"},"content":"        immuniMateParser \u003d new ImmuniMateParser();","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"laney0808"},"content":"        Command command \u003d immuniMateParser.parseCommand(commandText);","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"laney0808"},"content":"            storage.saveAddressBook(model.getImmuniMate());","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"laney0808"},"content":"    public ReadOnlyImmuniMate getAddressBook() {","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"laney0808"},"content":"        return model.getImmuniMate();","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"laney0808"},"content":"        return model.getImmunimateFilePath();","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"laney0808":9,"-":79}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"laney0808"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"alex-setyawan"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"The person provided was not found\";","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":"                .append(\"; NRIC: \")","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"alex-setyawan"},"content":"                .append(person.getNric())","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"alex-setyawan"},"content":"                .append(\"; DOB: \")","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"alex-setyawan"},"content":"                .append(person.getDateOfBirth())","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"alex-setyawan"},"content":"                .append(\"; Sex: \")","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"alex-setyawan"},"content":"                .append(person.getSex())","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"alex-setyawan"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"alex-setyawan"},"content":"                .append(person.getStatus())","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"alex-setyawan"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"laney0808"},"content":"                .append(Optional.ofNullable(person.getEmail()).map(Object::toString).orElse(\"-\"))","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"alex-setyawan"},"content":"                .append(\"; Country: \")","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"laney0808"},"content":"                .append(Optional.ofNullable(person.getCountry()).map(Object::toString).orElse(\"-\"))","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"alex-setyawan"},"content":"                .append(\"; Allergies: \")","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"laney0808"},"content":"                .append(Optional.ofNullable(person.getAllergies()).map(Object::toString).orElse(\"-\"))","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"alex-setyawan"},"content":"                .append(\"; Blood Type: \")","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"laney0808"},"content":"                .append(Optional.ofNullable(person.getBloodType()).map(Object::toString).orElse(\"-\"))","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"alex-setyawan"},"content":"                .append(\"; Condition: \")","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"laney0808"},"content":"                .append(Optional.ofNullable(person.getCondition()).map(Object::toString).orElse(\"-\"))","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"alex-setyawan"},"content":"                .append(\"; DOA: \")","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"laney0808"},"content":"                .append(Optional.ofNullable(person.getDateOfAdmission()).map(Object::toString).orElse(\"-\"))","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"alex-setyawan"},"content":"                .append(\"; Diagnosis: \")","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"laney0808"},"content":"                .append(Optional.ofNullable(person.getDiagnosis()).map(Object::toString).orElse(\"-\"))","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"alex-setyawan"},"content":"                .append(\"; Symptom: \")","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"laney0808"},"content":"                .append(Optional.ofNullable(person.getSymptom()).map(Object::toString).orElse(\"-\"))","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"NatLeong"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"NatLeong"},"content":"     * Formats the {@code person} for display to the user in organised manner.","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"NatLeong"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"NatLeong"},"content":"    public static String formatRead(Person person) {","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"NatLeong"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"NatLeong"},"content":"        builder.append(\"Name: \").append(person.getName()).append(\"\\n\")","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"NatLeong"},"content":"                .append(\"NRIC: \").append(person.getNric()).append(\"\\n\")","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"NatLeong"},"content":"                .append(\"Phone: \").append(person.getPhone()).append(\"\\n\")","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"NatLeong"},"content":"                .append(\"Address: \").append(person.getAddress()).append(\"\\n\")","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"NatLeong"},"content":"                .append(\"DOB: \").append(person.getDateOfBirth()).append(\"\\n\")","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"NatLeong"},"content":"                .append(\"Sex: \").append(person.getSex()).append(\"\\n\")","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"NatLeong"},"content":"                .append(\"Status: \").append(person.getStatus()).append(\"\\n\")","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"NatLeong"},"content":"                .append(\"Email: \")","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"NatLeong"},"content":"                .append(Optional.ofNullable(person.getEmail()).map(Object::toString).orElse(\"-\")).append(\"\\n\")","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"NatLeong"},"content":"                .append(\"Country: \")","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"NatLeong"},"content":"                .append(Optional.ofNullable(person.getCountry()).map(Object::toString).orElse(\"-\")).append(\"\\n\")","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"NatLeong"},"content":"                .append(\"Allergies: \")","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"NatLeong"},"content":"                .append(Optional.ofNullable(person.getAllergies()).map(Object::toString).orElse(\"-\")).append(\"\\n\")","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"NatLeong"},"content":"                .append(\"Blood Type: \")","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"NatLeong"},"content":"                .append(Optional.ofNullable(person.getBloodType()).map(Object::toString).orElse(\"-\")).append(\"\\n\")","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"NatLeong"},"content":"                .append(\"Condition: \")","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"NatLeong"},"content":"                .append(Optional.ofNullable(person.getCondition()).map(Object::toString).orElse(\"-\")).append(\"\\n\")","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"NatLeong"},"content":"                .append(\"DOA: \")","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"NatLeong"},"content":"                .append(Optional.ofNullable(person.getDateOfAdmission()).map(Object::toString).orElse(\"-\"))","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"NatLeong"},"content":"                .append(\"\\n\")","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"NatLeong"},"content":"                .append(\"Diagnosis: \")","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"NatLeong"},"content":"                .append(Optional.ofNullable(person.getDiagnosis()).map(Object::toString).orElse(\"-\")).append(\"\\n\")","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"NatLeong"},"content":"                .append(\"Symptom: \")","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"NatLeong"},"content":"                .append(Optional.ofNullable(person.getSymptom()).map(Object::toString).orElse(\"-\")).append(\"\\n\")","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"NatLeong"},"content":"                .append(\"Tags: \");","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"NatLeong"},"content":"        person.getTags().forEach(tag -\u003e builder.append(tag).append(\", \"));","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"NatLeong"},"content":"        if (!person.getTags().isEmpty()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"NatLeong"},"content":"            builder.delete(builder.length() - 2, builder.length());","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"NatLeong"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"NatLeong"},"content":"        return builder.toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"NatLeong"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alex-setyawan":17,"laney0808":9,"-":48,"NatLeong":37}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"laney0808"},"content":"        model.setImmuniMate(new ImmuniMate());","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"laney0808":2,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/CreateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ALLERGIES;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONDITION;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATEOFBIRTH;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":12,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SYMPTOM;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"laney0808"},"content":"public class CreateCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"laney0808"},"content":"    public static final String COMMAND_WORD \u003d \"create\";","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"laney0808"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Creates a patient to the Immunimate System. \"","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"laney0808"},"content":"            + PREFIX_NRIC + \"NRIC \"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"laney0808"},"content":"            + PREFIX_DATEOFBIRTH + \"DATEOFBIRTH \"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"laney0808"},"content":"            + PREFIX_SEX + \"SEX \"","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"laney0808"},"content":"            + PREFIX_STATUS + \"STATUS \"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"laney0808"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"laney0808"},"content":"            + PREFIX_ALLERGIES + \"ALLERGIES \"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"laney0808"},"content":"            + PREFIX_BLOODTYPE + \"BLOODTYPE \"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"laney0808"},"content":"            + PREFIX_CONDITION + \"CONDITION \"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"laney0808"},"content":"            + PREFIX_SYMPTOM + \"SYMPTOM \"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"laney0808"},"content":"            + PREFIX_DIAGNOSIS + \"DIAGNOSIS \"","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"laney0808"},"content":"            + PREFIX_NRIC + \"S1234567A \"","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"laney0808"},"content":"            + PREFIX_DATEOFBIRTH + \"01-01-1990 \"","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"laney0808"},"content":"            + PREFIX_SEX + \"M \"","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"laney0808"},"content":"            + PREFIX_STATUS + \"PENDING \"","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"laney0808"},"content":"            + PREFIX_TAG + \"Long term medication \"","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"laney0808"},"content":"            + PREFIX_TAG + \"High blood pressure \";","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"laney0808"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New patient added: %1$s\";","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"laney0808"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the system\";","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"laney0808"},"content":"    public CreateCommand(Person person) {","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"laney0808"},"content":"    //TODO test cases","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":92,"author":{"gitId":"laney0808"},"content":"        if (!(other instanceof CreateCommand)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":96,"author":{"gitId":"laney0808"},"content":"        CreateCommand otherCreateCommand \u003d (CreateCommand) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"laney0808"},"content":"        return toAdd.equals(otherCreateCommand.toAdd);","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"laney0808":35,"-":71}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"laney0808"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"laney0808"},"content":"            + \": Deletes the person identified by the NRIC.\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"laney0808"},"content":"            + \"Parameters: NRIC\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"laney0808"},"content":"            + \"Example: \" + COMMAND_WORD + \" S1234567B\";","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"laney0808"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Patient: %1$s\";","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"laney0808"},"content":"    private final Nric targetNric;","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"laney0808"},"content":"    //TODO test cases","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"laney0808"},"content":"    public DeleteCommand(Nric targetNric) {","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"laney0808"},"content":"        this.targetNric \u003d targetNric;","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"laney0808"},"content":"    //TODO test cases","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"laney0808"},"content":"        ObservableList\u003cPerson\u003e persons \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"laney0808"},"content":"        if (!model.hasPerson(Person.createPersonWithNric(targetNric))) {","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"laney0808"},"content":"            throw new CommandException(Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"laney0808"},"content":"        //Difference between filteredPersons.contains and model.hasPerson: first checks if the instance is in the list,","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"laney0808"},"content":"        //second checks if the NRIC is in the list","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"laney0808"},"content":"        Person personToDelete \u003d persons.filtered(person -\u003e person.getNric().equals(targetNric)).get(0);","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"laney0808"},"content":"        return targetNric.equals(otherDeleteCommand.targetNric);","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"laney0808"},"content":"    //TODO test cases","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"laney0808"},"content":"                .add(\"targetNric\", targetNric)","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"laney0808":20,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"alex-setyawan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"laney0808"},"content":"    //TODO: add nric contains keywords","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"alex-setyawan"},"content":"    public FindCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"alex-setyawan":5,"laney0808":1,"-":55}},{"path":"src/main/java/seedu/address/logic/commands/ReadCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NatLeong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"NatLeong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"NatLeong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"NatLeong"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"NatLeong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"NatLeong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"NatLeong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"NatLeong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"NatLeong"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"NatLeong"},"content":"import seedu.address.model.person.NricContainsKeywordsPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"NatLeong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"NatLeong"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"NatLeong"},"content":" * Reads the details of an existing person in the address book.","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"NatLeong"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"NatLeong"},"content":"public class ReadCommand extends Command {","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"NatLeong"},"content":"    public static final String COMMAND_WORD \u003d \"read\";","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"NatLeong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Reads the details of the person identified \"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"NatLeong"},"content":"            + \"by the NRIC specified. \"","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"NatLeong"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"NatLeong"},"content":"            + PREFIX_NRIC + \"T0123456A\";","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"NatLeong"},"content":"    public static final String MESSAGE_READ_PERSON_SUCCESS \u003d \"Read Person: %1$s\";","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"NatLeong"},"content":"    public static final String MESSAGE_NOT_READ \u003d \"NRIC to be specified.\";","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"NatLeong"},"content":"    private final Nric nric;","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"NatLeong"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"NatLeong"},"content":"     * @param nric of the person to read","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"NatLeong"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"NatLeong"},"content":"    public ReadCommand(Nric nric) {","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"NatLeong"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"NatLeong"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"NatLeong"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"NatLeong"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"NatLeong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"NatLeong"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"NatLeong"},"content":"        if (!model.hasPerson(Person.createPersonWithNric(nric))) {","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"NatLeong"},"content":"            throw new CommandException(Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"NatLeong"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"NatLeong"},"content":"        model.updateFilteredPersonList(new NricContainsKeywordsPredicate(nric.toString()));","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"NatLeong"},"content":"        Person readPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"NatLeong"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"NatLeong"},"content":"        return new CommandResult(String.format(MESSAGE_READ_PERSON_SUCCESS, Messages.formatRead(readPerson)));","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"NatLeong"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"NatLeong"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"NatLeong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"NatLeong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"NatLeong"},"content":"            return true;","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"NatLeong"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"NatLeong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"NatLeong"},"content":"        if (!(other instanceof ReadCommand)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"NatLeong"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"NatLeong"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"NatLeong"},"content":"        ReadCommand otherReadCommand \u003d (ReadCommand) other;","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"NatLeong"},"content":"        return this.nric.equals(otherReadCommand.nric);","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"NatLeong"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"NatLeong"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"NatLeong"},"content":"    public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"NatLeong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"NatLeong"},"content":"                .add(\"nric\", nric)","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"NatLeong"},"content":"                .toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"NatLeong"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"NatLeong"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"NatLeong":76}},{"path":"src/main/java/seedu/address/logic/commands/UpdateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alex-setyawan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"alex-setyawan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"alex-setyawan"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"alex-setyawan"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"alex-setyawan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"alex-setyawan"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"alex-setyawan"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"alex-setyawan"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Allergies;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.BloodType;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Condition;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Country;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.DateOfAdmission;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Diagnosis;","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.person.NricContainsKeywordsPredicate;","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Symptom;","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"alex-setyawan"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"alex-setyawan"},"content":" * Updates the details of an existing person in the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"alex-setyawan"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"alex-setyawan"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"alex-setyawan"},"content":"    public static final String COMMAND_WORD \u003d \"update\";","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"alex-setyawan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates the details of the person identified \"","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"alex-setyawan"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"alex-setyawan"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"alex-setyawan"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"alex-setyawan"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"alex-setyawan"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"alex-setyawan"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"alex-setyawan"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"alex-setyawan"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"alex-setyawan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"alex-setyawan"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"alex-setyawan"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"alex-setyawan"},"content":"    public static final String MESSAGE_UPDATE_PERSON_SUCCESS \u003d \"Updated Person: %1$s\";","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"alex-setyawan"},"content":"    public static final String MESSAGE_NOT_UPDATED \u003d \"At least one field to update must be provided.\";","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"alex-setyawan"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"alex-setyawan"},"content":"    private final Nric nric;","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"alex-setyawan"},"content":"    private final UpdatePersonDescriptor updatePersonDescriptor;","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"alex-setyawan"},"content":"     * @param nric of the person in the filtered person list to update","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"alex-setyawan"},"content":"     * @param updatePersonDescriptor details to update the person with","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"alex-setyawan"},"content":"    public UpdateCommand(Nric nric, UpdatePersonDescriptor updatePersonDescriptor) {","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"alex-setyawan"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"alex-setyawan"},"content":"        requireNonNull(updatePersonDescriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"alex-setyawan"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"alex-setyawan"},"content":"        this.updatePersonDescriptor \u003d new UpdatePersonDescriptor(updatePersonDescriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"alex-setyawan"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"alex-setyawan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"alex-setyawan"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"alex-setyawan"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"laney0808"},"content":"        if (!model.hasPerson(Person.createPersonWithNric(nric))) {","lastModifiedDate":"2024-03-22"},{"lineNumber":88,"author":{"gitId":"alex-setyawan"},"content":"            throw new CommandException(Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"alex-setyawan"},"content":"        Person personToUpdate \u003d lastShownList.stream().filter(","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"alex-setyawan"},"content":"                new NricContainsKeywordsPredicate(nric.toString())).findFirst().get();","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"alex-setyawan"},"content":"        Person updatedPerson \u003d createUpdatedPerson(personToUpdate, updatePersonDescriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"alex-setyawan"},"content":"        if (personToUpdate.equals(updatedPerson) /* \u0026\u0026 model.hasPerson(updatedPerson) */) {","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"alex-setyawan"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"alex-setyawan"},"content":"        model.setPerson(personToUpdate, updatedPerson);","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"alex-setyawan"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"alex-setyawan"},"content":"        return new CommandResult(String.format(MESSAGE_UPDATE_PERSON_SUCCESS, Messages.format(updatedPerson)));","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"alex-setyawan"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToUpdate}","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"alex-setyawan"},"content":"     * updated with {@code updatePersonDescriptor}.","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"alex-setyawan"},"content":"    private static Person createUpdatedPerson(Person personToUpdate, UpdatePersonDescriptor updatePersonDescriptor) {","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"alex-setyawan"},"content":"        assert personToUpdate !\u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"alex-setyawan"},"content":"        Nric nric \u003d personToUpdate.getNric();","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"alex-setyawan"},"content":"        Name updatedName \u003d updatePersonDescriptor.getName().orElse(personToUpdate.getName());","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"alex-setyawan"},"content":"        Phone updatedPhone \u003d updatePersonDescriptor.getPhone().orElse(personToUpdate.getPhone());","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"alex-setyawan"},"content":"        Address updatedAddress \u003d updatePersonDescriptor.getAddress().orElse(personToUpdate.getAddress());","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"alex-setyawan"},"content":"        DateOfBirth updatedDob \u003d updatePersonDescriptor.getDateOfBirth().orElse(personToUpdate.getDateOfBirth());","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"alex-setyawan"},"content":"        Sex updatedSex \u003d updatePersonDescriptor.getSex().orElse(personToUpdate.getSex());","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"alex-setyawan"},"content":"        Status updatedStatus \u003d updatePersonDescriptor.getStatus().orElse(personToUpdate.getStatus());","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"alex-setyawan"},"content":"        Email updatedEmail \u003d updatePersonDescriptor.getEmail().orElse(personToUpdate.getEmail());","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"alex-setyawan"},"content":"        Country updatedCountry \u003d updatePersonDescriptor.getCountry().orElse(personToUpdate.getCountry());","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"alex-setyawan"},"content":"        Allergies updatedAllergies \u003d updatePersonDescriptor.getAllergies().orElse(personToUpdate.getAllergies());","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"alex-setyawan"},"content":"        BloodType updatedBloodType \u003d updatePersonDescriptor.getBloodType().orElse(personToUpdate.getBloodType());","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"alex-setyawan"},"content":"        Condition updatedCondition \u003d updatePersonDescriptor.getCondition().orElse(personToUpdate.getCondition());","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"alex-setyawan"},"content":"        DateOfAdmission updatedDateOfAdmission \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"alex-setyawan"},"content":"                updatePersonDescriptor.getDateOfAdmission().orElse(personToUpdate.getDateOfAdmission());","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"alex-setyawan"},"content":"        Diagnosis updatedDiagnosis \u003d updatePersonDescriptor.getDiagnosis().orElse(personToUpdate.getDiagnosis());","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"alex-setyawan"},"content":"        Symptom updatedSymptom \u003d updatePersonDescriptor.getSymptom().orElse(personToUpdate.getSymptom());","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"alex-setyawan"},"content":"        Person p \u003d new Person(nric, updatedName, updatedPhone, updatedAddress, updatedDob, updatedSex, updatedStatus);","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"alex-setyawan"},"content":"        p.setEmail(updatedEmail);","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"alex-setyawan"},"content":"        p.setCountry(updatedCountry);","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"alex-setyawan"},"content":"        p.setAllergies(updatedAllergies);","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"alex-setyawan"},"content":"        p.setBloodType(updatedBloodType);","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"alex-setyawan"},"content":"        p.setCondition(updatedCondition);","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"alex-setyawan"},"content":"        p.setDateOfAdmission(updatedDateOfAdmission);","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"alex-setyawan"},"content":"        p.setDiagnosis(updatedDiagnosis);","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"alex-setyawan"},"content":"        p.setSymptom(updatedSymptom);","lastModifiedDate":"2024-03-21"},{"lineNumber":138,"author":{"gitId":"alex-setyawan"},"content":"        return p;","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"alex-setyawan"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":142,"author":{"gitId":"alex-setyawan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"alex-setyawan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"alex-setyawan"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"alex-setyawan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"alex-setyawan"},"content":"        if (!(other instanceof UpdateCommand)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"alex-setyawan"},"content":"            return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"alex-setyawan"},"content":"        UpdateCommand otherUpdateCommand \u003d (UpdateCommand) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"alex-setyawan"},"content":"        return nric.equals(otherUpdateCommand.nric)","lastModifiedDate":"2024-04-01"},{"lineNumber":154,"author":{"gitId":"alex-setyawan"},"content":"                \u0026\u0026 updatePersonDescriptor.equals(otherUpdateCommand.updatePersonDescriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":155,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":156,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":157,"author":{"gitId":"alex-setyawan"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"alex-setyawan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"alex-setyawan"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"alex-setyawan"},"content":"                .add(\"updatePersonDescriptor\", updatePersonDescriptor)","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"alex-setyawan"},"content":"                .toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"alex-setyawan"},"content":"     * Stores the details to update the person with. Each non-empty field value will replace the","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"alex-setyawan"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"alex-setyawan"},"content":"    public static class UpdatePersonDescriptor {","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"alex-setyawan"},"content":"        private Nric nric;","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"alex-setyawan"},"content":"        private Name name;","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"alex-setyawan"},"content":"        private Phone phone;","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"alex-setyawan"},"content":"        private Address address;","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"alex-setyawan"},"content":"        private DateOfBirth dateOfBirth;","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"alex-setyawan"},"content":"        private Sex sex;","lastModifiedDate":"2024-03-20"},{"lineNumber":175,"author":{"gitId":"alex-setyawan"},"content":"        private Status status;","lastModifiedDate":"2024-03-20"},{"lineNumber":176,"author":{"gitId":"alex-setyawan"},"content":"        // Optional fields","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"alex-setyawan"},"content":"        // Data fields","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"alex-setyawan"},"content":"        private Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"alex-setyawan"},"content":"        private Email email;","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"alex-setyawan"},"content":"        private Country country;","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"alex-setyawan"},"content":"        //Medical information","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"alex-setyawan"},"content":"        private Allergies allergies;","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"alex-setyawan"},"content":"        private BloodType bloodType;","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"alex-setyawan"},"content":"        private Condition condition;","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"alex-setyawan"},"content":"        private DateOfAdmission dateOfAdmission;","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"alex-setyawan"},"content":"        private Diagnosis diagnosis;","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"alex-setyawan"},"content":"        private Symptom symptom;","lastModifiedDate":"2024-03-20"},{"lineNumber":188,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"alex-setyawan"},"content":"        public UpdatePersonDescriptor() {}","lastModifiedDate":"2024-03-20"},{"lineNumber":190,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"alex-setyawan"},"content":"        /**","lastModifiedDate":"2024-03-20"},{"lineNumber":192,"author":{"gitId":"alex-setyawan"},"content":"         * Copy constructor.","lastModifiedDate":"2024-03-20"},{"lineNumber":193,"author":{"gitId":"alex-setyawan"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"alex-setyawan"},"content":"         */","lastModifiedDate":"2024-03-20"},{"lineNumber":195,"author":{"gitId":"alex-setyawan"},"content":"        public UpdatePersonDescriptor(UpdatePersonDescriptor toCopy) {","lastModifiedDate":"2024-03-20"},{"lineNumber":196,"author":{"gitId":"alex-setyawan"},"content":"            setNric(toCopy.nric);","lastModifiedDate":"2024-03-21"},{"lineNumber":197,"author":{"gitId":"alex-setyawan"},"content":"            setName(toCopy.name);","lastModifiedDate":"2024-03-20"},{"lineNumber":198,"author":{"gitId":"alex-setyawan"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2024-03-20"},{"lineNumber":199,"author":{"gitId":"alex-setyawan"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"alex-setyawan"},"content":"            setDateOfBirth(toCopy.dateOfBirth);","lastModifiedDate":"2024-03-21"},{"lineNumber":201,"author":{"gitId":"alex-setyawan"},"content":"            setSex(toCopy.sex);","lastModifiedDate":"2024-03-21"},{"lineNumber":202,"author":{"gitId":"alex-setyawan"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2024-03-21"},{"lineNumber":203,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":204,"author":{"gitId":"alex-setyawan"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2024-03-26"},{"lineNumber":205,"author":{"gitId":"alex-setyawan"},"content":"            setCountry(toCopy.country);","lastModifiedDate":"2024-03-26"},{"lineNumber":206,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":207,"author":{"gitId":"alex-setyawan"},"content":"            setAllergies(toCopy.allergies);","lastModifiedDate":"2024-03-26"},{"lineNumber":208,"author":{"gitId":"alex-setyawan"},"content":"            setBloodType(toCopy.bloodType);","lastModifiedDate":"2024-03-26"},{"lineNumber":209,"author":{"gitId":"alex-setyawan"},"content":"            setCondition(toCopy.condition);","lastModifiedDate":"2024-03-26"},{"lineNumber":210,"author":{"gitId":"alex-setyawan"},"content":"            setDateOfAdmission(toCopy.dateOfAdmission);","lastModifiedDate":"2024-03-26"},{"lineNumber":211,"author":{"gitId":"alex-setyawan"},"content":"            setDiagnosis(toCopy.diagnosis);","lastModifiedDate":"2024-03-26"},{"lineNumber":212,"author":{"gitId":"alex-setyawan"},"content":"            setSymptom(toCopy.symptom);","lastModifiedDate":"2024-03-26"},{"lineNumber":213,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":214,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":215,"author":{"gitId":"alex-setyawan"},"content":"        /**","lastModifiedDate":"2024-03-20"},{"lineNumber":216,"author":{"gitId":"alex-setyawan"},"content":"         * Returns true if at least one field is updated.","lastModifiedDate":"2024-03-20"},{"lineNumber":217,"author":{"gitId":"alex-setyawan"},"content":"         */","lastModifiedDate":"2024-03-20"},{"lineNumber":218,"author":{"gitId":"alex-setyawan"},"content":"        public boolean isAnyFieldUpdated() {","lastModifiedDate":"2024-03-20"},{"lineNumber":219,"author":{"gitId":"alex-setyawan"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, address, sex, status, email, country,","lastModifiedDate":"2024-03-21"},{"lineNumber":220,"author":{"gitId":"alex-setyawan"},"content":"                    allergies, bloodType, condition, dateOfAdmission, diagnosis, symptom);","lastModifiedDate":"2024-03-27"},{"lineNumber":221,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":222,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":223,"author":{"gitId":"alex-setyawan"},"content":"        public void setNric(Nric nric) {","lastModifiedDate":"2024-03-20"},{"lineNumber":224,"author":{"gitId":"alex-setyawan"},"content":"            this.nric \u003d nric;","lastModifiedDate":"2024-03-20"},{"lineNumber":225,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":226,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":227,"author":{"gitId":"alex-setyawan"},"content":"        public Nric getNric() {","lastModifiedDate":"2024-03-20"},{"lineNumber":228,"author":{"gitId":"alex-setyawan"},"content":"            return nric;","lastModifiedDate":"2024-03-20"},{"lineNumber":229,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":230,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":231,"author":{"gitId":"alex-setyawan"},"content":"        public void setName(Name name) {","lastModifiedDate":"2024-03-20"},{"lineNumber":232,"author":{"gitId":"alex-setyawan"},"content":"            this.name \u003d name;","lastModifiedDate":"2024-03-20"},{"lineNumber":233,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":234,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":235,"author":{"gitId":"alex-setyawan"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2024-03-20"},{"lineNumber":236,"author":{"gitId":"alex-setyawan"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2024-03-20"},{"lineNumber":237,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":238,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":239,"author":{"gitId":"alex-setyawan"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2024-03-20"},{"lineNumber":240,"author":{"gitId":"alex-setyawan"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2024-03-20"},{"lineNumber":241,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":242,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":243,"author":{"gitId":"alex-setyawan"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2024-03-20"},{"lineNumber":244,"author":{"gitId":"alex-setyawan"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2024-03-20"},{"lineNumber":245,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":246,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":247,"author":{"gitId":"alex-setyawan"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2024-03-20"},{"lineNumber":248,"author":{"gitId":"alex-setyawan"},"content":"            this.address \u003d address;","lastModifiedDate":"2024-03-20"},{"lineNumber":249,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":250,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":251,"author":{"gitId":"alex-setyawan"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2024-03-20"},{"lineNumber":252,"author":{"gitId":"alex-setyawan"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2024-03-20"},{"lineNumber":253,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":254,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":255,"author":{"gitId":"alex-setyawan"},"content":"        public void setDateOfBirth(DateOfBirth dateOfBirth) {","lastModifiedDate":"2024-03-20"},{"lineNumber":256,"author":{"gitId":"alex-setyawan"},"content":"            this.dateOfBirth \u003d dateOfBirth;","lastModifiedDate":"2024-03-20"},{"lineNumber":257,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":258,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":259,"author":{"gitId":"alex-setyawan"},"content":"        public Optional\u003cDateOfBirth\u003e getDateOfBirth() {","lastModifiedDate":"2024-03-20"},{"lineNumber":260,"author":{"gitId":"alex-setyawan"},"content":"            return Optional.ofNullable(dateOfBirth);","lastModifiedDate":"2024-03-20"},{"lineNumber":261,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":262,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":263,"author":{"gitId":"alex-setyawan"},"content":"        public void setSex(Sex sex) {","lastModifiedDate":"2024-03-20"},{"lineNumber":264,"author":{"gitId":"alex-setyawan"},"content":"            this.sex \u003d sex;","lastModifiedDate":"2024-03-20"},{"lineNumber":265,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":266,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":267,"author":{"gitId":"alex-setyawan"},"content":"        public Optional\u003cSex\u003e getSex() {","lastModifiedDate":"2024-03-20"},{"lineNumber":268,"author":{"gitId":"alex-setyawan"},"content":"            return Optional.ofNullable(sex);","lastModifiedDate":"2024-03-20"},{"lineNumber":269,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":270,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":271,"author":{"gitId":"alex-setyawan"},"content":"        public void setStatus(Status status) {","lastModifiedDate":"2024-03-20"},{"lineNumber":272,"author":{"gitId":"alex-setyawan"},"content":"            this.status \u003d status;","lastModifiedDate":"2024-03-20"},{"lineNumber":273,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":274,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":275,"author":{"gitId":"alex-setyawan"},"content":"        public Optional\u003cStatus\u003e getStatus() {","lastModifiedDate":"2024-03-20"},{"lineNumber":276,"author":{"gitId":"alex-setyawan"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2024-03-20"},{"lineNumber":277,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":278,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":279,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":280,"author":{"gitId":"alex-setyawan"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2024-03-20"},{"lineNumber":281,"author":{"gitId":"alex-setyawan"},"content":"            this.email \u003d email;","lastModifiedDate":"2024-03-20"},{"lineNumber":282,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":283,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":284,"author":{"gitId":"alex-setyawan"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2024-03-20"},{"lineNumber":285,"author":{"gitId":"alex-setyawan"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2024-03-20"},{"lineNumber":286,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":287,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":288,"author":{"gitId":"alex-setyawan"},"content":"        public void setCountry(Country country) {","lastModifiedDate":"2024-03-20"},{"lineNumber":289,"author":{"gitId":"alex-setyawan"},"content":"            this.country \u003d country;","lastModifiedDate":"2024-03-20"},{"lineNumber":290,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":291,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":292,"author":{"gitId":"alex-setyawan"},"content":"        public Optional\u003cCountry\u003e getCountry() {","lastModifiedDate":"2024-03-20"},{"lineNumber":293,"author":{"gitId":"alex-setyawan"},"content":"            return Optional.ofNullable(country);","lastModifiedDate":"2024-03-20"},{"lineNumber":294,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":295,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":296,"author":{"gitId":"alex-setyawan"},"content":"        public void setAllergies(Allergies allergies) {","lastModifiedDate":"2024-03-20"},{"lineNumber":297,"author":{"gitId":"alex-setyawan"},"content":"            this.allergies \u003d allergies;","lastModifiedDate":"2024-03-20"},{"lineNumber":298,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":299,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":300,"author":{"gitId":"alex-setyawan"},"content":"        public Optional\u003cAllergies\u003e getAllergies() {","lastModifiedDate":"2024-03-20"},{"lineNumber":301,"author":{"gitId":"alex-setyawan"},"content":"            return Optional.ofNullable(allergies);","lastModifiedDate":"2024-03-20"},{"lineNumber":302,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":303,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":304,"author":{"gitId":"alex-setyawan"},"content":"        public void setBloodType(BloodType bloodType) {","lastModifiedDate":"2024-03-20"},{"lineNumber":305,"author":{"gitId":"alex-setyawan"},"content":"            this.bloodType \u003d bloodType;","lastModifiedDate":"2024-03-20"},{"lineNumber":306,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":307,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":308,"author":{"gitId":"alex-setyawan"},"content":"        public Optional\u003cBloodType\u003e getBloodType() {","lastModifiedDate":"2024-03-20"},{"lineNumber":309,"author":{"gitId":"alex-setyawan"},"content":"            return Optional.ofNullable(bloodType);","lastModifiedDate":"2024-03-20"},{"lineNumber":310,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":311,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":312,"author":{"gitId":"alex-setyawan"},"content":"        public void setCondition(Condition condition) {","lastModifiedDate":"2024-03-20"},{"lineNumber":313,"author":{"gitId":"alex-setyawan"},"content":"            this.condition \u003d condition;","lastModifiedDate":"2024-03-20"},{"lineNumber":314,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":315,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":316,"author":{"gitId":"alex-setyawan"},"content":"        public Optional\u003cCondition\u003e getCondition() {","lastModifiedDate":"2024-03-20"},{"lineNumber":317,"author":{"gitId":"alex-setyawan"},"content":"            return Optional.ofNullable(condition);","lastModifiedDate":"2024-03-20"},{"lineNumber":318,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":319,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":320,"author":{"gitId":"alex-setyawan"},"content":"        public void setDateOfAdmission(DateOfAdmission dateOfAdmission) {","lastModifiedDate":"2024-03-20"},{"lineNumber":321,"author":{"gitId":"alex-setyawan"},"content":"            this.dateOfAdmission \u003d dateOfAdmission;","lastModifiedDate":"2024-03-20"},{"lineNumber":322,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":323,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":324,"author":{"gitId":"alex-setyawan"},"content":"        public Optional\u003cDateOfAdmission\u003e getDateOfAdmission() {","lastModifiedDate":"2024-03-20"},{"lineNumber":325,"author":{"gitId":"alex-setyawan"},"content":"            return Optional.ofNullable(dateOfAdmission);","lastModifiedDate":"2024-03-20"},{"lineNumber":326,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":327,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":328,"author":{"gitId":"alex-setyawan"},"content":"        public void setDiagnosis(Diagnosis diagnosis) {","lastModifiedDate":"2024-03-20"},{"lineNumber":329,"author":{"gitId":"alex-setyawan"},"content":"            this.diagnosis \u003d diagnosis;","lastModifiedDate":"2024-03-20"},{"lineNumber":330,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":331,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":332,"author":{"gitId":"alex-setyawan"},"content":"        public Optional\u003cDiagnosis\u003e getDiagnosis() {","lastModifiedDate":"2024-03-20"},{"lineNumber":333,"author":{"gitId":"alex-setyawan"},"content":"            return Optional.ofNullable(diagnosis);","lastModifiedDate":"2024-03-20"},{"lineNumber":334,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":335,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":336,"author":{"gitId":"alex-setyawan"},"content":"        public void setSymptom(Symptom symptom) {","lastModifiedDate":"2024-03-20"},{"lineNumber":337,"author":{"gitId":"alex-setyawan"},"content":"            this.symptom \u003d symptom;","lastModifiedDate":"2024-03-20"},{"lineNumber":338,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":339,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":340,"author":{"gitId":"alex-setyawan"},"content":"        public Optional\u003cSymptom\u003e getSymptom() {","lastModifiedDate":"2024-03-20"},{"lineNumber":341,"author":{"gitId":"alex-setyawan"},"content":"            return Optional.ofNullable(symptom);","lastModifiedDate":"2024-03-20"},{"lineNumber":342,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":343,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":344,"author":{"gitId":"alex-setyawan"},"content":"        /**","lastModifiedDate":"2024-03-20"},{"lineNumber":345,"author":{"gitId":"alex-setyawan"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2024-03-20"},{"lineNumber":346,"author":{"gitId":"alex-setyawan"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-20"},{"lineNumber":347,"author":{"gitId":"alex-setyawan"},"content":"         */","lastModifiedDate":"2024-03-20"},{"lineNumber":348,"author":{"gitId":"alex-setyawan"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-20"},{"lineNumber":349,"author":{"gitId":"alex-setyawan"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2024-03-20"},{"lineNumber":350,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":351,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":352,"author":{"gitId":"alex-setyawan"},"content":"        /**","lastModifiedDate":"2024-03-20"},{"lineNumber":353,"author":{"gitId":"alex-setyawan"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-20"},{"lineNumber":354,"author":{"gitId":"alex-setyawan"},"content":"         * if modification is attempted.","lastModifiedDate":"2024-03-20"},{"lineNumber":355,"author":{"gitId":"alex-setyawan"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2024-03-20"},{"lineNumber":356,"author":{"gitId":"alex-setyawan"},"content":"         */","lastModifiedDate":"2024-03-20"},{"lineNumber":357,"author":{"gitId":"alex-setyawan"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2024-03-20"},{"lineNumber":358,"author":{"gitId":"alex-setyawan"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2024-03-20"},{"lineNumber":359,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":360,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":361,"author":{"gitId":"alex-setyawan"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":362,"author":{"gitId":"alex-setyawan"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":363,"author":{"gitId":"alex-setyawan"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":364,"author":{"gitId":"alex-setyawan"},"content":"                return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":365,"author":{"gitId":"alex-setyawan"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":366,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":367,"author":{"gitId":"alex-setyawan"},"content":"            // instanceof handles nulls","lastModifiedDate":"2024-03-20"},{"lineNumber":368,"author":{"gitId":"alex-setyawan"},"content":"            if (!(other instanceof UpdatePersonDescriptor)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":369,"author":{"gitId":"alex-setyawan"},"content":"                return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":370,"author":{"gitId":"alex-setyawan"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":371,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":372,"author":{"gitId":"alex-setyawan"},"content":"            UpdatePersonDescriptor otherUpdatePersonDescriptor \u003d (UpdatePersonDescriptor) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":373,"author":{"gitId":"alex-setyawan"},"content":"            return Objects.equals(nric, otherUpdatePersonDescriptor.nric)","lastModifiedDate":"2024-03-20"},{"lineNumber":374,"author":{"gitId":"alex-setyawan"},"content":"                    \u0026\u0026 Objects.equals(name, otherUpdatePersonDescriptor.name)","lastModifiedDate":"2024-03-20"},{"lineNumber":375,"author":{"gitId":"alex-setyawan"},"content":"                    \u0026\u0026 Objects.equals(phone, otherUpdatePersonDescriptor.phone)","lastModifiedDate":"2024-03-20"},{"lineNumber":376,"author":{"gitId":"alex-setyawan"},"content":"                    \u0026\u0026 Objects.equals(address, otherUpdatePersonDescriptor.address)","lastModifiedDate":"2024-03-20"},{"lineNumber":377,"author":{"gitId":"alex-setyawan"},"content":"                    \u0026\u0026 Objects.equals(dateOfBirth, otherUpdatePersonDescriptor.dateOfBirth)","lastModifiedDate":"2024-03-20"},{"lineNumber":378,"author":{"gitId":"alex-setyawan"},"content":"                    \u0026\u0026 Objects.equals(sex, otherUpdatePersonDescriptor.sex)","lastModifiedDate":"2024-03-20"},{"lineNumber":379,"author":{"gitId":"alex-setyawan"},"content":"                    \u0026\u0026 Objects.equals(status, otherUpdatePersonDescriptor.status)","lastModifiedDate":"2024-03-20"},{"lineNumber":380,"author":{"gitId":"alex-setyawan"},"content":"                    \u0026\u0026 Objects.equals(email, otherUpdatePersonDescriptor.email)","lastModifiedDate":"2024-03-20"},{"lineNumber":381,"author":{"gitId":"alex-setyawan"},"content":"                    \u0026\u0026 Objects.equals(country, otherUpdatePersonDescriptor.country)","lastModifiedDate":"2024-03-20"},{"lineNumber":382,"author":{"gitId":"alex-setyawan"},"content":"                    \u0026\u0026 Objects.equals(allergies, otherUpdatePersonDescriptor.allergies)","lastModifiedDate":"2024-03-20"},{"lineNumber":383,"author":{"gitId":"alex-setyawan"},"content":"                    \u0026\u0026 Objects.equals(bloodType, otherUpdatePersonDescriptor.bloodType)","lastModifiedDate":"2024-03-20"},{"lineNumber":384,"author":{"gitId":"alex-setyawan"},"content":"                    \u0026\u0026 Objects.equals(condition, otherUpdatePersonDescriptor.condition)","lastModifiedDate":"2024-03-20"},{"lineNumber":385,"author":{"gitId":"alex-setyawan"},"content":"                    \u0026\u0026 Objects.equals(dateOfAdmission, otherUpdatePersonDescriptor.dateOfAdmission)","lastModifiedDate":"2024-03-20"},{"lineNumber":386,"author":{"gitId":"alex-setyawan"},"content":"                    \u0026\u0026 Objects.equals(diagnosis, otherUpdatePersonDescriptor.diagnosis)","lastModifiedDate":"2024-03-20"},{"lineNumber":387,"author":{"gitId":"alex-setyawan"},"content":"                    \u0026\u0026 Objects.equals(symptom, otherUpdatePersonDescriptor.symptom)","lastModifiedDate":"2024-03-20"},{"lineNumber":388,"author":{"gitId":"alex-setyawan"},"content":"                    \u0026\u0026 Objects.equals(tags, otherUpdatePersonDescriptor.tags);","lastModifiedDate":"2024-03-20"},{"lineNumber":389,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":390,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":391,"author":{"gitId":"alex-setyawan"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":392,"author":{"gitId":"alex-setyawan"},"content":"        public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":393,"author":{"gitId":"alex-setyawan"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-03-20"},{"lineNumber":394,"author":{"gitId":"alex-setyawan"},"content":"                    .add(\"nric\", nric)","lastModifiedDate":"2024-03-20"},{"lineNumber":395,"author":{"gitId":"alex-setyawan"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2024-03-20"},{"lineNumber":396,"author":{"gitId":"alex-setyawan"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2024-03-20"},{"lineNumber":397,"author":{"gitId":"alex-setyawan"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2024-03-20"},{"lineNumber":398,"author":{"gitId":"alex-setyawan"},"content":"                    .add(\"date of birth\", dateOfBirth)","lastModifiedDate":"2024-03-20"},{"lineNumber":399,"author":{"gitId":"alex-setyawan"},"content":"                    .add(\"sex\", sex)","lastModifiedDate":"2024-03-20"},{"lineNumber":400,"author":{"gitId":"alex-setyawan"},"content":"                    .add(\"status\", status)","lastModifiedDate":"2024-03-20"},{"lineNumber":401,"author":{"gitId":"alex-setyawan"},"content":"                    .toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":402,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":403,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":404,"author":{"gitId":"alex-setyawan"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"alex-setyawan":402,"laney0808":2}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"laney0808"},"content":"    public static final Prefix PREFIX_NRIC \u003d new Prefix(\"ic/\");","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"laney0808"},"content":"    public static final Prefix PREFIX_DATEOFBIRTH \u003d new Prefix(\"dob/\");","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"laney0808"},"content":"    public static final Prefix PREFIX_SEX \u003d new Prefix(\"s/\");","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"laney0808"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"hp/\");","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"laney0808"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"laney0808"},"content":"    public static final Prefix PREFIX_COUNTRY \u003d new Prefix(\"c/\");","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"laney0808"},"content":"    public static final Prefix PREFIX_DATEOFADMISSION \u003d new Prefix(\"doa/\");","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"laney0808"},"content":"    public static final Prefix PREFIX_BLOODTYPE \u003d new Prefix(\"bt/\");","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"laney0808"},"content":"    public static final Prefix PREFIX_ALLERGIES \u003d new Prefix(\"al/\");","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"laney0808"},"content":"    public static final Prefix PREFIX_CONDITION \u003d new Prefix(\"con/\");","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"laney0808"},"content":"    public static final Prefix PREFIX_SYMPTOM \u003d new Prefix(\"sym/\");","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"laney0808"},"content":"    public static final Prefix PREFIX_DIAGNOSIS \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"st/\");","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jovantanyk":1,"laney0808":12,"-":13}},{"path":"src/main/java/seedu/address/logic/parser/CreateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ALLERGIES;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONDITION;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COUNTRY;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATEOFADMISSION;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATEOFBIRTH;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":14,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SYMPTOM;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"laney0808"},"content":"import seedu.address.logic.commands.CreateCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":29,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"laney0808"},"content":"public class CreateCommandParser implements Parser\u003cCreateCommand\u003e {","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"laney0808"},"content":"    //TODO test cases","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"laney0808"},"content":"    public CreateCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"laney0808"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NRIC, PREFIX_NAME, PREFIX_PHONE, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"laney0808"},"content":"                        PREFIX_DATEOFBIRTH, PREFIX_SEX, PREFIX_STATUS, PREFIX_TAG, PREFIX_EMAIL, PREFIX_COUNTRY,","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"laney0808"},"content":"                        PREFIX_DATEOFADMISSION, PREFIX_ALLERGIES, PREFIX_BLOODTYPE, PREFIX_CONDITION, PREFIX_SYMPTOM,","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"laney0808"},"content":"                        PREFIX_DIAGNOSIS);","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"laney0808"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NRIC, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_DATEOFBIRTH,","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"laney0808"},"content":"                PREFIX_SEX, PREFIX_STATUS) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"laney0808"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"laney0808"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NRIC, PREFIX_NAME, PREFIX_PHONE, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"laney0808"},"content":"                PREFIX_DATEOFBIRTH, PREFIX_SEX, PREFIX_STATUS);","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"laney0808"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"laney0808"},"content":"        DateOfBirth dob \u003d ParserUtil.parseDateOfBirth(argMultimap.getValue(PREFIX_DATEOFBIRTH).get());","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"jovantanyk"},"content":"        Sex sex \u003d ParserUtil.parseSex(argMultimap.getValue(PREFIX_SEX).get());","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"jovantanyk"},"content":"        Status status \u003d ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"laney0808"},"content":"        //TODO (later): assersion to make sure optional values don\u0027t generate errors","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"jovantanyk"},"content":"        Person person \u003d new Person(nric, name, phone, address, dob, sex, status);","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"laney0808"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"laney0808"},"content":"            Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"laney0808"},"content":"            person.setEmail(email);","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"laney0808"},"content":"        if (argMultimap.getValue(PREFIX_COUNTRY).isPresent()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"laney0808"},"content":"            person.setCountry(ParserUtil.parseCountry(argMultimap.getValue(PREFIX_COUNTRY).get()));","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"laney0808"},"content":"        if (argMultimap.getValue(PREFIX_DATEOFADMISSION).isPresent()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"laney0808"},"content":"            person.setDateOfAdmission(ParserUtil.parseDateOfAdmission(argMultimap","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"laney0808"},"content":"                    .getValue(PREFIX_DATEOFADMISSION).get()));","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"laney0808"},"content":"        if (argMultimap.getValue(PREFIX_ALLERGIES).isPresent()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"laney0808"},"content":"            person.setAllergies(ParserUtil.parseAllergies(argMultimap.getValue(PREFIX_ALLERGIES).get()));","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"laney0808"},"content":"        if (argMultimap.getValue(PREFIX_BLOODTYPE).isPresent()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"laney0808"},"content":"            person.setBloodType(ParserUtil.parseBloodType(argMultimap.getValue(PREFIX_BLOODTYPE).get()));","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"laney0808"},"content":"        if (argMultimap.getValue(PREFIX_CONDITION).isPresent()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"laney0808"},"content":"            person.setCondition(ParserUtil.parseCondition(argMultimap.getValue(PREFIX_CONDITION).get()));","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"laney0808"},"content":"        if (argMultimap.getValue(PREFIX_SYMPTOM).isPresent()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"laney0808"},"content":"            person.setSymptom(ParserUtil.parseSymptom(argMultimap.getValue(PREFIX_SYMPTOM).get()));","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"laney0808"},"content":"        if (argMultimap.getValue(PREFIX_DIAGNOSIS).isPresent()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"laney0808"},"content":"            person.setDiagnosis(ParserUtil.parseDiagnosis(argMultimap.getValue(PREFIX_DIAGNOSIS).get()));","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":95,"author":{"gitId":"laney0808"},"content":"        return new CreateCommand(person);","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"jovantanyk":6,"laney0808":56,"-":44}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"laney0808"},"content":"            Nric nric \u003d ParserUtil.parseNric(args);","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"laney0808"},"content":"            return new DeleteCommand(nric);","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"laney0808":3,"-":26}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONDITION;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"alex-setyawan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.AddressContainsKeywordsPredicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.ConditionContainsKeywordsPredicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"alex-setyawan"},"content":"        /*","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"alex-setyawan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_CONDITION);","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"alex-setyawan"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_CONDITION);","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"alex-setyawan"},"content":"         */","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"alex-setyawan"},"content":"        if (trimmedArgs.startsWith(PREFIX_NAME.getPrefix())) {","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"alex-setyawan"},"content":"            String[] nameKeywords \u003d trimmedArgs.substring(2).trim().split(\"\\\\s+\");","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":"            List\u003cString\u003e list \u003d Arrays.asList(nameKeywords);","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"alex-setyawan"},"content":"            return new FindCommand(new NameContainsKeywordsPredicate(list));","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"alex-setyawan"},"content":"        } else if (trimmedArgs.startsWith(PREFIX_ADDRESS.getPrefix())) {","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"alex-setyawan"},"content":"            String[] addressKeywords \u003d trimmedArgs.substring(2).trim().split(\",\");","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"alex-setyawan"},"content":"            List\u003cString\u003e list \u003d Arrays.asList(addressKeywords);","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"alex-setyawan"},"content":"            return new FindCommand(new AddressContainsKeywordsPredicate(list));","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"alex-setyawan"},"content":"        } else if (trimmedArgs.startsWith(PREFIX_CONDITION.getPrefix())) {","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"alex-setyawan"},"content":"            String[] conditionKeywords \u003d trimmedArgs.substring(4).trim().split(\",\");","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"alex-setyawan"},"content":"            List\u003cString\u003e list \u003d Arrays.asList(conditionKeywords);","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"alex-setyawan"},"content":"            return new FindCommand(new ConditionContainsKeywordsPredicate(list));","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"alex-setyawan"},"content":"        } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"alex-setyawan"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"alex-setyawan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"alex-setyawan":26,"-":30}},{"path":"src/main/java/seedu/address/logic/parser/ImmuniMateParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"laney0808"},"content":"import seedu.address.logic.commands.CreateCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"NatLeong"},"content":"import seedu.address.logic.commands.ReadCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.logic.commands.UpdateCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"laney0808"},"content":"public class ImmuniMateParser {","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"laney0808"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ImmuniMateParser.class);","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"laney0808"},"content":"    //TODO test cases","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"laney0808"},"content":"        case CreateCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"laney0808"},"content":"            return new CreateCommandParser().parse(arguments);","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"alex-setyawan"},"content":"        case UpdateCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"alex-setyawan"},"content":"            return new UpdateCommandParser().parse(arguments);","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":82,"author":{"gitId":"NatLeong"},"content":"        case ReadCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"NatLeong"},"content":"            return new ReadCommandParser().parse(arguments);","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alex-setyawan":3,"laney0808":6,"-":78,"NatLeong":4}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.person.Allergies;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"import seedu.address.model.person.BloodType;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.person.Condition;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.person.Country;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.person.DateOfAdmission;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.person.Diagnosis;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.person.Symptom;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"laney0808"},"content":"    //TODO: add parser for new fields","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"laney0808"},"content":"     * Parses a {@code String nric} into a {@code Nric}.","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"laney0808"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"laney0808"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"laney0808"},"content":"     * @throws ParseException if the given {@code nric} is invalid.","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"laney0808"},"content":"    //TODO test cases","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"laney0808"},"content":"    public static Nric parseNric(String nric) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"laney0808"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"laney0808"},"content":"        String trimmedNric \u003d nric.trim();","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"laney0808"},"content":"        if (!Nric.isValidNric(trimmedNric)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"laney0808"},"content":"            throw new ParseException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"laney0808"},"content":"        return new Nric(trimmedNric);","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"laney0808"},"content":"    //TODO test cases","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"laney0808"},"content":"     * Parses a {@code String dob} into an {@code DateOfBirth}.","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"laney0808"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"laney0808"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"laney0808"},"content":"     * @throws ParseException if the given {@code dob} is invalid.","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"laney0808"},"content":"    //TODO test cases","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"laney0808"},"content":"    public static DateOfBirth parseDateOfBirth(String dob) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"laney0808"},"content":"        requireNonNull(dob);","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"laney0808"},"content":"        String trimmedDob \u003d dob.trim();","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"laney0808"},"content":"        if (!DateOfBirth.isValidDateOfBirth(trimmedDob)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"laney0808"},"content":"            throw new ParseException(DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"laney0808"},"content":"        return new DateOfBirth(trimmedDob);","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"jovantanyk"},"content":"     * Parses a {@code String sex} into an {@code Sex sex}.","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"laney0808"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"laney0808"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"laney0808"},"content":"     * @throws ParseException if the given {@code sex} is invalid.","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"laney0808"},"content":"    //TODO test cases","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"jovantanyk"},"content":"    public static Sex parseSex(String sex) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"laney0808"},"content":"        requireNonNull(sex);","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"laney0808"},"content":"        String trimmedSex \u003d sex.trim();","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"jovantanyk"},"content":"        if (!Sex.isValidSex(trimmedSex)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"jovantanyk"},"content":"            throw new ParseException(Sex.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"jovantanyk"},"content":"        return new Sex(sex);","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"jovantanyk"},"content":"     * Parses a {@code String status} into an {@code Status status}.","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"jovantanyk"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-17"},{"lineNumber":148,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"jovantanyk"},"content":"     * @throws ParseException if the given {@code sex} is invalid.","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"laney0808"},"content":"    //TODO test cases","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"jovantanyk"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"jovantanyk"},"content":"        requireNonNull(status);","lastModifiedDate":"2024-03-17"},{"lineNumber":154,"author":{"gitId":"jovantanyk"},"content":"        String trimmedStatus \u003d status.trim().toUpperCase();","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"jovantanyk"},"content":"        if (!Status.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"jovantanyk"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"jovantanyk"},"content":"        return new Status(status);","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"laney0808"},"content":"     * Parses a {@code String country} into an {@code Country country}.","lastModifiedDate":"2024-03-19"},{"lineNumber":162,"author":{"gitId":"laney0808"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-19"},{"lineNumber":163,"author":{"gitId":"laney0808"},"content":"     * @throws ParseException if the given {@code country} is invalid.","lastModifiedDate":"2024-03-19"},{"lineNumber":164,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":165,"author":{"gitId":"laney0808"},"content":"    //TODO test cases","lastModifiedDate":"2024-03-21"},{"lineNumber":166,"author":{"gitId":"laney0808"},"content":"    public static Country parseCountry(String country) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"laney0808"},"content":"        requireNonNull(country);","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"laney0808"},"content":"        //TODO: Implement country validation \u0026 standardisation","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"laney0808"},"content":"        String trimmedCountry \u003d country.trim();","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"laney0808"},"content":"        return new Country(trimmedCountry);","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":173,"author":{"gitId":"laney0808"},"content":"     * Parses a {@code String dateOfAdmission} into an {@code DateOfAdmission dateOfAdmission}.","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"laney0808"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"laney0808"},"content":"     * @throws ParseException if the given {@code dateOfAdmission} is invalid.","lastModifiedDate":"2024-03-19"},{"lineNumber":176,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":177,"author":{"gitId":"laney0808"},"content":"    //TODO test cases","lastModifiedDate":"2024-03-21"},{"lineNumber":178,"author":{"gitId":"laney0808"},"content":"    public static DateOfAdmission parseDateOfAdmission(String dateOfAdmission) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":179,"author":{"gitId":"laney0808"},"content":"        requireNonNull(dateOfAdmission);","lastModifiedDate":"2024-03-19"},{"lineNumber":180,"author":{"gitId":"laney0808"},"content":"        String trimmedDateOfAdmission \u003d dateOfAdmission.trim();","lastModifiedDate":"2024-03-19"},{"lineNumber":181,"author":{"gitId":"laney0808"},"content":"        if (!DateOfAdmission.isValidDateOfAdmission(trimmedDateOfAdmission)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":182,"author":{"gitId":"jovantanyk"},"content":"            throw new ParseException(DateOfAdmission.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":183,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":184,"author":{"gitId":"laney0808"},"content":"        return new DateOfAdmission(trimmedDateOfAdmission);","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":187,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":188,"author":{"gitId":"jovantanyk"},"content":"     * Parses a {@code String status} into an {@code Status status}.","lastModifiedDate":"2024-03-18"},{"lineNumber":189,"author":{"gitId":"jovantanyk"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-18"},{"lineNumber":190,"author":{"gitId":"laney0808"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":191,"author":{"gitId":"jovantanyk"},"content":"     * @throws ParseException if the given {@code sex} is invalid.","lastModifiedDate":"2024-03-18"},{"lineNumber":192,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":193,"author":{"gitId":"laney0808"},"content":"    //TODO test cases","lastModifiedDate":"2024-03-21"},{"lineNumber":194,"author":{"gitId":"jovantanyk"},"content":"    public static BloodType parseBloodType(String bloodType) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":195,"author":{"gitId":"jovantanyk"},"content":"        requireNonNull(bloodType);","lastModifiedDate":"2024-03-18"},{"lineNumber":196,"author":{"gitId":"laney0808"},"content":"        String trimmedBloodType \u003d bloodType.trim();","lastModifiedDate":"2024-03-19"},{"lineNumber":197,"author":{"gitId":"jovantanyk"},"content":"        if (!BloodType.isValidBloodType(trimmedBloodType)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":198,"author":{"gitId":"laney0808"},"content":"            throw new ParseException(BloodType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":199,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":200,"author":{"gitId":"jovantanyk"},"content":"        return new BloodType(trimmedBloodType);","lastModifiedDate":"2024-03-21"},{"lineNumber":201,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":202,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":203,"author":{"gitId":"laney0808"},"content":"     * Parses a {@code String allergies} into an {@code Set\u003cAllergies\u003e}.","lastModifiedDate":"2024-03-19"},{"lineNumber":204,"author":{"gitId":"laney0808"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-19"},{"lineNumber":205,"author":{"gitId":"laney0808"},"content":"     * @throws ParseException if the given {@code allergies} is invalid.","lastModifiedDate":"2024-03-19"},{"lineNumber":206,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":207,"author":{"gitId":"laney0808"},"content":"    //TODO test cases","lastModifiedDate":"2024-03-21"},{"lineNumber":208,"author":{"gitId":"laney0808"},"content":"    public static Allergies parseAllergies(String allergies) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":209,"author":{"gitId":"laney0808"},"content":"        requireNonNull(allergies);","lastModifiedDate":"2024-03-19"},{"lineNumber":210,"author":{"gitId":"laney0808"},"content":"        String trimmedAllergies \u003d allergies.trim();","lastModifiedDate":"2024-03-19"},{"lineNumber":211,"author":{"gitId":"laney0808"},"content":"        return new Allergies(trimmedAllergies);","lastModifiedDate":"2024-03-19"},{"lineNumber":212,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":213,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":214,"author":{"gitId":"laney0808"},"content":"     * Parses a {@code String condition} into an {@code Condition}.","lastModifiedDate":"2024-03-19"},{"lineNumber":215,"author":{"gitId":"laney0808"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-19"},{"lineNumber":216,"author":{"gitId":"laney0808"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":217,"author":{"gitId":"laney0808"},"content":"     * @throws ParseException if the given {@code condition} is invalid.","lastModifiedDate":"2024-03-19"},{"lineNumber":218,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":219,"author":{"gitId":"laney0808"},"content":"    //TODO test cases","lastModifiedDate":"2024-03-21"},{"lineNumber":220,"author":{"gitId":"laney0808"},"content":"    public static Condition parseCondition(String condition) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":221,"author":{"gitId":"laney0808"},"content":"        requireNonNull(condition);","lastModifiedDate":"2024-03-19"},{"lineNumber":222,"author":{"gitId":"laney0808"},"content":"        String trimmedCondition \u003d condition.trim();","lastModifiedDate":"2024-03-19"},{"lineNumber":223,"author":{"gitId":"laney0808"},"content":"        //TODO: Implement condition validation \u0026 standardisation","lastModifiedDate":"2024-03-19"},{"lineNumber":224,"author":{"gitId":"laney0808"},"content":"        return new Condition(trimmedCondition);","lastModifiedDate":"2024-03-19"},{"lineNumber":225,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":226,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":227,"author":{"gitId":"laney0808"},"content":"     * Parses a {@code String symptom} into an {@code Symptom}.","lastModifiedDate":"2024-03-19"},{"lineNumber":228,"author":{"gitId":"laney0808"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-19"},{"lineNumber":229,"author":{"gitId":"laney0808"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":230,"author":{"gitId":"laney0808"},"content":"     * @throws ParseException if the given {@code symptom} is invalid.","lastModifiedDate":"2024-03-19"},{"lineNumber":231,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":232,"author":{"gitId":"laney0808"},"content":"    //TODO test cases","lastModifiedDate":"2024-03-21"},{"lineNumber":233,"author":{"gitId":"laney0808"},"content":"    public static Symptom parseSymptom(String symptom) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":234,"author":{"gitId":"laney0808"},"content":"        requireNonNull(symptom);","lastModifiedDate":"2024-03-19"},{"lineNumber":235,"author":{"gitId":"laney0808"},"content":"        String trimmedSymptom \u003d symptom.trim();","lastModifiedDate":"2024-03-19"},{"lineNumber":236,"author":{"gitId":"laney0808"},"content":"        return new Symptom(trimmedSymptom);","lastModifiedDate":"2024-03-19"},{"lineNumber":237,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":238,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":239,"author":{"gitId":"laney0808"},"content":"     * Parses a {@code String diagnosis} into an {@code Diagnosis}.","lastModifiedDate":"2024-03-19"},{"lineNumber":240,"author":{"gitId":"laney0808"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-19"},{"lineNumber":241,"author":{"gitId":"laney0808"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":242,"author":{"gitId":"laney0808"},"content":"     * @throws ParseException if the given {@code diagnosis} is invalid.","lastModifiedDate":"2024-03-19"},{"lineNumber":243,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":244,"author":{"gitId":"laney0808"},"content":"    //TODO test cases","lastModifiedDate":"2024-03-21"},{"lineNumber":245,"author":{"gitId":"laney0808"},"content":"    public static Diagnosis parseDiagnosis(String diagnosis) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":246,"author":{"gitId":"laney0808"},"content":"        requireNonNull(diagnosis);","lastModifiedDate":"2024-03-19"},{"lineNumber":247,"author":{"gitId":"laney0808"},"content":"        String trimmedDiagnosis \u003d diagnosis.trim();","lastModifiedDate":"2024-03-19"},{"lineNumber":248,"author":{"gitId":"laney0808"},"content":"        return new Diagnosis(trimmedDiagnosis);","lastModifiedDate":"2024-03-19"},{"lineNumber":249,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":250,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":251,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":255,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":258,"author":{"gitId":"laney0808"},"content":"    //TODO test cases","lastModifiedDate":"2024-03-21"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":271,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":273,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":284,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":285,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jovantanyk":35,"laney0808":134,"-":125}},{"path":"src/main/java/seedu/address/logic/parser/ReadCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NatLeong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"NatLeong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"NatLeong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"NatLeong"},"content":"import seedu.address.logic.commands.ReadCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"NatLeong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"NatLeong"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"NatLeong"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"NatLeong"},"content":" * Parses input arguments and creates a new ReadCommand object","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"NatLeong"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"NatLeong"},"content":"public class ReadCommandParser implements Parser\u003cReadCommand\u003e {","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"NatLeong"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"NatLeong"},"content":"     * Parses the given {@code String} of argument in the context of the ReadCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"NatLeong"},"content":"     * and returns an ReadCommand object for execution.","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"NatLeong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"NatLeong"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"NatLeong"},"content":"    public ReadCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"NatLeong"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"NatLeong"},"content":"        String trimmedArg \u003d args.trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"NatLeong"},"content":"        if (trimmedArg.isEmpty()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"NatLeong"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"NatLeong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReadCommand.MESSAGE_NOT_READ));","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"NatLeong"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"NatLeong"},"content":"        return new ReadCommand(new Nric(trimmedArg));","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"NatLeong"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"NatLeong"},"content":"}","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"NatLeong":30}},{"path":"src/main/java/seedu/address/logic/parser/UpdateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alex-setyawan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"alex-setyawan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ALLERGIES;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONDITION;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COUNTRY;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATEOFADMISSION;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATEOFBIRTH;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SYMPTOM;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"alex-setyawan"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"alex-setyawan"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.logic.commands.UpdateCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.logic.commands.UpdateCommand.UpdatePersonDescriptor;","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"alex-setyawan"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"alex-setyawan"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"alex-setyawan"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"alex-setyawan"},"content":"public class UpdateCommandParser implements Parser\u003cUpdateCommand\u003e {","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"alex-setyawan"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"alex-setyawan"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"alex-setyawan"},"content":"    public UpdateCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"alex-setyawan"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"alex-setyawan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"alex-setyawan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NRIC, PREFIX_NAME, PREFIX_PHONE, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"alex-setyawan"},"content":"                        PREFIX_DATEOFBIRTH, PREFIX_SEX, PREFIX_STATUS, PREFIX_TAG, PREFIX_EMAIL, PREFIX_COUNTRY,","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"alex-setyawan"},"content":"                        PREFIX_DATEOFADMISSION, PREFIX_ALLERGIES, PREFIX_BLOODTYPE, PREFIX_CONDITION, PREFIX_SYMPTOM,","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"alex-setyawan"},"content":"                        PREFIX_DIAGNOSIS);","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"alex-setyawan"},"content":"        Nric nric;","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"alex-setyawan"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"alex-setyawan"},"content":"            nric \u003d ParserUtil.parseNric(argMultimap.getPreamble());","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"alex-setyawan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"alex-setyawan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"alex-setyawan"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NRIC, PREFIX_NAME, PREFIX_PHONE, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"alex-setyawan"},"content":"                PREFIX_DATEOFBIRTH, PREFIX_SEX, PREFIX_STATUS, PREFIX_TAG, PREFIX_EMAIL, PREFIX_COUNTRY,","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"alex-setyawan"},"content":"                PREFIX_DATEOFADMISSION, PREFIX_ALLERGIES, PREFIX_BLOODTYPE, PREFIX_CONDITION, PREFIX_SYMPTOM,","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"alex-setyawan"},"content":"                PREFIX_DIAGNOSIS);","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"alex-setyawan"},"content":"        UpdatePersonDescriptor updatePersonDescriptor \u003d new UpdatePersonDescriptor();","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"alex-setyawan"},"content":"        updatePersonDescriptor.setNric(nric);","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"alex-setyawan"},"content":"        // Mandatory fields","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"alex-setyawan"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"alex-setyawan"},"content":"            updatePersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"alex-setyawan"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"alex-setyawan"},"content":"            updatePersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"alex-setyawan"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"alex-setyawan"},"content":"            updatePersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"alex-setyawan"},"content":"        if (argMultimap.getValue(PREFIX_DATEOFBIRTH).isPresent()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"alex-setyawan"},"content":"            updatePersonDescriptor.setDateOfBirth(","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"alex-setyawan"},"content":"                    ParserUtil.parseDateOfBirth(argMultimap.getValue(PREFIX_DATEOFBIRTH).get()));","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"alex-setyawan"},"content":"        if (argMultimap.getValue(PREFIX_SEX).isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"alex-setyawan"},"content":"            updatePersonDescriptor.setSex(ParserUtil.parseSex(argMultimap.getValue(PREFIX_SEX).get()));","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"alex-setyawan"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"alex-setyawan"},"content":"            updatePersonDescriptor.setStatus(ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get()));","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"alex-setyawan"},"content":"        // Data fields","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"alex-setyawan"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"alex-setyawan"},"content":"            updatePersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"alex-setyawan"},"content":"        if (argMultimap.getValue(PREFIX_COUNTRY).isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"alex-setyawan"},"content":"            updatePersonDescriptor.setCountry(ParserUtil.parseCountry(argMultimap.getValue(PREFIX_COUNTRY).get()));","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"alex-setyawan"},"content":"        // Medical information","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"alex-setyawan"},"content":"        if (argMultimap.getValue(PREFIX_ALLERGIES).isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"alex-setyawan"},"content":"            updatePersonDescriptor.setAllergies(","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"alex-setyawan"},"content":"                    ParserUtil.parseAllergies(argMultimap.getValue(PREFIX_ALLERGIES).get()));","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"alex-setyawan"},"content":"        if (argMultimap.getValue(PREFIX_BLOODTYPE).isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"alex-setyawan"},"content":"            updatePersonDescriptor.setBloodType(","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"alex-setyawan"},"content":"                    ParserUtil.parseBloodType(argMultimap.getValue(PREFIX_BLOODTYPE).get()));","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"alex-setyawan"},"content":"        if (argMultimap.getValue(PREFIX_CONDITION).isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"alex-setyawan"},"content":"            updatePersonDescriptor.setCondition(","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"alex-setyawan"},"content":"                    ParserUtil.parseCondition(argMultimap.getValue(PREFIX_CONDITION).get()));","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"alex-setyawan"},"content":"        if (argMultimap.getValue(PREFIX_DATEOFADMISSION).isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"alex-setyawan"},"content":"            updatePersonDescriptor.setDateOfAdmission(","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"alex-setyawan"},"content":"                    ParserUtil.parseDateOfAdmission(argMultimap.getValue(PREFIX_DATEOFADMISSION).get()));","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"alex-setyawan"},"content":"        if (argMultimap.getValue(PREFIX_DIAGNOSIS).isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"alex-setyawan"},"content":"            updatePersonDescriptor.setDiagnosis(","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"alex-setyawan"},"content":"                    ParserUtil.parseDiagnosis(argMultimap.getValue(PREFIX_DIAGNOSIS).get()));","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"alex-setyawan"},"content":"        if (argMultimap.getValue(PREFIX_SYMPTOM).isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"alex-setyawan"},"content":"            updatePersonDescriptor.setSymptom(ParserUtil.parseSymptom(argMultimap.getValue(PREFIX_SYMPTOM).get()));","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"alex-setyawan"},"content":"        // parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(updatePersonDescriptor::setTags);","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"alex-setyawan"},"content":"        if (!updatePersonDescriptor.isAnyFieldUpdated()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"alex-setyawan"},"content":"            throw new ParseException(UpdateCommand.MESSAGE_NOT_UPDATED);","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"alex-setyawan"},"content":"        return new UpdateCommand(nric, updatePersonDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"alex-setyawan"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"alex-setyawan"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"alex-setyawan"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"alex-setyawan"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"alex-setyawan"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"alex-setyawan"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"alex-setyawan"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"alex-setyawan"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2024-03-20"},{"lineNumber":142,"author":{"gitId":"alex-setyawan"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"alex-setyawan"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"alex-setyawan":145}},{"path":"src/main/java/seedu/address/model/ImmuniMate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"laney0808"},"content":"public class ImmuniMate implements ReadOnlyImmuniMate {","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"laney0808"},"content":"    //TODO test cases","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"laney0808"},"content":"    public ImmuniMate() {}","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"laney0808"},"content":"    public ImmuniMate(ReadOnlyImmuniMate toBeCopied) {","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"laney0808"},"content":"    public void resetData(ReadOnlyImmuniMate newData) {","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"laney0808"},"content":"        if (!(other instanceof ImmuniMate)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"laney0808"},"content":"        ImmuniMate otherAddressBook \u003d (ImmuniMate) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"laney0808":7,"-":123}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"laney0808"},"content":"    Path getImmunimateFilePath();","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"laney0808"},"content":"    void setImmunimateFilePath(Path immuniMateFilePath);","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"laney0808"},"content":"    void setImmuniMate(ReadOnlyImmuniMate immuniMate);","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"laney0808"},"content":"    ReadOnlyImmuniMate getImmuniMate();","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"laney0808":4,"-":83}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"laney0808"},"content":"    private final ImmuniMate immuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"laney0808"},"content":"     * Initializes a ModelManager with the given system and userPrefs.","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"laney0808"},"content":"    public ModelManager(ReadOnlyImmuniMate immuniMate, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"laney0808"},"content":"        requireAllNonNull(immuniMate, userPrefs);","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"laney0808"},"content":"        logger.fine(\"Initializing with Immunimate: \" + immuniMate + \" and user prefs \" + userPrefs);","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"laney0808"},"content":"        this.immuniMate \u003d new ImmuniMate(immuniMate);","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"laney0808"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.immuniMate.getPersonList());","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"laney0808"},"content":"        this(new ImmuniMate(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"laney0808"},"content":"    public Path getImmunimateFilePath() {","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"laney0808"},"content":"    public void setImmunimateFilePath(Path immuniMateFilePath) {","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"laney0808"},"content":"        requireNonNull(immuniMateFilePath);","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"laney0808"},"content":"        userPrefs.setAddressBookFilePath(immuniMateFilePath);","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"laney0808"},"content":"    public void setImmuniMate(ReadOnlyImmuniMate immuniMate) {","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"laney0808"},"content":"        this.immuniMate.resetData(immuniMate);","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"laney0808"},"content":"    public ReadOnlyImmuniMate getImmuniMate() {","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"laney0808"},"content":"        return immuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"laney0808"},"content":"    //TODO test cases","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"laney0808"},"content":"        return immuniMate.hasPerson(person);","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"laney0808"},"content":"    //TODO test cases","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":99,"author":{"gitId":"laney0808"},"content":"        immuniMate.removePerson(target);","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"laney0808"},"content":"        immuniMate.addPerson(person);","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"laney0808"},"content":"        immuniMate.setPerson(target, editedPerson);","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":144,"author":{"gitId":"laney0808"},"content":"        return immuniMate.equals(otherModelManager.immuniMate)","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"laney0808":23,"-":126}},{"path":"src/main/java/seedu/address/model/ReadOnlyImmuniMate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"laney0808"},"content":"public interface ReadOnlyImmuniMate {","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"laney0808":1,"-":16}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"    private final String value;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jovantanyk":1,"-":64}},{"path":"src/main/java/seedu/address/model/person/AddressContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alex-setyawan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"alex-setyawan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"alex-setyawan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"alex-setyawan"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"alex-setyawan"},"content":" * Tests that a {@code Person}\u0027s {@code Address} matches any of the keywords given.","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"alex-setyawan"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"alex-setyawan"},"content":"public class AddressContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"alex-setyawan"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"alex-setyawan"},"content":"    public AddressContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"alex-setyawan"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"alex-setyawan"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"alex-setyawan"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"alex-setyawan"},"content":"        return keywords.stream()","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"alex-setyawan"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsPhraseIgnoreCase(person.getAddress().toString(), keyword));","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"alex-setyawan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"alex-setyawan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"alex-setyawan"},"content":"            return true;","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"alex-setyawan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"alex-setyawan"},"content":"        if (!(other instanceof AddressContainsKeywordsPredicate)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"alex-setyawan"},"content":"            return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"alex-setyawan"},"content":"        AddressContainsKeywordsPredicate otherAddressContainsKeywordsPredicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"alex-setyawan"},"content":"                (AddressContainsKeywordsPredicate) other;","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"alex-setyawan"},"content":"        return keywords.equals(otherAddressContainsKeywordsPredicate.keywords);","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"alex-setyawan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"alex-setyawan"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"alex-setyawan"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"alex-setyawan":45}},{"path":"src/main/java/seedu/address/model/person/Allergies.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laney0808"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"laney0808"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"laney0808"},"content":" * Represents a Person\u0027s allergies in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":" * Guarantees: immutable;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"laney0808"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"laney0808"},"content":"public class Allergies {","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"laney0808"},"content":"    private final String allergies;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"laney0808"},"content":"    public Allergies(String allergies) {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"laney0808"},"content":"        this.allergies \u003d allergies;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"laney0808"},"content":"    public String getAllergies() {","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"laney0808"},"content":"        return allergies;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"alex-setyawan"},"content":"     * Returns given placeholder string if value field is not initialised","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"alex-setyawan"},"content":"     * @param alt","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"alex-setyawan"},"content":"     * @return placeholder string","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"alex-setyawan"},"content":"    public String orElse(String alt) {","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"        return allergies \u003d\u003d null ? alt : allergies;","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"laney0808"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"laney0808"},"content":"        return this.allergies;","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"laney0808"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"        return allergies.hashCode();","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"laney0808"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"laney0808"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"laney0808"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"laney0808"},"content":"        if (!(other instanceof Allergies)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"laney0808"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"laney0808"},"content":"        Allergies otherAllergies \u003d (Allergies) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"laney0808"},"content":"        return allergies.equals(otherAllergies.allergies);","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"laney0808"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"alex-setyawan":10,"jovantanyk":2,"laney0808":39}},{"path":"src/main/java/seedu/address/model/person/BloodType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laney0808"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"laney0808"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"laney0808"},"content":" * Represents a Person\u0027s blood type in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"laney0808"},"content":" * Guarantees: immutable;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"laney0808"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"laney0808"},"content":"public class BloodType {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"BloodType should be either A+, A-, B+, B-, AB+, AB-, O+, O-\";","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(A\\\\+|A-|B\\\\+|B-|AB\\\\+|AB-|O\\\\+|O-)$\";","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"    private final String bloodType;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"laney0808"},"content":"     * Constructs a {@code BloodType}.","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"laney0808"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"     * @param bloodType A valid blood type in String format","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"    public BloodType(String bloodType) {","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"        requireNonNull(bloodType);","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"        checkArgument(isValidBloodType(bloodType), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"        this.bloodType \u003d bloodType;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"     * A method for testing if string forms a valid blood group","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"     * @param test String for storing testing type","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"     * @return Boolean whether test passes or fails","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"    public static boolean isValidBloodType(String test) {","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"alex-setyawan"},"content":"     * Returns given placeholder string if value field is not initialised","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"     * @param alt An alternate return value","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"alex-setyawan"},"content":"     * @return placeholder string","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"alex-setyawan"},"content":"    public String orElse(String alt) {","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"        return this.bloodType \u003d\u003d null ? alt : this.toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"laney0808"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"        return this.bloodType;","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"laney0808"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"jovantanyk"},"content":"        return this.bloodType.hashCode();","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"laney0808"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"laney0808"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"laney0808"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"laney0808"},"content":"        if (!(other instanceof BloodType)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"laney0808"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"laney0808"},"content":"        BloodType otherBloodType \u003d (BloodType) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"jovantanyk"},"content":"        return this.bloodType.equals(otherBloodType.bloodType);","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"laney0808"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"alex-setyawan":11,"jovantanyk":27,"laney0808":31}},{"path":"src/main/java/seedu/address/model/person/Condition.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laney0808"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"laney0808"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"laney0808"},"content":" * Represents a Person\u0027s condition in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"laney0808"},"content":" * Guarantees: immutable;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"laney0808"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"laney0808"},"content":"public class Condition {","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"laney0808"},"content":"    private final String condition;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"laney0808"},"content":"    public Condition(String condition) {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"laney0808"},"content":"        this.condition \u003d condition;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"laney0808"},"content":"    public String getCondition() {","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"laney0808"},"content":"        return condition;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"alex-setyawan"},"content":"     * Returns given placeholder string if value field is not initialised","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"alex-setyawan"},"content":"     * @param alt","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"alex-setyawan"},"content":"     * @return placeholder string","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"alex-setyawan"},"content":"    public String orElse(String alt) {","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"        return condition \u003d\u003d null ? alt : condition;","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"laney0808"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"laney0808"},"content":"        return this.condition;","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"laney0808"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"        return condition.hashCode();","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"laney0808"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"laney0808"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"laney0808"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"laney0808"},"content":"        if (!(other instanceof Condition)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"laney0808"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"laney0808"},"content":"        Condition otherCondition \u003d (Condition) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"laney0808"},"content":"        return condition.equals(otherCondition.condition);","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"laney0808"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"alex-setyawan":10,"jovantanyk":1,"laney0808":40}},{"path":"src/main/java/seedu/address/model/person/ConditionContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alex-setyawan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"alex-setyawan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"alex-setyawan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"alex-setyawan"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"alex-setyawan"},"content":" * Tests that a {@code Person}\u0027s {@code Condition} matches any of the keywords given.","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"alex-setyawan"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"alex-setyawan"},"content":"public class ConditionContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"alex-setyawan"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"alex-setyawan"},"content":"    public ConditionContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"alex-setyawan"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"alex-setyawan"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"alex-setyawan"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"alex-setyawan"},"content":"        return keywords.stream().anyMatch(","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"alex-setyawan"},"content":"                keyword -\u003e StringUtil.containsPhraseIgnoreCase(person.getCondition().toString(), keyword));","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"alex-setyawan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"alex-setyawan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"alex-setyawan"},"content":"            return true;","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"alex-setyawan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"alex-setyawan"},"content":"        if (!(other instanceof ConditionContainsKeywordsPredicate)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"alex-setyawan"},"content":"            return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"alex-setyawan"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"alex-setyawan"},"content":"        ConditionContainsKeywordsPredicate otherConditionContainsKeywordsPredicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"alex-setyawan"},"content":"                (ConditionContainsKeywordsPredicate) other;","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"alex-setyawan"},"content":"        return keywords.equals(otherConditionContainsKeywordsPredicate.keywords);","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"alex-setyawan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"alex-setyawan"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"alex-setyawan"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"alex-setyawan":45}},{"path":"src/main/java/seedu/address/model/person/Country.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laney0808"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"laney0808"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"laney0808"},"content":" * Represents a Person\u0027s condition in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"laney0808"},"content":" * Guarantees: immutable;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"laney0808"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"laney0808"},"content":"public class Country {","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"laney0808"},"content":"    private final String country;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"    //Todo: map input country to a standard country name","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"laney0808"},"content":"    public Country(String country) {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"laney0808"},"content":"        this.country \u003d country;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"alex-setyawan"},"content":"     * Returns given placeholder string if value field is not initialised","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"alex-setyawan"},"content":"     * @param alt","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"alex-setyawan"},"content":"     * @return placeholder string","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"alex-setyawan"},"content":"    public String orElse(String alt) {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"alex-setyawan"},"content":"        return country \u003d\u003d null ? alt : country;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"laney0808"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"laney0808"},"content":"        return this.country;","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"laney0808"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"        return country.hashCode();","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"laney0808"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"laney0808"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"laney0808"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"laney0808"},"content":"        if (!(other instanceof Country)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"laney0808"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"laney0808"},"content":"        Country otherCountry \u003d (Country) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"laney0808"},"content":"        return country.equals(otherCountry.country);","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"laney0808"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"alex-setyawan":13,"jovantanyk":2,"laney0808":30}},{"path":"src/main/java/seedu/address/model/person/DateOfAdmission.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laney0808"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"laney0808"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"laney0808"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"laney0808"},"content":" * Represents a Person\u0027s date of admission in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"laney0808"},"content":" * Guarantees: immutable;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"laney0808"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"laney0808"},"content":"public class DateOfAdmission {","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"laney0808"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"alex-setyawan"},"content":"            \"Date of admission should be in the format of YYYY-MM-DD, and it should not be blank.\";","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"alex-setyawan"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$\";","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"    private final LocalDate dateOfAdmission;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"laney0808"},"content":"     * Constructs a {@code DateOfAdmission}.","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"laney0808"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"laney0808"},"content":"     * @param dateOfAdmission A valid date of admission.","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"laney0808"},"content":"    public DateOfAdmission(String dateOfAdmission) {","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"laney0808"},"content":"        this.dateOfAdmission \u003d LocalDate.parse(dateOfAdmission);","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"laney0808"},"content":"     * Returns true if a given string is a valid date of admission.","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"laney0808"},"content":"    public static boolean isValidDateOfAdmission(String test) {","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"laney0808"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"alex-setyawan"},"content":"     * Returns given placeholder string if value field is not initialised","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"alex-setyawan"},"content":"     * @param alt","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"alex-setyawan"},"content":"     * @return placeholder string","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"alex-setyawan"},"content":"    public String orElse(String alt) {","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"alex-setyawan"},"content":"        return dateOfAdmission \u003d\u003d null ? alt : dateOfAdmission.toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"laney0808"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"laney0808"},"content":"        return this.dateOfAdmission.toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"laney0808"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"        return dateOfAdmission.hashCode();","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"laney0808"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"laney0808"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"laney0808"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"laney0808"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"laney0808"},"content":"        if (!(other instanceof DateOfAdmission)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"laney0808"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"laney0808"},"content":"        DateOfAdmission otherDateOfAdmission \u003d (DateOfAdmission) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"laney0808"},"content":"        return dateOfAdmission.equals(otherDateOfAdmission.dateOfAdmission);","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"laney0808"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"alex-setyawan":11,"jovantanyk":4,"laney0808":51}},{"path":"src/main/java/seedu/address/model/person/DateOfBirth.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laney0808"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"laney0808"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"laney0808"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"laney0808"},"content":" * Represents a Person\u0027s date of admission in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"laney0808"},"content":" * Guarantees: immutable;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"laney0808"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"laney0808"},"content":"public class DateOfBirth {","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"laney0808"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"laney0808"},"content":"            \"Date of birth should be in the format of YYYY-MM-DD, and it should not be blank.\";","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])\";","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"    private final LocalDate dateOfBirth;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"laney0808"},"content":"     * Constructs a {@code DateOfBirth}.","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"laney0808"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"laney0808"},"content":"     * @param dateOfBirth A valid date of birth.","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"laney0808"},"content":"    public DateOfBirth(String dateOfBirth) {","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"laney0808"},"content":"        if (!isValidDateOfBirth(dateOfBirth)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"laney0808"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"laney0808"},"content":"        this.dateOfBirth \u003d LocalDate.parse(dateOfBirth);","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"laney0808"},"content":"     * Returns true if a given string is a valid date of birth.","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"laney0808"},"content":"    public static boolean isValidDateOfBirth(String test) {","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"laney0808"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"laney0808"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"laney0808"},"content":"        return this.dateOfBirth.toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"laney0808"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"laney0808"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"laney0808"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"laney0808"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"laney0808"},"content":"        if (!(other instanceof DateOfBirth)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"laney0808"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"laney0808"},"content":"        DateOfBirth otherDateOfBirth \u003d (DateOfBirth) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"laney0808"},"content":"        return dateOfBirth.equals(otherDateOfBirth.dateOfBirth);","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"laney0808"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"jovantanyk"},"content":"        return dateOfBirth.hashCode();","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"laney0808"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"jovantanyk":3,"laney0808":57}},{"path":"src/main/java/seedu/address/model/person/Diagnosis.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laney0808"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"laney0808"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"laney0808"},"content":" * Represents a Person\u0027s diagnosis in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"laney0808"},"content":" * Guarantees: immutable;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"laney0808"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"laney0808"},"content":"public class Diagnosis {","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"laney0808"},"content":"    private final String diagnosis;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"laney0808"},"content":"    public Diagnosis(String diagnosis) {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"laney0808"},"content":"        this.diagnosis \u003d diagnosis;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"laney0808"},"content":"    public String getDiagnosis() {","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"laney0808"},"content":"        return diagnosis;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"alex-setyawan"},"content":"     * Returns given placeholder string if value field is not initialised","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"alex-setyawan"},"content":"     * @param alt","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"alex-setyawan"},"content":"     * @return placeholder string","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"alex-setyawan"},"content":"    public String orElse(String alt) {","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"        return diagnosis \u003d\u003d null ? alt : diagnosis;","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"laney0808"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"laney0808"},"content":"        return this.diagnosis;","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"laney0808"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"laney0808"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"laney0808"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"laney0808"},"content":"        if (!(other instanceof Diagnosis)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"laney0808"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"laney0808"},"content":"        Diagnosis otherDiagnosis \u003d (Diagnosis) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"laney0808"},"content":"        return diagnosis.equals(otherDiagnosis.diagnosis);","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"laney0808"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"        return diagnosis.hashCode();","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"laney0808"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"alex-setyawan":9,"jovantanyk":1,"laney0808":41}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"    private final String value;","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"alex-setyawan"},"content":"     * Returns given placeholder string if value field is not initialised","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"alex-setyawan"},"content":"     * @param alt","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"alex-setyawan"},"content":"     * @return placeholder string","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"alex-setyawan"},"content":"    public String orElse(String alt) {","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"alex-setyawan"},"content":"        return value \u003d\u003d null ? alt : value;","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alex-setyawan":9,"jovantanyk":1,"-":78}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"    private final String fullName;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jovantanyk":1,"-":66}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().toString(), keyword));","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jovantanyk":1,"-":43}},{"path":"src/main/java/seedu/address/model/person/Nric.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laney0808"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"laney0808"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"laney0808"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"laney0808"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"laney0808"},"content":" * Represents a Person\u0027s NRIC in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"laney0808"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNric(String)}","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"laney0808"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"laney0808"},"content":"public class Nric {","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"laney0808"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"laney0808"},"content":"            \"NRIC number should contain a prefix of S or T, followed by 7 digits, and end with a letter. \"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"laney0808"},"content":"                    + \"There should not be blank.\";","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"laney0808"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"laney0808"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[ST]\\\\d{7}[A-Z]$\";","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"    private final String nric;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"laney0808"},"content":"     * Constructs a {@code NRIC}.","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"laney0808"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"laney0808"},"content":"     * @param nric A valid NRIC.","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"laney0808"},"content":"    public Nric(String nric) {","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"laney0808"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"laney0808"},"content":"        checkArgument(isValidNric(nric), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"laney0808"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"laney0808"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"laney0808"},"content":"    public static boolean isValidNric(String test) {","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"laney0808"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"laney0808"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"laney0808"},"content":"        return this.nric;","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"laney0808"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"laney0808"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"laney0808"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"laney0808"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"laney0808"},"content":"        if (!(other instanceof Nric)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"laney0808"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"laney0808"},"content":"        Nric otherNric \u003d (Nric) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"laney0808"},"content":"        return nric.equals(otherNric.nric);","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"laney0808"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"jovantanyk"},"content":"        return nric.hashCode();","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"laney0808"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"jovantanyk":3,"laney0808":65}},{"path":"src/main/java/seedu/address/model/person/NricContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NatLeong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"NatLeong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"NatLeong"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"NatLeong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"NatLeong"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"NatLeong"},"content":" * Tests that a {@code Person}\u0027s {@code Nric} matches any of the keywords given.","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"NatLeong"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"NatLeong"},"content":"public class NricContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"NatLeong"},"content":"    private final String keywords;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"NatLeong"},"content":"    public NricContainsKeywordsPredicate(String keywords) {","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"NatLeong"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"NatLeong"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"NatLeong"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"NatLeong"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"NatLeong"},"content":"        return StringUtil.containsWordIgnoreCase(person.getNric().toString(), keywords);","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"NatLeong"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"NatLeong"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"NatLeong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"NatLeong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"NatLeong"},"content":"            return true;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"NatLeong"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"NatLeong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"NatLeong"},"content":"        if (!(other instanceof NricContainsKeywordsPredicate)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"NatLeong"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"NatLeong"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"NatLeong"},"content":"        NricContainsKeywordsPredicate otherNricContainsKeywordsPredicate \u003d (NricContainsKeywordsPredicate) other;","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"NatLeong"},"content":"        return keywords.equals(otherNricContainsKeywordsPredicate.keywords);","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"NatLeong"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"NatLeong"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"NatLeong"},"content":"    public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"NatLeong"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"NatLeong"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"NatLeong"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"NatLeong":42}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"laney0808"},"content":"    //Mandatory fields","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"laney0808"},"content":"    //Identity fields","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"laney0808"},"content":"    private final Nric nric;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"laney0808"},"content":"    private Name name;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"alex-setyawan"},"content":"    private Phone phone;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"laney0808"},"content":"    private Address address;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"laney0808"},"content":"    private final DateOfBirth dateOfBirth;","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"    private Sex sex;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"laney0808"},"content":"    private Status status;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"laney0808"},"content":"    // Optional fields","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"laney0808"},"content":"    private Email email \u003d null;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"laney0808"},"content":"    private Country country \u003d null;","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"laney0808"},"content":"    //Medical information","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"    private Allergies allergies \u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"    private BloodType bloodType \u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"    private Condition condition \u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"    private DateOfAdmission dateOfAdmission \u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"    private Diagnosis diagnosis \u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"    private Symptom symptom \u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"laney0808"},"content":"     * Every mandatory field must be present and not null.","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"    public Person(Nric nric, Name name, Phone phone, Address address, DateOfBirth dateOfBirth, Sex sex, Status status) {","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"laney0808"},"content":"        //Only the fields that are mandatory are included down here","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"laney0808"},"content":"        requireAllNonNull(nric, name, phone, address, dateOfBirth, sex);","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"laney0808"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"laney0808"},"content":"        this.dateOfBirth \u003d dateOfBirth;","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"        this.sex \u003d sex;","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"laney0808"},"content":"     * Constructor for Person with only Nric.","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"laney0808"},"content":"    private Person(Nric nric) {","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"laney0808"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"laney0808"},"content":"        this.name \u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"laney0808"},"content":"        this.phone \u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"laney0808"},"content":"        this.address \u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"laney0808"},"content":"        this.dateOfBirth \u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"laney0808"},"content":"        this.sex \u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"laney0808"},"content":"        this.status \u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"laney0808"},"content":"     * Constructor for Person with only Nric.","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"laney0808"},"content":"    public static Person createPersonWithNric(Nric nric) {","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"laney0808"},"content":"        return new Person(nric);","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"laney0808"},"content":"    public Nric getNric() {","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"laney0808"},"content":"        return nric;","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"alex-setyawan"},"content":"    public Sex getSex() {","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"alex-setyawan"},"content":"        return this.sex;","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":95,"author":{"gitId":"alex-setyawan"},"content":"    public Allergies getAllergies() {","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"alex-setyawan"},"content":"        return allergies;","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"alex-setyawan"},"content":"    public BloodType getBloodType() {","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"alex-setyawan"},"content":"        return bloodType;","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"alex-setyawan"},"content":"    public Country getCountry() {","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"alex-setyawan"},"content":"        return country;","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"laney0808"},"content":"    public DateOfBirth getDateOfBirth() {","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"laney0808"},"content":"        return dateOfBirth;","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"alex-setyawan"},"content":"    public Condition getCondition() {","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"alex-setyawan"},"content":"        return condition;","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"alex-setyawan"},"content":"    public DateOfAdmission getDateOfAdmission() {","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"alex-setyawan"},"content":"        return dateOfAdmission;","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"alex-setyawan"},"content":"    public Diagnosis getDiagnosis() {","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"alex-setyawan"},"content":"        return diagnosis;","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"jovantanyk"},"content":"    public Status getStatus() {","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"jovantanyk"},"content":"        return this.status;","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"alex-setyawan"},"content":"    public Symptom getSymptom() {","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"alex-setyawan"},"content":"        return symptom;","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"laney0808"},"content":"     * Sets the name of the person to input value.","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"laney0808"},"content":"     * @param name the new name.","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"laney0808"},"content":"    public void setName(Name name) {","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"laney0808"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"laney0808"},"content":"     * Sets the phone of the person to input value.","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"laney0808"},"content":"     * @param phone the new phone.","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"laney0808"},"content":"    public void setPhone(Phone phone) {","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"laney0808"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2024-03-19"},{"lineNumber":152,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"laney0808"},"content":"     * Sets the address of the person to input value.","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":156,"author":{"gitId":"laney0808"},"content":"    public void setAddress(Address address) {","lastModifiedDate":"2024-03-19"},{"lineNumber":157,"author":{"gitId":"laney0808"},"content":"        this.address \u003d address;","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":160,"author":{"gitId":"laney0808"},"content":"     * Sets the sex of the person to input value.","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":162,"author":{"gitId":"laney0808"},"content":"    public void setSex(Sex sex) {","lastModifiedDate":"2024-03-19"},{"lineNumber":163,"author":{"gitId":"laney0808"},"content":"        this.sex \u003d sex;","lastModifiedDate":"2024-03-19"},{"lineNumber":164,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":165,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":166,"author":{"gitId":"laney0808"},"content":"     * Sets the status of the person to input value.","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"laney0808"},"content":"     * @param status the new status.","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"laney0808"},"content":"    public void setStatus(Status status) {","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"laney0808"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":173,"author":{"gitId":"laney0808"},"content":"     * Sets the email of the person to input value.","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"laney0808"},"content":"     * @param email the new email.","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":176,"author":{"gitId":"laney0808"},"content":"    public void setEmail(Email email) {","lastModifiedDate":"2024-03-19"},{"lineNumber":177,"author":{"gitId":"laney0808"},"content":"        this.email \u003d email;","lastModifiedDate":"2024-03-19"},{"lineNumber":178,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":179,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":180,"author":{"gitId":"laney0808"},"content":"     * Sets the allergies of the person to input value.","lastModifiedDate":"2024-03-19"},{"lineNumber":181,"author":{"gitId":"laney0808"},"content":"     * @param allergies the new allergies.","lastModifiedDate":"2024-03-19"},{"lineNumber":182,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":183,"author":{"gitId":"laney0808"},"content":"    public void setAllergies(Allergies allergies) {","lastModifiedDate":"2024-03-19"},{"lineNumber":184,"author":{"gitId":"laney0808"},"content":"        this.allergies \u003d allergies;","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":187,"author":{"gitId":"laney0808"},"content":"     * Sets the blood type of the person to input value.","lastModifiedDate":"2024-03-19"},{"lineNumber":188,"author":{"gitId":"laney0808"},"content":"     * @param bloodType the new blood type.","lastModifiedDate":"2024-03-19"},{"lineNumber":189,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":190,"author":{"gitId":"laney0808"},"content":"    public void setBloodType(BloodType bloodType) {","lastModifiedDate":"2024-03-19"},{"lineNumber":191,"author":{"gitId":"laney0808"},"content":"        this.bloodType \u003d bloodType;","lastModifiedDate":"2024-03-19"},{"lineNumber":192,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":193,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":194,"author":{"gitId":"laney0808"},"content":"     * Sets the country of the person to input value.","lastModifiedDate":"2024-03-19"},{"lineNumber":195,"author":{"gitId":"laney0808"},"content":"     * @param country the new country.","lastModifiedDate":"2024-03-19"},{"lineNumber":196,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":197,"author":{"gitId":"laney0808"},"content":"    public void setCountry(Country country) {","lastModifiedDate":"2024-03-19"},{"lineNumber":198,"author":{"gitId":"laney0808"},"content":"        this.country \u003d country;","lastModifiedDate":"2024-03-19"},{"lineNumber":199,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":200,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":201,"author":{"gitId":"laney0808"},"content":"     * Sets the condition of the person to input value.","lastModifiedDate":"2024-03-19"},{"lineNumber":202,"author":{"gitId":"laney0808"},"content":"     * @param condition the new condition.","lastModifiedDate":"2024-03-19"},{"lineNumber":203,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":204,"author":{"gitId":"laney0808"},"content":"    public void setCondition(Condition condition) {","lastModifiedDate":"2024-03-19"},{"lineNumber":205,"author":{"gitId":"laney0808"},"content":"        this.condition \u003d condition;","lastModifiedDate":"2024-03-19"},{"lineNumber":206,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":207,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":208,"author":{"gitId":"laney0808"},"content":"     * Sets the date of admission of the person to input value.","lastModifiedDate":"2024-03-19"},{"lineNumber":209,"author":{"gitId":"laney0808"},"content":"     * @param dateOfAdmission the new date of admission.","lastModifiedDate":"2024-03-19"},{"lineNumber":210,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":211,"author":{"gitId":"laney0808"},"content":"    public void setDateOfAdmission(DateOfAdmission dateOfAdmission) {","lastModifiedDate":"2024-03-19"},{"lineNumber":212,"author":{"gitId":"laney0808"},"content":"        this.dateOfAdmission \u003d dateOfAdmission;","lastModifiedDate":"2024-03-19"},{"lineNumber":213,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":214,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":215,"author":{"gitId":"laney0808"},"content":"     * Sets the diagnosis of the person to input value.","lastModifiedDate":"2024-03-19"},{"lineNumber":216,"author":{"gitId":"laney0808"},"content":"     * @param diagnosis the new diagnosis.","lastModifiedDate":"2024-03-19"},{"lineNumber":217,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":218,"author":{"gitId":"laney0808"},"content":"    public void setDiagnosis(Diagnosis diagnosis) {","lastModifiedDate":"2024-03-19"},{"lineNumber":219,"author":{"gitId":"laney0808"},"content":"        this.diagnosis \u003d diagnosis;","lastModifiedDate":"2024-03-19"},{"lineNumber":220,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":221,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":222,"author":{"gitId":"laney0808"},"content":"     * Sets the symptom of the person to input value.","lastModifiedDate":"2024-03-19"},{"lineNumber":223,"author":{"gitId":"laney0808"},"content":"     * @param symptom the new symptom.","lastModifiedDate":"2024-03-19"},{"lineNumber":224,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":225,"author":{"gitId":"laney0808"},"content":"    public void setSymptom(Symptom symptom) {","lastModifiedDate":"2024-03-19"},{"lineNumber":226,"author":{"gitId":"laney0808"},"content":"        this.symptom \u003d symptom;","lastModifiedDate":"2024-03-19"},{"lineNumber":227,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":230,"author":{"gitId":"laney0808"},"content":"     * Returns true if both persons have the same nric.","lastModifiedDate":"2024-03-17"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":238,"author":{"gitId":"jovantanyk"},"content":"        return otherPerson !\u003d null \u0026\u0026 otherPerson.getNric().equals(getNric());","lastModifiedDate":"2024-03-17"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":242,"author":{"gitId":"laney0808"},"content":"     * Returns true if the person has all mandatory fields.","lastModifiedDate":"2024-03-23"},{"lineNumber":243,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":244,"author":{"gitId":"laney0808"},"content":"    public static boolean isValidPerson(Person person) {","lastModifiedDate":"2024-03-23"},{"lineNumber":245,"author":{"gitId":"laney0808"},"content":"        return person.nric !\u003d null","lastModifiedDate":"2024-03-23"},{"lineNumber":246,"author":{"gitId":"laney0808"},"content":"                \u0026\u0026 person.name !\u003d null","lastModifiedDate":"2024-03-23"},{"lineNumber":247,"author":{"gitId":"laney0808"},"content":"                \u0026\u0026 person.phone !\u003d null","lastModifiedDate":"2024-03-23"},{"lineNumber":248,"author":{"gitId":"laney0808"},"content":"                \u0026\u0026 person.address !\u003d null","lastModifiedDate":"2024-03-23"},{"lineNumber":249,"author":{"gitId":"laney0808"},"content":"                \u0026\u0026 person.dateOfBirth !\u003d null","lastModifiedDate":"2024-03-23"},{"lineNumber":250,"author":{"gitId":"laney0808"},"content":"                \u0026\u0026 person.sex !\u003d null","lastModifiedDate":"2024-03-23"},{"lineNumber":251,"author":{"gitId":"laney0808"},"content":"                \u0026\u0026 person.status !\u003d null;","lastModifiedDate":"2024-03-23"},{"lineNumber":252,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":253,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":255,"author":{"gitId":"laney0808"},"content":"     * Returns true if both persons have the same identity and all data fields.","lastModifiedDate":"2024-03-21"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":269,"author":{"gitId":"laney0808"},"content":"        if (!(isValidPerson(this) \u0026\u0026 isValidPerson(otherPerson))) {","lastModifiedDate":"2024-03-23"},{"lineNumber":270,"author":{"gitId":"laney0808"},"content":"            return false;","lastModifiedDate":"2024-03-23"},{"lineNumber":271,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":272,"author":{"gitId":"alex-setyawan"},"content":"        return nric.equals(otherPerson.nric)","lastModifiedDate":"2024-03-18"},{"lineNumber":273,"author":{"gitId":"alex-setyawan"},"content":"                \u0026\u0026 name.equals(otherPerson.name)","lastModifiedDate":"2024-03-18"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2024-03-18"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2024-03-18"},{"lineNumber":276,"author":{"gitId":"alex-setyawan"},"content":"                \u0026\u0026 dateOfBirth.equals(otherPerson.dateOfBirth)","lastModifiedDate":"2024-03-18"},{"lineNumber":277,"author":{"gitId":"laney0808"},"content":"                \u0026\u0026 sex.equals(otherPerson.sex)","lastModifiedDate":"2024-03-20"},{"lineNumber":278,"author":{"gitId":"laney0808"},"content":"                \u0026\u0026 status.equals(otherPerson.status)","lastModifiedDate":"2024-03-21"},{"lineNumber":279,"author":{"gitId":"laney0808"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2024-03-21"},{"lineNumber":280,"author":{"gitId":"laney0808"},"content":"                \u0026\u0026 Objects.equals(email, otherPerson.email)","lastModifiedDate":"2024-03-23"},{"lineNumber":281,"author":{"gitId":"laney0808"},"content":"                \u0026\u0026 Objects.equals(country, otherPerson.country)","lastModifiedDate":"2024-03-23"},{"lineNumber":282,"author":{"gitId":"laney0808"},"content":"                \u0026\u0026 Objects.equals(allergies, otherPerson.allergies)","lastModifiedDate":"2024-03-23"},{"lineNumber":283,"author":{"gitId":"laney0808"},"content":"                \u0026\u0026 Objects.equals(bloodType, otherPerson.bloodType)","lastModifiedDate":"2024-03-23"},{"lineNumber":284,"author":{"gitId":"laney0808"},"content":"                \u0026\u0026 Objects.equals(condition, otherPerson.condition)","lastModifiedDate":"2024-03-23"},{"lineNumber":285,"author":{"gitId":"laney0808"},"content":"                \u0026\u0026 Objects.equals(dateOfAdmission, otherPerson.dateOfAdmission)","lastModifiedDate":"2024-03-23"},{"lineNumber":286,"author":{"gitId":"laney0808"},"content":"                \u0026\u0026 Objects.equals(diagnosis, otherPerson.diagnosis)","lastModifiedDate":"2024-03-23"},{"lineNumber":287,"author":{"gitId":"laney0808"},"content":"                \u0026\u0026 Objects.equals(symptom, otherPerson.symptom);","lastModifiedDate":"2024-03-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":293,"author":{"gitId":"jovantanyk"},"content":"        return Objects.hash(nric, name, phone, address, dateOfBirth, sex, status);","lastModifiedDate":"2024-03-22"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":298,"author":{"gitId":"alex-setyawan"},"content":"        // list view","lastModifiedDate":"2024-03-18"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-21"},{"lineNumber":300,"author":{"gitId":"laney0808"},"content":"                .add(\"nric\", nric)","lastModifiedDate":"2024-03-21"},{"lineNumber":301,"author":{"gitId":"laney0808"},"content":"                .add(\"name\", name)","lastModifiedDate":"2024-03-21"},{"lineNumber":302,"author":{"gitId":"laney0808"},"content":"                .add(\"status\", status).toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":303,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":304,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":305,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":306,"author":{"gitId":"jovantanyk"},"content":"     * @return Detailed String of Person","lastModifiedDate":"2024-03-18"},{"lineNumber":307,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":308,"author":{"gitId":"alex-setyawan"},"content":"    public String toDetailedString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":309,"author":{"gitId":"alex-setyawan"},"content":"        // detailed view","lastModifiedDate":"2024-03-18"},{"lineNumber":310,"author":{"gitId":"alex-setyawan"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-18"},{"lineNumber":311,"author":{"gitId":"alex-setyawan"},"content":"                .add(\"nric\", nric)","lastModifiedDate":"2024-03-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2024-03-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2024-03-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2024-03-18"},{"lineNumber":315,"author":{"gitId":"laney0808"},"content":"                .add(\"birthday\", dateOfBirth)","lastModifiedDate":"2024-03-21"},{"lineNumber":316,"author":{"gitId":"laney0808"},"content":"                .add(\"sex\", sex)","lastModifiedDate":"2024-03-21"},{"lineNumber":317,"author":{"gitId":"laney0808"},"content":"                .add(\"status\", status)","lastModifiedDate":"2024-03-21"},{"lineNumber":318,"author":{"gitId":"laney0808"},"content":"                .add(\"email\", email)","lastModifiedDate":"2024-03-21"},{"lineNumber":319,"author":{"gitId":"laney0808"},"content":"                .add(\"admission\", dateOfAdmission)","lastModifiedDate":"2024-03-21"},{"lineNumber":320,"author":{"gitId":"alex-setyawan"},"content":"                .add(\"allergies\", allergies)","lastModifiedDate":"2024-03-18"},{"lineNumber":321,"author":{"gitId":"alex-setyawan"},"content":"                .add(\"blood type\", bloodType)","lastModifiedDate":"2024-03-18"},{"lineNumber":322,"author":{"gitId":"alex-setyawan"},"content":"                .add(\"country\", country)","lastModifiedDate":"2024-03-18"},{"lineNumber":323,"author":{"gitId":"laney0808"},"content":"                .add(\"condition\", condition)","lastModifiedDate":"2024-03-21"},{"lineNumber":324,"author":{"gitId":"alex-setyawan"},"content":"                .add(\"diagnosis\", diagnosis)","lastModifiedDate":"2024-03-18"},{"lineNumber":325,"author":{"gitId":"alex-setyawan"},"content":"                .add(\"symptom\", symptom)","lastModifiedDate":"2024-03-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2024-03-21"},{"lineNumber":327,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alex-setyawan":45,"jovantanyk":19,"laney0808":169,"-":96}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 8 digits long\";","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"laney0808"},"content":"    //TODO: change REGEX to give correct results","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"laney0808"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{8}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"    private final String value;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jovantanyk":2,"laney0808":2,"-":58}},{"path":"src/main/java/seedu/address/model/person/Sex.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laney0808"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"laney0808"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"laney0808"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"laney0808"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"laney0808"},"content":" * Represents a Person\u0027s status in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"laney0808"},"content":" * Guarantees: immutable;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"laney0808"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"laney0808"},"content":"public class Sex {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Sex should be either F or M.\";","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"alex-setyawan"},"content":"     * Represents sex of a person.","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"    private enum SexType { F, M }","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"laney0808"},"content":"    private final SexType sex;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"laney0808"},"content":"     * Constructs a Sex instance.","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"    public Sex(String sex) {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"        requireNonNull(sex);","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"        checkArgument(isValidSex(sex), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"        this.sex \u003d SexType.valueOf(sex);","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"     * Checks if a String matches the Enum","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"     * @param testString String of input","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"     * @return Boolean","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"    public static boolean isValidSex(String testString) {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"            SexType sexType \u003d SexType.valueOf(testString);","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"laney0808"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"laney0808"},"content":"        return this.sex.toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"laney0808"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"laney0808"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"laney0808"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"laney0808"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"laney0808"},"content":"        if (!(other instanceof Sex)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"laney0808"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"laney0808"},"content":"        Sex otherSex \u003d (Sex) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"laney0808"},"content":"        return sex.equals(otherSex.sex);","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"laney0808"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"jovantanyk"},"content":"        return sex.hashCode();","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"laney0808"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"alex-setyawan":5,"jovantanyk":21,"laney0808":41}},{"path":"src/main/java/seedu/address/model/person/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laney0808"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"laney0808"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"laney0808"},"content":" * Represents a Person\u0027s status in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"laney0808"},"content":" * Guarantees: immutable;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"laney0808"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"laney0808"},"content":"public class Status {","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"            \"Status should only be one of the following: HEALTHY, UNWELL, PENDING.\";","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"alex-setyawan"},"content":"     * Represents status of a person.","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"alex-setyawan"},"content":"    public enum StatusType { HEALTHY, UNWELL, PENDING }","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"laney0808"},"content":"    private final StatusType status;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"laney0808"},"content":"     * Constructs a Status instance.","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"laney0808"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"     * @param status Status of a person","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"    public Status(String status) {","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"        requireNonNull(status);","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"        checkArgument(isValidStatus(status), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"        this.status \u003d StatusType.valueOf(status);","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"NatLeong"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"NatLeong"},"content":"     * Gets status type","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"NatLeong"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"NatLeong"},"content":"     * @return Status type of this status","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"NatLeong"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"NatLeong"},"content":"    public StatusType getStatusType() {","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"NatLeong"},"content":"        return this.status;","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"NatLeong"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"     * Checks if a String matches the Enum","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"     * @param testString String of input","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"     * @return Boolean","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"    public static boolean isValidStatus(String testString) {","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"            StatusType statusType \u003d StatusType.valueOf(testString);","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"laney0808"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"jovantanyk"},"content":"        // TODO Implement Custom toString format","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"laney0808"},"content":"        return this.status.toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"laney0808"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"laney0808"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"laney0808"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"laney0808"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"laney0808"},"content":"        if (!(other instanceof Status)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"laney0808"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"laney0808"},"content":"        Status otherSex \u003d (Status) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"laney0808"},"content":"        return status.equals(otherSex.status);","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"laney0808"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"jovantanyk"},"content":"        return status.hashCode();","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"laney0808"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"alex-setyawan":5,"jovantanyk":26,"laney0808":39,"NatLeong":9}},{"path":"src/main/java/seedu/address/model/person/Symptom.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laney0808"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"laney0808"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"laney0808"},"content":" * Represents a Person\u0027s symptom in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"laney0808"},"content":" * Guarantees: immutable;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"laney0808"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"laney0808"},"content":"public class Symptom {","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"laney0808"},"content":"    private final String symptom;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"laney0808"},"content":"    public Symptom(String symptom) {","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"laney0808"},"content":"        this.symptom \u003d symptom;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"laney0808"},"content":"    public String getSymptom() {","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"laney0808"},"content":"        return symptom;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"alex-setyawan"},"content":"     * Returns given placeholder string if value field is not initialised","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"alex-setyawan"},"content":"     * @param alt","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"alex-setyawan"},"content":"     * @return placeholder string","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"    public String orElse(String alt) {","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"alex-setyawan"},"content":"        return symptom \u003d\u003d null ? alt : symptom;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"laney0808"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"laney0808"},"content":"        return this.symptom;","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"alex-setyawan"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"alex-setyawan"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"alex-setyawan"},"content":"        return symptom.hashCode();","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"laney0808"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"laney0808"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"laney0808"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"laney0808"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"laney0808"},"content":"        if (!(other instanceof Symptom)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"laney0808"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"laney0808"},"content":"        Symptom otherSymptom \u003d (Symptom) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"laney0808"},"content":"        return symptom.equals(otherSymptom.symptom);","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"laney0808"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"alex-setyawan":14,"laney0808":36}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"laney0808"},"content":"     * Returns true if the list contains a person with the given NRIC.","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"laney0808"},"content":"    public boolean containsNric(Nric nric) {","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"laney0808"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"laney0808"},"content":"        return internalList.stream().anyMatch(person -\u003e person.getNric().equals(nric));","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"laney0808":9,"-":150}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ReadOnlyImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":6,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"            new Person(new Nric(\"T0234567C\"), new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"), new DateOfBirth(\"1977-04-03\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"                    new Sex(\"M\"), new Status(\"HEALTHY\")),","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"            new Person(new Nric(\"S9234568N\"), new Name(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new DateOfBirth(\"1977-04-03\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"                    new Sex(\"F\"), new Status(\"UNWELL\")),","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"            new Person(new Nric(\"S8934569Z\"), new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new DateOfBirth(\"2001-04-03\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"                    new Sex(\"F\"), new Status(\"HEALTHY\")),","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"            new Person(new Nric(\"T0134560A\"), new Name(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new DateOfBirth(\"1987-11-03\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"                    new Sex(\"M\"), new Status(\"PENDING\")),","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"            new Person(new Nric(\"T0534161B\"), new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"), new DateOfBirth(\"1970-12-03\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"                    new Sex(\"M\"), new Status(\"UNWELL\")),","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"            new Person(new Nric(\"S9781662B\"), new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new DateOfBirth(\"1987-04-03\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"                    new Sex(\"M\"), new Status(\"PENDING\"))","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"laney0808"},"content":"    public static ReadOnlyImmuniMate getSampleAddressBook() {","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"laney0808"},"content":"        ImmuniMate sampleAb \u003d new ImmuniMate();","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"jovantanyk":20,"laney0808":6,"-":23}},{"path":"src/main/java/seedu/address/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ReadOnlyImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"laney0808"},"content":" * Represents a storage for {@link ImmuniMate}.","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"laney0808"},"content":"     * Returns AddressBook data as a {@link ReadOnlyImmuniMate}.","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"laney0808"},"content":"    Optional\u003cReadOnlyImmuniMate\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"laney0808"},"content":"    Optional\u003cReadOnlyImmuniMate\u003e readAddressBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"laney0808"},"content":"     * Saves the given {@link ReadOnlyImmuniMate} to the storage.","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"laney0808"},"content":"    void saveAddressBook(ReadOnlyImmuniMate addressBook) throws IOException;","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"laney0808"},"content":"     * @see #saveAddressBook(ReadOnlyImmuniMate)","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"laney0808"},"content":"    void saveAddressBook(ReadOnlyImmuniMate addressBook, Path filePath) throws IOException;","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"laney0808":10,"-":36}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"NatLeong"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"NatLeong"},"content":"import seedu.address.model.person.Allergies;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"NatLeong"},"content":"import seedu.address.model.person.BloodType;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"NatLeong"},"content":"import seedu.address.model.person.Condition;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"NatLeong"},"content":"import seedu.address.model.person.Country;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"NatLeong"},"content":"import seedu.address.model.person.DateOfAdmission;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"NatLeong"},"content":"import seedu.address.model.person.Diagnosis;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"NatLeong"},"content":"import seedu.address.model.person.Symptom;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"    private final String nric;","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"    private final String sex;","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"    private final String status;","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"    private final String dateOfBirth;","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"NatLeong"},"content":"    private final Optional\u003cString\u003e email;","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"NatLeong"},"content":"    private final Optional\u003cString\u003e country;","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"NatLeong"},"content":"    private final Optional\u003cString\u003e allergies;","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"NatLeong"},"content":"    private final Optional\u003cString\u003e bloodType;","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"NatLeong"},"content":"    private final Optional\u003cString\u003e condition;","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"NatLeong"},"content":"    private final Optional\u003cString\u003e dateOfAdmission;","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"NatLeong"},"content":"    private final Optional\u003cString\u003e diagnosis;","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"NatLeong"},"content":"    private final Optional\u003cString\u003e symptom;","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"laney0808"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"nric\") String nric, @JsonProperty(\"name\") String name,","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"NatLeong"},"content":"                             @JsonProperty(\"phone\") String phone, @JsonProperty(\"address\") String address,","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"NatLeong"},"content":"                             @JsonProperty(\"dateOfBirth\") String dob, @JsonProperty(\"sex\") String sex,","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"NatLeong"},"content":"                             @JsonProperty(\"status\") String status, @JsonProperty(\"email\") String email,","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"NatLeong"},"content":"                             @JsonProperty(\"country\") String country, @JsonProperty(\"allergies\") String allergies,","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"NatLeong"},"content":"                             @JsonProperty(\"bloodType\") String bloodType, @JsonProperty(\"condition\") String condition,","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"jovantanyk"},"content":"                             @JsonProperty(\"dateOfAdmission\") String doa, @JsonProperty(\"diagnosis\") String diagnosis,","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"NatLeong"},"content":"                             @JsonProperty(\"symptom\") String symptom) {","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"laney0808"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"laney0808"},"content":"        this.dateOfBirth \u003d dob;","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"laney0808"},"content":"        this.sex \u003d sex;","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"jovantanyk"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"NatLeong"},"content":"        this.email \u003d Optional.ofNullable(email);","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"NatLeong"},"content":"        this.country \u003d Optional.ofNullable(country);","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"NatLeong"},"content":"        this.allergies \u003d Optional.ofNullable(allergies);","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"NatLeong"},"content":"        this.bloodType \u003d Optional.ofNullable(bloodType);","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"NatLeong"},"content":"        this.condition \u003d Optional.ofNullable(condition);","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"NatLeong"},"content":"        this.dateOfAdmission \u003d Optional.ofNullable(doa);","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"NatLeong"},"content":"        this.diagnosis \u003d Optional.ofNullable(diagnosis);","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"NatLeong"},"content":"        this.symptom \u003d Optional.ofNullable(symptom);","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"jovantanyk"},"content":"     * Converts a given {@code Person} into this class for Json use.","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"jovantanyk"},"content":"        this.nric \u003d source.getNric().toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"jovantanyk"},"content":"        this.name \u003d source.getName().toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"jovantanyk"},"content":"        this.phone \u003d source.getPhone().toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"jovantanyk"},"content":"        this.address \u003d source.getAddress().toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"jovantanyk"},"content":"        this.dateOfBirth \u003d source.getDateOfBirth().toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"jovantanyk"},"content":"        this.sex \u003d source.getSex().toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"jovantanyk"},"content":"        this.status \u003d source.getStatus().toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"jovantanyk"},"content":"        this.email \u003d Optional.ofNullable(source.getEmail()).map(Email::toString);","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"jovantanyk"},"content":"        this.country \u003d Optional.ofNullable(source.getCountry()).map(Country::toString);","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"jovantanyk"},"content":"        this.allergies \u003d Optional.ofNullable(source.getAllergies()).map(Allergies::toString);","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"jovantanyk"},"content":"        this.bloodType \u003d Optional.ofNullable(source.getBloodType()).map(BloodType::toString);","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"jovantanyk"},"content":"        this.condition \u003d Optional.ofNullable(source.getCondition()).map(Condition::toString);","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"jovantanyk"},"content":"        this.dateOfAdmission \u003d Optional.ofNullable(source.getDateOfAdmission()).map(DateOfAdmission::toString);","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"jovantanyk"},"content":"        this.diagnosis \u003d Optional.ofNullable(source.getDiagnosis()).map(Diagnosis::toString);","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"jovantanyk"},"content":"        this.symptom \u003d Optional.ofNullable(source.getSymptom()).map(Symptom::toString);","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"jovantanyk"},"content":"     * Converts this Json-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"NatLeong"},"content":"        Person person;","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"jovantanyk"},"content":"        // NRIC Check","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"jovantanyk"},"content":"        if (nric \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"jovantanyk"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"jovantanyk"},"content":"        if (!Nric.isValidNric(nric)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"jovantanyk"},"content":"            throw new IllegalValueException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"jovantanyk"},"content":"        final Nric modelNric \u003d new Nric(nric);","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"jovantanyk"},"content":"        // Name Check","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"jovantanyk"},"content":"        // Phone Check","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"jovantanyk"},"content":"        // Address Check","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"jovantanyk"},"content":"        // Date of Birth Check","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"laney0808"},"content":"        if (dateOfBirth \u003d\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"jovantanyk"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"jovantanyk"},"content":"                    DateOfBirth.class.getSimpleName()));","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"laney0808"},"content":"        if (!DateOfBirth.isValidDateOfBirth(dateOfBirth)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"jovantanyk"},"content":"            throw new IllegalValueException(DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"laney0808"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"laney0808"},"content":"        final DateOfBirth modelDateOfBirth \u003d new DateOfBirth(dateOfBirth);","lastModifiedDate":"2024-03-17"},{"lineNumber":147,"author":{"gitId":"jovantanyk"},"content":"        // Sex Check","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"jovantanyk"},"content":"        if (sex \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"jovantanyk"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Sex.class.getSimpleName()));","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"jovantanyk"},"content":"        if (!Sex.isValidSex(sex)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"jovantanyk"},"content":"            throw new IllegalValueException(Sex.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"jovantanyk"},"content":"        final Sex modelSex \u003d new Sex(sex);","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"jovantanyk"},"content":"        // Status Check","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"jovantanyk"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"jovantanyk"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"jovantanyk"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"jovantanyk"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":161,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"jovantanyk"},"content":"        final Status modelStatus \u003d new Status(status);","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"NatLeong"},"content":"        person \u003d new Person(modelNric, modelName, modelPhone, modelAddress, modelDateOfBirth, modelSex, modelStatus);","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"NatLeong"},"content":"        // Email check","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"NatLeong"},"content":"        if (email.isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"NatLeong"},"content":"            final Email modelEmail \u003d new Email(email.get());","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"NatLeong"},"content":"            person.setEmail(modelEmail);","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"NatLeong"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"NatLeong"},"content":"        // Country check","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"NatLeong"},"content":"        if (country.isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"NatLeong"},"content":"            final Country modelCountry \u003d new Country(country.get());","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"NatLeong"},"content":"            person.setCountry(modelCountry);","lastModifiedDate":"2024-03-20"},{"lineNumber":175,"author":{"gitId":"NatLeong"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":176,"author":{"gitId":"NatLeong"},"content":"        // Allergies check","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"NatLeong"},"content":"        if (allergies.isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"NatLeong"},"content":"            final Allergies modelAllergies \u003d new Allergies(allergies.get());","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"NatLeong"},"content":"            person.setAllergies(modelAllergies);","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"NatLeong"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"NatLeong"},"content":"        // BloodType check","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"NatLeong"},"content":"        if (bloodType.isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"jovantanyk"},"content":"            final BloodType modelBloodType \u003d new BloodType(bloodType.get());","lastModifiedDate":"2024-03-21"},{"lineNumber":184,"author":{"gitId":"NatLeong"},"content":"            person.setBloodType(modelBloodType);","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"NatLeong"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"NatLeong"},"content":"        //Condition check","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"NatLeong"},"content":"        if (condition.isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":188,"author":{"gitId":"NatLeong"},"content":"            final Condition modelCondition \u003d new Condition(condition.get());","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"NatLeong"},"content":"            person.setCondition(modelCondition);","lastModifiedDate":"2024-03-20"},{"lineNumber":190,"author":{"gitId":"NatLeong"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"NatLeong"},"content":"        //Date of Admission check","lastModifiedDate":"2024-03-20"},{"lineNumber":192,"author":{"gitId":"NatLeong"},"content":"        if (dateOfAdmission.isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":193,"author":{"gitId":"NatLeong"},"content":"            final DateOfAdmission modelDoa \u003d new DateOfAdmission(dateOfAdmission.get());","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"NatLeong"},"content":"            person.setDateOfAdmission(modelDoa);","lastModifiedDate":"2024-03-20"},{"lineNumber":195,"author":{"gitId":"NatLeong"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":196,"author":{"gitId":"NatLeong"},"content":"        //Diagnosis check","lastModifiedDate":"2024-03-20"},{"lineNumber":197,"author":{"gitId":"NatLeong"},"content":"        if (diagnosis.isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":198,"author":{"gitId":"NatLeong"},"content":"            final Diagnosis modelDiagnosis \u003d new Diagnosis(diagnosis.get());","lastModifiedDate":"2024-03-20"},{"lineNumber":199,"author":{"gitId":"NatLeong"},"content":"            person.setDiagnosis(modelDiagnosis);","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"NatLeong"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"NatLeong"},"content":"        //Symptom check","lastModifiedDate":"2024-03-20"},{"lineNumber":202,"author":{"gitId":"NatLeong"},"content":"        if (symptom.isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":203,"author":{"gitId":"NatLeong"},"content":"            final Symptom modelSymptom \u003d new Symptom(symptom.get());","lastModifiedDate":"2024-03-20"},{"lineNumber":204,"author":{"gitId":"NatLeong"},"content":"            person.setSymptom(modelSymptom);","lastModifiedDate":"2024-03-20"},{"lineNumber":205,"author":{"gitId":"NatLeong"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":206,"author":{"gitId":"NatLeong"},"content":"        return person;","lastModifiedDate":"2024-03-20"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jovantanyk":56,"laney0808":11,"-":68,"NatLeong":74}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ReadOnlyImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"laney0808"},"content":"    public Optional\u003cReadOnlyImmuniMate\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"laney0808"},"content":"    public Optional\u003cReadOnlyImmuniMate\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"laney0808"},"content":"    public void saveAddressBook(ReadOnlyImmuniMate addressBook) throws IOException {","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"laney0808"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyImmuniMate)}.","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"laney0808"},"content":"    public void saveAddressBook(ReadOnlyImmuniMate addressBook, Path filePath) throws IOException {","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"laney0808":6,"-":74}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ReadOnlyImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"laney0808"},"content":"    public JsonSerializableAddressBook(ReadOnlyImmuniMate source) {","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"laney0808"},"content":"    public ImmuniMate toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"laney0808"},"content":"        ImmuniMate addressBook \u003d new ImmuniMate();","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"laney0808":5,"-":55}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ReadOnlyImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"laney0808"},"content":"    Optional\u003cReadOnlyImmuniMate\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"laney0808"},"content":"    void saveAddressBook(ReadOnlyImmuniMate addressBook) throws IOException;","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"laney0808":3,"-":29}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ReadOnlyImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"laney0808"},"content":"    public Optional\u003cReadOnlyImmuniMate\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"laney0808"},"content":"    public Optional\u003cReadOnlyImmuniMate\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"laney0808"},"content":"    public void saveAddressBook(ReadOnlyImmuniMate addressBook) throws IOException {","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"laney0808"},"content":"    public void saveAddressBook(ReadOnlyImmuniMate addressBook, Path filePath) throws IOException {","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"laney0808":5,"-":73}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"NatLeong"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-t08-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":101,"NatLeong":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"    private final Stage primaryStage;","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"    private final Logic logic;","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"    private final HelpWindow helpWindow;","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"    private ResultPanel resultPanel;","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"    private StackPane resultPanelPlaceholder;","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"jovantanyk"},"content":"        // Result Panel","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"jovantanyk"},"content":"        resultPanel \u003d new ResultPanel();","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"jovantanyk"},"content":"        resultPanelPlaceholder.getChildren().add(resultPanel.getRoot());","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"jovantanyk"},"content":"            resultPanel.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-17"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":192,"author":{"gitId":"jovantanyk"},"content":"            resultPanel.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2024-03-17"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jovantanyk":11,"-":185}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"NatLeong"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"NatLeong"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"NatLeong"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"NatLeong"},"content":"    private Label nric;","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"NatLeong"},"content":"    private Circle statusCircle;","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"NatLeong"},"content":"        name.setText(person.getName().toString() + \" (\" + person.getSex().toString() + \")\");","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"NatLeong"},"content":"        nric.setText(person.getNric().toString());","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"NatLeong"},"content":"        updateStatusCircle(person.getStatus());","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"NatLeong"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"NatLeong"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"NatLeong"},"content":"     * Set colour of status circle to represent status","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"NatLeong"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"NatLeong"},"content":"     * @param status Status of the person","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"NatLeong"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"NatLeong"},"content":"    public void updateStatusCircle(Status status) {","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"NatLeong"},"content":"        switch (status.getStatusType()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"NatLeong"},"content":"        case HEALTHY:","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"NatLeong"},"content":"            statusCircle.setFill(Color.GREEN);","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"NatLeong"},"content":"            statusCircle.setStroke(Color.GREEN);","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"NatLeong"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"NatLeong"},"content":"        case UNWELL:","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"NatLeong"},"content":"            statusCircle.setFill(Color.RED);","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"NatLeong"},"content":"            statusCircle.setStroke(Color.RED);","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"NatLeong"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"NatLeong"},"content":"        case PENDING:","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"NatLeong"},"content":"            statusCircle.setFill(Color.YELLOW);","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"NatLeong"},"content":"            statusCircle.setStroke(Color.YELLOW);","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"NatLeong"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"NatLeong"},"content":"        default:","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"NatLeong"},"content":"            statusCircle.setFill(Color.GREY);","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"NatLeong"},"content":"            statusCircle.setStroke(Color.GREY);","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"NatLeong"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"NatLeong"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":43,"NatLeong":34}},{"path":"src/main/java/seedu/address/ui/ResultPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"public class ResultPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"    private static final String FXML \u003d \"ResultPanel.fxml\";","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"    private TextArea resultPanel;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"    public ResultPanel() {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"        resultPanel.setText(feedbackToUser);","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jovantanyk":5,"-":23}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"\u003cStackPane styleClass\u003d\"pane-with-border\" prefHeight\u003d\"60\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"NatLeong"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\" style\u003d\"-fx-background-color: #818589;\"\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"    \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"        \u003cImageView fitWidth\u003d\"25\" fitHeight\u003d\"25\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"            \u003cImage url\u003d\"@/images/search_icon.png\"/\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"        \u003cTextField fx:id\u003d\"commandTextField\" prefHeight\u003d\"45\" HBox.hgrow\u003d\"ALWAYS\" onAction\u003d\"#handleCommandEntered\"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"NatLeong"},"content":"                   promptText\u003d\"Input command here...\" style\u003d\"-fx-background-color: transparent; -fx-border-color: #818589;\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"jovantanyk":15,"-":7,"NatLeong":2}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"jovantanyk"},"content":".result-panel {","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"jovantanyk"},"content":".result-panel .label {","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"jovantanyk"},"content":"    -fx-border-color: #383838 #383838 #383838 #383838;","lastModifiedDate":"2024-03-17"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"jovantanyk"},"content":"    -fx-font-family: \"Roboto\";","lastModifiedDate":"2024-03-17"},{"lineNumber":327,"author":{"gitId":"jovantanyk"},"content":"    -fx-font-size: 16pt;","lastModifiedDate":"2024-03-17"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"jovantanyk"},"content":"#resultPanel .content {","lastModifiedDate":"2024-03-17"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"jovantanyk":6,"-":346}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"NatLeong"},"content":"    \u003cImage url\u003d\"@/images/question.png\" /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"-":43,"NatLeong":1}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"NatLeong"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"NatLeong"},"content":"\u003cfx:root minHeight\u003d\"800\" minWidth\u003d\"1290\" onCloseRequest\u003d\"#handleExit\" title\u003d\"ImmuniMate\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"         xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"NatLeong"},"content":"        \u003cImage url\u003d\"@/images/stethoscope.png\"/\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"NatLeong"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" style\u003d\"-fx-background-color: #2FAD66;\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"NatLeong"},"content":"                  \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\" style\u003d\"-fx-font-family: Arial; -fx-font-size: 14px;\"\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"NatLeong"},"content":"                    \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" style\u003d\"-fx-font-family: Arial; -fx-font-size: 14px;\" /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                  \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"NatLeong"},"content":"                  \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"ImmuniMate\" style\u003d\"-fx-font-family: Arial; -fx-font-size: 14px; -fx-font-weight: bold;\" /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"                \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" minHeight\u003d\"75\" prefHeight\u003d\"75\" prefWidth\u003d\"1290\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"                        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"                \u003cVBox minWidth\u003d\"1290\" prefWidth\u003d\"1290\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"                        \u003cHBox prefHeight\u003d\"400.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"                                \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"450\" prefWidth\u003d\"450\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"                                        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"                                    \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"                                \u003c/VBox\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"                                \u003cStackPane fx:id\u003d\"resultPanelPlaceholder\" minWidth\u003d\"800\" prefWidth\u003d\"800\"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"                                           styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                                    \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"NatLeong"},"content":"                                        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                                    \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"jovantanyk"},"content":"                                \u003c/StackPane\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"jovantanyk"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"jovantanyk"},"content":"                        \u003c/HBox\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"jovantanyk"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"jovantanyk":18,"-":40,"NatLeong":8}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"NatLeong"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"NatLeong"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"NatLeong"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"NatLeong"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"NatLeong"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"248.0\" minWidth\u003d\"10.0\" prefWidth\u003d\"233.0\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"NatLeong"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"176.0\" minWidth\u003d\"10.0\" prefWidth\u003d\"127.0\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"NatLeong"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"80\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"NatLeong"},"content":"                \u003cInsets bottom\u003d\"3\" left\u003d\"10\" right\u003d\"3\" top\u003d\"3\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"NatLeong"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"3\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"NatLeong"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"NatLeong"},"content":"                  \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"NatLeong"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"NatLeong"},"content":"                \u003cLabel fx:id\u003d\"nric\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$nric\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"NatLeong"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"NatLeong"},"content":"                        \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"NatLeong"},"content":"                    \u003c/font\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"NatLeong"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":42,"author":{"gitId":"NatLeong"},"content":"            \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$name\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"NatLeong"},"content":"                \u003cfont\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"NatLeong"},"content":"                    \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"NatLeong"},"content":"                \u003c/font\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"NatLeong"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"NatLeong"},"content":"               \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"NatLeong"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"NatLeong"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"NatLeong"},"content":"        \u003cCircle fx:id\u003d\"statusCircle\" fill\u003d\"#3ea435\" radius\u003d\"17.0\" stroke\u003d\"#3ea435\" strokeType\u003d\"INSIDE\" strokeWidth\u003d\"4.0\" GridPane.columnIndex\u003d\"1\" GridPane.halignment\u003d\"RIGHT\"\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"NatLeong"},"content":"            \u003cGridPane.margin\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"NatLeong"},"content":"                \u003cInsets right\u003d\"20.0\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"NatLeong"},"content":"            \u003c/GridPane.margin\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"NatLeong"},"content":"        \u003c/Circle\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"NatLeong"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"NatLeong"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"NatLeong"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":27,"NatLeong":33}},{"path":"src/main/resources/view/ResultPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"780\" prefWidth\u003d\"780\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"    \u003cTextArea fx:id\u003d\"resultPanel\" editable\u003d\"false\" styleClass\u003d\"result-panel\"/\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"jovantanyk":2,"-":7}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSON_NOT_FOUND;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"laney0808"},"content":"import seedu.address.logic.commands.CreateCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ReadOnlyImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"laney0808"},"content":"        String deleteCommand \u003d \"delete S1234567M\";","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"alex-setyawan"},"content":"        assertCommandException(deleteCommand, MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"laney0808"},"content":"        //TODO after jsonadaptedperson","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"laney0808"},"content":"        Model expectedModel \u003d new ModelManager(model.getImmuniMate(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"laney0808"},"content":"            public void saveAddressBook(ReadOnlyImmuniMate addressBook, Path filePath)","lastModifiedDate":"2024-03-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"laney0808"},"content":"        String addCommand \u003d CreateCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"jovantanyk"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"alex-setyawan":2,"jovantanyk":1,"laney0808":7,"-":166}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"laney0808"},"content":"        expectedModel.setImmuniMate(new ImmuniMate());","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"laney0808":2,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ALLERGIES;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COUNTRY;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATEOFBIRTH;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":27,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.person.NricContainsKeywordsPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.testutil.UpdatePersonDescriptorBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"    public static final String VALID_NRIC_AMY \u003d \"T0182991C\";","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"    public static final String VALID_NRIC_BOB \u003d \"S9518552M\";","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"alex-setyawan"},"content":"    public static final String VALID_PHONE_AMY \u003d \"91111111\";","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":"    public static final String VALID_PHONE_BOB \u003d \"82222222\";","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"alex-setyawan"},"content":"    public static final String VALID_DATEOFBIRTH_AMY \u003d \"2001-01-01\";","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"alex-setyawan"},"content":"    public static final String VALID_DATEOFBIRTH_BOB \u003d \"2002-02-02\";","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"    public static final String VALID_SEX_AMY \u003d \"F\";","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"    public static final String VALID_SEX_BOB \u003d \"M\";","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"    public static final String VALID_STATUS_AMY \u003d \"HEALTHY\";","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"    public static final String VALID_STATUS_BOB \u003d \"UNWELL\";","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"alex-setyawan"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"alex-setyawan"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"alex-setyawan"},"content":"    public static final String VALID_COUNTRY_AMY \u003d \"Norway\";","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"alex-setyawan"},"content":"    public static final String VALID_COUNTRY_BOB \u003d \"Indonesia\";","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"alex-setyawan"},"content":"    public static final String VALID_ALLERGIES_AMY \u003d \"peanuts\";","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"alex-setyawan"},"content":"    public static final String VALID_ALLERGIES_BOB \u003d \"pollen\";","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"laney0808"},"content":"    public static final String VALID_BLOODTYPE_AMY \u003d \"B+\";","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"laney0808"},"content":"    public static final String VALID_BLOODTYPE_BOB \u003d \"B+\";","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"alex-setyawan"},"content":"    public static final String VALID_CONDITION_AMY \u003d \"diabetes\";","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"alex-setyawan"},"content":"    public static final String VALID_CONDITION_BOB \u003d \"high blood pressure\";","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"alex-setyawan"},"content":"    public static final String VALID_DATEOFADMISSION_AMY \u003d \"2023-01-01\";","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"alex-setyawan"},"content":"    public static final String VALID_DATEOFADMISSION_BOB \u003d \"2023-02-02\";","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"alex-setyawan"},"content":"    public static final String VALID_DIAGNOSIS_AMY \u003d \"good\";","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"alex-setyawan"},"content":"    public static final String VALID_DIAGNOSIS_BOB \u003d \"not good\";","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"alex-setyawan"},"content":"    public static final String VALID_SYMPTOM_AMY \u003d \"runny nose\";","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"alex-setyawan"},"content":"    public static final String VALID_SYMPTOM_BOB \u003d \"sore throat\";","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"laney0808"},"content":"    public static final String NRIC_DESC_AMY \u003d \" \" + PREFIX_NRIC + VALID_NRIC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"laney0808"},"content":"    public static final String NRIC_DESC_BOB \u003d \" \" + PREFIX_NRIC + VALID_NRIC_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"alex-setyawan"},"content":"    public static final String DATEOFBIRTH_DESC_AMY \u003d \" \" + PREFIX_DATEOFBIRTH + VALID_DATEOFBIRTH_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"alex-setyawan"},"content":"    public static final String DATEOFBIRTH_DESC_BOB \u003d \" \" + PREFIX_DATEOFBIRTH + VALID_DATEOFBIRTH_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"alex-setyawan"},"content":"    public static final String SEX_DESC_AMY \u003d \" \" + PREFIX_SEX + VALID_SEX_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"alex-setyawan"},"content":"    public static final String SEX_DESC_BOB \u003d \" \" + PREFIX_SEX + VALID_SEX_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"alex-setyawan"},"content":"    public static final String STATUS_DESC_AMY \u003d \" \" + PREFIX_STATUS + VALID_STATUS_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"alex-setyawan"},"content":"    public static final String STATUS_DESC_BOB \u003d \" \" + PREFIX_STATUS + VALID_STATUS_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"alex-setyawan"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"alex-setyawan"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"alex-setyawan"},"content":"    public static final String COUNTRY_DESC_AMY \u003d \" \" + PREFIX_COUNTRY + VALID_COUNTRY_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"alex-setyawan"},"content":"    public static final String COUNTRY_DESC_BOB \u003d \" \" + PREFIX_COUNTRY + VALID_COUNTRY_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"alex-setyawan"},"content":"    public static final String ALLERGIES_DESC_AMY \u003d \" \" + PREFIX_ALLERGIES + VALID_ALLERGIES_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"alex-setyawan"},"content":"    public static final String ALLERGIES_DESC_BOB \u003d \" \" + PREFIX_ALLERGIES + VALID_ALLERGIES_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"laney0808"},"content":"    public static final String NON_EXISTENT_NRIC \u003d \"S1234576A\";","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"alex-setyawan"},"content":"    public static final UpdateCommand.UpdatePersonDescriptor DESC_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"alex-setyawan"},"content":"    public static final UpdateCommand.UpdatePersonDescriptor DESC_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"alex-setyawan"},"content":"        DESC_AMY \u003d new UpdatePersonDescriptorBuilder().withNric(VALID_NRIC_AMY).withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"alex-setyawan"},"content":"                .withPhone(VALID_PHONE_AMY).withAddress(VALID_ADDRESS_AMY).withDateOfBirth(VALID_DATEOFBIRTH_AMY)","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"alex-setyawan"},"content":"                .withSex(VALID_SEX_AMY).withStatus(VALID_STATUS_AMY).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"alex-setyawan"},"content":"        DESC_BOB \u003d new UpdatePersonDescriptorBuilder().withNric(VALID_NRIC_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"alex-setyawan"},"content":"                .withPhone(VALID_PHONE_BOB).withAddress(VALID_ADDRESS_BOB).withDateOfBirth(VALID_DATEOFBIRTH_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"alex-setyawan"},"content":"                .withSex(VALID_SEX_BOB).withStatus(VALID_STATUS_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"laney0808"},"content":"        ImmuniMate expectedAddressBook \u003d new ImmuniMate(actualModel.getImmuniMate());","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":153,"author":{"gitId":"laney0808"},"content":"        assertEquals(expectedAddressBook, actualModel.getImmuniMate());","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":164,"author":{"gitId":"jovantanyk"},"content":"        final String[] splitName \u003d person.getName().toString().split(\"\\\\s+\");","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"laney0808"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":171,"author":{"gitId":"laney0808"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code Nric} in the","lastModifiedDate":"2024-03-21"},{"lineNumber":172,"author":{"gitId":"laney0808"},"content":"     * {@code model}\u0027s system.","lastModifiedDate":"2024-03-21"},{"lineNumber":173,"author":{"gitId":"laney0808"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":174,"author":{"gitId":"laney0808"},"content":"    public static void showPersonWithNric(Model model, Nric nric) {","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"laney0808"},"content":"        assertTrue(model.hasPerson(Person.createPersonWithNric(nric)));","lastModifiedDate":"2024-03-21"},{"lineNumber":176,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":177,"author":{"gitId":"laney0808"},"content":"        Person person \u003d model.getFilteredPersonList().filtered(p -\u003e p.getNric().equals(nric)).get(0);","lastModifiedDate":"2024-03-21"},{"lineNumber":178,"author":{"gitId":"laney0808"},"content":"        model.updateFilteredPersonList(new NricContainsKeywordsPredicate(nric.toString()));","lastModifiedDate":"2024-03-21"},{"lineNumber":179,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":180,"author":{"gitId":"laney0808"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-21"},{"lineNumber":181,"author":{"gitId":"laney0808"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":182,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"alex-setyawan":44,"jovantanyk":7,"laney0808":24,"-":108}},{"path":"src/test/java/seedu/address/logic/commands/CreateCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"laney0808"},"content":"public class CreateCommandIntegrationTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"laney0808"},"content":"        Model expectedModel \u003d new ModelManager(model.getImmuniMate(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"laney0808"},"content":"        assertCommandSuccess(new CreateCommand(validPerson), model,","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"laney0808"},"content":"                String.format(CreateCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"laney0808"},"content":"        Person personInList \u003d model.getImmuniMate().getPersonList().get(0);","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"laney0808"},"content":"        assertCommandFailure(new CreateCommand(personInList), model,","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"laney0808"},"content":"                CreateCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"laney0808":7,"-":41}},{"path":"src/test/java/seedu/address/logic/commands/CreateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ReadOnlyImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"laney0808"},"content":"public class CreateCommandTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"laney0808"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CreateCommand(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"laney0808"},"content":"        CommandResult commandResult \u003d new CreateCommand(validPerson).execute(modelStub);","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"laney0808"},"content":"        assertEquals(String.format(CreateCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"laney0808"},"content":"        CreateCommand createCommand \u003d new CreateCommand(validPerson);","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"laney0808"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"laney0808"},"content":"                CreateCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e createCommand.execute(modelStub));","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"laney0808"},"content":"        CreateCommand addAliceCommand \u003d new CreateCommand(alice);","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"laney0808"},"content":"        CreateCommand addBobCommand \u003d new CreateCommand(bob);","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"laney0808"},"content":"        CreateCommand addAliceCommandCopy \u003d new CreateCommand(alice);","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"laney0808"},"content":"        CreateCommand createCommand \u003d new CreateCommand(ALICE);","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"laney0808"},"content":"        String expected \u003d CreateCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"laney0808"},"content":"        assertEquals(expected, createCommand.toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"laney0808"},"content":"        public Path getImmunimateFilePath() {","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"laney0808"},"content":"        public void setImmunimateFilePath(Path immuniMateFilePath) {","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"laney0808"},"content":"        public void setImmuniMate(ReadOnlyImmuniMate immuniMate) {","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"laney0808"},"content":"        public ReadOnlyImmuniMate getImmuniMate() {","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"laney0808"},"content":"        public ReadOnlyImmuniMate getImmuniMate() {","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"laney0808"},"content":"            return new ImmuniMate();","lastModifiedDate":"2024-03-20"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"laney0808":21,"-":184}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NON_EXISTENT_NRIC;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonWithNric;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"laney0808"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"laney0808"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"laney0808"},"content":"    public void execute_validNricUnfilteredList_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"laney0808"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().filtered(p -\u003e p.getNric().equals(ALICE.getNric())).get(0);","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"laney0808"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(ALICE.getNric());","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"laney0808"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getImmuniMate(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"laney0808"},"content":"    public void execute_invalidNricUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"laney0808"},"content":"        Nric nonExistingNric \u003d new Nric(NON_EXISTENT_NRIC);","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"laney0808"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(nonExistingNric);","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"alex-setyawan"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"laney0808"},"content":"    //TODO: figure out why the og version has filtered adn unfilered separated and edit accordingly","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"laney0808"},"content":"        showPersonWithNric(model, ALICE.getNric());","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"laney0808"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().filtered(p -\u003e p.getNric().equals(ALICE.getNric())).get(0);","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"laney0808"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(ALICE.getNric());","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"laney0808"},"content":"        Model expectedModel \u003d new ModelManager(model.getImmuniMate(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"laney0808"},"content":"        assertTrue(Nric.isValidNric(NON_EXISTENT_NRIC));","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"laney0808"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new Nric(NON_EXISTENT_NRIC));","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"alex-setyawan"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"laney0808"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(BOB.getNric());","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"laney0808"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(new Nric(NON_EXISTENT_NRIC));","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"laney0808"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(BOB.getNric());","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"laney0808"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(BOB.getNric());","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"laney0808"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetNric\u003d\" + BOB.getNric() + \"}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"alex-setyawan":2,"laney0808":24,"-":91}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"        assertEquals(findFirstCommand, findFirstCommand);","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"        assertEquals(findFirstCommand, findFirstCommandCopy);","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"        assertNotEquals(1, findFirstCommand);","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"jovantanyk"},"content":"        assertNotEquals(null, findFirstCommand);","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"jovantanyk"},"content":"        assertNotEquals(findFirstCommand, findSecondCommand);","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"jovantanyk"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(List.of(\"keyword\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":94,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jovantanyk":13,"-":82}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"laney0808"},"content":"        expectedModel \u003d new ModelManager(model.getImmuniMate(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"laney0808":1,"-":38}},{"path":"src/test/java/seedu/address/logic/commands/ReadCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NatLeong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"NatLeong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"NatLeong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"NatLeong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"NatLeong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NON_EXISTENT_NRIC;","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"NatLeong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"NatLeong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"NatLeong"},"content":"import static seedu.address.logic.commands.ReadCommand.MESSAGE_READ_PERSON_SUCCESS;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"NatLeong"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"NatLeong"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"NatLeong"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"NatLeong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"NatLeong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"NatLeong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"NatLeong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"NatLeong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"NatLeong"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"NatLeong"},"content":"public class ReadCommandTest {","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"NatLeong"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"NatLeong"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"NatLeong"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"NatLeong"},"content":"    void execute_validNric_success() {","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"NatLeong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_READ_PERSON_SUCCESS, Messages.formatRead(ALICE));","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"NatLeong"},"content":"        ReadCommand command \u003d new ReadCommand(ALICE.getNric());","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"NatLeong"},"content":"        expectedModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"NatLeong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"NatLeong"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"NatLeong"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"NatLeong"},"content":"    void execute_nonExistentNric_failure() {","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"NatLeong"},"content":"        Nric nonexistentNric \u003d new Nric(\"S1234567A\");","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"NatLeong"},"content":"        assertCommandFailure(new ReadCommand(nonexistentNric), model, Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"NatLeong"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"NatLeong"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"NatLeong"},"content":"    void equals() {","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"NatLeong"},"content":"        ReadCommand readFirstCommand \u003d new ReadCommand(ALICE.getNric());","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"NatLeong"},"content":"        ReadCommand readSecondCommand \u003d new ReadCommand(new Nric(NON_EXISTENT_NRIC));","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"NatLeong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"NatLeong"},"content":"        assertTrue(readFirstCommand.equals(readFirstCommand));","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"NatLeong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"NatLeong"},"content":"        ReadCommand readFirstCommandCopy \u003d new ReadCommand(ALICE.getNric());","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"NatLeong"},"content":"        assertTrue(readFirstCommand.equals(readFirstCommandCopy));","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"NatLeong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"NatLeong"},"content":"        assertFalse(readFirstCommand.equals(1));","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"NatLeong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"NatLeong"},"content":"        assertFalse(readFirstCommand.equals(null));","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"NatLeong"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"NatLeong"},"content":"        assertFalse(readFirstCommand.equals(readSecondCommand));","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"NatLeong"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"NatLeong"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"NatLeong"},"content":"    void testToString() {","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"NatLeong"},"content":"        ReadCommand readCommand \u003d new ReadCommand(ALICE.getNric());","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"NatLeong"},"content":"        String expected \u003d ReadCommand.class.getCanonicalName() + \"{nric\u003d\" + ALICE.getNric() + \"}\";","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"NatLeong"},"content":"        assertEquals(expected, readCommand.toString());","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"NatLeong"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":68,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":69,"author":{"gitId":"NatLeong"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"NatLeong":69}},{"path":"src/test/java/seedu/address/logic/commands/UpdateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATEOFBIRTH_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SEX_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.logic.commands.UpdateCommand.UpdatePersonDescriptor;","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.ImmuniMate;","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.testutil.UpdatePersonDescriptorBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"alex-setyawan"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"alex-setyawan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"alex-setyawan"},"content":"public class UpdateCommandTest {","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"alex-setyawan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"alex-setyawan"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"alex-setyawan"},"content":"        Person editedPerson \u003d new PersonBuilder().withNric(ALICE.getNric().toString()).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"alex-setyawan"},"content":"        UpdatePersonDescriptor descriptor \u003d new UpdatePersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"alex-setyawan"},"content":"        UpdateCommand updateCommand \u003d new UpdateCommand(descriptor.getNric(), descriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"alex-setyawan"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"alex-setyawan"},"content":"                UpdateCommand.MESSAGE_UPDATE_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"alex-setyawan"},"content":"        Model expectedModel \u003d new ModelManager(new ImmuniMate(model.getImmuniMate()), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"alex-setyawan"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"alex-setyawan"},"content":"        assertCommandSuccess(updateCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"alex-setyawan"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"alex-setyawan"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"alex-setyawan"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"alex-setyawan"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"alex-setyawan"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"alex-setyawan"},"content":"                .build(); // get person from list, change name and phone","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"alex-setyawan"},"content":"        UpdatePersonDescriptor descriptor \u003d new UpdatePersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"alex-setyawan"},"content":"        UpdateCommand updateCommand \u003d new UpdateCommand(descriptor.getNric(), descriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"alex-setyawan"},"content":"        // alice nric, alice descriptor","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"alex-setyawan"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"alex-setyawan"},"content":"                UpdateCommand.MESSAGE_UPDATE_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"alex-setyawan"},"content":"        Model expectedModel \u003d new ModelManager(new ImmuniMate(model.getImmuniMate()), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"alex-setyawan"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"alex-setyawan"},"content":"        assertCommandSuccess(updateCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"alex-setyawan"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_failure() {","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"alex-setyawan"},"content":"        UpdateCommand updateCommand \u003d new UpdateCommand(ALICE.getNric(), new UpdatePersonDescriptor());","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"alex-setyawan"},"content":"        /* Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"alex-setyawan"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"alex-setyawan"},"content":"                UpdateCommand.MESSAGE_UPDATE_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"alex-setyawan"},"content":"        Model expectedModel \u003d new ModelManager(new ImmuniMate(model.getImmuniMate()), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"alex-setyawan"},"content":"        assertCommandSuccess(updateCommand, model, expectedMessage, expectedModel); */","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"alex-setyawan"},"content":"        assertCommandFailure(updateCommand, model, UpdateCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"alex-setyawan"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"alex-setyawan"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"alex-setyawan"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"alex-setyawan"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"alex-setyawan"},"content":"        UpdateCommand updateCommand \u003d new UpdateCommand(ALICE.getNric(),","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"alex-setyawan"},"content":"                new UpdatePersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"alex-setyawan"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"alex-setyawan"},"content":"                UpdateCommand.MESSAGE_UPDATE_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"alex-setyawan"},"content":"        Model expectedModel \u003d new ModelManager(new ImmuniMate(model.getImmuniMate()), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"alex-setyawan"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"alex-setyawan"},"content":"        assertCommandSuccess(updateCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"alex-setyawan"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"alex-setyawan"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"alex-setyawan"},"content":"        UpdatePersonDescriptor descriptor \u003d new UpdatePersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"alex-setyawan"},"content":"        UpdateCommand updateCommand \u003d new UpdateCommand(ALICE.getNric(), descriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"alex-setyawan"},"content":"        assertCommandFailure(updateCommand, model, UpdateCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"alex-setyawan"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"alex-setyawan"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"alex-setyawan"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"alex-setyawan"},"content":"        Person personInList \u003d model.getImmuniMate().getPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":129,"author":{"gitId":"alex-setyawan"},"content":"        UpdatePersonDescriptor descriptor \u003d new UpdatePersonDescriptorBuilder(personInList).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":130,"author":{"gitId":"alex-setyawan"},"content":"        UpdateCommand updateCommand \u003d new UpdateCommand(ALICE.getNric(), descriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":131,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"alex-setyawan"},"content":"        assertCommandFailure(updateCommand, model, UpdateCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"alex-setyawan"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"alex-setyawan"},"content":"        // Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"alex-setyawan"},"content":"        UpdatePersonDescriptor descriptor \u003d new UpdatePersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"alex-setyawan"},"content":"        UpdateCommand updateCommand \u003d new UpdateCommand(new Nric(\"S1234567X\"), descriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"alex-setyawan"},"content":"        assertCommandFailure(updateCommand, model, Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"alex-setyawan"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-03-28"},{"lineNumber":145,"author":{"gitId":"alex-setyawan"},"content":"     * but smaller than size of address book","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":147,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"alex-setyawan"},"content":"    public void execute_invalidPersonNricFilteredList_failure() {","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"alex-setyawan"},"content":"        // showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"alex-setyawan"},"content":"        // Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"alex-setyawan"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"alex-setyawan"},"content":"        // assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getImmuniMate().getPersonList().size());","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"alex-setyawan"},"content":"        UpdateCommand updateCommand \u003d new UpdateCommand(new Nric(\"S1234567X\"),","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"alex-setyawan"},"content":"                new UpdatePersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"alex-setyawan"},"content":"        assertCommandFailure(updateCommand, model, Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-03-28"},{"lineNumber":158,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":160,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"alex-setyawan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"alex-setyawan"},"content":"        final UpdateCommand standardCommand \u003d new UpdateCommand(new Nric(VALID_NRIC_AMY), DESC_AMY);","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"alex-setyawan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"alex-setyawan"},"content":"        UpdatePersonDescriptor copyDescriptor \u003d new UpdatePersonDescriptor(DESC_AMY);","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"alex-setyawan"},"content":"        UpdateCommand commandWithSameValues \u003d new UpdateCommand(new Nric(VALID_NRIC_AMY), copyDescriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-28"},{"lineNumber":168,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"alex-setyawan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":170,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-28"},{"lineNumber":171,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":172,"author":{"gitId":"alex-setyawan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":173,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-28"},{"lineNumber":174,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":175,"author":{"gitId":"alex-setyawan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":176,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-28"},{"lineNumber":177,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":178,"author":{"gitId":"alex-setyawan"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":179,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(standardCommand.equals(new UpdateCommand(new Nric(VALID_NRIC_BOB), DESC_AMY)));","lastModifiedDate":"2024-03-28"},{"lineNumber":180,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":181,"author":{"gitId":"alex-setyawan"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":182,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(standardCommand.equals(new UpdateCommand(new Nric(VALID_NRIC_AMY), DESC_BOB)));","lastModifiedDate":"2024-03-28"},{"lineNumber":183,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":184,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":185,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":186,"author":{"gitId":"alex-setyawan"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-28"},{"lineNumber":187,"author":{"gitId":"alex-setyawan"},"content":"        UpdatePersonDescriptor descriptor \u003d new UpdatePersonDescriptorBuilder().withNric(VALID_NRIC_AMY)","lastModifiedDate":"2024-03-28"},{"lineNumber":188,"author":{"gitId":"alex-setyawan"},"content":"                .withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2024-03-28"},{"lineNumber":189,"author":{"gitId":"alex-setyawan"},"content":"                .withDateOfBirth(VALID_DATEOFBIRTH_AMY).withSex(VALID_SEX_AMY).withStatus(VALID_STATUS_AMY).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":190,"author":{"gitId":"alex-setyawan"},"content":"        UpdateCommand updateCommand \u003d new UpdateCommand(new Nric(VALID_NRIC_AMY), descriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":191,"author":{"gitId":"alex-setyawan"},"content":"        String expected \u003d UpdateCommand.class.getCanonicalName()","lastModifiedDate":"2024-03-28"},{"lineNumber":192,"author":{"gitId":"alex-setyawan"},"content":"                + \"{updatePersonDescriptor\u003d\"","lastModifiedDate":"2024-04-01"},{"lineNumber":193,"author":{"gitId":"alex-setyawan"},"content":"                + descriptor.toString()","lastModifiedDate":"2024-04-01"},{"lineNumber":194,"author":{"gitId":"alex-setyawan"},"content":"                + \"}\";","lastModifiedDate":"2024-03-28"},{"lineNumber":195,"author":{"gitId":"alex-setyawan"},"content":"        assertEquals(expected, updateCommand.toString());","lastModifiedDate":"2024-03-28"},{"lineNumber":196,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":197,"author":{"gitId":"alex-setyawan"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"alex-setyawan":196,"-":1}},{"path":"src/test/java/seedu/address/logic/commands/UpdatePersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.logic.commands.UpdateCommand.UpdatePersonDescriptor;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.testutil.UpdatePersonDescriptorBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"alex-setyawan"},"content":"public class UpdatePersonDescriptorTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"        UpdatePersonDescriptor descriptorWithSameValues \u003d new UpdatePersonDescriptor(DESC_AMY);","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"alex-setyawan"},"content":"        UpdatePersonDescriptor updatedAmy \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"alex-setyawan"},"content":"                new UpdatePersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(DESC_AMY.equals(updatedAmy));","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"alex-setyawan"},"content":"        updatedAmy \u003d new UpdatePersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(DESC_AMY.equals(updatedAmy));","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"alex-setyawan"},"content":"        updatedAmy \u003d new UpdatePersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(DESC_AMY.equals(updatedAmy));","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"alex-setyawan"},"content":"        updatedAmy \u003d new UpdatePersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(DESC_AMY.equals(updatedAmy));","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"alex-setyawan"},"content":"        UpdatePersonDescriptor updatePersonDescriptor \u003d new UpdatePersonDescriptor();","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"alex-setyawan"},"content":"        String expected \u003d UpdatePersonDescriptor.class.getCanonicalName() + \"{nric\u003d\"","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"alex-setyawan"},"content":"                + updatePersonDescriptor.getNric() + \", name\u003d\"","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"alex-setyawan"},"content":"                + updatePersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"alex-setyawan"},"content":"                + updatePersonDescriptor.getPhone().orElse(null) + \", address\u003d\"","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"alex-setyawan"},"content":"                + updatePersonDescriptor.getAddress().orElse(null) + \", date of birth\u003d\"","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"alex-setyawan"},"content":"                + updatePersonDescriptor.getDateOfBirth().orElse(null) + \", sex\u003d\"","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"alex-setyawan"},"content":"                + updatePersonDescriptor.getSex().orElse(null) + \", status\u003d\"","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"alex-setyawan"},"content":"                + updatePersonDescriptor.getStatus().orElse(null) + \"}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"alex-setyawan"},"content":"        assertEquals(expected, updatePersonDescriptor.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"alex-setyawan":23,"-":46}},{"path":"src/test/java/seedu/address/logic/parser/CreateCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATEOFBIRTH_DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATEOFBIRTH_DESC_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SEX_DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SEX_DESC_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATEOFBIRTH;","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"laney0808"},"content":"import seedu.address.logic.commands.CreateCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"laney0808"},"content":"public class CreateCommandParserTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"laney0808"},"content":"    private CreateCommandParser parser \u003d new CreateCommandParser();","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"jovantanyk"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"laney0808"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NRIC_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"laney0808"},"content":"                + ADDRESS_DESC_BOB + DATEOFBIRTH_DESC_BOB + SEX_DESC_BOB + STATUS_DESC_BOB,","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"laney0808"},"content":"                new CreateCommand(expectedPerson));","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"laney0808"},"content":"        //TODO: after implementing optional fields for person builder","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"jovantanyk"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB)","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"laney0808"},"content":"                NRIC_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"laney0808"},"content":"                        + DATEOFBIRTH_DESC_BOB + SEX_DESC_BOB + STATUS_DESC_BOB,","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"laney0808"},"content":"                new CreateCommand(expectedPersonMultipleTags));","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"laney0808"},"content":"        //TODO: add in optional fields (after person builder)","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"laney0808"},"content":"        String validExpectedPersonString \u003d NRIC_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"laney0808"},"content":"                + ADDRESS_DESC_BOB + DATEOFBIRTH_DESC_BOB + SEX_DESC_BOB + STATUS_DESC_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"laney0808"},"content":"        //multiple nrics","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"laney0808"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + validExpectedPersonString,","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"laney0808"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"laney0808"},"content":"        //TODO: after implementing optional fields for person builder","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"laney0808"},"content":"        /*","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"laney0808"},"content":"        */","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"laney0808"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"laney0808"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_NRIC, PREFIX_DATEOFBIRTH, PREFIX_SEX,","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"laney0808"},"content":"                        PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_STATUS));","lastModifiedDate":"2024-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"laney0808"},"content":"        /*","lastModifiedDate":"2024-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"laney0808"},"content":"         */","lastModifiedDate":"2024-03-23"},{"lineNumber":117,"author":{"gitId":"laney0808"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"laney0808"},"content":"        /*","lastModifiedDate":"2024-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"laney0808"},"content":"         */","lastModifiedDate":"2024-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"jovantanyk"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"laney0808"},"content":"        assertParseSuccess(parser, NRIC_DESC_AMY + NAME_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-23"},{"lineNumber":151,"author":{"gitId":"laney0808"},"content":"                + DATEOFBIRTH_DESC_AMY + SEX_DESC_AMY + STATUS_DESC_AMY,","lastModifiedDate":"2024-03-23"},{"lineNumber":152,"author":{"gitId":"laney0808"},"content":"                new CreateCommand(expectedPerson));","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"laney0808"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"laney0808"},"content":"        // missing nric prefix","lastModifiedDate":"2024-03-23"},{"lineNumber":160,"author":{"gitId":"laney0808"},"content":"        assertParseFailure(parser, VALID_NRIC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-23"},{"lineNumber":161,"author":{"gitId":"laney0808"},"content":"                        + DATEOFBIRTH_DESC_BOB + SEX_DESC_BOB + STATUS_DESC_BOB,","lastModifiedDate":"2024-03-23"},{"lineNumber":162,"author":{"gitId":"laney0808"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"laney0808"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + VALID_NAME_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-23"},{"lineNumber":165,"author":{"gitId":"laney0808"},"content":"                        + DATEOFBIRTH_DESC_BOB + SEX_DESC_BOB + STATUS_DESC_BOB,","lastModifiedDate":"2024-03-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"laney0808"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB + VALID_PHONE_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-23"},{"lineNumber":170,"author":{"gitId":"laney0808"},"content":"                        + DATEOFBIRTH_DESC_BOB + SEX_DESC_BOB + STATUS_DESC_BOB,","lastModifiedDate":"2024-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"laney0808"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2024-03-23"},{"lineNumber":175,"author":{"gitId":"laney0808"},"content":"                        + DATEOFBIRTH_DESC_BOB + SEX_DESC_BOB + STATUS_DESC_BOB,","lastModifiedDate":"2024-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"laney0808"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2024-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"laney0808"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + INVALID_NAME_DESC + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-23"},{"lineNumber":187,"author":{"gitId":"laney0808"},"content":"                + DATEOFBIRTH_DESC_BOB + SEX_DESC_BOB + STATUS_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"laney0808"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-23"},{"lineNumber":191,"author":{"gitId":"laney0808"},"content":"                + DATEOFBIRTH_DESC_BOB + SEX_DESC_BOB + STATUS_DESC_BOB, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-23"},{"lineNumber":192,"author":{"gitId":"laney0808"},"content":"        //TODO: optional fields","lastModifiedDate":"2024-03-23"},{"lineNumber":193,"author":{"gitId":"laney0808"},"content":"        /*","lastModifiedDate":"2024-03-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"laney0808"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-23"},{"lineNumber":196,"author":{"gitId":"laney0808"},"content":"                + DATEOFBIRTH_DESC_BOB + SEX_DESC_BOB + STATUS_DESC_BOB, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-23"},{"lineNumber":197,"author":{"gitId":"laney0808"},"content":"         */","lastModifiedDate":"2024-03-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":199,"author":{"gitId":"laney0808"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2024-03-23"},{"lineNumber":200,"author":{"gitId":"laney0808"},"content":"                + DATEOFBIRTH_DESC_BOB + SEX_DESC_BOB + STATUS_DESC_BOB, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-23"},{"lineNumber":201,"author":{"gitId":"laney0808"},"content":"        /*","lastModifiedDate":"2024-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":205,"author":{"gitId":"laney0808"},"content":"        */","lastModifiedDate":"2024-03-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":207,"author":{"gitId":"laney0808"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + INVALID_NAME_DESC + PHONE_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2024-03-23"},{"lineNumber":208,"author":{"gitId":"laney0808"},"content":"                        + DATEOFBIRTH_DESC_BOB + SEX_DESC_BOB + STATUS_DESC_BOB,","lastModifiedDate":"2024-03-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":212,"author":{"gitId":"laney0808"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NRIC_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2024-03-23"},{"lineNumber":213,"author":{"gitId":"laney0808"},"content":"                        + PHONE_DESC_BOB + ADDRESS_DESC_BOB + DATEOFBIRTH_DESC_BOB + SEX_DESC_BOB + STATUS_DESC_BOB,","lastModifiedDate":"2024-03-23"},{"lineNumber":214,"author":{"gitId":"laney0808"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jovantanyk":3,"laney0808":74,"-":139}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"laney0808"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"laney0808"},"content":"        assertParseSuccess(parser, BOB.getNric().toString(), new DeleteCommand(BOB.getNric()));","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"laney0808":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"alex-setyawan"},"content":"        assertParseSuccess(parser, \"n/Alice Bob\", expectedFindCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"alex-setyawan"},"content":"        assertParseSuccess(parser, \"n/ \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"alex-setyawan":2,"-":32}},{"path":"src/test/java/seedu/address/logic/parser/ImmuniMateParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"laney0808"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"laney0808"},"content":"import seedu.address.logic.commands.CreateCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.logic.commands.UpdateCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.logic.commands.UpdateCommand.UpdatePersonDescriptor;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.testutil.UpdatePersonDescriptorBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"laney0808"},"content":"public class ImmuniMateParserTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"laney0808"},"content":"    private final ImmuniMateParser parser \u003d new ImmuniMateParser();","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"laney0808"},"content":"    public void parseCommand_create() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"        // TODO: Only tests for person created with mandatory values, update for optional values @laney0808","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"laney0808"},"content":"        CreateCommand command \u003d (CreateCommand) parser.parseCommand(PersonUtil.getCreateCommand(person));","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"laney0808"},"content":"        assertEquals(new CreateCommand(person), command);","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"laney0808"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + BOB.getNric());","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"laney0808"},"content":"        assertEquals(new DeleteCommand(BOB.getNric()), command);","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"alex-setyawan"},"content":"        UpdatePersonDescriptor descriptor \u003d new UpdatePersonDescriptorBuilder(person).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"alex-setyawan"},"content":"        UpdateCommand command \u003d (UpdateCommand) parser.parseCommand(UpdateCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"alex-setyawan"},"content":"                + person.getNric() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"alex-setyawan"},"content":"        assertEquals(new UpdateCommand(person.getNric(), descriptor), command);","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"alex-setyawan"},"content":"                FindCommand.COMMAND_WORD + \" \" + PREFIX_NAME + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"alex-setyawan":9,"jovantanyk":1,"laney0808":9,"-":84}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"alex-setyawan"},"content":"    private static final String VALID_PHONE \u003d \"91234567\";","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"alex-setyawan":1,"-":195}},{"path":"src/test/java/seedu/address/logic/parser/ReadCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NatLeong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"NatLeong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"NatLeong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"NatLeong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"NatLeong"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"NatLeong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"NatLeong"},"content":"import seedu.address.logic.commands.ReadCommand;","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"NatLeong"},"content":"public class ReadCommandParserTest {","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"NatLeong"},"content":"    private ReadCommandParser parser \u003d new ReadCommandParser();","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"NatLeong"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"NatLeong"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"NatLeong"},"content":"        assertParseFailure(parser, \" \",","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"NatLeong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReadCommand.MESSAGE_NOT_READ));","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"NatLeong"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"NatLeong"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"NatLeong"},"content":"    public void parse_validArgs_returnsReadCommand() {","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"NatLeong"},"content":"        ReadCommand expectedReadCommand \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"NatLeong"},"content":"                new ReadCommand(ALICE.getNric());","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"NatLeong"},"content":"        assertParseSuccess(parser, \"T0139571B\", expectedReadCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"NatLeong"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"NatLeong"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"NatLeong"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"NatLeong":27}},{"path":"src/test/java/seedu/address/logic/parser/UpdateCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alex-setyawan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATEOFBIRTH_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SEX_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATEOFBIRTH_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SEX_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"alex-setyawan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.logic.commands.UpdateCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.logic.commands.UpdateCommand.UpdatePersonDescriptor;","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.testutil.UpdatePersonDescriptorBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"alex-setyawan"},"content":"public class UpdateCommandParserTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"alex-setyawan"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"alex-setyawan"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"alex-setyawan"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"alex-setyawan"},"content":"    private UpdateCommandParser parser \u003d new UpdateCommandParser();","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"alex-setyawan"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"alex-setyawan"},"content":"        // no nric specified","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"alex-setyawan"},"content":"        assertParseFailure(parser, \"n/\" + VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"alex-setyawan"},"content":"        // no field specified","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"alex-setyawan"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY, UpdateCommand.MESSAGE_NOT_UPDATED);","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"alex-setyawan"},"content":"        // no nric and no field specified","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"alex-setyawan"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"alex-setyawan"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"alex-setyawan"},"content":"        // one lowercase letter","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"alex-setyawan"},"content":"        assertParseFailure(parser, \"t0182991C\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"alex-setyawan"},"content":"        assertParseFailure(parser, \"T0182991c\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"alex-setyawan"},"content":"        // 2 lowercase letters","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"alex-setyawan"},"content":"        assertParseFailure(parser, \"t0182991c\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"alex-setyawan"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"alex-setyawan"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"alex-setyawan"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"alex-setyawan"},"content":"        // invalid name","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"alex-setyawan"},"content":"        assertParseFailure(parser, \"T0182991C\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"alex-setyawan"},"content":"        // invalid phone","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"alex-setyawan"},"content":"        assertParseFailure(parser, \"T0182991C\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"alex-setyawan"},"content":"        // invalid email","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"alex-setyawan"},"content":"        assertParseFailure(parser, \"T0182991C\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"alex-setyawan"},"content":"        // invalid address","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"alex-setyawan"},"content":"        assertParseFailure(parser, \"T0182991C\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"alex-setyawan"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"alex-setyawan"},"content":"        assertParseFailure(","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"alex-setyawan"},"content":"                parser, \"T0182991C\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"alex-setyawan"},"content":"        /*","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"alex-setyawan"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"alex-setyawan"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"alex-setyawan"},"content":"        assertParseFailure(","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"alex-setyawan"},"content":"                parser, \"T0182991C\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"alex-setyawan"},"content":"        assertParseFailure(","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"alex-setyawan"},"content":"                parser, \"T0182991C\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"alex-setyawan"},"content":"        assertParseFailure(","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"alex-setyawan"},"content":"                parser, \"T0182991C\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"alex-setyawan"},"content":"         */","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"alex-setyawan"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"alex-setyawan"},"content":"        assertParseFailure(parser, \"T0182991C\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"alex-setyawan"},"content":"                + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"alex-setyawan"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"alex-setyawan"},"content":"        // Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"alex-setyawan"},"content":"        String userInput \u003d VALID_NRIC_AMY + NAME_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"alex-setyawan"},"content":"                + DATEOFBIRTH_DESC_AMY + SEX_DESC_AMY + STATUS_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"alex-setyawan"},"content":"        UpdatePersonDescriptor descriptor \u003d new UpdatePersonDescriptorBuilder().withNric(VALID_NRIC_AMY)","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"alex-setyawan"},"content":"                .withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"alex-setyawan"},"content":"                .withDateOfBirth(VALID_DATEOFBIRTH_AMY).withSex(VALID_SEX_AMY).withStatus(VALID_STATUS_AMY).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"alex-setyawan"},"content":"        UpdateCommand expectedCommand \u003d new UpdateCommand(new Nric(VALID_NRIC_AMY), descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"alex-setyawan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"alex-setyawan"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"alex-setyawan"},"content":"        String userInput \u003d VALID_NRIC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"alex-setyawan"},"content":"        UpdatePersonDescriptor descriptor \u003d new UpdatePersonDescriptorBuilder().withNric(VALID_NRIC_AMY)","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"alex-setyawan"},"content":"                .withPhone(VALID_PHONE_AMY).withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"alex-setyawan"},"content":"        UpdateCommand expectedCommand \u003d new UpdateCommand(new Nric(VALID_NRIC_AMY), descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"alex-setyawan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"alex-setyawan"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"alex-setyawan"},"content":"        // name","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"alex-setyawan"},"content":"        String userInput \u003d VALID_NRIC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"alex-setyawan"},"content":"        UpdatePersonDescriptor descriptor \u003d new UpdatePersonDescriptorBuilder()","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"alex-setyawan"},"content":"                .withNric(VALID_NRIC_AMY).withName(VALID_NAME_AMY).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"alex-setyawan"},"content":"        UpdateCommand expectedCommand \u003d new UpdateCommand(new Nric(VALID_NRIC_AMY), descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"alex-setyawan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"alex-setyawan"},"content":"        // phone","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"alex-setyawan"},"content":"        userInput \u003d VALID_NRIC_AMY + PHONE_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"alex-setyawan"},"content":"        descriptor \u003d new UpdatePersonDescriptorBuilder().withNric(VALID_NRIC_AMY).withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"alex-setyawan"},"content":"        expectedCommand \u003d new UpdateCommand(new Nric(VALID_NRIC_AMY), descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"alex-setyawan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"alex-setyawan"},"content":"        // address","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"alex-setyawan"},"content":"        userInput \u003d VALID_NRIC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"alex-setyawan"},"content":"        descriptor \u003d new UpdatePersonDescriptorBuilder().withNric(VALID_NRIC_AMY)","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"alex-setyawan"},"content":"                .withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"alex-setyawan"},"content":"        expectedCommand \u003d new UpdateCommand(new Nric(VALID_NRIC_AMY), descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"alex-setyawan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"alex-setyawan"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"alex-setyawan"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"alex-setyawan"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"alex-setyawan"},"content":"        // valid followed by invalid","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"alex-setyawan"},"content":"        String userInput \u003d VALID_NRIC_BOB + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"alex-setyawan"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"alex-setyawan"},"content":"        // invalid followed by valid","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"alex-setyawan"},"content":"        userInput \u003d VALID_NRIC_BOB + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"alex-setyawan"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-20"},{"lineNumber":175,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":176,"author":{"gitId":"alex-setyawan"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"alex-setyawan"},"content":"        userInput \u003d VALID_NRIC_BOB + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"alex-setyawan"},"content":"                + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"alex-setyawan"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"alex-setyawan"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"alex-setyawan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"alex-setyawan"},"content":"        // multiple invalid values","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"alex-setyawan"},"content":"        userInput \u003d VALID_NRIC_BOB + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"alex-setyawan"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":188,"author":{"gitId":"alex-setyawan"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"alex-setyawan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2024-03-20"},{"lineNumber":190,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":192,"author":{"gitId":"alex-setyawan"},"content":"    /*","lastModifiedDate":"2024-03-27"},{"lineNumber":193,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"alex-setyawan"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2024-03-20"},{"lineNumber":195,"author":{"gitId":"alex-setyawan"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":196,"author":{"gitId":"alex-setyawan"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2024-03-20"},{"lineNumber":197,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":198,"author":{"gitId":"alex-setyawan"},"content":"        UpdatePersonDescriptor descriptor \u003d new UpdatePersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2024-03-20"},{"lineNumber":199,"author":{"gitId":"alex-setyawan"},"content":"        UpdateCommand expectedCommand \u003d new UpdateCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"alex-setyawan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":202,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":203,"author":{"gitId":"alex-setyawan"},"content":"    */","lastModifiedDate":"2024-03-21"},{"lineNumber":204,"author":{"gitId":"alex-setyawan"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"alex-setyawan":204}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"laney0808"},"content":"    private final ImmuniMate addressBook \u003d new ImmuniMate();","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"laney0808"},"content":"        ImmuniMate newData \u003d getTypicalAddressBook();","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"laney0808"},"content":"        ImmuniMateStub newData \u003d new ImmuniMateStub(newPersons);","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"jovantanyk"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"laney0808"},"content":"        String expected \u003d ImmuniMate.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"laney0808"},"content":"    private static class ImmuniMateStub implements ReadOnlyImmuniMate {","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"laney0808"},"content":"        ImmuniMateStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"jovantanyk":2,"laney0808":6,"-":99}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"laney0808"},"content":"        assertEquals(new ImmuniMate(), new ImmuniMate(modelManager.getImmuniMate()));","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"laney0808"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setImmunimateFilePath(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"laney0808"},"content":"        modelManager.setImmunimateFilePath(path);","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"laney0808"},"content":"        assertEquals(path, modelManager.getImmunimateFilePath());","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"laney0808"},"content":"        ImmuniMate addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"laney0808"},"content":"        ImmuniMate differentAddressBook \u003d new ImmuniMate();","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"jovantanyk"},"content":"        String[] keywords \u003d ALICE.getName().toString().split(\"\\\\s+\");","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"jovantanyk":1,"laney0808":6,"-":125}},{"path":"src/test/java/seedu/address/model/person/AllergiesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alex-setyawan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"alex-setyawan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"alex-setyawan"},"content":"public class AllergiesTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"alex-setyawan"},"content":"    /* commented as Allergies can be null, and doesn\u0027t have regex","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"alex-setyawan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"alex-setyawan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Allergies(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"alex-setyawan"},"content":"    public void constructor_invalidAllergies_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"alex-setyawan"},"content":"        String invalidAllergies \u003d \"\";","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"alex-setyawan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Allergies(invalidAllergies));","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"alex-setyawan"},"content":"    */","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"alex-setyawan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"        Allergies allergies \u003d new Allergies(\"Valid Allergy\");","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"alex-setyawan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(allergies.equals(new Allergies(\"Valid Allergy\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"alex-setyawan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(allergies.equals(allergies));","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"alex-setyawan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(allergies.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"alex-setyawan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(allergies.equals(5.0f));","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"alex-setyawan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(allergies.equals(new Allergies(\"Other Valid Allergy\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"alex-setyawan"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"alex-setyawan":42}},{"path":"src/test/java/seedu/address/model/person/BloodTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alex-setyawan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"alex-setyawan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"alex-setyawan"},"content":"public class BloodTypeTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"alex-setyawan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(NullPointerException.class, () -\u003e new BloodType(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"alex-setyawan"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"        String invalidBloodType \u003d \"ABB-\";","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new BloodType(invalidBloodType));","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"alex-setyawan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"        BloodType bloodType \u003d new BloodType(\"A+\");","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"alex-setyawan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"        assertEquals(bloodType, new BloodType(\"A+\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"alex-setyawan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"        assertEquals(bloodType, bloodType);","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"alex-setyawan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"        assertNotEquals(null, bloodType);","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"alex-setyawan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"        assertNotEquals(5.0f, bloodType);","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"        // different rh type -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"        assertNotEquals(bloodType, new BloodType(\"A-\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"        // different letter type -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"        assertFalse(bloodType.equals(new BloodType(\"B+\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"alex-setyawan"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"alex-setyawan":31,"jovantanyk":14}},{"path":"src/test/java/seedu/address/model/person/ConditionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alex-setyawan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"alex-setyawan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"alex-setyawan"},"content":"public class ConditionTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"alex-setyawan"},"content":"    /* commented as Condition can be null, and doesn\u0027t have regex","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"alex-setyawan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"alex-setyawan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Condition(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"alex-setyawan"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"alex-setyawan"},"content":"        String invalidCondition \u003d \"\";","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"alex-setyawan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Condition(invalidCondition));","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"alex-setyawan"},"content":"    */","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"alex-setyawan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"        Condition condition \u003d new Condition(\"Valid Condition\");","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"alex-setyawan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(condition.equals(new Condition(\"Valid Condition\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"alex-setyawan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(condition.equals(condition));","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"alex-setyawan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(condition.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"alex-setyawan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(condition.equals(5.0f));","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"alex-setyawan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(condition.equals(new Condition(\"Other Valid Condition\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"alex-setyawan"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"alex-setyawan":42}},{"path":"src/test/java/seedu/address/model/person/CountryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alex-setyawan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"alex-setyawan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"alex-setyawan"},"content":"public class CountryTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"alex-setyawan"},"content":"    /* commented as Allergies can be null, and doesn\u0027t have regex","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"alex-setyawan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"alex-setyawan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Country(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"alex-setyawan"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"alex-setyawan"},"content":"        String invalidCountry \u003d \"\";","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"alex-setyawan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Condition(invalidCountry));","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"alex-setyawan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"        Country country \u003d new Country(\"Valid Country\");","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"alex-setyawan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(country.equals(new Country(\"Valid Country\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"alex-setyawan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(country.equals(country));","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"alex-setyawan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(country.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"alex-setyawan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(country.equals(5.0f));","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"alex-setyawan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(country.equals(new Country(\"Other Valid Country\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"alex-setyawan"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"alex-setyawan":42}},{"path":"src/test/java/seedu/address/model/person/DateOfAdmissionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alex-setyawan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"alex-setyawan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"alex-setyawan"},"content":"public class DateOfAdmissionTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"alex-setyawan"},"content":"    /* commented as DateOfAdmission can be null, and doesn\u0027t have regex","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"alex-setyawan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"alex-setyawan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateOfAdmission(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"alex-setyawan"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"alex-setyawan"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"alex-setyawan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateOfAdmission(invalidDate));","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"    public void isValidAddress() {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"alex-setyawan"},"content":"        // null address","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"alex-setyawan"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateOfAdmission.isValidDateOfAdmission(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"alex-setyawan"},"content":"        // invalid addresses","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(DateOfAdmission.isValidDateOfAdmission(\"\")); // empty string","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(DateOfAdmission.isValidDateOfAdmission(\" \")); // spaces only","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(DateOfAdmission.isValidDateOfAdmission(\"20231213\")); // numbers only","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(DateOfAdmission.isValidDateOfAdmission(\"2023-1213\")); // one slash","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(DateOfAdmission.isValidDateOfAdmission(\"202312-13\")); // one slash","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(DateOfAdmission.isValidDateOfAdmission(\"2023-1-3\")); // shortened date and month","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(DateOfAdmission.isValidDateOfAdmission(\"13-12-2023\")); // reverse format","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"alex-setyawan"},"content":"        // valid addresses","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(DateOfAdmission.isValidDateOfAdmission(\"2023-12-13\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"alex-setyawan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"alex-setyawan"},"content":"        DateOfAdmission date \u003d new DateOfAdmission(\"2020-12-05\");","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"alex-setyawan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(date.equals(new DateOfAdmission(\"2020-12-05\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"alex-setyawan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(date.equals(date));","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"alex-setyawan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(date.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"alex-setyawan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(date.equals(5.0f));","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"alex-setyawan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(date.equals(new DateOfAdmission(\"2023-12-13\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"alex-setyawan"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"alex-setyawan":61}},{"path":"src/test/java/seedu/address/model/person/DateOfBirthTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alex-setyawan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"alex-setyawan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"alex-setyawan"},"content":"public class DateOfBirthTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"alex-setyawan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"alex-setyawan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateOfBirth(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"alex-setyawan"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"alex-setyawan"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"alex-setyawan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateOfBirth(invalidDate));","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"    public void isValidAddress() {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"alex-setyawan"},"content":"        // null address","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateOfAdmission.isValidDateOfAdmission(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"alex-setyawan"},"content":"        // invalid addresses","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(DateOfAdmission.isValidDateOfAdmission(\"\")); // empty string","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(DateOfAdmission.isValidDateOfAdmission(\" \")); // spaces only","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(DateOfAdmission.isValidDateOfAdmission(\"20231213\")); // numbers only","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(DateOfAdmission.isValidDateOfAdmission(\"2023-1213\")); // one slash","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(DateOfAdmission.isValidDateOfAdmission(\"202312-13\")); // one slash","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(DateOfAdmission.isValidDateOfAdmission(\"2023-1-3\")); // shortened date and month","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(DateOfAdmission.isValidDateOfAdmission(\"13-12-2023\")); // reverse format","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"alex-setyawan"},"content":"        // valid addresses","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(DateOfAdmission.isValidDateOfAdmission(\"2023-12-13\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"alex-setyawan"},"content":"        DateOfBirth date \u003d new DateOfBirth(\"2020-12-13\");","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"alex-setyawan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(date.equals(new DateOfBirth(\"2020-12-13\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"alex-setyawan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(date.equals(date));","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"alex-setyawan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(date.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"alex-setyawan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(date.equals(5.0f));","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"alex-setyawan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(date.equals(new DateOfBirth(\"2023-12-13\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"alex-setyawan"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"alex-setyawan":59}},{"path":"src/test/java/seedu/address/model/person/DiagnosisTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alex-setyawan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"alex-setyawan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"alex-setyawan"},"content":"public class DiagnosisTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"alex-setyawan"},"content":"    /* commented as DateOfAdmission can be null, and doesn\u0027t have regex","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"alex-setyawan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"alex-setyawan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Diagnosis(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"alex-setyawan"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"alex-setyawan"},"content":"        String invalidDiagnosis \u003d \"\";","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"alex-setyawan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Diagnosis(invalidDiagnosis));","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"alex-setyawan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"        Diagnosis diagnosis \u003d new Diagnosis(\"Valid Diagnosis\");","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"alex-setyawan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(diagnosis.equals(new Diagnosis(\"Valid Diagnosis\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"alex-setyawan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(diagnosis.equals(diagnosis));","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"alex-setyawan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(diagnosis.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"alex-setyawan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(diagnosis.equals(5.0f));","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"alex-setyawan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(diagnosis.equals(new Diagnosis(\"Other Valid Diagnosis\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"alex-setyawan"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"alex-setyawan":42}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"alex-setyawan"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"91234567\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"91234567\")","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"jovantanyk"},"content":"               .withAddress(\"Main Street\").build()));","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"alex-setyawan":2,"jovantanyk":1,"-":82}},{"path":"src/test/java/seedu/address/model/person/NricTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alex-setyawan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"alex-setyawan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"alex-setyawan"},"content":"public class NricTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"alex-setyawan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"alex-setyawan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Nric(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"alex-setyawan"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"alex-setyawan"},"content":"        String invalidNric \u003d \"\";","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"alex-setyawan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Nric(invalidNric));","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"    public void isValidAddress() {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"alex-setyawan"},"content":"        // null address","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"        assertThrows(NullPointerException.class, () -\u003e Nric.isValidNric(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"alex-setyawan"},"content":"        // invalid addresses","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(Nric.isValidNric(\"\")); // empty string","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(Nric.isValidNric(\" \")); // spaces only","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(Nric.isValidNric(\"0312345\")); // numbers only","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(Nric.isValidNric(\"S0312345\")); // without first letter","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(Nric.isValidNric(\"0312345A\")); // without last letter","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(Nric.isValidNric(\"T03123425A\")); // too many numbers","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(Nric.isValidNric(\"T031234A\")); // too few numbers","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(Nric.isValidNric(\"D03123452S\")); // invalid first number","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"alex-setyawan"},"content":"        // valid addresses","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(Nric.isValidNric(\"T0912345A\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"alex-setyawan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"alex-setyawan"},"content":"        Nric nric \u003d new Nric(\"T0412345G\");","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"alex-setyawan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(nric.equals(new Nric(\"T0412345G\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"alex-setyawan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(nric.equals(nric));","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"alex-setyawan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(nric.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"alex-setyawan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(nric.equals(5.0f));","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"alex-setyawan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(nric.equals(new Nric(\"T0412345H\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"alex-setyawan"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"alex-setyawan":60}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SEX_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"laney0808"},"content":"        // same nric, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"laney0808"},"content":"                .withAddress(VALID_ADDRESS_BOB).withName(VALID_NAME_BOB).withSex(VALID_SEX_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"laney0808"},"content":"                .withStatus(VALID_STATUS_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"laney0808"},"content":"        // different NRIC, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"alex-setyawan"},"content":"        /* NRIC differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"laney0808"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withNric(VALID_NRIC_BOB.toLowerCase()).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"laney0808"},"content":"        // NRIC has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"laney0808"},"content":"        String nricWithTrailingSpaces \u003d VALID_NRIC_BOB + \" \";","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"laney0808"},"content":"        editedBob \u003d new PersonBuilder(BOB).withNric(nricWithTrailingSpaces).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"alex-setyawan"},"content":"         */","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"laney0808"},"content":"        // different nric -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"laney0808"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"laney0808"},"content":"    //TODO: edit both test case and code","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"alex-setyawan"},"content":"    /*","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"laney0808"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{nric\u003d\" + ALICE.getNric() + \", name\u003d\" + ALICE.getName()","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"laney0808"},"content":"                + \", status\u003d\" + ALICE.getStatus() + \"}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"alex-setyawan":4,"jovantanyk":2,"laney0808":16,"-":74}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(Phone.isValidPhone(\"1234567890123\")); // long phone numbers","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(Phone.isValidPhone(\"82453728\")); // long phone numbers","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"alex-setyawan"},"content":"        Phone phone \u003d new Phone(\"98765432\");","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(phone.equals(new Phone(\"98765432\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(phone.equals(new Phone(\"92345678\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"alex-setyawan":5,"-":55}},{"path":"src/test/java/seedu/address/model/person/SexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alex-setyawan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"alex-setyawan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"alex-setyawan"},"content":"public class SexTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"alex-setyawan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"alex-setyawan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Sex(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"alex-setyawan"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"alex-setyawan"},"content":"        String invalidSex \u003d \"\";","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"alex-setyawan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Sex(invalidSex));","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"alex-setyawan"},"content":"        Sex sex \u003d new Sex(\"M\");","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"alex-setyawan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(sex.equals(new Sex(\"M\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"alex-setyawan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(sex.equals(sex));","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"alex-setyawan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(sex.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"alex-setyawan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(sex.equals(5.0f));","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"alex-setyawan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(sex.equals(new Sex(\"F\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"alex-setyawan":41}},{"path":"src/test/java/seedu/address/model/person/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alex-setyawan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"alex-setyawan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"alex-setyawan"},"content":"public class StatusTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"alex-setyawan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"alex-setyawan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Status(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"alex-setyawan"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"alex-setyawan"},"content":"        String invalidStatus \u003d \"\";","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"alex-setyawan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Sex(invalidStatus));","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"alex-setyawan"},"content":"        Status status \u003d new Status(\"HEALTHY\");","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"alex-setyawan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(status.equals(new Status(\"HEALTHY\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"alex-setyawan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(status.equals(status));","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"alex-setyawan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(status.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"alex-setyawan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(status.equals(5.0f));","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"alex-setyawan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(status.equals(new Status(\"UNWELL\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"alex-setyawan":41}},{"path":"src/test/java/seedu/address/model/person/SymptomTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alex-setyawan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"alex-setyawan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"alex-setyawan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"alex-setyawan"},"content":"public class SymptomTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"alex-setyawan"},"content":"    /* commented as DateOfAdmission can be null, and doesn\u0027t have regex","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"alex-setyawan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"alex-setyawan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Symptom(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"alex-setyawan"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"alex-setyawan"},"content":"        String invalidSymptom \u003d \"\";","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"alex-setyawan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Sex(invalidSymptom));","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"alex-setyawan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"        Symptom symptom \u003d new Symptom(\"Valid Symptom\");","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"alex-setyawan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(symptom.equals(new Symptom(\"Valid Symptom\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"alex-setyawan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"alex-setyawan"},"content":"        assertTrue(symptom.equals(symptom));","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"alex-setyawan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(symptom.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"alex-setyawan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(symptom.equals(5.0f));","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"alex-setyawan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"alex-setyawan"},"content":"        assertFalse(symptom.equals(new Symptom(\"Other Valid Symptom\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"alex-setyawan"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"alex-setyawan":42}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"jovantanyk"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jovantanyk":2,"-":172}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"NatLeong"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"NatLeong"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"NatLeong"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"NatLeong"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"    private static final String INVALID_NRIC \u003d \"T-1\";","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"    private static final String INVALID_DOB \u003d \"MARCH 10th 2021\";","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"    private static final String INVALID_SEX \u003d \"Male\";","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"    private static final String INVALID_STATUS \u003d \"DYING\";","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"    private static final String VALID_NRIC \u003d BENSON.getNric().toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"    private static final String VALID_DOB \u003d \"2022-01-01\";","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"    private static final String VALID_SEX \u003d BENSON.getSex().toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"    private static final String VALID_STATUS \u003d BENSON.getStatus().toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"NatLeong"},"content":"    private static final String VALID_EMAIL \u003d \"benson123@gmail.com\";","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"NatLeong"},"content":"    private static final String VALID_COUNTRY \u003d \"Singapore\";","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"NatLeong"},"content":"    private static final String VALID_ALLERGIES \u003d \"Peanuts\";","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"NatLeong"},"content":"    private static final String VALID_BLOODTYPE \u003d \"A+\";","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"NatLeong"},"content":"    private static final String VALID_CONDITION \u003d \"Diabetes\";","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"NatLeong"},"content":"    private static final String VALID_DOA \u003d \"2024-01-01\";","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"NatLeong"},"content":"    private static final String VALID_DIAGNOSIS \u003d \"Covid\";","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"NatLeong"},"content":"    private static final String VALID_SYMPTOM \u003d \"Cough\";","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"    public void toModelType_invalidNric_throwsIllegalValueException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"jovantanyk"},"content":"                new JsonAdaptedPerson(INVALID_NRIC, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"NatLeong"},"content":"                        VALID_ADDRESS, VALID_DOB, VALID_SEX, VALID_STATUS, VALID_EMAIL, VALID_COUNTRY,","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"NatLeong"},"content":"                        VALID_ALLERGIES, VALID_BLOODTYPE, VALID_CONDITION, VALID_DOA, VALID_DIAGNOSIS,","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"NatLeong"},"content":"                        VALID_SYMPTOM);","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"jovantanyk"},"content":"        String expectedMessage \u003d Nric.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"jovantanyk"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"jovantanyk"},"content":"    public void toModelType_nullNric_throwsIllegalValueException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"jovantanyk"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"jovantanyk"},"content":"                new JsonAdaptedPerson(null, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"NatLeong"},"content":"                        VALID_ADDRESS, VALID_DOB, VALID_SEX, VALID_STATUS, VALID_EMAIL, VALID_COUNTRY,","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"NatLeong"},"content":"                        VALID_ALLERGIES, VALID_BLOODTYPE, VALID_CONDITION, VALID_DOA, VALID_DIAGNOSIS,","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"NatLeong"},"content":"                        VALID_SYMPTOM);","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"jovantanyk"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName());","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"jovantanyk"},"content":"                new JsonAdaptedPerson(VALID_NRIC, INVALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"NatLeong"},"content":"                        VALID_ADDRESS, VALID_DOB, VALID_SEX, VALID_STATUS, VALID_EMAIL, VALID_COUNTRY,","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"NatLeong"},"content":"                        VALID_ALLERGIES, VALID_BLOODTYPE, VALID_CONDITION, VALID_DOA, VALID_DIAGNOSIS,","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"NatLeong"},"content":"                        VALID_SYMPTOM);","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"jovantanyk"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"jovantanyk"},"content":"                new JsonAdaptedPerson(VALID_NRIC, null, VALID_PHONE,","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"NatLeong"},"content":"                        VALID_ADDRESS, VALID_DOB, VALID_SEX, VALID_STATUS, VALID_EMAIL, VALID_COUNTRY,","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"NatLeong"},"content":"                        VALID_ALLERGIES, VALID_BLOODTYPE, VALID_CONDITION, VALID_DOA, VALID_DIAGNOSIS,","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"NatLeong"},"content":"                        VALID_SYMPTOM);","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"jovantanyk"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, INVALID_PHONE,","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"NatLeong"},"content":"                        VALID_ADDRESS, VALID_DOB, VALID_SEX, VALID_STATUS, VALID_EMAIL, VALID_COUNTRY,","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"NatLeong"},"content":"                        VALID_ALLERGIES, VALID_BLOODTYPE, VALID_CONDITION, VALID_DOA, VALID_DIAGNOSIS,","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"NatLeong"},"content":"                        VALID_SYMPTOM);","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"jovantanyk"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"jovantanyk"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, null,","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"NatLeong"},"content":"                        VALID_ADDRESS, VALID_DOB, VALID_SEX, VALID_STATUS, VALID_EMAIL, VALID_COUNTRY,","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"NatLeong"},"content":"                        VALID_ALLERGIES, VALID_BLOODTYPE, VALID_CONDITION, VALID_DOA, VALID_DIAGNOSIS,","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"NatLeong"},"content":"                        VALID_SYMPTOM);","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"jovantanyk"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"jovantanyk"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"NatLeong"},"content":"                        INVALID_ADDRESS, VALID_DOB, VALID_SEX, VALID_STATUS, VALID_EMAIL, VALID_COUNTRY,","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"NatLeong"},"content":"                        VALID_ALLERGIES, VALID_BLOODTYPE, VALID_CONDITION, VALID_DOA, VALID_DIAGNOSIS,","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"NatLeong"},"content":"                        VALID_SYMPTOM);","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"jovantanyk"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"jovantanyk"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"jovantanyk"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"jovantanyk"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"NatLeong"},"content":"                        null, VALID_DOB, VALID_SEX, VALID_STATUS, VALID_EMAIL, VALID_COUNTRY,","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"NatLeong"},"content":"                        VALID_ALLERGIES, VALID_BLOODTYPE, VALID_CONDITION, VALID_DOA, VALID_DIAGNOSIS,","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"NatLeong"},"content":"                        VALID_SYMPTOM);","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"jovantanyk"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"jovantanyk"},"content":"    public void toModelType_invalidDob_throwsIllegalValueException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"jovantanyk"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"NatLeong"},"content":"                        VALID_ADDRESS, INVALID_DOB, VALID_SEX, VALID_STATUS, VALID_EMAIL, VALID_COUNTRY,","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"NatLeong"},"content":"                        VALID_ALLERGIES, VALID_BLOODTYPE, VALID_CONDITION, VALID_DOA, VALID_DIAGNOSIS,","lastModifiedDate":"2024-03-20"},{"lineNumber":142,"author":{"gitId":"NatLeong"},"content":"                        VALID_SYMPTOM);","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"jovantanyk"},"content":"        String expectedMessage \u003d DateOfBirth.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"jovantanyk"},"content":"    public void toModelType_nullDob_throwsIllegalValueException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"jovantanyk"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"NatLeong"},"content":"                        VALID_ADDRESS, null, VALID_SEX, VALID_STATUS, VALID_EMAIL, VALID_COUNTRY,","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"NatLeong"},"content":"                        VALID_ALLERGIES, VALID_BLOODTYPE, VALID_CONDITION, VALID_DOA, VALID_DIAGNOSIS,","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"NatLeong"},"content":"                        VALID_SYMPTOM);","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"jovantanyk"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, DateOfBirth.class.getSimpleName());","lastModifiedDate":"2024-03-21"},{"lineNumber":155,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"jovantanyk"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"jovantanyk"},"content":"    public void toModelType_invalidSex_throwsIllegalValueException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"jovantanyk"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"jovantanyk"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"NatLeong"},"content":"                        VALID_ADDRESS, VALID_DOB, INVALID_SEX, VALID_STATUS, VALID_EMAIL, VALID_COUNTRY,","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"NatLeong"},"content":"                        VALID_ALLERGIES, VALID_BLOODTYPE, VALID_CONDITION, VALID_DOA, VALID_DIAGNOSIS,","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"NatLeong"},"content":"                        VALID_SYMPTOM);","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"jovantanyk"},"content":"        String expectedMessage \u003d Sex.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":169,"author":{"gitId":"jovantanyk"},"content":"    public void toModelType_nullSex_throwsIllegalValueException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"jovantanyk"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"NatLeong"},"content":"                        VALID_ADDRESS, VALID_DOB, null, VALID_STATUS, VALID_EMAIL, VALID_COUNTRY,","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"NatLeong"},"content":"                        VALID_ALLERGIES, VALID_BLOODTYPE, VALID_CONDITION, VALID_DOA, VALID_DIAGNOSIS,","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"NatLeong"},"content":"                        VALID_SYMPTOM);","lastModifiedDate":"2024-03-20"},{"lineNumber":175,"author":{"gitId":"jovantanyk"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Sex.class.getSimpleName());","lastModifiedDate":"2024-03-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":178,"author":{"gitId":"jovantanyk"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"jovantanyk"},"content":"    public void toModelType_invalidStatus_throwsIllegalValueException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":180,"author":{"gitId":"jovantanyk"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"jovantanyk"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"NatLeong"},"content":"                        VALID_ADDRESS, VALID_DOB, VALID_SEX, INVALID_STATUS, VALID_EMAIL, VALID_COUNTRY,","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"NatLeong"},"content":"                        VALID_ALLERGIES, VALID_BLOODTYPE, VALID_CONDITION, VALID_DOA, VALID_DIAGNOSIS,","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"NatLeong"},"content":"                        VALID_SYMPTOM);","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"jovantanyk"},"content":"        String expectedMessage \u003d Status.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-18"},{"lineNumber":186,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":190,"author":{"gitId":"jovantanyk"},"content":"    public void toModelType_nullStatus_throwsIllegalValueException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":192,"author":{"gitId":"jovantanyk"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-18"},{"lineNumber":193,"author":{"gitId":"NatLeong"},"content":"                        VALID_ADDRESS, VALID_DOB, VALID_SEX, null, VALID_EMAIL, VALID_COUNTRY,","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"NatLeong"},"content":"                        VALID_ALLERGIES, VALID_BLOODTYPE, VALID_CONDITION, VALID_DOA, VALID_DIAGNOSIS,","lastModifiedDate":"2024-03-20"},{"lineNumber":195,"author":{"gitId":"NatLeong"},"content":"                        VALID_SYMPTOM);","lastModifiedDate":"2024-03-20"},{"lineNumber":196,"author":{"gitId":"jovantanyk"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName());","lastModifiedDate":"2024-03-21"},{"lineNumber":197,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jovantanyk":62,"-":83,"NatLeong":54}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":19,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ReadOnlyImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"laney0808"},"content":"    private java.util.Optional\u003cReadOnlyImmuniMate\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"laney0808"},"content":"        ImmuniMate original \u003d getTypicalAddressBook();","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"laney0808"},"content":"        ReadOnlyImmuniMate readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"laney0808"},"content":"        assertEquals(original, new ImmuniMate(readBack));","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"laney0808"},"content":"        assertEquals(original, new ImmuniMate(readBack));","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"laney0808"},"content":"        assertEquals(original, new ImmuniMate(readBack));","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"laney0808"},"content":"    private void saveAddressBook(ReadOnlyImmuniMate addressBook, String filePath) {","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"laney0808"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new ImmuniMate(), null));","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"laney0808":10,"-":100}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"laney0808"},"content":"        ImmuniMate addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"laney0808"},"content":"        ImmuniMate typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"laney0808":3,"-":44}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ReadOnlyImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"laney0808"},"content":"        ImmuniMate original \u003d getTypicalAddressBook();","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"laney0808"},"content":"        ReadOnlyImmuniMate retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"laney0808"},"content":"        assertEquals(original, new ImmuniMate(retrieved));","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"laney0808":5,"-":63}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"laney0808"},"content":"    private ImmuniMate addressBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"laney0808"},"content":"        addressBook \u003d new ImmuniMate();","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"laney0808"},"content":"    public AddressBookBuilder(ImmuniMate addressBook) {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"laney0808"},"content":"    public ImmuniMate build() {","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"laney0808":5,"-":29}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Allergies;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.BloodType;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Condition;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Country;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.DateOfAdmission;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Diagnosis;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Symptom;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"alex-setyawan"},"content":"    // Mandatory fields","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"laney0808"},"content":"    public static final String DEFAULT_NRIC \u003d \"T1234567B\";","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"laney0808"},"content":"    public static final String DEFAULT_DOB \u003d \"1998-07-03\";","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"    public static final String DEFAULT_SEX \u003d \"M\";","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"alex-setyawan"},"content":"    // Data fields","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"    public static final String DEFAULT_STATUS \u003d \"HEALTHY\";","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"    /*","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"    public static final String DEFAULT_EMAIL \u003d \"test@email.com\";","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"alex-setyawan"},"content":"    public static final String DEFAULT_ALLERGIES \u003d \"Peanuts\";","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"alex-setyawan"},"content":"    public static final String[] DEFAULT_BLOODTYPE \u003d {\"A\", \"POSITIVE\"};","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"alex-setyawan"},"content":"    public static final String DEFAULT_COUNTRY \u003d \"Singapore\";","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"alex-setyawan"},"content":"    // Medical history","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"alex-setyawan"},"content":"    public static final String DEFAULT_CONDITION \u003d \"High blood pressure\";","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"alex-setyawan"},"content":"    public static final String DEFAULT_DOA \u003d \"2024-01-01\";","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"alex-setyawan"},"content":"    public static final String DEFAULT_DIAGNOSIS \u003d \"Runny nose\";","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"alex-setyawan"},"content":"    public static final String DEFAULT_SYMPTOM \u003d \"Sneezing, sniffing\";","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"    */","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"alex-setyawan"},"content":"    // Mandatory fields","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"laney0808"},"content":"    private Nric nric;","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"    private DateOfBirth dateOfBirth;","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"    private Sex sex;","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"alex-setyawan"},"content":"    // Data fields","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"alex-setyawan"},"content":"    private Allergies allergies;","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"alex-setyawan"},"content":"    private BloodType bloodType;","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"alex-setyawan"},"content":"    private Country country;","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"alex-setyawan"},"content":"    private Email email;","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"alex-setyawan"},"content":"    //Medical history","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"alex-setyawan"},"content":"    private Condition condition;","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"alex-setyawan"},"content":"    private DateOfAdmission dateOfAdmission;","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"alex-setyawan"},"content":"    private Diagnosis diagnosis;","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"jovantanyk"},"content":"    private Status status;","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"alex-setyawan"},"content":"    private Symptom symptom;","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"laney0808"},"content":"        nric \u003d new Nric(DEFAULT_NRIC);","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"jovantanyk"},"content":"        dateOfBirth \u003d new DateOfBirth(DEFAULT_DOB);","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"jovantanyk"},"content":"        sex \u003d new Sex(DEFAULT_SEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"jovantanyk"},"content":"        status \u003d new Status(DEFAULT_STATUS);","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"jovantanyk"},"content":"        /*","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"alex-setyawan"},"content":"        allergies \u003d new Allergies(DEFAULT_ALLERGIES);","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"alex-setyawan"},"content":"        bloodType \u003d new BloodType(DEFAULT_BLOODTYPE[0], DEFAULT_BLOODTYPE[1]);","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"alex-setyawan"},"content":"        country \u003d new Country(DEFAULT_COUNTRY);","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"alex-setyawan"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"alex-setyawan"},"content":"        condition \u003d new Condition(DEFAULT_CONDITION);","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"alex-setyawan"},"content":"        dateOfAdmission \u003d new DateOfAdmission(DEFAULT_DOA);","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"alex-setyawan"},"content":"        diagnosis \u003d new Diagnosis(DEFAULT_DIAGNOSIS);","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"alex-setyawan"},"content":"        symptom \u003d new Symptom(DEFAULT_SYMPTOM);","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"jovantanyk"},"content":"        */","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"alex-setyawan"},"content":"        nric \u003d personToCopy.getNric();","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"jovantanyk"},"content":"        dateOfBirth \u003d personToCopy.getDateOfBirth();","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"jovantanyk"},"content":"        sex \u003d personToCopy.getSex();","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"laney0808"},"content":"        status \u003d personToCopy.getStatus();","lastModifiedDate":"2024-03-23"},{"lineNumber":99,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"alex-setyawan"},"content":"        /*","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"alex-setyawan"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"alex-setyawan"},"content":"        allergies \u003d personToCopy.getAllergies();","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"alex-setyawan"},"content":"        bloodType \u003d personToCopy.getBloodType();","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"alex-setyawan"},"content":"        country \u003d personToCopy.getCountry();","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"alex-setyawan"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"alex-setyawan"},"content":"        condition \u003d personToCopy.getCondition();","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"alex-setyawan"},"content":"        dateOfAdmission \u003d personToCopy.getDateOfAdmission();","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"alex-setyawan"},"content":"        diagnosis \u003d personToCopy.getDiagnosis();","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"alex-setyawan"},"content":"        symptom \u003d personToCopy.getSymptom();","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"alex-setyawan"},"content":"         */","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":115,"author":{"gitId":"jovantanyk"},"content":"     * Sets the {@code Nric} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"jovantanyk"},"content":"    public PersonBuilder withNric(String nric) {","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"jovantanyk"},"content":"        this.nric \u003d new Nric(nric);","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"alex-setyawan"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"alex-setyawan"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"alex-setyawan"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":149,"author":{"gitId":"alex-setyawan"},"content":"    public PersonBuilder withDateOfBirth(String dateOfBirth) {","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"alex-setyawan"},"content":"        this.dateOfBirth \u003d new DateOfBirth(dateOfBirth);","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":155,"author":{"gitId":"jovantanyk"},"content":"     * Sets the {@code Sex} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"jovantanyk"},"content":"    public PersonBuilder withSex(String sex) {","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"jovantanyk"},"content":"        this.sex \u003d new Sex(sex);","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"jovantanyk"},"content":"        return this;","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"jovantanyk"},"content":"     * Sets the {@code Status} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":165,"author":{"gitId":"jovantanyk"},"content":"    public PersonBuilder withStatus(String status) {","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"jovantanyk"},"content":"        this.status \u003d new Status(status);","lastModifiedDate":"2024-03-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"alex-setyawan"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":178,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":179,"author":{"gitId":"alex-setyawan"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":180,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":181,"author":{"gitId":"alex-setyawan"},"content":"    public PersonBuilder withCountry(String country) {","lastModifiedDate":"2024-03-19"},{"lineNumber":182,"author":{"gitId":"alex-setyawan"},"content":"        this.country \u003d new Country(country);","lastModifiedDate":"2024-03-19"},{"lineNumber":183,"author":{"gitId":"alex-setyawan"},"content":"        return this;","lastModifiedDate":"2024-03-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":187,"author":{"gitId":"alex-setyawan"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":188,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":189,"author":{"gitId":"alex-setyawan"},"content":"    public PersonBuilder withAllergies(String allergies) {","lastModifiedDate":"2024-03-19"},{"lineNumber":190,"author":{"gitId":"alex-setyawan"},"content":"        this.allergies \u003d new Allergies(allergies);","lastModifiedDate":"2024-03-19"},{"lineNumber":191,"author":{"gitId":"alex-setyawan"},"content":"        return this;","lastModifiedDate":"2024-03-19"},{"lineNumber":192,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":193,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":194,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":195,"author":{"gitId":"alex-setyawan"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":196,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":197,"author":{"gitId":"jovantanyk"},"content":"    public PersonBuilder withBloodType(String bloodType) {","lastModifiedDate":"2024-03-21"},{"lineNumber":198,"author":{"gitId":"jovantanyk"},"content":"        this.bloodType \u003d new BloodType(bloodType);","lastModifiedDate":"2024-03-21"},{"lineNumber":199,"author":{"gitId":"alex-setyawan"},"content":"        return this;","lastModifiedDate":"2024-03-19"},{"lineNumber":200,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":201,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":202,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":203,"author":{"gitId":"alex-setyawan"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":204,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":205,"author":{"gitId":"alex-setyawan"},"content":"    public PersonBuilder withCondition(String condition) {","lastModifiedDate":"2024-03-19"},{"lineNumber":206,"author":{"gitId":"alex-setyawan"},"content":"        this.condition \u003d new Condition(condition);","lastModifiedDate":"2024-03-19"},{"lineNumber":207,"author":{"gitId":"alex-setyawan"},"content":"        return this;","lastModifiedDate":"2024-03-19"},{"lineNumber":208,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":209,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":210,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":211,"author":{"gitId":"alex-setyawan"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":212,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":213,"author":{"gitId":"alex-setyawan"},"content":"    public PersonBuilder withDateOfAdmission(String dateOfAdmission) {","lastModifiedDate":"2024-03-19"},{"lineNumber":214,"author":{"gitId":"alex-setyawan"},"content":"        this.dateOfAdmission \u003d new DateOfAdmission(dateOfAdmission);","lastModifiedDate":"2024-03-19"},{"lineNumber":215,"author":{"gitId":"alex-setyawan"},"content":"        return this;","lastModifiedDate":"2024-03-19"},{"lineNumber":216,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":217,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":218,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":219,"author":{"gitId":"alex-setyawan"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":220,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":221,"author":{"gitId":"alex-setyawan"},"content":"    public PersonBuilder withDiagnosis(String diagnosis) {","lastModifiedDate":"2024-03-19"},{"lineNumber":222,"author":{"gitId":"alex-setyawan"},"content":"        this.diagnosis \u003d new Diagnosis(diagnosis);","lastModifiedDate":"2024-03-19"},{"lineNumber":223,"author":{"gitId":"alex-setyawan"},"content":"        return this;","lastModifiedDate":"2024-03-19"},{"lineNumber":224,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":225,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":226,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":227,"author":{"gitId":"alex-setyawan"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":228,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":229,"author":{"gitId":"alex-setyawan"},"content":"    public PersonBuilder withSymptom(String symptom) {","lastModifiedDate":"2024-03-19"},{"lineNumber":230,"author":{"gitId":"alex-setyawan"},"content":"        this.symptom \u003d new Symptom(symptom);","lastModifiedDate":"2024-03-19"},{"lineNumber":231,"author":{"gitId":"alex-setyawan"},"content":"        return this;","lastModifiedDate":"2024-03-19"},{"lineNumber":232,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":233,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":234,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":235,"author":{"gitId":"alex-setyawan"},"content":"     * Returns a Person object with fields initialised to that of PersonBuilder object.","lastModifiedDate":"2024-03-21"},{"lineNumber":236,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":238,"author":{"gitId":"alex-setyawan"},"content":"        Person p \u003d new Person(nric, name, phone, address, dateOfBirth, sex, status);","lastModifiedDate":"2024-03-20"},{"lineNumber":239,"author":{"gitId":"alex-setyawan"},"content":"        p.setEmail(email);","lastModifiedDate":"2024-03-20"},{"lineNumber":240,"author":{"gitId":"alex-setyawan"},"content":"        p.setCountry(country);","lastModifiedDate":"2024-03-20"},{"lineNumber":241,"author":{"gitId":"alex-setyawan"},"content":"        p.setAllergies(allergies);","lastModifiedDate":"2024-03-20"},{"lineNumber":242,"author":{"gitId":"alex-setyawan"},"content":"        p.setBloodType(bloodType);","lastModifiedDate":"2024-03-20"},{"lineNumber":243,"author":{"gitId":"alex-setyawan"},"content":"        p.setCondition(condition);","lastModifiedDate":"2024-03-20"},{"lineNumber":244,"author":{"gitId":"alex-setyawan"},"content":"        p.setDateOfAdmission(dateOfAdmission);","lastModifiedDate":"2024-03-20"},{"lineNumber":245,"author":{"gitId":"alex-setyawan"},"content":"        p.setDiagnosis(diagnosis);","lastModifiedDate":"2024-03-20"},{"lineNumber":246,"author":{"gitId":"alex-setyawan"},"content":"        p.setSymptom(symptom);","lastModifiedDate":"2024-03-20"},{"lineNumber":247,"author":{"gitId":"alex-setyawan"},"content":"        return p;","lastModifiedDate":"2024-03-20"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"alex-setyawan":127,"jovantanyk":31,"laney0808":5,"-":86}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATEOFBIRTH;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"laney0808"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"laney0808"},"content":"import seedu.address.logic.commands.CreateCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.logic.commands.UpdateCommand.UpdatePersonDescriptor;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"laney0808"},"content":"    public static String getCreateCommand(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"laney0808"},"content":"        return CreateCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"laney0808"},"content":"        sb.append(PREFIX_NRIC + person.getNric().toString() + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"        sb.append(PREFIX_NAME + person.getName().toString() + \" \");","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().toString() + \" \");","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().toString() + \" \");","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"laney0808"},"content":"        sb.append(PREFIX_DATEOFBIRTH + person.getDateOfBirth().toString() + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"laney0808"},"content":"        sb.append(PREFIX_SEX + person.getSex().toString() + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"laney0808"},"content":"        sb.append(PREFIX_STATUS + person.getStatus().toString() + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"alex-setyawan"},"content":"    public static String getEditPersonDescriptorDetails(UpdatePersonDescriptor descriptor) {","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"alex-setyawan"},"content":"        sb.append(PREFIX_NRIC).append(descriptor.getNric()).append(\" \");","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"jovantanyk"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.toString()).append(\" \"));","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"jovantanyk"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.toString()).append(\" \"));","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"jovantanyk"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.toString()).append(\" \"));","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"alex-setyawan"},"content":"        descriptor.getDateOfBirth().ifPresent(dob -\u003e sb.append(PREFIX_DATEOFBIRTH).append(dob.toString()).append(\" \"));","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"alex-setyawan"},"content":"        descriptor.getSex().ifPresent(sex -\u003e sb.append(PREFIX_SEX).append(sex.toString()).append(\" \"));","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"alex-setyawan"},"content":"        descriptor.getStatus().ifPresent(status -\u003e sb.append(PREFIX_STATUS).append(status.toString()).append(\" \"));","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"alex-setyawan":6,"jovantanyk":6,"laney0808":11,"-":48}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATEOFBIRTH_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"alex-setyawan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATEOFBIRTH_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SEX_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SEX_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"laney0808"},"content":"import seedu.address.model.ImmuniMate;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withNric(\"T0139571B\").withName(\"Alice Pauline\")","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"alex-setyawan"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withPhone(\"94351253\").withDateOfBirth(\"2001-01-01\")","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"            .withSex(\"F\").withStatus(\"HEALTHY\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withNric(\"T0439571C\").withName(\"Benson Meier\")","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"alex-setyawan"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withPhone(\"98765432\").withDateOfBirth(\"2001-01-01\")","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"            .withSex(\"M\").withStatus(\"UNWELL\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"    public static final Person CARL \u003d new PersonBuilder().withNric(\"T0284994B\").withName(\"Carl Kurz\")","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"alex-setyawan"},"content":"            .withPhone(\"95352563\").withAddress(\"wall street\").withDateOfBirth(\"2001-01-01\")","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"            .withSex(\"M\").withStatus(\"PENDING\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withNric(\"S9839571A\")","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"alex-setyawan"},"content":"            .withName(\"Daniel Meier\").withPhone(\"87652533\").withDateOfBirth(\"2001-01-01\")","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"            .withAddress(\"10th street\").withSex(\"M\").withStatus(\"HEALTHY\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withNric(\"S8913957B\")","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"alex-setyawan"},"content":"            .withName(\"Elle Meyer\").withPhone(\"94821224\").withDateOfBirth(\"2001-01-01\")","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"            .withAddress(\"michegan ave\").withSex(\"F\").withStatus(\"UNWELL\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withNric(\"T0536171Z\")","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"alex-setyawan"},"content":"            .withName(\"Fiona Kunz\").withPhone(\"94820427\").withDateOfBirth(\"2001-01-01\")","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"            .withAddress(\"little tokyo\").withSex(\"F\").withStatus(\"PENDING\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withNric(\"T0829102Z\")","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"alex-setyawan"},"content":"            .withName(\"George Best\").withPhone(\"94824421\").withDateOfBirth(\"2001-01-01\")","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"            .withAddress(\"4th street\").withSex(\"M\").withStatus(\"HEALTHY\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"laney0808"},"content":"    //TODO add date of birth and some other optional fields","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"jovantanyk"},"content":"    public static final Person HOON \u003d new PersonBuilder().withNric(\"T0123071C\").withName(\"Hoon Meier\")","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"alex-setyawan"},"content":"            .withPhone(\"81482424\").withAddress(\"little india\").withDateOfBirth(\"2001-01-01\")","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"jovantanyk"},"content":"            .withSex(\"M\").withStatus(\"HEALTHY\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"jovantanyk"},"content":"    public static final Person IDA \u003d new PersonBuilder().withNric(\"T0239521A\").withName(\"Ida Mueller\")","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"alex-setyawan"},"content":"            .withPhone(\"84820131\").withAddress(\"chicago ave\").withDateOfBirth(\"2001-01-01\")","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"jovantanyk"},"content":"            .withSex(\"F\").withStatus(\"PENDING\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":61,"author":{"gitId":"jovantanyk"},"content":"    public static final Person AMY \u003d new PersonBuilder().withNric(VALID_NRIC_AMY).withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"alex-setyawan"},"content":"            .withPhone(VALID_PHONE_AMY).withAddress(VALID_ADDRESS_AMY).withDateOfBirth(VALID_DATEOFBIRTH_AMY)","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"jovantanyk"},"content":"            .withSex(VALID_SEX_AMY).withStatus(VALID_STATUS_AMY).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"jovantanyk"},"content":"    public static final Person BOB \u003d new PersonBuilder().withNric(VALID_NRIC_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"alex-setyawan"},"content":"            .withPhone(VALID_PHONE_BOB).withAddress(VALID_ADDRESS_BOB).withDateOfBirth(VALID_DATEOFBIRTH_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"jovantanyk"},"content":"            .withSex(VALID_SEX_BOB).withStatus(VALID_STATUS_BOB).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"laney0808"},"content":"    //TODO: person builder should be able to build a person with all fields (status)","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"laney0808"},"content":"    public static ImmuniMate getTypicalAddressBook() {","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"laney0808"},"content":"        ImmuniMate ab \u003d new ImmuniMate();","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"alex-setyawan":13,"jovantanyk":28,"laney0808":5,"-":41}},{"path":"src/test/java/seedu/address/testutil/UpdatePersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.logic.commands.UpdateCommand.UpdatePersonDescriptor;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"alex-setyawan"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"alex-setyawan"},"content":"public class UpdatePersonDescriptorBuilder {","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"alex-setyawan"},"content":"    private UpdatePersonDescriptor descriptor;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"alex-setyawan"},"content":"    public UpdatePersonDescriptorBuilder() {","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"alex-setyawan"},"content":"        descriptor \u003d new UpdatePersonDescriptor();","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"alex-setyawan"},"content":"    public UpdatePersonDescriptorBuilder(UpdatePersonDescriptor descriptor) {","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"alex-setyawan"},"content":"        this.descriptor \u003d new UpdatePersonDescriptor(descriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"alex-setyawan"},"content":"    public UpdatePersonDescriptorBuilder(Person person) {","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"alex-setyawan"},"content":"        descriptor \u003d new UpdatePersonDescriptor();","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"alex-setyawan"},"content":"        descriptor.setNric(person.getNric());","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"alex-setyawan"},"content":"        descriptor.setDateOfBirth(person.getDateOfBirth());","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"alex-setyawan"},"content":"        descriptor.setSex(person.getSex());","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"alex-setyawan"},"content":"        descriptor.setStatus(person.getStatus());","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"alex-setyawan"},"content":"        /*","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":47,"author":{"gitId":"alex-setyawan"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"alex-setyawan"},"content":"        descriptor.setCountry(person.getCountry());","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"alex-setyawan"},"content":"        descriptor.setAllergies(person.getAllergies());","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"alex-setyawan"},"content":"        descriptor.setBloodType(person.getBloodType());","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"alex-setyawan"},"content":"        descriptor.setCondition(person.getCondition());","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"alex-setyawan"},"content":"        descriptor.setDateOfAdmission(person.getDateOfAdmission());","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"alex-setyawan"},"content":"        descriptor.setDiagnosis(person.getDiagnosis());","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"alex-setyawan"},"content":"        descriptor.setSymptom(person.getSymptom());","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"alex-setyawan"},"content":"        */","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"alex-setyawan"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"alex-setyawan"},"content":"    public UpdatePersonDescriptorBuilder withNric(String nric) {","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"alex-setyawan"},"content":"        descriptor.setNric(new Nric(nric));","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"alex-setyawan"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"alex-setyawan"},"content":"    public UpdatePersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"alex-setyawan"},"content":"    public UpdatePersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"alex-setyawan"},"content":"    public UpdatePersonDescriptorBuilder withDateOfBirth(String dateOfBirth) {","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"alex-setyawan"},"content":"        descriptor.setDateOfBirth(new DateOfBirth(dateOfBirth));","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"alex-setyawan"},"content":"    public UpdatePersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":99,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"alex-setyawan"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"alex-setyawan"},"content":"    public UpdatePersonDescriptorBuilder withSex(String sex) {","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"alex-setyawan"},"content":"        descriptor.setSex(new Sex(sex));","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"alex-setyawan"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"alex-setyawan"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"alex-setyawan"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"alex-setyawan"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"alex-setyawan"},"content":"    public UpdatePersonDescriptorBuilder withStatus(String status) {","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"alex-setyawan"},"content":"        descriptor.setStatus(new Status(status));","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"alex-setyawan"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"alex-setyawan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"alex-setyawan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":119,"author":{"gitId":"alex-setyawan"},"content":"    public UpdatePersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":125,"author":{"gitId":"alex-setyawan"},"content":"    public UpdatePersonDescriptor build() {","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"alex-setyawan":59,"-":69}}]
